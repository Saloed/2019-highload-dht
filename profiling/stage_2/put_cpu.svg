<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="789"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="789"> </text>
<g id="frames">
<g>
<title>all (2,104 samples, 100.00%)</title><rect x="10.0" y="755.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="766.0">all</text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.14%)</title><rect x="10.0" y="739.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.10%)</title><rect x="10.6" y="723.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.6" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,101 samples, 99.86%)</title><rect x="11.7" y="739.0" width="1178.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.7" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.05%)</title><rect x="14.5" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.29%)</title><rect x="15.0" y="723.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.29%)</title><rect x="15.0" y="707.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (6 samples, 0.29%)</title><rect x="15.0" y="691.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.0" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (222 samples, 10.55%)</title><rect x="18.4" y="723.0" width="124.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.4" y="734.0">one/nio/net/Nat..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (212 samples, 10.08%)</title><rect x="24.0" y="707.0" width="118.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="27.0" y="718.0">one/nio/net/Na..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.19%)</title><rect x="28.5" y="691.0" width="2.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="31.5" y="702.0"></text>
</g>
<g>
<title>__clock_gettime (16 samples, 0.76%)</title><rect x="30.8" y="691.0" width="8.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="33.8" y="702.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.14%)</title><rect x="34.1" y="675.0" width="1.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="37.1" y="686.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.33%)</title><rect x="35.8" y="675.0" width="3.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="38.8" y="686.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.33%)</title><rect x="35.8" y="659.0" width="3.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="38.8" y="670.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.14%)</title><rect x="39.7" y="691.0" width="1.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="42.7" y="702.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.10%)</title><rect x="41.4" y="691.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="44.4" y="702.0"></text>
</g>
<g>
<title>_init (6 samples, 0.29%)</title><rect x="42.5" y="691.0" width="3.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="45.5" y="702.0"></text>
</g>
<g>
<title>epoll_wait (173 samples, 8.22%)</title><rect x="45.9" y="691.0" width="97.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="48.9" y="702.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (140 samples, 6.65%)</title><rect x="64.4" y="675.0" width="78.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="67.4" y="686.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (140 samples, 6.65%)</title><rect x="64.4" y="659.0" width="78.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="67.4" y="670.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (113 samples, 5.37%)</title><rect x="71.1" y="643.0" width="63.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="74.1" y="654.0">__x64_s..</text>
</g>
<g>
<title>do_epoll_wait (113 samples, 5.37%)</title><rect x="71.1" y="627.0" width="63.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="74.1" y="638.0">do_epol..</text>
</g>
<g>
<title>__fget_light (3 samples, 0.14%)</title><rect x="71.7" y="611.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="74.7" y="622.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.14%)</title><rect x="71.7" y="595.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="74.7" y="606.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.05%)</title><rect x="72.8" y="579.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="75.8" y="590.0"></text>
</g>
<g>
<title>ep_poll (103 samples, 4.90%)</title><rect x="73.4" y="611.0" width="57.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="76.4" y="622.0">ep_poll</text>
</g>
<g>
<title>_raw_spin_lock_irq (1 samples, 0.05%)</title><rect x="81.8" y="595.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="84.8" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (7 samples, 0.33%)</title><rect x="82.3" y="595.0" width="4.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="85.3" y="606.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.05%)</title><rect x="85.7" y="579.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="88.7" y="590.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (72 samples, 3.42%)</title><rect x="86.3" y="595.0" width="40.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="89.3" y="606.0">ep_..</text>
</g>
<g>
<title>_raw_write_unlock_irq (35 samples, 1.66%)</title><rect x="87.4" y="579.0" width="19.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="90.4" y="590.0"></text>
</g>
<g>
<title>preempt_count_sub (3 samples, 0.14%)</title><rect x="105.3" y="563.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="108.3" y="574.0"></text>
</g>
<g>
<title>ep_send_events_proc (27 samples, 1.28%)</title><rect x="107.0" y="579.0" width="15.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="110.0" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (20 samples, 0.95%)</title><rect x="111.0" y="563.0" width="11.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="114.0" y="574.0"></text>
</g>
<g>
<title>sock_poll (17 samples, 0.81%)</title><rect x="112.6" y="547.0" width="9.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="115.6" y="558.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.29%)</title><rect x="118.8" y="531.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="121.8" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.05%)</title><rect x="121.6" y="515.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="124.6" y="526.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.19%)</title><rect x="122.2" y="579.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="125.2" y="590.0"></text>
</g>
<g>
<title>mutex_unlock (4 samples, 0.19%)</title><rect x="124.4" y="579.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="127.4" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (8 samples, 0.38%)</title><rect x="126.7" y="595.0" width="4.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="129.7" y="606.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.38%)</title><rect x="126.7" y="579.0" width="4.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="129.7" y="590.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.24%)</title><rect x="128.3" y="563.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="131.3" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="130.6" y="547.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="133.6" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.05%)</title><rect x="130.6" y="531.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="133.6" y="542.0"></text>
</g>
<g>
<title>fput (1 samples, 0.05%)</title><rect x="131.1" y="611.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="134.1" y="622.0"></text>
</g>
<g>
<title>fput_many (5 samples, 0.24%)</title><rect x="131.7" y="611.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="134.7" y="622.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (11 samples, 0.52%)</title><rect x="134.5" y="643.0" width="6.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="137.5" y="654.0"></text>
</g>
<g>
<title>__audit_syscall_exit (11 samples, 0.52%)</title><rect x="134.5" y="627.0" width="6.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="137.5" y="638.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.10%)</title><rect x="137.3" y="611.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="140.3" y="622.0"></text>
</g>
<g>
<title>mntput (1 samples, 0.05%)</title><rect x="138.4" y="611.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="141.4" y="622.0"></text>
</g>
<g>
<title>unroll_tree_refs (3 samples, 0.14%)</title><rect x="139.0" y="611.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="142.0" y="622.0"></text>
</g>
<g>
<title>syscall_trace_enter (4 samples, 0.19%)</title><rect x="140.7" y="643.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="143.7" y="654.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.10%)</title><rect x="141.8" y="627.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="144.8" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,867 samples, 88.74%)</title><rect x="142.9" y="723.0" width="1047.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.9" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,866 samples, 88.69%)</title><rect x="143.5" y="707.0" width="1046.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="146.5" y="718.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,640 samples, 77.95%)</title><rect x="144.0" y="691.0" width="919.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="147.0" y="702.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,555 samples, 73.91%)</title><rect x="146.3" y="675.0" width="872.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.3" y="686.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,555 samples, 73.91%)</title><rect x="146.3" y="659.0" width="872.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.3" y="670.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,539 samples, 73.15%)</title><rect x="146.3" y="643.0" width="863.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.3" y="654.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (691 samples, 32.84%)</title><rect x="146.3" y="627.0" width="387.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.3" y="638.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="148.0" y="611.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="151.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.29%)</title><rect x="148.5" y="611.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.14%)</title><rect x="150.2" y="595.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="153.2" y="606.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (1 samples, 0.05%)</title><rect x="151.9" y="611.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (665 samples, 31.61%)</title><rect x="152.5" y="611.0" width="372.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.5" y="622.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (55 samples, 2.61%)</title><rect x="152.5" y="595.0" width="30.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="155.5" y="606.0">on..</text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (5 samples, 0.24%)</title><rect x="164.2" y="579.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="167.2" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="167.0" y="579.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="170.0" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (27 samples, 1.28%)</title><rect x="167.6" y="579.0" width="15.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="170.6" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.33%)</title><rect x="167.6" y="563.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.6" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.14%)</title><rect x="169.8" y="547.0" width="1.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="172.8" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (20 samples, 0.95%)</title><rect x="171.5" y="563.0" width="11.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.5" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (20 samples, 0.95%)</title><rect x="171.5" y="547.0" width="11.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (17 samples, 0.81%)</title><rect x="171.5" y="531.0" width="9.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.5" y="542.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.05%)</title><rect x="178.8" y="515.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="181.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.14%)</title><rect x="179.4" y="515.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.4" y="526.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.14%)</title><rect x="181.1" y="531.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="184.1" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1 samples, 0.05%)</title><rect x="182.7" y="579.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="185.7" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (610 samples, 28.99%)</title><rect x="183.3" y="595.0" width="342.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="186.3" y="606.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (610 samples, 28.99%)</title><rect x="183.3" y="579.0" width="342.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="186.3" y="590.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (610 samples, 28.99%)</title><rect x="183.3" y="563.0" width="342.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="186.3" y="574.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (596 samples, 28.33%)</title><rect x="191.2" y="547.0" width="334.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="194.2" y="558.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>[unknown] (17 samples, 0.81%)</title><rect x="192.8" y="531.0" width="9.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="195.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.81%)</title><rect x="192.8" y="515.0" width="9.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="195.8" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (13 samples, 0.62%)</title><rect x="192.8" y="499.0" width="7.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="195.8" y="510.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="194.5" y="483.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="197.5" y="494.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.14%)</title><rect x="195.1" y="483.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="198.1" y="494.0"></text>
</g>
<g>
<title>_init (2 samples, 0.10%)</title><rect x="196.8" y="483.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="199.8" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.19%)</title><rect x="197.9" y="483.0" width="2.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="200.9" y="494.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.05%)</title><rect x="197.9" y="467.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="200.9" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (3 samples, 0.14%)</title><rect x="198.4" y="467.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="201.4" y="478.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.14%)</title><rect x="200.1" y="499.0" width="1.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="203.1" y="510.0"></text>
</g>
<g>
<title>send (1 samples, 0.05%)</title><rect x="201.8" y="499.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="204.8" y="510.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.19%)</title><rect x="202.4" y="531.0" width="2.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="205.4" y="542.0"></text>
</g>
<g>
<title>send (572 samples, 27.19%)</title><rect x="204.6" y="531.0" width="320.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="207.6" y="542.0">send</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.10%)</title><rect x="210.2" y="515.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="213.2" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (560 samples, 26.62%)</title><rect x="211.3" y="515.0" width="314.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="214.3" y="526.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (560 samples, 26.62%)</title><rect x="211.3" y="499.0" width="314.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="214.3" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (541 samples, 25.71%)</title><rect x="216.9" y="483.0" width="303.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="219.9" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (540 samples, 25.67%)</title><rect x="217.5" y="467.0" width="302.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="220.5" y="478.0">__sys_sendto</text>
</g>
<g>
<title>import_single_range (4 samples, 0.19%)</title><rect x="219.8" y="451.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="222.8" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (527 samples, 25.05%)</title><rect x="222.0" y="451.0" width="295.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="225.0" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (2 samples, 0.10%)</title><rect x="222.0" y="435.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="225.0" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg (525 samples, 24.95%)</title><rect x="223.1" y="435.0" width="294.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="226.1" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="223.1" y="419.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="226.1" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.05%)</title><rect x="223.7" y="419.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="226.7" y="430.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.10%)</title><rect x="224.2" y="419.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="227.2" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.10%)</title><rect x="224.2" y="403.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="227.2" y="414.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.05%)</title><rect x="224.8" y="387.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="227.8" y="398.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.05%)</title><rect x="224.8" y="371.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="227.8" y="382.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.14%)</title><rect x="225.4" y="419.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="228.4" y="430.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.10%)</title><rect x="225.9" y="403.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="228.9" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (518 samples, 24.62%)</title><rect x="227.0" y="419.0" width="290.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="230.0" y="430.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.14%)</title><rect x="233.2" y="403.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="236.2" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.14%)</title><rect x="233.2" y="387.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="236.2" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (450 samples, 21.39%)</title><rect x="234.9" y="403.0" width="252.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="237.9" y="414.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (449 samples, 21.34%)</title><rect x="235.5" y="387.0" width="251.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="238.5" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (421 samples, 20.01%)</title><rect x="241.1" y="371.0" width="236.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="244.1" y="382.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (392 samples, 18.63%)</title><rect x="248.9" y="355.0" width="219.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="251.9" y="366.0">__ip_queue_xmit</text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.05%)</title><rect x="253.4" y="339.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="256.4" y="350.0"></text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.19%)</title><rect x="254.0" y="339.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="257.0" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.10%)</title><rect x="255.1" y="323.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="258.1" y="334.0"></text>
</g>
<g>
<title>ip_local_out (6 samples, 0.29%)</title><rect x="256.2" y="339.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="259.2" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.19%)</title><rect x="257.3" y="323.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="260.3" y="334.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.05%)</title><rect x="259.0" y="307.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="262.0" y="318.0"></text>
</g>
<g>
<title>ip_output (373 samples, 17.73%)</title><rect x="259.6" y="339.0" width="209.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="262.6" y="350.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.10%)</title><rect x="261.3" y="323.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="264.3" y="334.0"></text>
</g>
<g>
<title>ip_finish_output2 (361 samples, 17.16%)</title><rect x="262.4" y="323.0" width="202.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="265.4" y="334.0">ip_finish_output2</text>
</g>
<g>
<title>__dev_queue_xmit (39 samples, 1.85%)</title><rect x="267.4" y="307.0" width="21.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="270.4" y="318.0">_..</text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.05%)</title><rect x="270.8" y="291.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="273.8" y="302.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (26 samples, 1.24%)</title><rect x="271.3" y="291.0" width="14.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="274.3" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (22 samples, 1.05%)</title><rect x="273.6" y="275.0" width="12.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="276.6" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (6 samples, 0.29%)</title><rect x="274.2" y="259.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="277.2" y="270.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.43%)</title><rect x="277.5" y="259.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="280.5" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (9 samples, 0.43%)</title><rect x="277.5" y="243.0" width="5.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="280.5" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.19%)</title><rect x="279.2" y="227.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="282.2" y="238.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.05%)</title><rect x="281.4" y="227.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="284.4" y="238.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.05%)</title><rect x="282.0" y="227.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="285.0" y="238.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (3 samples, 0.14%)</title><rect x="282.6" y="259.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="285.6" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.14%)</title><rect x="284.2" y="259.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="287.2" y="270.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (2 samples, 0.10%)</title><rect x="285.9" y="291.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="288.9" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.19%)</title><rect x="287.1" y="291.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="290.1" y="302.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.05%)</title><rect x="288.7" y="275.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="291.7" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (312 samples, 14.83%)</title><rect x="289.3" y="307.0" width="175.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="292.3" y="318.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.0 (311 samples, 14.78%)</title><rect x="289.3" y="291.0" width="174.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="292.3" y="302.0">do_softirq.part.0</text>
</g>
<g>
<title>do_softirq_own_stack (303 samples, 14.40%)</title><rect x="293.8" y="275.0" width="169.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="296.8" y="286.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (303 samples, 14.40%)</title><rect x="293.8" y="259.0" width="169.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="296.8" y="270.0">__softirqentry_text_st..</text>
</g>
<g>
<title>net_rx_action (292 samples, 13.88%)</title><rect x="300.0" y="243.0" width="163.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="303.0" y="254.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.05%)</title><rect x="303.3" y="227.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="306.3" y="238.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.10%)</title><rect x="303.9" y="227.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="306.9" y="238.0"></text>
</g>
<g>
<title>debug_smp_processor_id (1 samples, 0.05%)</title><rect x="305.0" y="227.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="308.0" y="238.0"></text>
</g>
<g>
<title>process_backlog (282 samples, 13.40%)</title><rect x="305.6" y="227.0" width="158.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="308.6" y="238.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb_one_core (274 samples, 13.02%)</title><rect x="309.5" y="211.0" width="153.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="312.5" y="222.0">__netif_receive_skb..</text>
</g>
<g>
<title>__netif_receive_skb_core (14 samples, 0.67%)</title><rect x="311.7" y="195.0" width="7.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="314.7" y="206.0"></text>
</g>
<g>
<title>ip_rcv (256 samples, 12.17%)</title><rect x="319.6" y="195.0" width="143.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="322.6" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (253 samples, 12.02%)</title><rect x="320.1" y="179.0" width="141.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="323.1" y="190.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (247 samples, 11.74%)</title><rect x="323.5" y="163.0" width="138.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="326.5" y="174.0">ip_local_deliver_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (246 samples, 11.69%)</title><rect x="324.1" y="147.0" width="137.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="327.1" y="158.0">ip_protocol_deliv..</text>
</g>
<g>
<title>raw_local_deliver (4 samples, 0.19%)</title><rect x="324.6" y="131.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="327.6" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (241 samples, 11.45%)</title><rect x="326.9" y="131.0" width="135.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="329.9" y="142.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.48%)</title><rect x="331.9" y="115.0" width="5.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="334.9" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.05%)</title><rect x="337.0" y="99.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="340.0" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.10%)</title><rect x="337.5" y="115.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="340.5" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (9 samples, 0.43%)</title><rect x="338.7" y="115.0" width="5.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="341.7" y="126.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (6 samples, 0.29%)</title><rect x="338.7" y="99.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="341.7" y="110.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.05%)</title><rect x="340.9" y="83.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="343.9" y="94.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.05%)</title><rect x="341.5" y="83.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="344.5" y="94.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.05%)</title><rect x="342.0" y="99.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="345.0" y="110.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.10%)</title><rect x="342.6" y="99.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="345.6" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (208 samples, 9.89%)</title><rect x="343.7" y="115.0" width="116.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="346.7" y="126.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (208 samples, 9.89%)</title><rect x="343.7" y="99.0" width="116.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="346.7" y="110.0">tcp_rcv_establ..</text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.14%)</title><rect x="344.8" y="83.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="347.8" y="94.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.14%)</title><rect x="344.8" y="67.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="347.8" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.05%)</title><rect x="345.4" y="51.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="348.4" y="62.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.05%)</title><rect x="345.9" y="51.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="348.9" y="62.0"></text>
</g>
<g>
<title>sock_def_readable (143 samples, 6.80%)</title><rect x="346.5" y="83.0" width="80.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="349.5" y="94.0">sock_def_..</text>
</g>
<g>
<title>__wake_up_common_lock (143 samples, 6.80%)</title><rect x="346.5" y="67.0" width="80.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="349.5" y="78.0">__wake_up..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (142 samples, 6.75%)</title><rect x="347.1" y="51.0" width="79.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="350.1" y="62.0">_raw_spin..</text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.05%)</title><rect x="426.1" y="35.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="429.1" y="46.0"></text>
</g>
<g>
<title>tcp_ack (46 samples, 2.19%)</title><rect x="426.7" y="83.0" width="25.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="429.7" y="94.0">t..</text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.33%)</title><rect x="435.7" y="67.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="438.7" y="78.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.10%)</title><rect x="435.7" y="51.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="438.7" y="62.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.10%)</title><rect x="436.8" y="51.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="439.8" y="62.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.10%)</title><rect x="437.9" y="51.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="440.9" y="62.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.10%)</title><rect x="437.9" y="35.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="440.9" y="46.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.05%)</title><rect x="439.0" y="51.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="442.0" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (4 samples, 0.19%)</title><rect x="439.6" y="67.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="442.6" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.05%)</title><rect x="441.8" y="67.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="444.8" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.14%)</title><rect x="442.4" y="67.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="445.4" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.05%)</title><rect x="443.5" y="51.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="446.5" y="62.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.05%)</title><rect x="444.1" y="67.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="447.1" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (5 samples, 0.24%)</title><rect x="444.6" y="67.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="447.6" y="78.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.05%)</title><rect x="446.3" y="51.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="449.3" y="62.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.05%)</title><rect x="446.9" y="51.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="449.9" y="62.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.05%)</title><rect x="447.5" y="67.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="450.5" y="78.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.10%)</title><rect x="448.0" y="67.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="451.0" y="78.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.05%)</title><rect x="449.1" y="67.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="452.1" y="78.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.10%)</title><rect x="449.7" y="67.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="452.7" y="78.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.14%)</title><rect x="450.8" y="67.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="453.8" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.10%)</title><rect x="452.5" y="83.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="455.5" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.14%)</title><rect x="453.6" y="83.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="456.6" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.24%)</title><rect x="455.3" y="83.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="458.3" y="94.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.14%)</title><rect x="456.4" y="67.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="459.4" y="78.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.10%)</title><rect x="457.0" y="51.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="460.0" y="62.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.10%)</title><rect x="458.1" y="83.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="461.1" y="94.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.10%)</title><rect x="459.2" y="83.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="462.2" y="94.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb.isra.0 (1 samples, 0.05%)</title><rect x="460.4" y="115.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="463.4" y="126.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (2 samples, 0.10%)</title><rect x="460.9" y="115.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="463.9" y="126.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.10%)</title><rect x="462.0" y="179.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="465.0" y="190.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.05%)</title><rect x="463.2" y="211.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="466.2" y="222.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.05%)</title><rect x="463.7" y="291.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="466.7" y="302.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.05%)</title><rect x="464.3" y="307.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="467.3" y="318.0"></text>
</g>
<g>
<title>ip_finish_output (7 samples, 0.33%)</title><rect x="464.8" y="323.0" width="4.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="467.8" y="334.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (7 samples, 0.33%)</title><rect x="464.8" y="307.0" width="4.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="467.8" y="318.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.05%)</title><rect x="467.6" y="291.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="470.6" y="302.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.05%)</title><rect x="468.2" y="291.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="471.2" y="302.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.24%)</title><rect x="468.8" y="355.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="471.8" y="366.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.05%)</title><rect x="471.0" y="339.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="474.0" y="350.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.05%)</title><rect x="471.6" y="355.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="474.6" y="366.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.05%)</title><rect x="472.1" y="355.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="475.1" y="366.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.05%)</title><rect x="472.7" y="355.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="475.7" y="366.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.05%)</title><rect x="473.3" y="355.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="476.3" y="366.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.05%)</title><rect x="473.8" y="355.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="476.8" y="366.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.05%)</title><rect x="474.4" y="355.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="477.4" y="366.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.05%)</title><rect x="474.9" y="355.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="477.9" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (3 samples, 0.14%)</title><rect x="475.5" y="355.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="478.5" y="366.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.14%)</title><rect x="477.2" y="371.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="480.2" y="382.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.14%)</title><rect x="477.2" y="355.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="480.2" y="366.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.05%)</title><rect x="478.9" y="371.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="481.9" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (10 samples, 0.48%)</title><rect x="479.4" y="371.0" width="5.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="482.4" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.24%)</title><rect x="480.0" y="355.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="483.0" y="366.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.19%)</title><rect x="480.5" y="339.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="483.5" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.10%)</title><rect x="481.7" y="323.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="484.7" y="334.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.0 (2 samples, 0.10%)</title><rect x="482.8" y="355.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="485.8" y="366.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.10%)</title><rect x="483.9" y="355.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="486.9" y="366.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.14%)</title><rect x="485.0" y="371.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="488.0" y="382.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.05%)</title><rect x="485.6" y="355.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="488.6" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.05%)</title><rect x="486.2" y="355.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="489.2" y="366.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="486.2" y="339.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="489.2" y="350.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.05%)</title><rect x="486.7" y="371.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="489.7" y="382.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.19%)</title><rect x="487.3" y="403.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="490.3" y="414.0"></text>
</g>
<g>
<title>copyin (4 samples, 0.19%)</title><rect x="487.3" y="387.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="490.3" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.19%)</title><rect x="487.3" y="371.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="490.3" y="382.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.14%)</title><rect x="489.5" y="403.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="492.5" y="414.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.05%)</title><rect x="490.6" y="387.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="493.6" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (27 samples, 1.28%)</title><rect x="491.2" y="403.0" width="15.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="494.2" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (27 samples, 1.28%)</title><rect x="491.2" y="387.0" width="15.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="494.2" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (15 samples, 0.71%)</title><rect x="492.3" y="371.0" width="8.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="495.3" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (15 samples, 0.71%)</title><rect x="492.3" y="355.0" width="8.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="495.3" y="366.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.10%)</title><rect x="499.6" y="339.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="502.6" y="350.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.05%)</title><rect x="500.7" y="371.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="503.7" y="382.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (9 samples, 0.43%)</title><rect x="501.3" y="371.0" width="5.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="504.3" y="382.0"></text>
</g>
<g>
<title>__slab_alloc.isra.0 (1 samples, 0.05%)</title><rect x="505.8" y="355.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="508.8" y="366.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.05%)</title><rect x="506.3" y="403.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="509.3" y="414.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.05%)</title><rect x="506.9" y="403.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="509.9" y="414.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.10%)</title><rect x="507.5" y="403.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="510.5" y="414.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.05%)</title><rect x="508.6" y="403.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="511.6" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (11 samples, 0.52%)</title><rect x="509.1" y="403.0" width="6.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="512.1" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (11 samples, 0.52%)</title><rect x="509.1" y="387.0" width="6.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="512.1" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.14%)</title><rect x="513.6" y="371.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="516.6" y="382.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.14%)</title><rect x="515.3" y="403.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="518.3" y="414.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.05%)</title><rect x="517.0" y="403.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="520.0" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.24%)</title><rect x="517.6" y="451.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="520.6" y="462.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.24%)</title><rect x="517.6" y="435.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="520.6" y="446.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.14%)</title><rect x="518.7" y="419.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="521.7" y="430.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.05%)</title><rect x="519.8" y="403.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="522.8" y="414.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (4 samples, 0.19%)</title><rect x="520.4" y="483.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="523.4" y="494.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.14%)</title><rect x="520.9" y="467.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="523.9" y="478.0"></text>
</g>
<g>
<title>syscall_trace_enter (5 samples, 0.24%)</title><rect x="522.6" y="483.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="525.6" y="494.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.05%)</title><rect x="524.8" y="467.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="527.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.52%)</title><rect x="525.4" y="611.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="528.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.43%)</title><rect x="526.5" y="595.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="529.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.43%)</title><rect x="526.5" y="579.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="529.5" y="590.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.05%)</title><rect x="526.5" y="563.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="529.5" y="574.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.05%)</title><rect x="526.5" y="547.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="529.5" y="558.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.05%)</title><rect x="526.5" y="531.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="529.5" y="542.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.05%)</title><rect x="526.5" y="515.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="529.5" y="526.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (8 samples, 0.38%)</title><rect x="527.1" y="563.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="530.1" y="574.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (8 samples, 0.38%)</title><rect x="527.1" y="547.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="530.1" y="558.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (8 samples, 0.38%)</title><rect x="527.1" y="531.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="530.1" y="542.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (4 samples, 0.19%)</title><rect x="529.3" y="515.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="532.3" y="526.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.19%)</title><rect x="531.6" y="611.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="534.6" y="622.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="531.6" y="595.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="534.6" y="606.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.14%)</title><rect x="532.1" y="595.0" width="1.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="535.1" y="606.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.10%)</title><rect x="532.7" y="579.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="535.7" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (16 samples, 0.76%)</title><rect x="533.8" y="627.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="536.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.24%)</title><rect x="536.6" y="611.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="539.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.24%)</title><rect x="536.6" y="595.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="539.6" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="539.4" y="611.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="542.4" y="622.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.24%)</title><rect x="540.0" y="611.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="543.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.14%)</title><rect x="541.1" y="595.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.14%)</title><rect x="541.1" y="579.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="544.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.14%)</title><rect x="541.1" y="563.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="544.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.entity (832 samples, 39.54%)</title><rect x="542.8" y="627.0" width="466.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="545.8" y="638.0">ru/mail/polis/service/saloed/ServiceImpl.entity</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.57%)</title><rect x="542.8" y="611.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="545.8" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.57%)</title><rect x="542.8" y="595.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.8" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.57%)</title><rect x="542.8" y="579.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="545.8" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.57%)</title><rect x="542.8" y="563.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="545.8" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (12 samples, 0.57%)</title><rect x="542.8" y="547.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="545.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (11 samples, 0.52%)</title><rect x="542.8" y="531.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="545.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.05%)</title><rect x="545.0" y="515.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="548.0" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.05%)</title><rect x="545.0" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="548.0" y="510.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="545.6" y="515.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="548.6" y="526.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.24%)</title><rect x="546.2" y="515.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="549.2" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="549.0" y="531.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="549.0" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="552.0" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="549.0" y="499.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="552.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.putEntity (820 samples, 38.97%)</title><rect x="549.5" y="611.0" width="459.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.5" y="622.0">ru/mail/polis/service/saloed/ServiceImpl.putEntity</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.57%)</title><rect x="549.5" y="595.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="552.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.57%)</title><rect x="549.5" y="579.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.5" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.57%)</title><rect x="549.5" y="563.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.5" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.57%)</title><rect x="549.5" y="547.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="552.5" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (12 samples, 0.57%)</title><rect x="549.5" y="531.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="552.5" y="542.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (8 samples, 0.38%)</title><rect x="550.1" y="515.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="553.1" y="526.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (3 samples, 0.14%)</title><rect x="552.9" y="499.0" width="1.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="555.9" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.14%)</title><rect x="554.6" y="515.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="557.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.upsert (808 samples, 38.40%)</title><rect x="556.3" y="595.0" width="453.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.3" y="606.0">ru/mail/polis/dao/RocksDAOImpl.upsert</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (783 samples, 37.21%)</title><rect x="556.3" y="579.0" width="439.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="559.3" y="590.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (783 samples, 37.21%)</title><rect x="556.3" y="563.0" width="439.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="559.3" y="574.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (749 samples, 35.60%)</title><rect x="558.5" y="547.0" width="420.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="561.5" y="558.0">Java_org_rocksdb_RocksDB_put__J_3BII_3BII</text>
</g>
<g>
<title>_init (7 samples, 0.33%)</title><rect x="562.4" y="531.0" width="3.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="565.4" y="542.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.19%)</title><rect x="566.3" y="531.0" width="2.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="569.3" y="542.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.05%)</title><rect x="568.6" y="531.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="571.6" y="542.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.05%)</title><rect x="569.2" y="531.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="572.2" y="542.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (4 samples, 0.19%)</title><rect x="569.7" y="531.0" width="2.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="572.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.19%)</title><rect x="572.0" y="531.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="575.0" y="542.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (721 samples, 34.27%)</title><rect x="574.2" y="531.0" width="404.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="577.2" y="542.0">rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::Wri..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (3 samples, 0.14%)</title><rect x="575.9" y="515.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="578.9" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.05%)</title><rect x="577.6" y="515.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="580.6" y="526.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.10%)</title><rect x="578.1" y="515.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="581.1" y="526.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.19%)</title><rect x="579.2" y="515.0" width="2.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="582.2" y="526.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (3 samples, 0.14%)</title><rect x="579.2" y="499.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="582.2" y="510.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="580.9" y="499.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="583.9" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.19%)</title><rect x="581.5" y="515.0" width="2.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="584.5" y="526.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.14%)</title><rect x="581.5" y="499.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="584.5" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.05%)</title><rect x="583.2" y="499.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="586.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (702 samples, 33.37%)</title><rect x="583.7" y="515.0" width="393.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="586.7" y="526.0">rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.19%)</title><rect x="584.3" y="499.0" width="2.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="587.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (697 samples, 33.13%)</title><rect x="586.5" y="499.0" width="390.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="589.5" y="510.0">rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, ro..</text>
</g>
<g>
<title>_init (1 samples, 0.05%)</title><rect x="586.5" y="483.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="589.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (690 samples, 32.79%)</title><rect x="587.1" y="483.0" width="387.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="590.1" y="494.0">rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksd..</text>
</g>
<g>
<title>__GI___libc_free (2 samples, 0.10%)</title><rect x="587.1" y="467.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="590.1" y="478.0"></text>
</g>
<g>
<title>_init (2 samples, 0.10%)</title><rect x="588.2" y="467.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="591.2" y="478.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.05%)</title><rect x="589.3" y="467.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="592.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (5 samples, 0.24%)</title><rect x="589.9" y="467.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="592.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (630 samples, 29.94%)</title><rect x="592.7" y="467.0" width="353.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="595.7" y="478.0">rocksdb::DBImpl::Write(rocksdb::WriteOptions con..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (4 samples, 0.19%)</title><rect x="592.7" y="451.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="595.7" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.14%)</title><rect x="595.0" y="451.0" width="1.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="598.0" y="462.0"></text>
</g>
<g>
<title>_init (6 samples, 0.29%)</title><rect x="596.6" y="451.0" width="3.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="599.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::ColumnFamilyHandleImpl(rocksdb::ColumnFamilyData*, rocksdb::DBImpl*, rocksdb::InstrumentedMutex*) (1 samples, 0.05%)</title><rect x="600.0" y="451.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="603.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::~ColumnFamilyHandleImpl() (1 samples, 0.05%)</title><rect x="600.6" y="451.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="603.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MemTableInsertStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.05%)</title><rect x="601.1" y="451.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="604.1" y="462.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (4 samples, 0.19%)</title><rect x="601.7" y="451.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="604.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (590 samples, 28.04%)</title><rect x="603.9" y="451.0" width="330.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="606.9" y="462.0">rocksdb::DBImpl::WriteImpl(rocksdb::WriteOpti..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.14%)</title><rect x="625.8" y="435.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="628.8" y="446.0"></text>
</g>
<g>
<title>__GI_sched_yield (29 samples, 1.38%)</title><rect x="627.5" y="435.0" width="16.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="630.5" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 1.05%)</title><rect x="631.4" y="419.0" width="12.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="634.4" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 1.05%)</title><rect x="631.4" y="403.0" width="12.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="634.4" y="414.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (14 samples, 0.67%)</title><rect x="633.7" y="387.0" width="7.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="636.7" y="398.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.67%)</title><rect x="633.7" y="371.0" width="7.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="636.7" y="382.0"></text>
</g>
<g>
<title>__schedule (14 samples, 0.67%)</title><rect x="633.7" y="355.0" width="7.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="636.7" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (14 samples, 0.67%)</title><rect x="633.7" y="339.0" width="7.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="636.7" y="350.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.10%)</title><rect x="641.5" y="387.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="644.5" y="398.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.05%)</title><rect x="642.1" y="371.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="645.1" y="382.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.05%)</title><rect x="642.1" y="355.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="645.1" y="366.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.10%)</title><rect x="642.6" y="387.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="645.6" y="398.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.10%)</title><rect x="642.6" y="371.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="645.6" y="382.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="643.7" y="435.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="646.7" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr (9 samples, 0.43%)</title><rect x="644.3" y="435.0" width="5.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="647.3" y="446.0"></text>
</g>
<g>
<title>_init (7 samples, 0.33%)</title><rect x="649.4" y="435.0" width="3.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="652.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (4 samples, 0.19%)</title><rect x="653.3" y="435.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="656.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (6 samples, 0.29%)</title><rect x="655.5" y="435.0" width="3.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="658.5" y="446.0"></text>
</g>
<g>
<title>_init (1 samples, 0.05%)</title><rect x="658.3" y="419.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="661.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.05%)</title><rect x="658.9" y="435.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="661.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (200 samples, 9.51%)</title><rect x="659.4" y="435.0" width="112.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="662.4" y="446.0">rocksdb::DBImp..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (195 samples, 9.27%)</title><rect x="660.6" y="419.0" width="109.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="663.6" y="430.0">rocksdb::DBIm..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (187 samples, 8.89%)</title><rect x="663.4" y="403.0" width="104.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="666.4" y="414.0">rocksdb::log..</text>
</g>
<g>
<title>/tmp/librocksdbjni8566492340554714481.so (11 samples, 0.52%)</title><rect x="665.6" y="387.0" width="6.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="668.6" y="398.0"></text>
</g>
<g>
<title>_init (4 samples, 0.19%)</title><rect x="671.8" y="387.0" width="2.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="674.8" y="398.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (168 samples, 7.98%)</title><rect x="674.0" y="387.0" width="94.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="677.0" y="398.0">rocksdb::lo..</text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.10%)</title><rect x="674.0" y="371.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="677.0" y="382.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="675.2" y="371.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="678.2" y="382.0"></text>
</g>
<g>
<title>_init (2 samples, 0.10%)</title><rect x="675.7" y="371.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="678.7" y="382.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (1 samples, 0.05%)</title><rect x="676.8" y="371.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="679.8" y="382.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Flush() (1 samples, 0.05%)</title><rect x="677.4" y="371.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="680.4" y="382.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.05%)</title><rect x="678.0" y="371.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="681.0" y="382.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (1 samples, 0.05%)</title><rect x="678.5" y="371.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="681.5" y="382.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (5 samples, 0.24%)</title><rect x="679.1" y="371.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="682.1" y="382.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (1 samples, 0.05%)</title><rect x="681.3" y="355.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="684.3" y="366.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (151 samples, 7.18%)</title><rect x="681.9" y="371.0" width="84.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="684.9" y="382.0">rocksdb::W..</text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.24%)</title><rect x="683.0" y="355.0" width="2.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="686.0" y="366.0"></text>
</g>
<g>
<title>_init (1 samples, 0.05%)</title><rect x="685.8" y="355.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="688.8" y="366.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (1 samples, 0.05%)</title><rect x="686.4" y="355.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="689.4" y="366.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;) (1 samples, 0.05%)</title><rect x="686.9" y="355.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="689.9" y="366.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize() (2 samples, 0.10%)</title><rect x="687.5" y="355.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="690.5" y="366.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (139 samples, 6.61%)</title><rect x="688.6" y="355.0" width="78.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="691.6" y="366.0">rocksdb::..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="693.1" y="339.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="696.1" y="350.0"></text>
</g>
<g>
<title>write (130 samples, 6.18%)</title><rect x="693.7" y="339.0" width="72.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="696.7" y="350.0">write</text>
</g>
<g>
<title>__x86_indirect_thunk_r11 (1 samples, 0.05%)</title><rect x="698.7" y="323.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="701.7" y="334.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.05%)</title><rect x="699.3" y="323.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="702.3" y="334.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (119 samples, 5.66%)</title><rect x="699.8" y="323.0" width="66.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="702.8" y="334.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (119 samples, 5.66%)</title><rect x="699.8" y="307.0" width="66.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="702.8" y="318.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.10%)</title><rect x="704.3" y="291.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="707.3" y="302.0"></text>
</g>
<g>
<title>ksys_write (103 samples, 4.90%)</title><rect x="705.4" y="291.0" width="57.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="708.4" y="302.0">ksys_w..</text>
</g>
<g>
<title>__f_unlock_pos (1 samples, 0.05%)</title><rect x="707.1" y="275.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="710.1" y="286.0"></text>
</g>
<g>
<title>__fdget_pos (10 samples, 0.48%)</title><rect x="707.7" y="275.0" width="5.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="710.7" y="286.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.38%)</title><rect x="708.8" y="259.0" width="4.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="711.8" y="270.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.38%)</title><rect x="708.8" y="243.0" width="4.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="711.8" y="254.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.10%)</title><rect x="713.3" y="275.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="716.3" y="286.0"></text>
</g>
<g>
<title>vfs_write (87 samples, 4.13%)</title><rect x="714.4" y="275.0" width="48.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="717.4" y="286.0">vfs_..</text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.10%)</title><rect x="715.5" y="259.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="718.5" y="270.0"></text>
</g>
<g>
<title>__sb_end_write (2 samples, 0.10%)</title><rect x="716.7" y="259.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="719.7" y="270.0"></text>
</g>
<g>
<title>__sb_start_write (5 samples, 0.24%)</title><rect x="717.8" y="259.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="720.8" y="270.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.05%)</title><rect x="720.0" y="243.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="723.0" y="254.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.05%)</title><rect x="720.6" y="259.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="723.6" y="270.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.14%)</title><rect x="721.1" y="259.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="724.1" y="270.0"></text>
</g>
<g>
<title>new_sync_write (72 samples, 3.42%)</title><rect x="722.8" y="259.0" width="40.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="725.8" y="270.0">new..</text>
</g>
<g>
<title>generic_file_write_iter (69 samples, 3.28%)</title><rect x="724.5" y="243.0" width="38.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="727.5" y="254.0">gen..</text>
</g>
<g>
<title>__generic_file_write_iter (61 samples, 2.90%)</title><rect x="726.7" y="227.0" width="34.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="729.7" y="238.0">__..</text>
</g>
<g>
<title>file_remove_privs (1 samples, 0.05%)</title><rect x="727.9" y="211.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="730.9" y="222.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.05%)</title><rect x="728.4" y="211.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="731.4" y="222.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.05%)</title><rect x="728.4" y="195.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="731.4" y="206.0"></text>
</g>
<g>
<title>generic_perform_write (57 samples, 2.71%)</title><rect x="729.0" y="211.0" width="32.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="732.0" y="222.0">ge..</text>
</g>
<g>
<title>__x86_indirect_thunk_r11 (1 samples, 0.05%)</title><rect x="729.6" y="195.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="732.6" y="206.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (1 samples, 0.05%)</title><rect x="730.1" y="195.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="733.1" y="206.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (7 samples, 0.33%)</title><rect x="730.7" y="195.0" width="3.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="733.7" y="206.0"></text>
</g>
<g>
<title>copyin (5 samples, 0.24%)</title><rect x="731.2" y="179.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="734.2" y="190.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.05%)</title><rect x="731.2" y="163.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="734.2" y="174.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.19%)</title><rect x="731.8" y="163.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="734.8" y="174.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.05%)</title><rect x="734.0" y="179.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="737.0" y="190.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (5 samples, 0.24%)</title><rect x="734.6" y="195.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="737.6" y="206.0"></text>
</g>
<g>
<title>shmem_getpage_gfp.isra.0 (30 samples, 1.43%)</title><rect x="737.4" y="195.0" width="16.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="740.4" y="206.0"></text>
</g>
<g>
<title>find_lock_entry (21 samples, 1.00%)</title><rect x="739.6" y="179.0" width="11.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="742.6" y="190.0"></text>
</g>
<g>
<title>find_get_entry (21 samples, 1.00%)</title><rect x="739.6" y="163.0" width="11.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="742.6" y="174.0"></text>
</g>
<g>
<title>xas_load (14 samples, 0.67%)</title><rect x="743.6" y="147.0" width="7.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="746.6" y="158.0"></text>
</g>
<g>
<title>xas_start (5 samples, 0.24%)</title><rect x="748.6" y="131.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="751.6" y="142.0"></text>
</g>
<g>
<title>mark_page_accessed (5 samples, 0.24%)</title><rect x="751.4" y="179.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="754.4" y="190.0"></text>
</g>
<g>
<title>activate_page (1 samples, 0.05%)</title><rect x="753.7" y="163.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="756.7" y="174.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.05%)</title><rect x="753.7" y="147.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="756.7" y="158.0"></text>
</g>
<g>
<title>shmem_write_begin (3 samples, 0.14%)</title><rect x="754.2" y="195.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="757.2" y="206.0"></text>
</g>
<g>
<title>shmem_write_end (9 samples, 0.43%)</title><rect x="755.9" y="195.0" width="5.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="758.9" y="206.0"></text>
</g>
<g>
<title>__set_page_dirty_no_writeback (1 samples, 0.05%)</title><rect x="758.2" y="179.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="761.2" y="190.0"></text>
</g>
<g>
<title>set_page_dirty (3 samples, 0.14%)</title><rect x="758.7" y="179.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="761.7" y="190.0"></text>
</g>
<g>
<title>page_mapping (3 samples, 0.14%)</title><rect x="758.7" y="163.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="761.7" y="174.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.05%)</title><rect x="760.4" y="179.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="763.4" y="190.0"></text>
</g>
<g>
<title>down_write (1 samples, 0.05%)</title><rect x="761.0" y="227.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="764.0" y="238.0"></text>
</g>
<g>
<title>generic_write_check_limits.isra.0 (2 samples, 0.10%)</title><rect x="761.5" y="227.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="764.5" y="238.0"></text>
</g>
<g>
<title>up_write (1 samples, 0.05%)</title><rect x="762.6" y="227.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="765.6" y="238.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (3 samples, 0.14%)</title><rect x="763.2" y="291.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="766.2" y="302.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.14%)</title><rect x="763.2" y="275.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="766.2" y="286.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.05%)</title><rect x="764.3" y="259.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="767.3" y="270.0"></text>
</g>
<g>
<title>syscall_trace_enter (3 samples, 0.14%)</title><rect x="764.9" y="291.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="767.9" y="302.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.10%)</title><rect x="765.4" y="275.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="768.4" y="286.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (3 samples, 0.14%)</title><rect x="766.6" y="371.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="769.6" y="382.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (3 samples, 0.14%)</title><rect x="768.3" y="403.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="771.3" y="414.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (2 samples, 0.10%)</title><rect x="769.9" y="419.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="772.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.05%)</title><rect x="771.1" y="419.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="774.1" y="430.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (2 samples, 0.10%)</title><rect x="771.6" y="435.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="774.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (7 samples, 0.33%)</title><rect x="772.7" y="435.0" width="4.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="775.7" y="446.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (7 samples, 0.33%)</title><rect x="772.7" y="419.0" width="4.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="775.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (2 samples, 0.10%)</title><rect x="776.7" y="435.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="779.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (1 samples, 0.05%)</title><rect x="777.8" y="435.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="780.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::HasMerge() const (1 samples, 0.05%)</title><rect x="778.3" y="435.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="781.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (179 samples, 8.51%)</title><rect x="778.9" y="435.0" width="100.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="781.9" y="446.0">rocksdb::Wri..</text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.05%)</title><rect x="780.0" y="419.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="783.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (175 samples, 8.32%)</title><rect x="780.6" y="419.0" width="98.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="783.6" y="430.0">rocksdb::Wri..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (165 samples, 7.84%)</title><rect x="782.3" y="403.0" width="92.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="785.3" y="414.0">rocksdb::Me..</text>
</g>
<g>
<title>_init (1 samples, 0.05%)</title><rect x="782.3" y="387.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="785.3" y="398.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (2 samples, 0.10%)</title><rect x="782.8" y="387.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="785.8" y="398.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.10%)</title><rect x="784.0" y="387.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="787.0" y="398.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (160 samples, 7.60%)</title><rect x="785.1" y="387.0" width="89.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="788.1" y="398.0">rocksdb::M..</text>
</g>
<g>
<title>/tmp/librocksdbjni8566492340554714481.so (3 samples, 0.14%)</title><rect x="789.6" y="371.0" width="1.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="792.6" y="382.0"></text>
</g>
<g>
<title>_init (3 samples, 0.14%)</title><rect x="791.2" y="371.0" width="1.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="794.2" y="382.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.05%)</title><rect x="792.9" y="371.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="795.9" y="382.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (1 samples, 0.05%)</title><rect x="793.5" y="371.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="796.5" y="382.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (2 samples, 0.10%)</title><rect x="794.0" y="371.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="797.0" y="382.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (134 samples, 6.37%)</title><rect x="795.2" y="371.0" width="75.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="798.2" y="382.0">rocksdb:..</text>
</g>
<g>
<title>/tmp/librocksdbjni8566492340554714481.so (10 samples, 0.48%)</title><rect x="803.6" y="355.0" width="5.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="806.6" y="366.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="804.1" y="339.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="807.1" y="350.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (8 samples, 0.38%)</title><rect x="804.7" y="339.0" width="4.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="807.7" y="350.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (100 samples, 4.75%)</title><rect x="809.2" y="355.0" width="56.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="812.2" y="366.0">bool r..</text>
</g>
<g>
<title>/tmp/librocksdbjni8566492340554714481.so (91 samples, 4.33%)</title><rect x="810.9" y="339.0" width="51.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="813.9" y="350.0">/tmp/..</text>
</g>
<g>
<title>/tmp/librocksdbjni8566492340554714481.so (32 samples, 1.52%)</title><rect x="838.9" y="323.0" width="18.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="841.9" y="334.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8566492340554714481.so (1 samples, 0.05%)</title><rect x="842.3" y="307.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="845.3" y="318.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.19%)</title><rect x="842.8" y="307.0" width="2.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="845.8" y="318.0"></text>
</g>
<g>
<title>_init (1 samples, 0.05%)</title><rect x="845.1" y="307.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="848.1" y="318.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (20 samples, 0.95%)</title><rect x="845.6" y="307.0" width="11.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="848.6" y="318.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8566492340554714481.so (1 samples, 0.05%)</title><rect x="850.7" y="291.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="853.7" y="302.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.05%)</title><rect x="851.3" y="291.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="854.3" y="302.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (5 samples, 0.24%)</title><rect x="851.8" y="291.0" width="2.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="854.8" y="302.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.14%)</title><rect x="854.6" y="291.0" width="1.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="857.6" y="302.0"></text>
</g>
<g>
<title>_init (1 samples, 0.05%)</title><rect x="856.3" y="291.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="859.3" y="302.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 0.43%)</title><rect x="856.9" y="323.0" width="5.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="859.9" y="334.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8566492340554714481.so (1 samples, 0.05%)</title><rect x="859.7" y="307.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="862.7" y="318.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.05%)</title><rect x="860.2" y="307.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="863.2" y="318.0"></text>
</g>
<g>
<title>_init (2 samples, 0.10%)</title><rect x="860.8" y="307.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="863.8" y="318.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.10%)</title><rect x="861.9" y="339.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="864.9" y="350.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (4 samples, 0.19%)</title><rect x="863.0" y="339.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="866.0" y="350.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8566492340554714481.so (1 samples, 0.05%)</title><rect x="864.2" y="323.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="867.2" y="334.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.05%)</title><rect x="864.7" y="323.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="867.7" y="334.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.10%)</title><rect x="865.3" y="355.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="868.3" y="366.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.10%)</title><rect x="865.3" y="339.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="868.3" y="350.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.10%)</title><rect x="865.3" y="323.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="868.3" y="334.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.05%)</title><rect x="865.8" y="307.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="868.8" y="318.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.05%)</title><rect x="865.8" y="291.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="868.8" y="302.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.05%)</title><rect x="865.8" y="275.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="868.8" y="286.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.05%)</title><rect x="865.8" y="259.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="868.8" y="270.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.05%)</title><rect x="865.8" y="243.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="868.8" y="254.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.10%)</title><rect x="866.4" y="355.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="869.4" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.05%)</title><rect x="867.5" y="355.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="870.5" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (4 samples, 0.19%)</title><rect x="868.1" y="355.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="871.1" y="366.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8566492340554714481.so (3 samples, 0.14%)</title><rect x="868.1" y="339.0" width="1.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="871.1" y="350.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (1 samples, 0.05%)</title><rect x="869.8" y="339.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="872.8" y="350.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (3 samples, 0.14%)</title><rect x="870.3" y="371.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="873.3" y="382.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (2 samples, 0.10%)</title><rect x="872.0" y="371.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="875.0" y="382.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (3 samples, 0.14%)</title><rect x="873.1" y="371.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="876.1" y="382.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (4 samples, 0.19%)</title><rect x="874.8" y="403.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="877.8" y="414.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (3 samples, 0.14%)</title><rect x="877.1" y="403.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="880.1" y="414.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.05%)</title><rect x="878.7" y="419.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="881.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (29 samples, 1.38%)</title><rect x="879.3" y="435.0" width="16.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="882.3" y="446.0"></text>
</g>
<g>
<title>__GI___libc_free (1 samples, 0.05%)</title><rect x="879.3" y="419.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="882.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.10%)</title><rect x="879.9" y="419.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="882.9" y="430.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8566492340554714481.so (1 samples, 0.05%)</title><rect x="879.9" y="403.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="882.9" y="414.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (1 samples, 0.05%)</title><rect x="880.4" y="403.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="883.4" y="414.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (26 samples, 1.24%)</title><rect x="881.0" y="419.0" width="14.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="884.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (26 samples, 1.24%)</title><rect x="881.0" y="403.0" width="14.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="884.0" y="414.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (26 samples, 1.24%)</title><rect x="881.0" y="387.0" width="14.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="884.0" y="398.0"></text>
</g>
<g>
<title>_init (1 samples, 0.05%)</title><rect x="881.0" y="371.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="884.0" y="382.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (1 samples, 0.05%)</title><rect x="881.5" y="371.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="884.5" y="382.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.05%)</title><rect x="882.1" y="371.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="885.1" y="382.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (22 samples, 1.05%)</title><rect x="882.7" y="371.0" width="12.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="885.7" y="382.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8566492340554714481.so (3 samples, 0.14%)</title><rect x="883.2" y="355.0" width="1.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="886.2" y="366.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.05%)</title><rect x="883.8" y="339.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="886.8" y="350.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.05%)</title><rect x="884.3" y="339.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="887.3" y="350.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.05%)</title><rect x="884.9" y="355.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="887.9" y="366.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.05%)</title><rect x="884.9" y="339.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="887.9" y="350.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.05%)</title><rect x="884.9" y="323.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="887.9" y="334.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.05%)</title><rect x="884.9" y="307.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="887.9" y="318.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.05%)</title><rect x="884.9" y="291.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="887.9" y="302.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (17 samples, 0.81%)</title><rect x="885.5" y="355.0" width="9.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="888.5" y="366.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (17 samples, 0.81%)</title><rect x="885.5" y="339.0" width="9.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="888.5" y="350.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8566492340554714481.so (15 samples, 0.71%)</title><rect x="886.6" y="323.0" width="8.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="889.6" y="334.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8566492340554714481.so (10 samples, 0.48%)</title><rect x="889.4" y="307.0" width="5.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="892.4" y="318.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.10%)</title><rect x="889.4" y="291.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="892.4" y="302.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 0.38%)</title><rect x="890.5" y="291.0" width="4.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="893.5" y="302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8566492340554714481.so (1 samples, 0.05%)</title><rect x="891.6" y="275.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="894.6" y="286.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.10%)</title><rect x="892.2" y="275.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="895.2" y="286.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.10%)</title><rect x="893.3" y="275.0" width="1.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="896.3" y="286.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="894.4" y="275.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="897.4" y="286.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.05%)</title><rect x="895.0" y="371.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="898.0" y="382.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.05%)</title><rect x="895.6" y="435.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="898.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (6 samples, 0.29%)</title><rect x="896.1" y="435.0" width="3.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="899.1" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (16 samples, 0.76%)</title><rect x="899.5" y="435.0" width="9.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="902.5" y="446.0"></text>
</g>
<g>
<title>_init (1 samples, 0.05%)</title><rect x="907.9" y="419.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="910.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (4 samples, 0.19%)</title><rect x="908.5" y="435.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="911.5" y="446.0"></text>
</g>
<g>
<title>__GI_sched_yield (1 samples, 0.05%)</title><rect x="908.5" y="419.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="911.5" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="908.5" y="403.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="911.5" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="908.5" y="387.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="911.5" y="398.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.05%)</title><rect x="908.5" y="371.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="911.5" y="382.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="908.5" y="355.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="911.5" y="366.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="908.5" y="339.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="911.5" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.05%)</title><rect x="908.5" y="323.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="911.5" y="334.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.10%)</title><rect x="909.0" y="419.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="912.0" y="430.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.05%)</title><rect x="910.1" y="419.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="913.1" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="910.1" y="403.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="913.1" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="910.1" y="387.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="913.1" y="398.0"></text>
</g>
<g>
<title>__se_sys_clock_gettime (1 samples, 0.05%)</title><rect x="910.1" y="371.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="913.1" y="382.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (1 samples, 0.05%)</title><rect x="910.1" y="355.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="913.1" y="366.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.05%)</title><rect x="910.1" y="339.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="913.1" y="350.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.05%)</title><rect x="910.7" y="435.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="913.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.05%)</title><rect x="911.3" y="435.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="914.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (5 samples, 0.24%)</title><rect x="911.8" y="435.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="914.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (4 samples, 0.19%)</title><rect x="914.6" y="435.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="917.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (3 samples, 0.14%)</title><rect x="915.2" y="419.0" width="1.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="918.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (3 samples, 0.14%)</title><rect x="916.9" y="435.0" width="1.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="919.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::AssertHeld() (1 samples, 0.05%)</title><rect x="918.6" y="435.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="921.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.05%)</title><rect x="919.1" y="435.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="922.1" y="446.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;*) (1 samples, 0.05%)</title><rect x="919.7" y="435.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="922.7" y="446.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (2 samples, 0.10%)</title><rect x="920.2" y="435.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="923.2" y="446.0"></text>
</g>
<g>
<title>syscall (24 samples, 1.14%)</title><rect x="921.4" y="435.0" width="13.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="924.4" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.57%)</title><rect x="928.1" y="419.0" width="6.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="931.1" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.57%)</title><rect x="928.1" y="403.0" width="6.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="931.1" y="414.0"></text>
</g>
<g>
<title>__se_sys_clock_gettime (7 samples, 0.33%)</title><rect x="929.8" y="387.0" width="3.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="932.8" y="398.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (5 samples, 0.24%)</title><rect x="929.8" y="371.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="932.8" y="382.0"></text>
</g>
<g>
<title>ktime_get_ts64 (5 samples, 0.24%)</title><rect x="929.8" y="355.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="932.8" y="366.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.10%)</title><rect x="931.5" y="339.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="934.5" y="350.0"></text>
</g>
<g>
<title>put_timespec64 (2 samples, 0.10%)</title><rect x="932.6" y="371.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="935.6" y="382.0"></text>
</g>
<g>
<title>_copy_to_user (2 samples, 0.10%)</title><rect x="932.6" y="355.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="935.6" y="366.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.10%)</title><rect x="932.6" y="339.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="935.6" y="350.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.10%)</title><rect x="933.7" y="387.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="936.7" y="398.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (5 samples, 0.24%)</title><rect x="934.8" y="451.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="937.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (2 samples, 0.10%)</title><rect x="937.6" y="451.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="940.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (2 samples, 0.10%)</title><rect x="938.7" y="451.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="941.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.05%)</title><rect x="939.9" y="451.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="942.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.10%)</title><rect x="940.4" y="451.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="943.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (2 samples, 0.10%)</title><rect x="941.5" y="451.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="944.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.05%)</title><rect x="942.7" y="451.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="945.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (3 samples, 0.14%)</title><rect x="943.2" y="451.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="946.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.10%)</title><rect x="944.9" y="451.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="947.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (4 samples, 0.19%)</title><rect x="946.0" y="467.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="949.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (4 samples, 0.19%)</title><rect x="948.3" y="467.0" width="2.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="951.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (23 samples, 1.09%)</title><rect x="950.5" y="467.0" width="12.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="953.5" y="478.0"></text>
</g>
<g>
<title>_init (2 samples, 0.10%)</title><rect x="950.5" y="451.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="953.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (5 samples, 0.24%)</title><rect x="951.6" y="451.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="954.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (5 samples, 0.24%)</title><rect x="954.4" y="451.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="957.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (2 samples, 0.10%)</title><rect x="957.3" y="451.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="960.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.24%)</title><rect x="958.4" y="451.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="961.4" y="462.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (3 samples, 0.14%)</title><rect x="959.5" y="435.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="962.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, int) (1 samples, 0.05%)</title><rect x="961.2" y="451.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="964.2" y="462.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (3 samples, 0.14%)</title><rect x="961.7" y="451.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="964.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (4 samples, 0.19%)</title><rect x="963.4" y="467.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="966.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.19%)</title><rect x="965.7" y="467.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="968.7" y="478.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (2 samples, 0.10%)</title><rect x="967.9" y="467.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="970.9" y="478.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (5 samples, 0.24%)</title><rect x="969.0" y="467.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="972.0" y="478.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (4 samples, 0.19%)</title><rect x="971.8" y="467.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="974.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.05%)</title><rect x="974.1" y="483.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="977.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.10%)</title><rect x="974.6" y="483.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="977.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (3 samples, 0.14%)</title><rect x="975.8" y="483.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="978.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.05%)</title><rect x="977.4" y="515.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="980.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.05%)</title><rect x="978.0" y="515.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="981.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.38%)</title><rect x="978.6" y="547.0" width="4.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="981.6" y="558.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.10%)</title><rect x="978.6" y="531.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="981.6" y="542.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.05%)</title><rect x="979.7" y="531.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="982.7" y="542.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.05%)</title><rect x="980.2" y="531.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="983.2" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="980.2" y="515.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="983.2" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="980.2" y="499.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="983.2" y="510.0"></text>
</g>
<g>
<title>__se_sys_futex (1 samples, 0.05%)</title><rect x="980.2" y="483.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="983.2" y="494.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="980.2" y="467.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="983.2" y="478.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.05%)</title><rect x="980.2" y="451.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="983.2" y="462.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (3 samples, 0.14%)</title><rect x="980.8" y="531.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="983.8" y="542.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.05%)</title><rect x="982.5" y="531.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="985.5" y="542.0"></text>
</g>
<g>
<title>__malloc (14 samples, 0.67%)</title><rect x="983.1" y="547.0" width="7.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="986.1" y="558.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (3 samples, 0.14%)</title><rect x="990.9" y="547.0" width="1.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="993.9" y="558.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (4 samples, 0.19%)</title><rect x="992.6" y="547.0" width="2.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="995.6" y="558.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.05%)</title><rect x="994.8" y="547.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="997.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArray (8 samples, 0.38%)</title><rect x="995.4" y="579.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="998.4" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (5 samples, 0.24%)</title><rect x="995.4" y="563.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="998.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.24%)</title><rect x="995.4" y="547.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="998.4" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.24%)</title><rect x="995.4" y="531.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="998.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (1 samples, 0.05%)</title><rect x="997.1" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1000.1" y="526.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="997.6" y="515.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1000.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.14%)</title><rect x="998.2" y="563.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1001.2" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.14%)</title><rect x="998.2" y="547.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1001.2" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.14%)</title><rect x="998.2" y="531.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1001.2" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="999.3" y="515.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1002.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (17 samples, 0.81%)</title><rect x="999.9" y="579.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1002.9" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="1001.0" y="563.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1004.0" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (6 samples, 0.29%)</title><rect x="1001.6" y="563.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1004.6" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.29%)</title><rect x="1001.6" y="547.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1004.6" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.29%)</title><rect x="1001.6" y="531.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1004.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (2 samples, 0.10%)</title><rect x="1002.7" y="515.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1005.7" y="526.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.05%)</title><rect x="1003.8" y="515.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1006.8" y="526.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="1004.4" y="515.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1007.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.38%)</title><rect x="1004.9" y="563.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1007.9" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.38%)</title><rect x="1004.9" y="547.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1007.9" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.38%)</title><rect x="1004.9" y="531.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1007.9" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1007.2" y="515.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1010.2" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.10%)</title><rect x="1008.3" y="515.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1011.3" y="526.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (16 samples, 0.76%)</title><rect x="1009.4" y="643.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1012.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (16 samples, 0.76%)</title><rect x="1009.4" y="627.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1012.4" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.10%)</title><rect x="1009.4" y="611.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1012.4" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (14 samples, 0.67%)</title><rect x="1010.5" y="611.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1013.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (14 samples, 0.67%)</title><rect x="1010.5" y="595.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1013.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (14 samples, 0.67%)</title><rect x="1010.5" y="579.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1013.5" y="590.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.10%)</title><rect x="1016.1" y="563.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1019.1" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.10%)</title><rect x="1017.3" y="563.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1020.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (69 samples, 3.28%)</title><rect x="1018.4" y="675.0" width="38.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1021.4" y="686.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (22 samples, 1.05%)</title><rect x="1039.7" y="659.0" width="12.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1042.7" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (22 samples, 1.05%)</title><rect x="1039.7" y="643.0" width="12.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1042.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (22 samples, 1.05%)</title><rect x="1039.7" y="627.0" width="12.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1042.7" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (22 samples, 1.05%)</title><rect x="1039.7" y="611.0" width="12.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1042.7" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (9 samples, 0.43%)</title><rect x="1052.0" y="659.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1055.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (12 samples, 0.57%)</title><rect x="1057.1" y="675.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1060.1" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (12 samples, 0.57%)</title><rect x="1057.1" y="659.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1060.1" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (12 samples, 0.57%)</title><rect x="1057.1" y="643.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1060.1" y="654.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.19%)</title><rect x="1061.6" y="627.0" width="2.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1064.6" y="638.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (5 samples, 0.24%)</title><rect x="1063.8" y="691.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1066.8" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (220 samples, 10.46%)</title><rect x="1066.6" y="691.0" width="123.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1069.6" y="702.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (219 samples, 10.41%)</title><rect x="1067.2" y="675.0" width="122.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1070.2" y="686.0">one/nio/net/Nat..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.05%)</title><rect x="1073.9" y="659.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1076.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 2.19%)</title><rect x="1074.5" y="659.0" width="25.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1077.5" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (46 samples, 2.19%)</title><rect x="1074.5" y="643.0" width="25.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1077.5" y="654.0">[..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (35 samples, 1.66%)</title><rect x="1074.5" y="627.0" width="19.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1077.5" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.19%)</title><rect x="1075.6" y="611.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1078.6" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.19%)</title><rect x="1077.8" y="611.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1080.8" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (4 samples, 0.19%)</title><rect x="1080.1" y="611.0" width="2.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1083.1" y="622.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (4 samples, 0.19%)</title><rect x="1082.3" y="611.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1085.3" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (15 samples, 0.71%)</title><rect x="1084.6" y="611.0" width="8.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1087.6" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.14%)</title><rect x="1088.5" y="595.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1091.5" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (5 samples, 0.24%)</title><rect x="1090.2" y="595.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1093.2" y="606.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.10%)</title><rect x="1093.0" y="611.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1096.0" y="622.0"></text>
</g>
<g>
<title>__libc_recv (1 samples, 0.05%)</title><rect x="1094.1" y="627.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1097.1" y="638.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.10%)</title><rect x="1094.7" y="627.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1097.7" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.38%)</title><rect x="1095.8" y="627.0" width="4.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1098.8" y="638.0"></text>
</g>
<g>
<title>__libc_recv (159 samples, 7.56%)</title><rect x="1100.3" y="659.0" width="89.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1103.3" y="670.0">__libc_recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (142 samples, 6.75%)</title><rect x="1109.8" y="643.0" width="79.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1112.8" y="654.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (142 samples, 6.75%)</title><rect x="1109.8" y="627.0" width="79.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1112.8" y="638.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_recvfrom (119 samples, 5.66%)</title><rect x="1120.5" y="611.0" width="66.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1123.5" y="622.0">__x64_s..</text>
</g>
<g>
<title>__sys_recvfrom (117 samples, 5.56%)</title><rect x="1121.6" y="595.0" width="65.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1124.6" y="606.0">__sys_r..</text>
</g>
<g>
<title>fput_many (1 samples, 0.05%)</title><rect x="1123.3" y="579.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1126.3" y="590.0"></text>
</g>
<g>
<title>import_single_range (5 samples, 0.24%)</title><rect x="1123.8" y="579.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1126.8" y="590.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.10%)</title><rect x="1125.5" y="563.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1128.5" y="574.0"></text>
</g>
<g>
<title>inet6_recvmsg (97 samples, 4.61%)</title><rect x="1126.6" y="579.0" width="54.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1129.6" y="590.0">inet6..</text>
</g>
<g>
<title>tcp_recvmsg (96 samples, 4.56%)</title><rect x="1127.2" y="563.0" width="53.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1130.2" y="574.0">tcp_r..</text>
</g>
<g>
<title>__kfree_skb (11 samples, 0.52%)</title><rect x="1141.8" y="547.0" width="6.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1144.8" y="558.0"></text>
</g>
<g>
<title>skb_release_all (10 samples, 0.48%)</title><rect x="1141.8" y="531.0" width="5.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1144.8" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (10 samples, 0.48%)</title><rect x="1141.8" y="515.0" width="5.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1144.8" y="526.0"></text>
</g>
<g>
<title>dst_release (8 samples, 0.38%)</title><rect x="1141.8" y="499.0" width="4.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1144.8" y="510.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.10%)</title><rect x="1146.3" y="499.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1149.3" y="510.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.05%)</title><rect x="1147.4" y="531.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1150.4" y="542.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.19%)</title><rect x="1147.9" y="547.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1150.9" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.05%)</title><rect x="1150.2" y="547.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1153.2" y="558.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.05%)</title><rect x="1150.7" y="547.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1153.7" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.29%)</title><rect x="1151.3" y="547.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1154.3" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.19%)</title><rect x="1151.3" y="531.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1154.3" y="542.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (2 samples, 0.10%)</title><rect x="1151.9" y="515.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1154.9" y="526.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.05%)</title><rect x="1153.0" y="515.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1156.0" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock (2 samples, 0.10%)</title><rect x="1153.5" y="531.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1156.5" y="542.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.05%)</title><rect x="1154.1" y="515.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1157.1" y="526.0"></text>
</g>
<g>
<title>ns_to_timespec64 (1 samples, 0.05%)</title><rect x="1154.7" y="547.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1157.7" y="558.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.10%)</title><rect x="1155.2" y="547.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1158.2" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="1155.8" y="531.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1158.8" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (27 samples, 1.28%)</title><rect x="1156.3" y="547.0" width="15.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1159.3" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (27 samples, 1.28%)</title><rect x="1156.3" y="531.0" width="15.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1159.3" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.24%)</title><rect x="1161.4" y="515.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1164.4" y="526.0"></text>
</g>
<g>
<title>copyout (5 samples, 0.24%)</title><rect x="1161.4" y="499.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1164.4" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.19%)</title><rect x="1162.0" y="483.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1165.0" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (13 samples, 0.62%)</title><rect x="1164.2" y="515.0" width="7.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1167.2" y="526.0"></text>
</g>
<g>
<title>__check_object_size (10 samples, 0.48%)</title><rect x="1165.9" y="499.0" width="5.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1168.9" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (7 samples, 0.33%)</title><rect x="1167.6" y="483.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1170.6" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (10 samples, 0.48%)</title><rect x="1171.5" y="547.0" width="5.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1174.5" y="558.0"></text>
</g>
<g>
<title>__tcp_select_window (4 samples, 0.19%)</title><rect x="1174.9" y="531.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1177.9" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.19%)</title><rect x="1177.1" y="547.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1180.1" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.05%)</title><rect x="1178.8" y="531.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1181.8" y="542.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.05%)</title><rect x="1178.8" y="515.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1181.8" y="526.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.05%)</title><rect x="1178.8" y="499.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1181.8" y="510.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (3 samples, 0.14%)</title><rect x="1179.3" y="547.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1182.3" y="558.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.05%)</title><rect x="1181.0" y="579.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1184.0" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.05%)</title><rect x="1181.0" y="563.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1184.0" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10 samples, 0.48%)</title><rect x="1181.6" y="579.0" width="5.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1184.6" y="590.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.48%)</title><rect x="1181.6" y="563.0" width="5.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1184.6" y="574.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.33%)</title><rect x="1183.3" y="547.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1186.3" y="558.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (3 samples, 0.14%)</title><rect x="1187.2" y="611.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1190.2" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.10%)</title><rect x="1187.8" y="595.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1190.8" y="606.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.05%)</title><rect x="1187.8" y="579.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1190.8" y="590.0"></text>
</g>
<g>
<title>dput (1 samples, 0.05%)</title><rect x="1187.8" y="563.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1190.8" y="574.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.05%)</title><rect x="1188.3" y="579.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1191.3" y="590.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.05%)</title><rect x="1188.9" y="611.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1191.9" y="622.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="1189.4" y="659.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1192.4" y="670.0"></text>
</g>
</g>
</svg>
