<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="821"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="821"> </text>
<g id="frames">
<g>
<title>all (71,945 samples, 100.00%)</title><rect x="10.0" y="787.0" width="1180.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="798.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (21,402 samples, 29.75%)</title><rect x="10.0" y="771.0" width="351.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (21,402 samples, 29.75%)</title><rect x="10.0" y="755.0" width="351.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (21,402 samples, 29.75%)</title><rect x="10.0" y="739.0" width="351.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (189 samples, 0.26%)</title><rect x="10.0" y="723.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (189 samples, 0.26%)</title><rect x="10.0" y="707.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (189 samples, 0.26%)</title><rect x="10.0" y="691.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (189 samples, 0.26%)</title><rect x="10.0" y="675.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (189 samples, 0.26%)</title><rect x="10.0" y="659.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/handler/RequestHandler.run (21,213 samples, 29.49%)</title><rect x="13.1" y="723.0" width="347.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="16.1" y="734.0">ru/mail/polis/service/saloed/request/handler/Re..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$408/1738233451.run (21,213 samples, 29.49%)</title><rect x="13.1" y="707.0" width="347.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.1" y="718.0">ru/mail/polis/service/saloed/ServiceImpl$$Lambd..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entities$8 (21,213 samples, 29.49%)</title><rect x="13.1" y="691.0" width="347.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="16.1" y="702.0">ru/mail/polis/service/saloed/ServiceImpl.lambda..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (322 samples, 0.45%)</title><rect x="13.1" y="675.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="16.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (322 samples, 0.45%)</title><rect x="13.1" y="659.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="16.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$412/59149577.get$Lambda (176 samples, 0.24%)</title><rect x="13.1" y="643.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.1" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.ServiceImpl$$Lambda$412 (176 samples, 0.24%)</title><rect x="13.1" y="627.0" width="2.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="16.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$413/715200337.get$Lambda (146 samples, 0.20%)</title><rect x="16.0" y="643.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.0" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.ServiceImpl$$Lambda$413 (146 samples, 0.20%)</title><rect x="16.0" y="627.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="19.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (210 samples, 0.29%)</title><rect x="18.4" y="675.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (210 samples, 0.29%)</title><rect x="18.4" y="659.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.4" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (75 samples, 0.10%)</title><rect x="18.4" y="643.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="21.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (135 samples, 0.19%)</title><rect x="19.6" y="643.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (135 samples, 0.19%)</title><rect x="19.6" y="627.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="22.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (4,097 samples, 5.69%)</title><rect x="21.8" y="675.0" width="67.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.8" y="686.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (4,097 samples, 5.69%)</title><rect x="21.8" y="659.0" width="67.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.8" y="670.0">java/ut..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (107 samples, 0.15%)</title><rect x="21.8" y="643.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="24.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (48 samples, 0.07%)</title><rect x="23.6" y="643.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="26.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (48 samples, 0.07%)</title><rect x="23.6" y="627.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="26.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (3,942 samples, 5.48%)</title><rect x="24.4" y="643.0" width="64.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.4" y="654.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (83 samples, 0.12%)</title><rect x="24.4" y="627.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.4" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (83 samples, 0.12%)</title><rect x="24.4" y="611.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="27.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$412/59149577.accept (3,859 samples, 5.36%)</title><rect x="25.7" y="627.0" width="63.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="28.7" y="638.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entities$6 (3,859 samples, 5.36%)</title><rect x="25.7" y="611.0" width="63.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="28.7" y="622.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (3,859 samples, 5.36%)</title><rect x="25.7" y="595.0" width="63.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="28.7" y="606.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/StreamHttpSession.stream (3,859 samples, 5.36%)</title><rect x="25.7" y="579.0" width="63.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.7" y="590.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (76 samples, 0.11%)</title><rect x="25.7" y="563.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="28.7" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (466 samples, 0.65%)</title><rect x="27.0" y="563.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (321 samples, 0.45%)</title><rect x="27.0" y="547.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="30.0" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (321 samples, 0.45%)</title><rect x="27.0" y="531.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.0" y="542.0"></text>
</g>
<g>
<title>byte[] (316 samples, 0.44%)</title><rect x="27.0" y="515.0" width="5.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="30.0" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (145 samples, 0.20%)</title><rect x="32.3" y="547.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="35.3" y="558.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (145 samples, 0.20%)</title><rect x="32.3" y="531.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="35.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (108 samples, 0.15%)</title><rect x="34.6" y="563.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="37.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (108 samples, 0.15%)</title><rect x="34.6" y="547.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="37.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/StreamHttpSession.keepAlive (222 samples, 0.31%)</title><rect x="36.4" y="563.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="39.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (222 samples, 0.31%)</title><rect x="36.4" y="547.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="39.4" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (222 samples, 0.31%)</title><rect x="36.4" y="531.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="39.4" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (222 samples, 0.31%)</title><rect x="36.4" y="515.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="39.4" y="526.0"></text>
</g>
<g>
<title>java.lang.String (93 samples, 0.13%)</title><rect x="36.4" y="499.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="39.4" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (129 samples, 0.18%)</title><rect x="37.9" y="499.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.9" y="510.0"></text>
</g>
<g>
<title>byte[] (129 samples, 0.18%)</title><rect x="37.9" y="483.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="40.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/StreamHttpSession.next (2,987 samples, 4.15%)</title><rect x="40.0" y="563.0" width="49.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="43.0" y="574.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (345 samples, 0.48%)</title><rect x="40.0" y="547.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="43.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksDAOIterator.hasNext (345 samples, 0.48%)</title><rect x="40.0" y="531.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="43.0" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (345 samples, 0.48%)</title><rect x="40.0" y="515.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.0" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (345 samples, 0.48%)</title><rect x="40.0" y="499.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="43.0" y="510.0"></text>
</g>
<g>
<title>byte[] (345 samples, 0.48%)</title><rect x="40.0" y="483.0" width="5.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="43.0" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1,122 samples, 1.56%)</title><rect x="45.7" y="547.0" width="18.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="48.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (72 samples, 0.10%)</title><rect x="45.7" y="531.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="48.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$$Lambda$414/1741825776.apply (72 samples, 0.10%)</title><rect x="45.7" y="515.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor.lambda$processForService$0 (72 samples, 0.10%)</title><rect x="45.7" y="499.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.7" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.payload.RecordWithTimestampAndKeyPayload (72 samples, 0.10%)</title><rect x="45.7" y="483.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="48.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksDAOIterator.next (1,050 samples, 1.46%)</title><rect x="46.9" y="531.0" width="17.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.9" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (93 samples, 0.13%)</title><rect x="46.9" y="515.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.9" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (93 samples, 0.13%)</title><rect x="46.9" y="499.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.9" y="510.0"></text>
</g>
<g>
<title>byte[] (93 samples, 0.13%)</title><rect x="46.9" y="483.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="49.9" y="494.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value (136 samples, 0.19%)</title><rect x="48.4" y="515.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="51.4" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value0 (136 samples, 0.19%)</title><rect x="48.4" y="499.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="51.4" y="510.0"></text>
</g>
<g>
<title>byte[] (136 samples, 0.19%)</title><rect x="48.4" y="483.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="51.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksDAOIterator.hasNext (80 samples, 0.11%)</title><rect x="50.6" y="515.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.6" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (80 samples, 0.11%)</title><rect x="50.6" y="499.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.6" y="510.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (80 samples, 0.11%)</title><rect x="50.6" y="483.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.6" y="494.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.11%)</title><rect x="50.6" y="467.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="53.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordWithTimestampIterator.construct (741 samples, 1.03%)</title><rect x="52.0" y="515.0" width="12.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordWithTimestampIterator.construct (741 samples, 1.03%)</title><rect x="52.0" y="499.0" width="12.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.fromArrayShifted (296 samples, 0.41%)</title><rect x="52.0" y="483.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="55.0" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (216 samples, 0.30%)</title><rect x="52.0" y="467.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.0" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (216 samples, 0.30%)</title><rect x="52.0" y="451.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="55.0" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (216 samples, 0.30%)</title><rect x="52.0" y="435.0" width="3.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="55.0" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (80 samples, 0.11%)</title><rect x="55.5" y="467.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.5" y="478.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.11%)</title><rect x="55.5" y="451.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="58.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/timestamp/RecordWithTimestamp.fromBytes (342 samples, 0.48%)</title><rect x="56.8" y="483.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.8" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (190 samples, 0.26%)</title><rect x="56.8" y="467.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="59.8" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (190 samples, 0.26%)</title><rect x="56.8" y="451.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="59.8" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (190 samples, 0.26%)</title><rect x="56.8" y="435.0" width="3.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="59.8" y="446.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.timestamp.RecordWithTimestamp (152 samples, 0.21%)</title><rect x="59.9" y="467.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="62.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/timestamp/RecordWithTimestampAndKey.fromKeyValue (103 samples, 0.14%)</title><rect x="62.4" y="483.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.4" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.timestamp.RecordWithTimestampAndKey (103 samples, 0.14%)</title><rect x="62.4" y="467.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="65.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/StreamHttpSession.handleStreamEnding (334 samples, 0.46%)</title><rect x="64.1" y="547.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.1" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (130 samples, 0.18%)</title><rect x="64.1" y="531.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.1" y="542.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (130 samples, 0.18%)</title><rect x="64.1" y="515.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="67.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/StreamHttpSession.keepAlive (204 samples, 0.28%)</title><rect x="66.2" y="531.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (204 samples, 0.28%)</title><rect x="66.2" y="515.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.2" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (204 samples, 0.28%)</title><rect x="66.2" y="499.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.2" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (204 samples, 0.28%)</title><rect x="66.2" y="483.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.2" y="494.0"></text>
</g>
<g>
<title>java.lang.String (86 samples, 0.12%)</title><rect x="66.2" y="467.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="69.2" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (118 samples, 0.16%)</title><rect x="67.7" y="467.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="70.7" y="478.0"></text>
</g>
<g>
<title>byte[] (118 samples, 0.16%)</title><rect x="67.7" y="451.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="70.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/StreamHttpSession.writeRecord (1,186 samples, 1.65%)</title><rect x="69.6" y="547.0" width="19.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.6" y="558.0"></text>
</g>
<g>
<title>byte[] (204 samples, 0.28%)</title><rect x="69.6" y="531.0" width="3.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="72.6" y="542.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (84 samples, 0.12%)</title><rect x="72.9" y="531.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="75.9" y="542.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (84 samples, 0.12%)</title><rect x="72.9" y="515.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="75.9" y="526.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.12%)</title><rect x="72.9" y="499.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="75.9" y="510.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (124 samples, 0.17%)</title><rect x="74.3" y="531.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (124 samples, 0.17%)</title><rect x="74.3" y="515.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (124 samples, 0.17%)</title><rect x="74.3" y="499.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="77.3" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (124 samples, 0.17%)</title><rect x="74.3" y="483.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.3" y="494.0"></text>
</g>
<g>
<title>byte[] (124 samples, 0.17%)</title><rect x="74.3" y="467.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="77.3" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (177 samples, 0.25%)</title><rect x="76.3" y="531.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="79.3" y="542.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (177 samples, 0.25%)</title><rect x="76.3" y="515.0" width="2.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="79.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/payload/RecordWithTimestampAndKeyPayload.toRawBytes (597 samples, 0.83%)</title><rect x="79.2" y="531.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/timestamp/RecordWithTimestampAndKey.toRawBytes (597 samples, 0.83%)</title><rect x="79.2" y="515.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="82.2" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (184 samples, 0.26%)</title><rect x="79.2" y="499.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.2" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (184 samples, 0.26%)</title><rect x="79.2" y="483.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.2" y="494.0"></text>
</g>
<g>
<title>byte[] (184 samples, 0.26%)</title><rect x="79.2" y="467.0" width="3.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="82.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArray (261 samples, 0.36%)</title><rect x="82.3" y="499.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.3" y="510.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.09%)</title><rect x="82.3" y="483.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="85.3" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (193 samples, 0.27%)</title><rect x="83.4" y="483.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.4" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (193 samples, 0.27%)</title><rect x="83.4" y="467.0" width="3.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="86.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/timestamp/RecordWithTimestamp.toRawBytes (152 samples, 0.21%)</title><rect x="86.5" y="499.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.5" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (152 samples, 0.21%)</title><rect x="86.5" y="483.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.5" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (152 samples, 0.21%)</title><rect x="86.5" y="467.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="89.5" y="478.0"></text>
</g>
<g>
<title>byte[] (152 samples, 0.21%)</title><rect x="86.5" y="451.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="89.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor.processForService (1,386 samples, 1.93%)</title><rect x="89.0" y="675.0" width="22.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="92.0" y="686.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (85 samples, 0.12%)</title><rect x="89.0" y="659.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="92.0" y="670.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (85 samples, 0.12%)</title><rect x="89.0" y="643.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="92.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completedFuture (108 samples, 0.15%)</title><rect x="90.4" y="659.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="93.4" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (108 samples, 0.15%)</title><rect x="90.4" y="643.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="93.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.recordRange (1,193 samples, 1.66%)</title><rect x="92.2" y="659.0" width="19.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="95.2" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (457 samples, 0.64%)</title><rect x="92.2" y="643.0" width="7.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="95.2" y="654.0"></text>
</g>
<g>
<title>org.rocksdb.RocksIterator (200 samples, 0.28%)</title><rect x="92.2" y="627.0" width="3.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="95.2" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.&lt;init&gt; (257 samples, 0.36%)</title><rect x="95.5" y="627.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="98.5" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.&lt;init&gt; (257 samples, 0.36%)</title><rect x="95.5" y="611.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="98.5" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/RocksObject.&lt;init&gt; (257 samples, 0.36%)</title><rect x="95.5" y="595.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="98.5" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.&lt;init&gt; (257 samples, 0.36%)</title><rect x="95.5" y="579.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="98.5" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (88 samples, 0.12%)</title><rect x="95.5" y="563.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="98.5" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.&lt;init&gt; (169 samples, 0.23%)</title><rect x="96.9" y="563.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="99.9" y="574.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (169 samples, 0.23%)</title><rect x="96.9" y="547.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="99.9" y="558.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (169 samples, 0.23%)</title><rect x="96.9" y="531.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="99.9" y="542.0"></text>
</g>
<g>
<title>java.lang.ref.Finalizer (169 samples, 0.23%)</title><rect x="96.9" y="515.0" width="2.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="99.9" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.RocksDAOImpl$RocksRecordWithTimestampIterator (91 samples, 0.13%)</title><rect x="99.7" y="643.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="102.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordWithTimestampIterator.&lt;init&gt; (645 samples, 0.90%)</title><rect x="101.2" y="643.0" width="10.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksDAOIterator.&lt;init&gt; (645 samples, 0.90%)</title><rect x="101.2" y="627.0" width="10.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.2" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (152 samples, 0.21%)</title><rect x="101.2" y="611.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.2" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (152 samples, 0.21%)</title><rect x="101.2" y="595.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.2" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (152 samples, 0.21%)</title><rect x="101.2" y="579.0" width="2.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="104.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (251 samples, 0.35%)</title><rect x="103.7" y="611.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="106.7" y="622.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.10%)</title><rect x="103.7" y="595.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="106.7" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (181 samples, 0.25%)</title><rect x="104.8" y="595.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="107.8" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (181 samples, 0.25%)</title><rect x="104.8" y="579.0" width="3.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="107.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksDAOIterator.initIterator (242 samples, 0.34%)</title><rect x="107.8" y="611.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (242 samples, 0.34%)</title><rect x="107.8" y="595.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.8" y="606.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.10%)</title><rect x="107.8" y="579.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="110.8" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (173 samples, 0.24%)</title><rect x="108.9" y="579.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.9" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (173 samples, 0.24%)</title><rect x="108.9" y="563.0" width="2.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="111.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor.processForUser (15,198 samples, 21.12%)</title><rect x="111.8" y="675.0" width="249.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="114.8" y="686.0">ru/mail/polis/service/saloed/requ..</text>
</g>
<g>
<title>java.util.ArrayList (68 samples, 0.09%)</title><rect x="111.8" y="659.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="114.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.05%)</title><rect x="112.9" y="659.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="115.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.05%)</title><rect x="112.9" y="643.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$$Lambda$411/1225976976.get$Lambda (35 samples, 0.05%)</title><rect x="112.9" y="627.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="115.9" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.request.processor.EntitiesRequestProcessor$$Lambda$411 (35 samples, 0.05%)</title><rect x="112.9" y="611.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="115.9" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (160 samples, 0.22%)</title><rect x="113.5" y="659.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="116.5" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (160 samples, 0.22%)</title><rect x="113.5" y="643.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="116.5" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (160 samples, 0.22%)</title><rect x="113.5" y="627.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="116.5" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (160 samples, 0.22%)</title><rect x="113.5" y="611.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.5" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (160 samples, 0.22%)</title><rect x="113.5" y="595.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.5" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (160 samples, 0.22%)</title><rect x="113.5" y="579.0" width="2.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="116.5" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (55 samples, 0.08%)</title><rect x="116.1" y="659.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="119.1" y="670.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (55 samples, 0.08%)</title><rect x="116.1" y="643.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="119.1" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.toArray (66 samples, 0.09%)</title><rect x="117.0" y="659.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.0" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (41 samples, 0.06%)</title><rect x="117.0" y="643.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="120.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture[] (41 samples, 0.06%)</title><rect x="117.0" y="627.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="120.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$$Lambda$410/511149654.apply (25 samples, 0.03%)</title><rect x="117.7" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor.lambda$processForUser$1 (25 samples, 0.03%)</title><rect x="117.7" y="627.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.7" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture[] (25 samples, 0.03%)</title><rect x="117.7" y="611.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="120.7" y="622.0"></text>
</g>
<g>
<title>java/util/Map.of (336 samples, 0.47%)</title><rect x="118.1" y="659.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.1" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (96 samples, 0.13%)</title><rect x="118.1" y="643.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="121.1" y="654.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$MapN (86 samples, 0.12%)</title><rect x="119.6" y="643.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="122.6" y="654.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN.&lt;init&gt; (154 samples, 0.21%)</title><rect x="121.1" y="643.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.1" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (154 samples, 0.21%)</title><rect x="121.1" y="627.0" width="2.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="124.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.allOf (136 samples, 0.19%)</title><rect x="123.6" y="659.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (136 samples, 0.19%)</title><rect x="123.6" y="643.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$BiRelay (63 samples, 0.09%)</title><rect x="123.6" y="627.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="126.6" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (40 samples, 0.06%)</title><rect x="124.6" y="627.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="127.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.bipush (33 samples, 0.05%)</title><rect x="125.3" y="627.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="128.3" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$CoCompletion (33 samples, 0.05%)</title><rect x="125.3" y="611.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="128.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (331 samples, 0.46%)</title><rect x="125.8" y="659.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="128.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (331 samples, 0.46%)</title><rect x="125.8" y="643.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="128.8" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (183 samples, 0.25%)</title><rect x="125.8" y="627.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="128.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (40 samples, 0.06%)</title><rect x="128.8" y="627.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.8" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (40 samples, 0.06%)</title><rect x="128.8" y="611.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="131.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (108 samples, 0.15%)</title><rect x="129.5" y="627.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="132.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (108 samples, 0.15%)</title><rect x="129.5" y="611.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.5" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (108 samples, 0.15%)</title><rect x="129.5" y="595.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="132.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (6,143 samples, 8.54%)</title><rect x="131.2" y="659.0" width="100.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.2" y="670.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (6,143 samples, 8.54%)</title><rect x="131.2" y="643.0" width="100.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="134.2" y="654.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (6,143 samples, 8.54%)</title><rect x="131.2" y="627.0" width="100.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="134.2" y="638.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (6,143 samples, 8.54%)</title><rect x="131.2" y="611.0" width="100.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.2" y="622.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (50 samples, 0.07%)</title><rect x="131.2" y="595.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="134.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (50 samples, 0.07%)</title><rect x="131.2" y="579.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$188/1017548720.get$Lambda (50 samples, 0.07%)</title><rect x="131.2" y="563.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$188 (50 samples, 0.07%)</title><rect x="131.2" y="547.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="134.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (262 samples, 0.36%)</title><rect x="132.1" y="595.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="135.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (262 samples, 0.36%)</title><rect x="132.1" y="579.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="135.1" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (125 samples, 0.17%)</title><rect x="132.1" y="563.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="135.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (137 samples, 0.19%)</title><rect x="134.1" y="563.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="137.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (137 samples, 0.19%)</title><rect x="134.1" y="547.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="137.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (137 samples, 0.19%)</title><rect x="134.1" y="531.0" width="2.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="137.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (247 samples, 0.34%)</title><rect x="136.4" y="595.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="139.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (247 samples, 0.34%)</title><rect x="136.4" y="579.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="139.4" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (159 samples, 0.22%)</title><rect x="136.4" y="563.0" width="2.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="139.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (88 samples, 0.12%)</title><rect x="139.0" y="563.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (88 samples, 0.12%)</title><rect x="139.0" y="547.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (88 samples, 0.12%)</title><rect x="139.0" y="531.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="142.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (187 samples, 0.26%)</title><rect x="140.4" y="595.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="143.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (281 samples, 0.39%)</title><rect x="143.5" y="595.0" width="4.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="146.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (2,813 samples, 3.91%)</title><rect x="148.1" y="595.0" width="46.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="151.1" y="606.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (346 samples, 0.48%)</title><rect x="148.1" y="579.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="151.1" y="590.0"></text>
</g>
<g>
<title>java/util/Collection.stream (286 samples, 0.40%)</title><rect x="148.1" y="563.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.1" y="574.0"></text>
</g>
<g>
<title>java/util/List.spliterator (105 samples, 0.15%)</title><rect x="148.1" y="547.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.1" y="558.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (105 samples, 0.15%)</title><rect x="148.1" y="531.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="151.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (181 samples, 0.25%)</title><rect x="149.8" y="547.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="152.8" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (180 samples, 0.25%)</title><rect x="149.8" y="531.0" width="3.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="152.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (60 samples, 0.08%)</title><rect x="152.8" y="563.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="155.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (60 samples, 0.08%)</title><rect x="152.8" y="547.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="155.8" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (60 samples, 0.08%)</title><rect x="152.8" y="531.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="155.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$107/1281414889.get (60 samples, 0.08%)</title><rect x="152.8" y="515.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="155.8" y="526.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (60 samples, 0.08%)</title><rect x="152.8" y="499.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="155.8" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,253 samples, 1.74%)</title><rect x="153.8" y="579.0" width="20.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.8" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,253 samples, 1.74%)</title><rect x="153.8" y="563.0" width="20.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="156.8" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (51 samples, 0.07%)</title><rect x="153.8" y="547.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="156.8" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (81 samples, 0.11%)</title><rect x="154.6" y="547.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="157.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (154 samples, 0.21%)</title><rect x="155.9" y="547.0" width="2.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="158.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (43 samples, 0.06%)</title><rect x="158.5" y="547.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="161.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (113 samples, 0.16%)</title><rect x="159.2" y="547.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="162.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (113 samples, 0.16%)</title><rect x="159.2" y="531.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="162.2" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/1966280024.get$Lambda (113 samples, 0.16%)</title><rect x="159.2" y="515.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="162.2" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$151 (113 samples, 0.16%)</title><rect x="159.2" y="499.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="162.2" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (570 samples, 0.79%)</title><rect x="161.0" y="547.0" width="9.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="164.0" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (570 samples, 0.79%)</title><rect x="161.0" y="531.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="164.0" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/1966280024.accept (570 samples, 0.79%)</title><rect x="161.0" y="515.0" width="9.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="164.0" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (570 samples, 0.79%)</title><rect x="161.0" y="499.0" width="9.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="164.0" y="510.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (194 samples, 0.27%)</title><rect x="161.0" y="483.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="164.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$156/142789664.accept (194 samples, 0.27%)</title><rect x="161.0" y="467.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="164.0" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (194 samples, 0.27%)</title><rect x="161.0" y="451.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="164.0" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (194 samples, 0.27%)</title><rect x="161.0" y="435.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="164.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (194 samples, 0.27%)</title><rect x="161.0" y="419.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="164.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (194 samples, 0.27%)</title><rect x="161.0" y="403.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="164.0" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (194 samples, 0.27%)</title><rect x="161.0" y="387.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="164.0" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (194 samples, 0.27%)</title><rect x="161.0" y="371.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="164.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (194 samples, 0.27%)</title><rect x="161.0" y="355.0" width="3.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="164.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (75 samples, 0.10%)</title><rect x="164.2" y="483.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="167.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (75 samples, 0.10%)</title><rect x="164.2" y="467.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.2" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$156/142789664.get$Lambda (75 samples, 0.10%)</title><rect x="164.2" y="451.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="167.2" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$156 (75 samples, 0.10%)</title><rect x="164.2" y="435.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="167.2" y="446.0"></text>
</g>
<g>
<title>java/util/List.copyOf (174 samples, 0.24%)</title><rect x="165.4" y="483.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="168.4" y="494.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (174 samples, 0.24%)</title><rect x="165.4" y="467.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="168.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (86 samples, 0.12%)</title><rect x="165.4" y="451.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="168.4" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (86 samples, 0.12%)</title><rect x="165.4" y="435.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="168.4" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (86 samples, 0.12%)</title><rect x="165.4" y="419.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="168.4" y="430.0"></text>
</g>
<g>
<title>java/util/List.of (88 samples, 0.12%)</title><rect x="166.8" y="451.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="169.8" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (88 samples, 0.12%)</title><rect x="166.8" y="435.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="169.8" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (127 samples, 0.18%)</title><rect x="168.3" y="483.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.3" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (127 samples, 0.18%)</title><rect x="168.3" y="467.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="171.3" y="478.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (89 samples, 0.12%)</title><rect x="170.4" y="547.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.4" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (89 samples, 0.12%)</title><rect x="170.4" y="531.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="173.4" y="542.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (152 samples, 0.21%)</title><rect x="171.8" y="547.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (152 samples, 0.21%)</title><rect x="171.8" y="531.0" width="2.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="174.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (69 samples, 0.10%)</title><rect x="174.3" y="579.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="177.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (691 samples, 0.96%)</title><rect x="175.5" y="579.0" width="11.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.5" y="590.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (691 samples, 0.96%)</title><rect x="175.5" y="563.0" width="11.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.5" y="574.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (583 samples, 0.81%)</title><rect x="175.5" y="547.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="178.5" y="558.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (583 samples, 0.81%)</title><rect x="175.5" y="531.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.5" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (583 samples, 0.81%)</title><rect x="175.5" y="515.0" width="9.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="178.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (274 samples, 0.38%)</title><rect x="175.5" y="499.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="178.5" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (274 samples, 0.38%)</title><rect x="175.5" y="483.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="178.5" y="494.0"></text>
</g>
<g>
<title>byte[] (274 samples, 0.38%)</title><rect x="175.5" y="467.0" width="4.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="178.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (309 samples, 0.43%)</title><rect x="180.0" y="499.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="183.0" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (309 samples, 0.43%)</title><rect x="180.0" y="483.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="183.0" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (309 samples, 0.43%)</title><rect x="180.0" y="467.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="183.0" y="478.0"></text>
</g>
<g>
<title>byte[] (309 samples, 0.43%)</title><rect x="180.0" y="451.0" width="5.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="183.0" y="462.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (108 samples, 0.15%)</title><rect x="185.0" y="547.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="188.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (146 samples, 0.20%)</title><rect x="186.8" y="579.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="189.8" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (146 samples, 0.20%)</title><rect x="186.8" y="563.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="189.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (308 samples, 0.43%)</title><rect x="189.2" y="579.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.2" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (88 samples, 0.12%)</title><rect x="189.2" y="563.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="192.2" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (80 samples, 0.11%)</title><rect x="190.6" y="563.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.6" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (80 samples, 0.11%)</title><rect x="190.6" y="547.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="193.6" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (140 samples, 0.19%)</title><rect x="191.9" y="563.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.9" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (140 samples, 0.19%)</title><rect x="191.9" y="547.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="194.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1,555 samples, 2.16%)</title><rect x="194.2" y="595.0" width="25.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="197.2" y="606.0">j..</text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (56 samples, 0.08%)</title><rect x="194.2" y="579.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="197.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (236 samples, 0.33%)</title><rect x="195.2" y="579.0" width="3.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="198.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (52 samples, 0.07%)</title><rect x="199.1" y="579.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="202.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (52 samples, 0.07%)</title><rect x="199.1" y="563.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="202.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (1,207 samples, 1.68%)</title><rect x="199.9" y="579.0" width="19.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="202.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1,207 samples, 1.68%)</title><rect x="199.9" y="563.0" width="19.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="202.9" y="574.0"></text>
</g>
<g>
<title>java.lang.Class[] (140 samples, 0.19%)</title><rect x="199.9" y="547.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="202.9" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (116 samples, 0.16%)</title><rect x="202.2" y="547.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="205.2" y="558.0"></text>
</g>
<g>
<title>java.util.LinkedList (97 samples, 0.13%)</title><rect x="204.1" y="547.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="207.1" y="558.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (512 samples, 0.71%)</title><rect x="205.7" y="547.0" width="8.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="208.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (512 samples, 0.71%)</title><rect x="205.7" y="531.0" width="8.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.7" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (512 samples, 0.71%)</title><rect x="205.7" y="515.0" width="8.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="208.7" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (512 samples, 0.71%)</title><rect x="205.7" y="499.0" width="8.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.7" y="510.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (493 samples, 0.69%)</title><rect x="205.7" y="483.0" width="8.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="208.7" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (19 samples, 0.03%)</title><rect x="213.8" y="483.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="216.8" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (189 samples, 0.26%)</title><rect x="214.1" y="547.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="217.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (189 samples, 0.26%)</title><rect x="214.1" y="531.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="217.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor301.newInstance (74 samples, 0.10%)</title><rect x="214.1" y="515.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="217.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (74 samples, 0.10%)</title><rect x="214.1" y="499.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="217.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor307.newInstance (115 samples, 0.16%)</title><rect x="215.3" y="515.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="218.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (115 samples, 0.16%)</title><rect x="215.3" y="499.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="218.3" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (153 samples, 0.21%)</title><rect x="217.2" y="547.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="220.2" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (153 samples, 0.21%)</title><rect x="217.2" y="531.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="220.2" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (153 samples, 0.21%)</title><rect x="217.2" y="515.0" width="2.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="220.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (747 samples, 1.04%)</title><rect x="219.7" y="595.0" width="12.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (73 samples, 0.10%)</title><rect x="219.7" y="579.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="222.7" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (73 samples, 0.10%)</title><rect x="219.7" y="563.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="222.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (79 samples, 0.11%)</title><rect x="220.9" y="579.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="223.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (595 samples, 0.83%)</title><rect x="222.2" y="579.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="225.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (101 samples, 0.14%)</title><rect x="222.2" y="563.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="225.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (101 samples, 0.14%)</title><rect x="222.2" y="547.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="225.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$179/16826935.get$Lambda (65 samples, 0.09%)</title><rect x="222.2" y="531.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="225.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$179 (65 samples, 0.09%)</title><rect x="222.2" y="515.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="225.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$182/2020955110.get$Lambda (36 samples, 0.05%)</title><rect x="223.3" y="531.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="226.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$182 (36 samples, 0.05%)</title><rect x="223.3" y="515.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="226.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (494 samples, 0.69%)</title><rect x="223.9" y="563.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="226.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (494 samples, 0.69%)</title><rect x="223.9" y="547.0" width="8.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="226.9" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (279 samples, 0.39%)</title><rect x="223.9" y="531.0" width="4.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="226.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (215 samples, 0.30%)</title><rect x="228.5" y="531.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="231.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (215 samples, 0.30%)</title><rect x="228.5" y="515.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="231.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (215 samples, 0.30%)</title><rect x="228.5" y="499.0" width="3.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="231.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (1,455 samples, 2.02%)</title><rect x="232.0" y="659.0" width="23.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.0" y="670.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (142 samples, 0.20%)</title><rect x="232.0" y="643.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="235.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (1,313 samples, 1.83%)</title><rect x="234.3" y="643.0" width="21.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.3" y="654.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,268 samples, 1.76%)</title><rect x="234.3" y="627.0" width="20.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.3" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,268 samples, 1.76%)</title><rect x="234.3" y="611.0" width="20.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.3" y="622.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (52 samples, 0.07%)</title><rect x="234.3" y="595.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="237.3" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (85 samples, 0.12%)</title><rect x="235.2" y="595.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="238.2" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (144 samples, 0.20%)</title><rect x="236.6" y="595.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="239.6" y="606.0"></text>
</g>
<g>
<title>java.util.TreeSet (38 samples, 0.05%)</title><rect x="238.9" y="595.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="241.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (113 samples, 0.16%)</title><rect x="239.6" y="595.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="242.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (113 samples, 0.16%)</title><rect x="239.6" y="579.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="242.6" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/1966280024.get$Lambda (113 samples, 0.16%)</title><rect x="239.6" y="563.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.6" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$151 (113 samples, 0.16%)</title><rect x="239.6" y="547.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="242.6" y="558.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (92 samples, 0.13%)</title><rect x="241.4" y="595.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="244.4" y="606.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (92 samples, 0.13%)</title><rect x="241.4" y="579.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="244.4" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (611 samples, 0.85%)</title><rect x="242.9" y="595.0" width="10.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="245.9" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/1966280024.accept (611 samples, 0.85%)</title><rect x="242.9" y="579.0" width="10.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="245.9" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (611 samples, 0.85%)</title><rect x="242.9" y="563.0" width="10.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="245.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (94 samples, 0.13%)</title><rect x="242.9" y="547.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="245.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (94 samples, 0.13%)</title><rect x="242.9" y="531.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="245.9" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$156/142789664.get$Lambda (94 samples, 0.13%)</title><rect x="242.9" y="515.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="245.9" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$156 (94 samples, 0.13%)</title><rect x="242.9" y="499.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="245.9" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (219 samples, 0.30%)</title><rect x="244.5" y="547.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="247.5" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$156/142789664.accept (219 samples, 0.30%)</title><rect x="244.5" y="531.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="247.5" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (219 samples, 0.30%)</title><rect x="244.5" y="515.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.5" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (219 samples, 0.30%)</title><rect x="244.5" y="499.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="247.5" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (219 samples, 0.30%)</title><rect x="244.5" y="483.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="247.5" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (219 samples, 0.30%)</title><rect x="244.5" y="467.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="247.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (219 samples, 0.30%)</title><rect x="244.5" y="451.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="247.5" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (219 samples, 0.30%)</title><rect x="244.5" y="435.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="247.5" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (219 samples, 0.30%)</title><rect x="244.5" y="419.0" width="3.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="247.5" y="430.0"></text>
</g>
<g>
<title>java/util/List.copyOf (161 samples, 0.22%)</title><rect x="248.1" y="547.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="251.1" y="558.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (161 samples, 0.22%)</title><rect x="248.1" y="531.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="251.1" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (102 samples, 0.14%)</title><rect x="248.1" y="515.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="251.1" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (102 samples, 0.14%)</title><rect x="248.1" y="499.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="251.1" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (102 samples, 0.14%)</title><rect x="248.1" y="483.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="251.1" y="494.0"></text>
</g>
<g>
<title>java/util/List.of (59 samples, 0.08%)</title><rect x="249.7" y="515.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="252.7" y="526.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (59 samples, 0.08%)</title><rect x="249.7" y="499.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="252.7" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (137 samples, 0.19%)</title><rect x="250.7" y="547.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="253.7" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (137 samples, 0.19%)</title><rect x="250.7" y="531.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="253.7" y="542.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (133 samples, 0.18%)</title><rect x="252.9" y="595.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="255.9" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (133 samples, 0.18%)</title><rect x="252.9" y="579.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="255.9" y="590.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (45 samples, 0.06%)</title><rect x="255.1" y="627.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="258.1" y="638.0"></text>
</g>
<g>
<title>java/util/Optional.of (45 samples, 0.06%)</title><rect x="255.1" y="611.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="258.1" y="622.0"></text>
</g>
<g>
<title>java.util.Optional (45 samples, 0.06%)</title><rect x="255.1" y="595.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="258.1" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.request.processor.EntitiesRequestProcessor$Stub (116 samples, 0.16%)</title><rect x="255.9" y="659.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="258.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.recordRange (492 samples, 0.68%)</title><rect x="257.8" y="659.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="260.8" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (153 samples, 0.21%)</title><rect x="257.8" y="643.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="260.8" y="654.0"></text>
</g>
<g>
<title>org.rocksdb.RocksIterator (50 samples, 0.07%)</title><rect x="257.8" y="627.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="260.8" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.&lt;init&gt; (103 samples, 0.14%)</title><rect x="258.6" y="627.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="261.6" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.&lt;init&gt; (103 samples, 0.14%)</title><rect x="258.6" y="611.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="261.6" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/RocksObject.&lt;init&gt; (103 samples, 0.14%)</title><rect x="258.6" y="595.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="261.6" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.&lt;init&gt; (103 samples, 0.14%)</title><rect x="258.6" y="579.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="261.6" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (28 samples, 0.04%)</title><rect x="258.6" y="563.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="261.6" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.&lt;init&gt; (75 samples, 0.10%)</title><rect x="259.0" y="563.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="262.0" y="574.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (75 samples, 0.10%)</title><rect x="259.0" y="547.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="262.0" y="558.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (75 samples, 0.10%)</title><rect x="259.0" y="531.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.0" y="542.0"></text>
</g>
<g>
<title>java.lang.ref.Finalizer (75 samples, 0.10%)</title><rect x="259.0" y="515.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="262.0" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.RocksDAOImpl$RocksRecordWithTimestampIterator (49 samples, 0.07%)</title><rect x="260.3" y="643.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="263.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordWithTimestampIterator.&lt;init&gt; (290 samples, 0.40%)</title><rect x="261.1" y="643.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="264.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksDAOIterator.&lt;init&gt; (290 samples, 0.40%)</title><rect x="261.1" y="627.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="264.1" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (74 samples, 0.10%)</title><rect x="261.1" y="611.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="264.1" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (74 samples, 0.10%)</title><rect x="261.1" y="595.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="264.1" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (74 samples, 0.10%)</title><rect x="261.1" y="579.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="264.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (100 samples, 0.14%)</title><rect x="262.3" y="611.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.3" y="622.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.05%)</title><rect x="262.3" y="595.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="265.3" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (61 samples, 0.08%)</title><rect x="262.9" y="595.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="265.9" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (61 samples, 0.08%)</title><rect x="262.9" y="579.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="265.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksDAOIterator.initIterator (116 samples, 0.16%)</title><rect x="263.9" y="611.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="266.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (116 samples, 0.16%)</title><rect x="263.9" y="595.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="266.9" y="606.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.05%)</title><rect x="263.9" y="579.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="266.9" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (81 samples, 0.11%)</title><rect x="264.5" y="579.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="267.5" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (81 samples, 0.11%)</title><rect x="264.5" y="563.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="267.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$ClusterNode.requestBuilder (4,594 samples, 6.39%)</title><rect x="265.8" y="659.0" width="75.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.8" y="670.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (467 samples, 0.65%)</title><rect x="265.8" y="643.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="268.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/537014553.invoke (314 samples, 0.44%)</title><rect x="265.8" y="627.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="268.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/656594080.invoke (314 samples, 0.44%)</title><rect x="265.8" y="611.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="268.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (314 samples, 0.44%)</title><rect x="265.8" y="595.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="268.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (56 samples, 0.08%)</title><rect x="265.8" y="579.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="268.8" y="590.0"></text>
</g>
<g>
<title>java.lang.String (56 samples, 0.08%)</title><rect x="265.8" y="563.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="268.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (258 samples, 0.36%)</title><rect x="266.7" y="579.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="269.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (258 samples, 0.36%)</title><rect x="266.7" y="563.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="269.7" y="574.0"></text>
</g>
<g>
<title>byte[] (254 samples, 0.35%)</title><rect x="266.7" y="547.0" width="4.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="269.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/671471369.invoke (153 samples, 0.21%)</title><rect x="271.0" y="627.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="274.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (153 samples, 0.21%)</title><rect x="271.0" y="611.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (153 samples, 0.21%)</title><rect x="271.0" y="595.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="274.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (153 samples, 0.21%)</title><rect x="271.0" y="579.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="274.0" y="590.0"></text>
</g>
<g>
<title>byte[] (153 samples, 0.21%)</title><rect x="271.0" y="563.0" width="2.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="274.0" y="574.0"></text>
</g>
<g>
<title>java/net/URI.create (1,276 samples, 1.77%)</title><rect x="273.5" y="643.0" width="20.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="276.5" y="654.0"></text>
</g>
<g>
<title>java.net.URI (262 samples, 0.36%)</title><rect x="273.5" y="627.0" width="4.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="276.5" y="638.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1,013 samples, 1.41%)</title><rect x="277.8" y="627.0" width="16.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="280.8" y="638.0"></text>
</g>
<g>
<title>java.net.URI$Parser (96 samples, 0.13%)</title><rect x="277.8" y="611.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="280.8" y="622.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (917 samples, 1.27%)</title><rect x="279.4" y="611.0" width="15.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (156 samples, 0.22%)</title><rect x="279.4" y="595.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="282.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (156 samples, 0.22%)</title><rect x="279.4" y="579.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.4" y="590.0"></text>
</g>
<g>
<title>java.lang.String (83 samples, 0.12%)</title><rect x="279.4" y="563.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="282.4" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (73 samples, 0.10%)</title><rect x="280.7" y="563.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="283.7" y="574.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.10%)</title><rect x="280.7" y="547.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="283.7" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (761 samples, 1.06%)</title><rect x="281.9" y="595.0" width="12.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="284.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (433 samples, 0.60%)</title><rect x="281.9" y="579.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="284.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (433 samples, 0.60%)</title><rect x="281.9" y="563.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="284.9" y="574.0"></text>
</g>
<g>
<title>java.lang.String (137 samples, 0.19%)</title><rect x="281.9" y="547.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="284.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (296 samples, 0.41%)</title><rect x="284.2" y="547.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="287.2" y="558.0"></text>
</g>
<g>
<title>byte[] (296 samples, 0.41%)</title><rect x="284.2" y="531.0" width="4.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="287.2" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (328 samples, 0.46%)</title><rect x="289.0" y="579.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="292.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (163 samples, 0.23%)</title><rect x="289.0" y="563.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (163 samples, 0.23%)</title><rect x="289.0" y="547.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.0" y="558.0"></text>
</g>
<g>
<title>java.lang.String (70 samples, 0.10%)</title><rect x="289.0" y="531.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="292.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (93 samples, 0.13%)</title><rect x="290.2" y="531.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.2" y="542.0"></text>
</g>
<g>
<title>byte[] (93 samples, 0.13%)</title><rect x="290.2" y="515.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="293.2" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (165 samples, 0.23%)</title><rect x="291.7" y="563.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="294.7" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (165 samples, 0.23%)</title><rect x="291.7" y="547.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="294.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (165 samples, 0.23%)</title><rect x="291.7" y="531.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="294.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (165 samples, 0.23%)</title><rect x="291.7" y="515.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="294.7" y="526.0"></text>
</g>
<g>
<title>java.lang.String (71 samples, 0.10%)</title><rect x="291.7" y="499.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="294.7" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (94 samples, 0.13%)</title><rect x="292.9" y="499.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="295.9" y="510.0"></text>
</g>
<g>
<title>byte[] (94 samples, 0.13%)</title><rect x="292.9" y="483.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="295.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (369 samples, 0.51%)</title><rect x="294.4" y="643.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="297.4" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (138 samples, 0.19%)</title><rect x="294.4" y="627.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="297.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (231 samples, 0.32%)</title><rect x="296.7" y="627.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="299.7" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (51 samples, 0.07%)</title><rect x="296.7" y="611.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="299.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (180 samples, 0.25%)</title><rect x="297.5" y="611.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="300.5" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (180 samples, 0.25%)</title><rect x="297.5" y="595.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="300.5" y="606.0"></text>
</g>
<g>
<title>java/time/Duration.ofMillis (68 samples, 0.09%)</title><rect x="300.5" y="643.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="303.5" y="654.0"></text>
</g>
<g>
<title>java/time/Duration.create (68 samples, 0.09%)</title><rect x="300.5" y="627.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="303.5" y="638.0"></text>
</g>
<g>
<title>java.time.Duration (68 samples, 0.09%)</title><rect x="300.5" y="611.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="303.5" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (332 samples, 0.46%)</title><rect x="301.6" y="643.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="304.6" y="654.0"></text>
</g>
<g>
<title>java/util/Set.spliterator (132 samples, 0.18%)</title><rect x="301.6" y="627.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="304.6" y="638.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (132 samples, 0.18%)</title><rect x="301.6" y="611.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="304.6" y="622.0"></text>
</g>
<g>
<title>java.util.Spliterators$IteratorSpliterator (132 samples, 0.18%)</title><rect x="301.6" y="595.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="304.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (200 samples, 0.28%)</title><rect x="303.7" y="627.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="306.7" y="638.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (200 samples, 0.28%)</title><rect x="303.7" y="611.0" width="3.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="306.7" y="622.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN.entrySet (52 samples, 0.07%)</title><rect x="307.0" y="643.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="310.0" y="654.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$MapN$1 (52 samples, 0.07%)</title><rect x="307.0" y="627.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="310.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.joining (179 samples, 0.25%)</title><rect x="307.9" y="643.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.joining (179 samples, 0.25%)</title><rect x="307.9" y="627.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="310.9" y="638.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (99 samples, 0.14%)</title><rect x="307.9" y="611.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="310.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (80 samples, 0.11%)</title><rect x="309.5" y="611.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="312.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (80 samples, 0.11%)</title><rect x="309.5" y="595.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="312.5" y="606.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$126/1405491392.get$Lambda (80 samples, 0.11%)</title><rect x="309.5" y="579.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="312.5" y="590.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$$Lambda$126 (80 samples, 0.11%)</title><rect x="309.5" y="563.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="312.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (1,593 samples, 2.21%)</title><rect x="310.8" y="643.0" width="26.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="313.8" y="654.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1,055 samples, 1.47%)</title><rect x="310.8" y="627.0" width="17.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="313.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1,055 samples, 1.47%)</title><rect x="310.8" y="611.0" width="17.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="313.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (943 samples, 1.31%)</title><rect x="310.8" y="595.0" width="15.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="313.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (880 samples, 1.22%)</title><rect x="310.8" y="579.0" width="14.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="313.8" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (80 samples, 0.11%)</title><rect x="310.8" y="563.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="313.8" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (80 samples, 0.11%)</title><rect x="310.8" y="547.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="313.8" y="558.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN$1.iterator (80 samples, 0.11%)</title><rect x="310.8" y="531.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="313.8" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$MapN$MapNIterator (80 samples, 0.11%)</title><rect x="310.8" y="515.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="313.8" y="526.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.forEachRemaining (673 samples, 0.94%)</title><rect x="312.1" y="563.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="315.1" y="574.0"></text>
</g>
<g>
<title>java/util/Iterator.forEachRemaining (673 samples, 0.94%)</title><rect x="312.1" y="547.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="315.1" y="558.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN$MapNIterator.next (158 samples, 0.22%)</title><rect x="312.1" y="531.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="315.1" y="542.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN$MapNIterator.next (158 samples, 0.22%)</title><rect x="312.1" y="515.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="315.1" y="526.0"></text>
</g>
<g>
<title>java.util.KeyValueHolder (158 samples, 0.22%)</title><rect x="312.1" y="499.0" width="2.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="315.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (515 samples, 0.72%)</title><rect x="314.7" y="531.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="317.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (162 samples, 0.23%)</title><rect x="314.7" y="515.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="317.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$132/202906813.accept (162 samples, 0.23%)</title><rect x="314.7" y="499.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="317.7" y="510.0"></text>
</g>
<g>
<title>java/util/StringJoiner.add (162 samples, 0.23%)</title><rect x="314.7" y="483.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="317.7" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (162 samples, 0.23%)</title><rect x="314.7" y="467.0" width="2.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="317.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$ClusterNode$$Lambda$120/1716626316.apply (353 samples, 0.49%)</title><rect x="317.4" y="515.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="320.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$ClusterNode.lambda$requestBuilder$0 (353 samples, 0.49%)</title><rect x="317.4" y="499.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="320.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (353 samples, 0.49%)</title><rect x="317.4" y="483.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="320.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (353 samples, 0.49%)</title><rect x="317.4" y="467.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="320.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1095088856.invoke (353 samples, 0.49%)</title><rect x="317.4" y="451.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="320.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (353 samples, 0.49%)</title><rect x="317.4" y="435.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="320.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (158 samples, 0.22%)</title><rect x="317.4" y="419.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="320.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String (158 samples, 0.22%)</title><rect x="317.4" y="403.0" width="2.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="320.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (195 samples, 0.27%)</title><rect x="320.0" y="419.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="323.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (195 samples, 0.27%)</title><rect x="320.0" y="403.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="323.0" y="414.0"></text>
</g>
<g>
<title>byte[] (195 samples, 0.27%)</title><rect x="320.0" y="387.0" width="3.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="323.0" y="398.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (127 samples, 0.18%)</title><rect x="323.2" y="563.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="326.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (127 samples, 0.18%)</title><rect x="323.2" y="547.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="326.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$126/1405491392.get (127 samples, 0.18%)</title><rect x="323.2" y="531.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="326.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$joining$11 (127 samples, 0.18%)</title><rect x="323.2" y="515.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="326.2" y="526.0"></text>
</g>
<g>
<title>java.util.StringJoiner (127 samples, 0.18%)</title><rect x="323.2" y="499.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="326.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (63 samples, 0.09%)</title><rect x="325.3" y="579.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="328.3" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (63 samples, 0.09%)</title><rect x="325.3" y="563.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="328.3" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (63 samples, 0.09%)</title><rect x="325.3" y="547.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="328.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (112 samples, 0.16%)</title><rect x="326.3" y="595.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (112 samples, 0.16%)</title><rect x="326.3" y="579.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.3" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (112 samples, 0.16%)</title><rect x="326.3" y="563.0" width="1.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="329.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$138/1323657491.apply (426 samples, 0.59%)</title><rect x="328.1" y="627.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="331.1" y="638.0"></text>
</g>
<g>
<title>java/util/StringJoiner.toString (426 samples, 0.59%)</title><rect x="328.1" y="611.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="331.1" y="622.0"></text>
</g>
<g>
<title>java/util/StringJoiner.compactElts (426 samples, 0.59%)</title><rect x="328.1" y="595.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="331.1" y="606.0"></text>
</g>
<g>
<title>char[] (220 samples, 0.31%)</title><rect x="328.1" y="579.0" width="3.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="331.1" y="590.0"></text>
</g>
<g>
<title>java.lang.String (80 samples, 0.11%)</title><rect x="331.7" y="579.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="334.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (126 samples, 0.18%)</title><rect x="333.0" y="579.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="336.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (126 samples, 0.18%)</title><rect x="333.0" y="563.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (126 samples, 0.18%)</title><rect x="333.0" y="547.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="336.0" y="558.0"></text>
</g>
<g>
<title>byte[] (126 samples, 0.18%)</title><rect x="333.0" y="531.0" width="2.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="336.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (112 samples, 0.16%)</title><rect x="335.1" y="627.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="338.1" y="638.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (112 samples, 0.16%)</title><rect x="335.1" y="611.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="338.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (258 samples, 0.36%)</title><rect x="336.9" y="643.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="339.9" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (236 samples, 0.33%)</title><rect x="336.9" y="627.0" width="3.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="339.9" y="638.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (22 samples, 0.03%)</title><rect x="340.8" y="627.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="343.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter.allNodes (383 samples, 0.53%)</title><rect x="341.2" y="659.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="344.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/topology/ConsistentHashTopology.allNodes (383 samples, 0.53%)</title><rect x="341.2" y="643.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="344.2" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (335 samples, 0.47%)</title><rect x="341.2" y="627.0" width="5.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="344.2" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (48 samples, 0.07%)</title><rect x="346.7" y="627.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="349.7" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (48 samples, 0.07%)</title><rect x="346.7" y="611.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="349.7" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (48 samples, 0.07%)</title><rect x="346.7" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="349.7" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (48 samples, 0.07%)</title><rect x="346.7" y="579.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="349.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/RequestUtils.setRequestFromService (257 samples, 0.36%)</title><rect x="347.5" y="659.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="350.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (257 samples, 0.36%)</title><rect x="347.5" y="643.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="350.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (257 samples, 0.36%)</title><rect x="347.5" y="627.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="350.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (257 samples, 0.36%)</title><rect x="347.5" y="611.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="350.5" y="622.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (257 samples, 0.36%)</title><rect x="347.5" y="595.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="350.5" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (100 samples, 0.14%)</title><rect x="347.5" y="579.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="350.5" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (100 samples, 0.14%)</title><rect x="347.5" y="563.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="350.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$143/2089837477.apply (157 samples, 0.22%)</title><rect x="349.1" y="579.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="352.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (157 samples, 0.22%)</title><rect x="349.1" y="563.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="352.1" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (63 samples, 0.09%)</title><rect x="349.1" y="547.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="352.1" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (94 samples, 0.13%)</title><rect x="350.1" y="547.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="353.1" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (94 samples, 0.13%)</title><rect x="350.1" y="531.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="353.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub.&lt;init&gt; (571 samples, 0.79%)</title><rect x="351.7" y="659.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="354.7" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (62 samples, 0.09%)</title><rect x="351.7" y="643.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="354.7" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (158 samples, 0.22%)</title><rect x="352.7" y="643.0" width="2.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="355.7" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (35 samples, 0.05%)</title><rect x="355.3" y="643.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="358.3" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (165 samples, 0.23%)</title><rect x="355.9" y="643.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="358.9" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (129 samples, 0.18%)</title><rect x="355.9" y="627.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="358.9" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (36 samples, 0.05%)</title><rect x="358.0" y="627.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="361.0" y="638.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.05%)</title><rect x="358.0" y="611.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="361.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (151 samples, 0.21%)</title><rect x="358.6" y="643.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="361.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (151 samples, 0.21%)</title><rect x="358.6" y="627.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="361.6" y="638.0"></text>
</g>
<g>
<title>java/util/TimerThread.run (200 samples, 0.28%)</title><rect x="361.0" y="771.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="364.0" y="782.0"></text>
</g>
<g>
<title>java/util/TimerThread.mainLoop (200 samples, 0.28%)</title><rect x="361.0" y="755.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="364.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceMetrics$InfoTask.run (200 samples, 0.28%)</title><rect x="361.0" y="739.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="364.0" y="750.0"></text>
</g>
<g>
<title>org/apache/commons/logging/impl/Log4JLogger.info (128 samples, 0.18%)</title><rect x="361.0" y="723.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.0" y="734.0"></text>
</g>
<g>
<title>org/apache/log4j/Category.log (128 samples, 0.18%)</title><rect x="361.0" y="707.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="364.0" y="718.0"></text>
</g>
<g>
<title>org/apache/log4j/Category.forcedLog (128 samples, 0.18%)</title><rect x="361.0" y="691.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="364.0" y="702.0"></text>
</g>
<g>
<title>org/apache/log4j/Category.callAppenders (128 samples, 0.18%)</title><rect x="361.0" y="675.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="364.0" y="686.0"></text>
</g>
<g>
<title>org/apache/log4j/helpers/AppenderAttachableImpl.appendLoopOnAppenders (128 samples, 0.18%)</title><rect x="361.0" y="659.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="364.0" y="670.0"></text>
</g>
<g>
<title>org/apache/log4j/AppenderSkeleton.doAppend (128 samples, 0.18%)</title><rect x="361.0" y="643.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="364.0" y="654.0"></text>
</g>
<g>
<title>org/apache/log4j/WriterAppender.append (128 samples, 0.18%)</title><rect x="361.0" y="627.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="364.0" y="638.0"></text>
</g>
<g>
<title>org/apache/log4j/WriterAppender.subAppend (128 samples, 0.18%)</title><rect x="361.0" y="611.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="364.0" y="622.0"></text>
</g>
<g>
<title>org/apache/log4j/PatternLayout.format (110 samples, 0.15%)</title><rect x="361.0" y="595.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.0" y="606.0"></text>
</g>
<g>
<title>org/apache/log4j/helpers/PatternConverter.format (91 samples, 0.13%)</title><rect x="361.2" y="579.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="364.2" y="590.0"></text>
</g>
<g>
<title>org/apache/log4j/helpers/PatternParser$LocationPatternConverter.convert (73 samples, 0.10%)</title><rect x="361.5" y="563.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="364.5" y="574.0"></text>
</g>
<g>
<title>org/apache/log4j/spi/LoggingEvent.getLocationInformation (73 samples, 0.10%)</title><rect x="361.5" y="547.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="364.5" y="558.0"></text>
</g>
<g>
<title>org/apache/log4j/spi/LocationInfo.&lt;init&gt; (73 samples, 0.10%)</title><rect x="361.5" y="531.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="364.5" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.printStackTrace (73 samples, 0.10%)</title><rect x="361.5" y="515.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="364.5" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.printStackTrace (73 samples, 0.10%)</title><rect x="361.5" y="499.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (19 samples, 0.03%)</title><rect x="361.6" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="364.6" y="494.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (18 samples, 0.03%)</title><rect x="361.6" y="467.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="364.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.toString (18 samples, 0.03%)</title><rect x="361.6" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="364.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (18 samples, 0.03%)</title><rect x="361.6" y="435.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="364.6" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (18 samples, 0.03%)</title><rect x="361.6" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="364.6" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (18 samples, 0.03%)</title><rect x="361.6" y="403.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="364.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.03%)</title><rect x="361.6" y="387.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="364.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (27 samples, 0.04%)</title><rect x="362.0" y="483.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="365.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (27 samples, 0.04%)</title><rect x="362.0" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="365.0" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.03%)</title><rect x="362.1" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="365.1" y="462.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.03%)</title><rect x="362.1" y="435.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="365.1" y="446.0"></text>
</g>
<g>
<title>java/lang/Throwable.getOurStackTrace (18 samples, 0.03%)</title><rect x="362.4" y="483.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="365.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.of (18 samples, 0.03%)</title><rect x="362.4" y="467.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="365.4" y="478.0"></text>
</g>
<g>
<title>org/apache/log4j/helpers/QuietWriter.write (18 samples, 0.03%)</title><rect x="362.8" y="595.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="365.8" y="606.0"></text>
</g>
<g>
<title>java/io/Writer.write (18 samples, 0.03%)</title><rect x="362.8" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="365.8" y="590.0"></text>
</g>
<g>
<title>java/io/OutputStreamWriter.write (18 samples, 0.03%)</title><rect x="362.8" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="365.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.write (18 samples, 0.03%)</title><rect x="362.8" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="365.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceMetrics.getInfoString (72 samples, 0.10%)</title><rect x="363.1" y="723.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="366.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceMetrics.makeData (27 samples, 0.04%)</title><rect x="363.4" y="707.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="366.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.format (27 samples, 0.04%)</title><rect x="363.4" y="691.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="366.4" y="702.0"></text>
</g>
<g>
<title>java/util/Formatter.format (27 samples, 0.04%)</title><rect x="363.4" y="675.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="366.4" y="686.0"></text>
</g>
<g>
<title>java/util/Formatter.format (27 samples, 0.04%)</title><rect x="363.4" y="659.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="366.4" y="670.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (27 samples, 0.04%)</title><rect x="363.4" y="643.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="366.4" y="654.0"></text>
</g>
<g>
<title>java.util.Formatter$FixedString (18 samples, 0.03%)</title><rect x="363.4" y="627.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="366.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceMetrics.makeHeader (27 samples, 0.04%)</title><rect x="363.9" y="707.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="366.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.format (18 samples, 0.03%)</title><rect x="364.0" y="691.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="367.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (27,929 samples, 38.82%)</title><rect x="364.3" y="771.0" width="458.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="367.3" y="782.0">java/util/concurrent/ForkJoinWorkerThread.run</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (27,929 samples, 38.82%)</title><rect x="364.3" y="755.0" width="458.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="367.3" y="766.0">java/util/concurrent/ForkJoinPool.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (27,929 samples, 38.82%)</title><rect x="364.3" y="739.0" width="458.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.3" y="750.0">java/util/concurrent/ForkJoinPool.scan</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (27,929 samples, 38.82%)</title><rect x="364.3" y="723.0" width="458.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="367.3" y="734.0">java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (27,929 samples, 38.82%)</title><rect x="364.3" y="707.0" width="458.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="367.3" y="718.0">java/util/concurrent/ForkJoinTask.doExec</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (5,291 samples, 7.35%)</title><rect x="364.3" y="691.0" width="86.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="367.3" y="702.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (5,291 samples, 7.35%)</title><rect x="364.3" y="675.0" width="86.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="367.3" y="686.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5,291 samples, 7.35%)</title><rect x="364.3" y="659.0" width="86.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="367.3" y="670.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (5,291 samples, 7.35%)</title><rect x="364.3" y="643.0" width="86.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="367.3" y="654.0">java/util/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (21 samples, 0.03%)</title><rect x="364.3" y="627.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="367.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$179/16826935.apply (5,270 samples, 7.33%)</title><rect x="364.7" y="627.0" width="86.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="367.7" y="638.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (5,270 samples, 7.33%)</title><rect x="364.7" y="611.0" width="86.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="367.7" y="622.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (5,270 samples, 7.33%)</title><rect x="364.7" y="595.0" width="86.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="367.7" y="606.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.04%)</title><rect x="364.7" y="579.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.04%)</title><rect x="364.7" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="367.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$307/1458980780.get$Lambda (19 samples, 0.03%)</title><rect x="364.7" y="547.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="367.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$307 (19 samples, 0.03%)</title><rect x="364.7" y="531.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="367.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (43 samples, 0.06%)</title><rect x="365.1" y="579.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="368.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (43 samples, 0.06%)</title><rect x="365.1" y="563.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="368.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (25 samples, 0.03%)</title><rect x="365.1" y="547.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="368.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.03%)</title><rect x="365.5" y="547.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="368.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.03%)</title><rect x="365.5" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="368.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.03%)</title><rect x="365.5" y="515.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="368.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (105 samples, 0.15%)</title><rect x="365.8" y="579.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (105 samples, 0.15%)</title><rect x="365.8" y="563.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="368.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (64 samples, 0.09%)</title><rect x="365.8" y="547.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="368.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.06%)</title><rect x="366.9" y="547.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="369.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.06%)</title><rect x="366.9" y="531.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="369.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.06%)</title><rect x="366.9" y="515.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="369.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (4,968 samples, 6.91%)</title><rect x="367.6" y="579.0" width="81.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="370.6" y="590.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (4,968 samples, 6.91%)</title><rect x="367.6" y="563.0" width="81.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.6" y="574.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (4,968 samples, 6.91%)</title><rect x="367.6" y="547.0" width="81.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.6" y="558.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 0.06%)</title><rect x="367.6" y="531.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="370.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 0.06%)</title><rect x="367.6" y="515.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="370.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$208/2050541168.get$Lambda (20 samples, 0.03%)</title><rect x="367.8" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="370.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$208 (20 samples, 0.03%)</title><rect x="367.8" y="483.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="370.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3,369 samples, 4.68%)</title><rect x="368.3" y="531.0" width="55.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="371.3" y="542.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3,369 samples, 4.68%)</title><rect x="368.3" y="515.0" width="55.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="371.3" y="526.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3,352 samples, 4.66%)</title><rect x="368.3" y="499.0" width="55.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="371.3" y="510.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$281/2106426509.apply (3,352 samples, 4.66%)</title><rect x="368.3" y="483.0" width="55.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="371.3" y="494.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (3,352 samples, 4.66%)</title><rect x="368.3" y="467.0" width="55.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="371.3" y="478.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3,352 samples, 4.66%)</title><rect x="368.3" y="451.0" width="55.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.3" y="462.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$208/2050541168.apply (3,352 samples, 4.66%)</title><rect x="368.3" y="435.0" width="55.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="371.3" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (3,352 samples, 4.66%)</title><rect x="368.3" y="419.0" width="55.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="371.3" y="430.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.06%)</title><rect x="368.3" y="403.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="371.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.06%)</title><rect x="368.3" y="387.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="371.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$306/156009212.get$Lambda (43 samples, 0.06%)</title><rect x="368.3" y="371.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="371.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$306 (43 samples, 0.06%)</title><rect x="368.3" y="355.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="371.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (61 samples, 0.08%)</title><rect x="369.0" y="403.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="372.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (61 samples, 0.08%)</title><rect x="369.0" y="387.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="372.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (30 samples, 0.04%)</title><rect x="369.0" y="371.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="372.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.04%)</title><rect x="369.6" y="371.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="372.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.04%)</title><rect x="369.6" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="372.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.04%)</title><rect x="369.6" y="339.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="372.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (46 samples, 0.06%)</title><rect x="370.0" y="403.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="373.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (46 samples, 0.06%)</title><rect x="370.0" y="387.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="373.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (31 samples, 0.04%)</title><rect x="370.0" y="371.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="373.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (3,202 samples, 4.45%)</title><rect x="370.8" y="403.0" width="52.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="373.8" y="414.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.02%)</title><rect x="370.8" y="387.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="373.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.02%)</title><rect x="370.8" y="371.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="373.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2,827 samples, 3.93%)</title><rect x="371.0" y="387.0" width="46.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="374.0" y="398.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2,827 samples, 3.93%)</title><rect x="371.0" y="371.0" width="46.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="374.0" y="382.0">java..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (25 samples, 0.03%)</title><rect x="371.0" y="355.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="374.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$303/2073682402.apply (2,747 samples, 3.82%)</title><rect x="371.5" y="355.0" width="45.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.5" y="366.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (2,747 samples, 3.82%)</title><rect x="371.5" y="339.0" width="45.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.5" y="350.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (67 samples, 0.09%)</title><rect x="371.6" y="323.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="374.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (67 samples, 0.09%)</title><rect x="371.6" y="307.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (37 samples, 0.05%)</title><rect x="371.6" y="291.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="374.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.04%)</title><rect x="372.2" y="291.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="375.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.04%)</title><rect x="372.2" y="275.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="375.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (30 samples, 0.04%)</title><rect x="372.2" y="259.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="375.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (37 samples, 0.05%)</title><rect x="373.0" y="323.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="376.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (25 samples, 0.03%)</title><rect x="373.2" y="307.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="376.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (25 samples, 0.03%)</title><rect x="373.2" y="291.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="376.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (25 samples, 0.03%)</title><rect x="373.2" y="275.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="376.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (25 samples, 0.03%)</title><rect x="373.2" y="259.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="376.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (25 samples, 0.03%)</title><rect x="373.2" y="243.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.2" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (25 samples, 0.03%)</title><rect x="373.2" y="227.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="376.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (52 samples, 0.07%)</title><rect x="373.6" y="323.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="376.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (52 samples, 0.07%)</title><rect x="373.6" y="307.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="376.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (22 samples, 0.03%)</title><rect x="373.6" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="376.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (22 samples, 0.03%)</title><rect x="373.6" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="376.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (22 samples, 0.03%)</title><rect x="373.6" y="259.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="376.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (22 samples, 0.03%)</title><rect x="373.6" y="243.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="376.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (30 samples, 0.04%)</title><rect x="373.9" y="291.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="376.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (30 samples, 0.04%)</title><rect x="373.9" y="275.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (20 samples, 0.03%)</title><rect x="373.9" y="259.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="376.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (2,565 samples, 3.57%)</title><rect x="374.4" y="323.0" width="42.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="377.4" y="334.0">jdk/..</text>
</g>
<g>
<title>java.lang.StringBuilder (17 samples, 0.02%)</title><rect x="374.4" y="307.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="377.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (268 samples, 0.37%)</title><rect x="374.7" y="307.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="377.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (268 samples, 0.37%)</title><rect x="374.7" y="291.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="377.7" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (268 samples, 0.37%)</title><rect x="374.7" y="275.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="377.7" y="286.0"></text>
</g>
<g>
<title>byte[] (209 samples, 0.29%)</title><rect x="374.7" y="259.0" width="3.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="377.7" y="270.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.08%)</title><rect x="378.1" y="259.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="381.1" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (49 samples, 0.07%)</title><rect x="379.1" y="307.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.1" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (49 samples, 0.07%)</title><rect x="379.1" y="291.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="382.1" y="302.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.07%)</title><rect x="379.1" y="275.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="382.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (241 samples, 0.33%)</title><rect x="379.9" y="307.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (241 samples, 0.33%)</title><rect x="379.9" y="291.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.9" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (241 samples, 0.33%)</title><rect x="379.9" y="275.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="382.9" y="286.0"></text>
</g>
<g>
<title>byte[] (200 samples, 0.28%)</title><rect x="379.9" y="259.0" width="3.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="382.9" y="270.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.06%)</title><rect x="383.2" y="259.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="386.2" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (34 samples, 0.05%)</title><rect x="383.9" y="307.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="386.9" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (34 samples, 0.05%)</title><rect x="383.9" y="291.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="386.9" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (34 samples, 0.05%)</title><rect x="383.9" y="275.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="386.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (1,734 samples, 2.41%)</title><rect x="384.7" y="307.0" width="28.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="387.7" y="318.0">jd..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (436 samples, 0.61%)</title><rect x="384.7" y="291.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="387.7" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (436 samples, 0.61%)</title><rect x="384.7" y="275.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="387.7" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (436 samples, 0.61%)</title><rect x="384.7" y="259.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="387.7" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (436 samples, 0.61%)</title><rect x="384.7" y="243.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.7" y="254.0"></text>
</g>
<g>
<title>byte[] (354 samples, 0.49%)</title><rect x="384.7" y="227.0" width="5.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="387.7" y="238.0"></text>
</g>
<g>
<title>byte[] (82 samples, 0.11%)</title><rect x="390.5" y="227.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="393.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (609 samples, 0.85%)</title><rect x="392.0" y="291.0" width="10.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="395.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (324 samples, 0.45%)</title><rect x="392.0" y="275.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="395.0" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (324 samples, 0.45%)</title><rect x="392.0" y="259.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.0" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (324 samples, 0.45%)</title><rect x="392.0" y="243.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="395.0" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (324 samples, 0.45%)</title><rect x="392.0" y="227.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="395.0" y="238.0"></text>
</g>
<g>
<title>byte[] (284 samples, 0.39%)</title><rect x="392.0" y="211.0" width="4.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="395.0" y="222.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.06%)</title><rect x="396.7" y="211.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="399.7" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (41 samples, 0.06%)</title><rect x="397.4" y="275.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="400.4" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (41 samples, 0.06%)</title><rect x="397.4" y="259.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="400.4" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (41 samples, 0.06%)</title><rect x="397.4" y="243.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="400.4" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (41 samples, 0.06%)</title><rect x="397.4" y="227.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="400.4" y="238.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (64 samples, 0.09%)</title><rect x="398.0" y="275.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="401.0" y="286.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (34 samples, 0.05%)</title><rect x="398.0" y="259.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="401.0" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (30 samples, 0.04%)</title><rect x="398.6" y="259.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="401.6" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (30 samples, 0.04%)</title><rect x="398.6" y="243.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="401.6" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$321/1262751266.test (180 samples, 0.25%)</title><rect x="399.1" y="275.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="402.1" y="286.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (180 samples, 0.25%)</title><rect x="399.1" y="259.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="402.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$33/660879561.test (180 samples, 0.25%)</title><rect x="399.1" y="243.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="402.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (180 samples, 0.25%)</title><rect x="399.1" y="227.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="402.1" y="238.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$22/79290965.test (180 samples, 0.25%)</title><rect x="399.1" y="211.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="402.1" y="222.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (180 samples, 0.25%)</title><rect x="399.1" y="195.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="402.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$21/508198356.test (180 samples, 0.25%)</title><rect x="399.1" y="179.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="402.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (180 samples, 0.25%)</title><rect x="399.1" y="163.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="402.1" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (180 samples, 0.25%)</title><rect x="399.1" y="147.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="402.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (180 samples, 0.25%)</title><rect x="399.1" y="131.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="402.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String (85 samples, 0.12%)</title><rect x="399.1" y="115.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="402.1" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (95 samples, 0.13%)</title><rect x="400.5" y="115.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="403.5" y="126.0"></text>
</g>
<g>
<title>byte[] (95 samples, 0.13%)</title><rect x="400.5" y="99.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="403.5" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (676 samples, 0.94%)</title><rect x="402.0" y="291.0" width="11.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="405.0" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (676 samples, 0.94%)</title><rect x="402.0" y="275.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="405.0" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (676 samples, 0.94%)</title><rect x="402.0" y="259.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="405.0" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap (48 samples, 0.07%)</title><rect x="402.4" y="243.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="405.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.05%)</title><rect x="403.3" y="243.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="406.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.05%)</title><rect x="403.3" y="227.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="406.3" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/1966280024.get$Lambda (34 samples, 0.05%)</title><rect x="403.3" y="211.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="406.3" y="222.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$151 (34 samples, 0.05%)</title><rect x="403.3" y="195.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="406.3" y="206.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (17 samples, 0.02%)</title><rect x="403.9" y="243.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="406.9" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (17 samples, 0.02%)</title><rect x="403.9" y="227.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="406.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (502 samples, 0.70%)</title><rect x="404.2" y="243.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="407.2" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/1966280024.accept (502 samples, 0.70%)</title><rect x="404.2" y="227.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="407.2" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (502 samples, 0.70%)</title><rect x="404.2" y="211.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (85 samples, 0.12%)</title><rect x="404.2" y="195.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="407.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (85 samples, 0.12%)</title><rect x="404.2" y="179.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="407.2" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$156/142789664.get$Lambda (85 samples, 0.12%)</title><rect x="404.2" y="163.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="407.2" y="174.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$156 (85 samples, 0.12%)</title><rect x="404.2" y="147.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="407.2" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (35 samples, 0.05%)</title><rect x="405.6" y="195.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="408.6" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$156/142789664.accept (35 samples, 0.05%)</title><rect x="405.6" y="179.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="408.6" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (35 samples, 0.05%)</title><rect x="405.6" y="163.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="408.6" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (35 samples, 0.05%)</title><rect x="405.6" y="147.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="408.6" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (35 samples, 0.05%)</title><rect x="405.6" y="131.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="408.6" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (35 samples, 0.05%)</title><rect x="405.6" y="115.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="408.6" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (35 samples, 0.05%)</title><rect x="405.6" y="99.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="408.6" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (35 samples, 0.05%)</title><rect x="405.6" y="83.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="408.6" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (35 samples, 0.05%)</title><rect x="405.6" y="67.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="408.6" y="78.0"></text>
</g>
<g>
<title>java/util/List.copyOf (216 samples, 0.30%)</title><rect x="406.1" y="195.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="409.1" y="206.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (216 samples, 0.30%)</title><rect x="406.1" y="179.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="409.1" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (109 samples, 0.15%)</title><rect x="406.1" y="163.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="409.1" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (109 samples, 0.15%)</title><rect x="406.1" y="147.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="409.1" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (109 samples, 0.15%)</title><rect x="406.1" y="131.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="409.1" y="142.0"></text>
</g>
<g>
<title>java/util/List.of (107 samples, 0.15%)</title><rect x="407.9" y="163.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="410.9" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (107 samples, 0.15%)</title><rect x="407.9" y="147.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="410.9" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (166 samples, 0.23%)</title><rect x="409.7" y="195.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="412.7" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (166 samples, 0.23%)</title><rect x="409.7" y="179.0" width="2.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="412.7" y="190.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (43 samples, 0.06%)</title><rect x="412.4" y="243.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.4" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap (43 samples, 0.06%)</title><rect x="412.4" y="227.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="415.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (54 samples, 0.08%)</title><rect x="413.1" y="307.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="416.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 0.06%)</title><rect x="413.3" y="291.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="416.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (41 samples, 0.06%)</title><rect x="413.3" y="275.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="416.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1095088856.invoke (41 samples, 0.06%)</title><rect x="413.3" y="259.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="416.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 0.06%)</title><rect x="413.3" y="243.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="416.3" y="254.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (18 samples, 0.03%)</title><rect x="413.3" y="227.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="416.3" y="238.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.03%)</title><rect x="413.3" y="211.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="416.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (23 samples, 0.03%)</title><rect x="413.6" y="227.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="416.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (23 samples, 0.03%)</title><rect x="413.6" y="211.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="416.6" y="222.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.03%)</title><rect x="413.6" y="195.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="416.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (47 samples, 0.07%)</title><rect x="414.0" y="307.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="417.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (47 samples, 0.07%)</title><rect x="414.0" y="291.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="417.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (47 samples, 0.07%)</title><rect x="414.0" y="275.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="417.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (47 samples, 0.07%)</title><rect x="414.0" y="259.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1095088856.invoke (47 samples, 0.07%)</title><rect x="414.0" y="243.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (47 samples, 0.07%)</title><rect x="414.0" y="227.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (36 samples, 0.05%)</title><rect x="414.2" y="211.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (36 samples, 0.05%)</title><rect x="414.2" y="195.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="417.2" y="206.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.05%)</title><rect x="414.2" y="179.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="417.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (106 samples, 0.15%)</title><rect x="414.8" y="307.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="417.8" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (35 samples, 0.05%)</title><rect x="414.8" y="291.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="417.8" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (22 samples, 0.03%)</title><rect x="415.3" y="291.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="418.3" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.03%)</title><rect x="415.3" y="275.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="418.3" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (49 samples, 0.07%)</title><rect x="415.7" y="291.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="418.7" y="302.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (49 samples, 0.07%)</title><rect x="415.7" y="275.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="418.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (55 samples, 0.08%)</title><rect x="416.5" y="355.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="419.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (55 samples, 0.08%)</title><rect x="416.5" y="339.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (55 samples, 0.08%)</title><rect x="416.5" y="323.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="419.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (66 samples, 0.09%)</title><rect x="417.4" y="387.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="420.4" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.04%)</title><rect x="418.5" y="387.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="421.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (267 samples, 0.37%)</title><rect x="418.9" y="387.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="421.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.02%)</title><rect x="418.9" y="371.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="421.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.02%)</title><rect x="418.9" y="355.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="421.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (38 samples, 0.05%)</title><rect x="419.2" y="371.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="422.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (25 samples, 0.03%)</title><rect x="419.8" y="371.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="422.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (23 samples, 0.03%)</title><rect x="420.2" y="371.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="423.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (69 samples, 0.10%)</title><rect x="420.6" y="371.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="423.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (69 samples, 0.10%)</title><rect x="420.6" y="355.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="423.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (69 samples, 0.10%)</title><rect x="420.6" y="339.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="423.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (69 samples, 0.10%)</title><rect x="420.6" y="323.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="423.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (69 samples, 0.10%)</title><rect x="420.6" y="307.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="423.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (69 samples, 0.10%)</title><rect x="420.6" y="291.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="423.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$272/309565785.run (69 samples, 0.10%)</title><rect x="420.6" y="275.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="423.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (69 samples, 0.10%)</title><rect x="420.6" y="259.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (69 samples, 0.10%)</title><rect x="420.6" y="243.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="423.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.04%)</title><rect x="420.6" y="227.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="423.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.04%)</title><rect x="420.6" y="211.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="423.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$296/1194036443.get$Lambda (16 samples, 0.02%)</title><rect x="420.8" y="195.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="423.8" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$296 (16 samples, 0.02%)</title><rect x="420.8" y="179.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="423.8" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (22 samples, 0.03%)</title><rect x="421.1" y="227.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="424.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (20 samples, 0.03%)</title><rect x="421.4" y="227.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="424.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (20 samples, 0.03%)</title><rect x="421.4" y="211.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (69 samples, 0.10%)</title><rect x="421.7" y="371.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="424.7" y="382.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (16 samples, 0.02%)</title><rect x="421.7" y="355.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="424.7" y="366.0"></text>
</g>
<g>
<title>java.util.HashMap (24 samples, 0.03%)</title><rect x="422.0" y="355.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="425.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (29 samples, 0.04%)</title><rect x="422.4" y="355.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="425.4" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (29 samples, 0.04%)</title><rect x="422.4" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="425.4" y="350.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.04%)</title><rect x="422.4" y="323.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="425.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (26 samples, 0.04%)</title><rect x="422.9" y="371.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="425.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.04%)</title><rect x="422.9" y="355.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="425.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.02%)</title><rect x="423.3" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="426.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.02%)</title><rect x="423.3" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="426.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.02%)</title><rect x="423.3" y="467.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="426.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (48 samples, 0.07%)</title><rect x="423.6" y="531.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="426.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (48 samples, 0.07%)</title><rect x="423.6" y="515.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="426.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (18 samples, 0.03%)</title><rect x="423.6" y="499.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="426.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.04%)</title><rect x="423.9" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="426.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.04%)</title><rect x="423.9" y="483.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="426.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (30 samples, 0.04%)</title><rect x="423.9" y="467.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="426.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,505 samples, 2.09%)</title><rect x="424.4" y="531.0" width="24.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="427.4" y="542.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.03%)</title><rect x="424.4" y="515.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="427.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.03%)</title><rect x="424.4" y="499.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="427.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (55 samples, 0.08%)</title><rect x="424.7" y="515.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="427.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (55 samples, 0.08%)</title><rect x="424.7" y="499.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="427.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$279/56657639.apply (28 samples, 0.04%)</title><rect x="424.7" y="483.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="427.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (28 samples, 0.04%)</title><rect x="424.7" y="467.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="427.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (28 samples, 0.04%)</title><rect x="424.7" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="427.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.04%)</title><rect x="424.7" y="435.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="427.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.04%)</title><rect x="425.2" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="428.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.04%)</title><rect x="425.2" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="428.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.04%)</title><rect x="425.2" y="451.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="428.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (16 samples, 0.02%)</title><rect x="425.6" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="428.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (16 samples, 0.02%)</title><rect x="425.6" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="428.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.02%)</title><rect x="425.6" y="483.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="428.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.02%)</title><rect x="425.6" y="467.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="428.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.02%)</title><rect x="425.6" y="451.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="428.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,414 samples, 1.97%)</title><rect x="425.9" y="515.0" width="23.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="428.9" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,320 samples, 1.83%)</title><rect x="426.0" y="499.0" width="21.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="429.0" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,320 samples, 1.83%)</title><rect x="426.0" y="483.0" width="21.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="429.0" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,305 samples, 1.81%)</title><rect x="426.0" y="467.0" width="21.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.0" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$241/1594368192.apply (1,305 samples, 1.81%)</title><rect x="426.0" y="451.0" width="21.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="429.0" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (1,305 samples, 1.81%)</title><rect x="426.0" y="435.0" width="21.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.0" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (1,305 samples, 1.81%)</title><rect x="426.0" y="419.0" width="21.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="429.0" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (538 samples, 0.75%)</title><rect x="426.2" y="403.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="429.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (538 samples, 0.75%)</title><rect x="426.2" y="387.0" width="8.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (538 samples, 0.75%)</title><rect x="426.2" y="371.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$273/703382578.apply (513 samples, 0.71%)</title><rect x="426.2" y="355.0" width="8.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="429.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (513 samples, 0.71%)</title><rect x="426.2" y="339.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="429.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (513 samples, 0.71%)</title><rect x="426.2" y="323.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="429.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (513 samples, 0.71%)</title><rect x="426.2" y="307.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="429.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (330 samples, 0.46%)</title><rect x="426.2" y="291.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="429.2" y="302.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (89 samples, 0.12%)</title><rect x="426.2" y="275.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="429.2" y="286.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.02%)</title><rect x="426.2" y="259.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="429.2" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (42 samples, 0.06%)</title><rect x="426.5" y="259.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="429.5" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (42 samples, 0.06%)</title><rect x="426.5" y="243.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="429.5" y="254.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.06%)</title><rect x="426.5" y="227.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="429.5" y="238.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (30 samples, 0.04%)</title><rect x="427.2" y="259.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.2" y="270.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.04%)</title><rect x="427.2" y="243.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="430.2" y="254.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (18 samples, 0.03%)</title><rect x="427.7" y="275.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="430.7" y="286.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (18 samples, 0.03%)</title><rect x="427.7" y="259.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="430.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (164 samples, 0.23%)</title><rect x="428.0" y="275.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="431.0" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (23 samples, 0.03%)</title><rect x="428.0" y="259.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="431.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (121 samples, 0.17%)</title><rect x="428.4" y="259.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="431.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (121 samples, 0.17%)</title><rect x="428.4" y="243.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="431.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1943325854.linkToTargetMethod (93 samples, 0.13%)</title><rect x="428.4" y="227.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="431.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (93 samples, 0.13%)</title><rect x="428.4" y="211.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="431.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$17/1411892748.get$Lambda (93 samples, 0.13%)</title><rect x="428.4" y="195.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="431.4" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$17 (93 samples, 0.13%)</title><rect x="428.4" y="179.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="431.4" y="190.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (28 samples, 0.04%)</title><rect x="429.9" y="227.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="432.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$17/1411892748.run (28 samples, 0.04%)</title><rect x="429.9" y="211.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="432.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (28 samples, 0.04%)</title><rect x="429.9" y="195.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="432.9" y="206.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (28 samples, 0.04%)</title><rect x="429.9" y="179.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="432.9" y="190.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (28 samples, 0.04%)</title><rect x="429.9" y="163.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.9" y="174.0"></text>
</g>
<g>
<title>java.lang.Integer (28 samples, 0.04%)</title><rect x="429.9" y="147.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="432.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (20 samples, 0.03%)</title><rect x="430.4" y="259.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="433.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (20 samples, 0.03%)</title><rect x="430.4" y="243.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="433.4" y="254.0"></text>
</g>
<g>
<title>int[] (20 samples, 0.03%)</title><rect x="430.4" y="227.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="433.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (59 samples, 0.08%)</title><rect x="430.7" y="275.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="433.7" y="286.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.05%)</title><rect x="430.7" y="259.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="433.7" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.03%)</title><rect x="431.3" y="259.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="434.3" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.03%)</title><rect x="431.3" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="434.3" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.03%)</title><rect x="431.3" y="227.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="434.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (183 samples, 0.25%)</title><rect x="431.6" y="291.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="434.6" y="302.0"></text>
</g>
<g>
<title>java.util.ArrayList (72 samples, 0.10%)</title><rect x="431.6" y="275.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="434.6" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (42 samples, 0.06%)</title><rect x="432.8" y="275.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="435.8" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (42 samples, 0.06%)</title><rect x="432.8" y="259.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="435.8" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (69 samples, 0.10%)</title><rect x="433.5" y="275.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="436.5" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (69 samples, 0.10%)</title><rect x="433.5" y="259.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="436.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.03%)</title><rect x="434.6" y="355.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="437.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.03%)</title><rect x="434.6" y="339.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="437.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.03%)</title><rect x="434.6" y="323.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="437.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (755 samples, 1.05%)</title><rect x="435.1" y="403.0" width="12.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="438.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (68 samples, 0.09%)</title><rect x="435.1" y="387.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="438.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (666 samples, 0.93%)</title><rect x="436.2" y="387.0" width="10.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.2" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (37 samples, 0.05%)</title><rect x="436.8" y="371.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="439.8" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (37 samples, 0.05%)</title><rect x="436.8" y="355.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="439.8" y="366.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (37 samples, 0.05%)</title><rect x="436.8" y="339.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="439.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (47 samples, 0.07%)</title><rect x="437.6" y="371.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="440.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (42 samples, 0.06%)</title><rect x="438.4" y="371.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="441.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (25 samples, 0.03%)</title><rect x="439.1" y="371.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="442.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (38 samples, 0.05%)</title><rect x="439.5" y="371.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="442.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (217 samples, 0.30%)</title><rect x="440.1" y="371.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="443.1" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (19 samples, 0.03%)</title><rect x="440.1" y="355.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="443.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (24 samples, 0.03%)</title><rect x="440.6" y="355.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="443.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (25 samples, 0.03%)</title><rect x="441.5" y="355.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="444.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.04%)</title><rect x="441.9" y="355.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="444.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (79 samples, 0.11%)</title><rect x="442.4" y="355.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (22 samples, 0.03%)</title><rect x="442.6" y="339.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="445.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (33 samples, 0.05%)</title><rect x="443.1" y="339.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="446.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (16 samples, 0.02%)</title><rect x="443.4" y="323.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="446.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (135 samples, 0.19%)</title><rect x="443.7" y="371.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="446.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (22 samples, 0.03%)</title><rect x="444.1" y="355.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="447.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (22 samples, 0.03%)</title><rect x="444.1" y="339.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="447.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (86 samples, 0.12%)</title><rect x="444.5" y="355.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="447.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (18 samples, 0.03%)</title><rect x="444.5" y="339.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="447.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (25 samples, 0.03%)</title><rect x="444.8" y="339.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="447.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (36 samples, 0.05%)</title><rect x="445.3" y="339.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="448.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (17 samples, 0.02%)</title><rect x="445.9" y="371.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="448.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (17 samples, 0.02%)</title><rect x="445.9" y="355.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="448.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (17 samples, 0.02%)</title><rect x="445.9" y="339.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="448.9" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.get (17 samples, 0.02%)</title><rect x="445.9" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="448.9" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (17 samples, 0.02%)</title><rect x="445.9" y="307.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="448.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (17 samples, 0.02%)</title><rect x="445.9" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="448.9" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (17 samples, 0.02%)</title><rect x="445.9" y="275.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="448.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (56 samples, 0.08%)</title><rect x="446.2" y="371.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="449.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1943325854.linkToTargetMethod (20 samples, 0.03%)</title><rect x="446.2" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="449.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.03%)</title><rect x="446.2" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="449.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$249/466264337.get$Lambda (20 samples, 0.03%)</title><rect x="446.2" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$249 (20 samples, 0.03%)</title><rect x="446.2" y="307.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="449.2" y="318.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (36 samples, 0.05%)</title><rect x="446.5" y="355.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="449.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$249/466264337.run (36 samples, 0.05%)</title><rect x="446.5" y="339.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="449.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (36 samples, 0.05%)</title><rect x="446.5" y="323.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.5" y="334.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (25 samples, 0.03%)</title><rect x="446.7" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="449.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (21 samples, 0.03%)</title><rect x="447.1" y="387.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="450.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.03%)</title><rect x="447.1" y="371.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="450.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (23 samples, 0.03%)</title><rect x="447.7" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="450.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (23 samples, 0.03%)</title><rect x="447.7" y="483.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="450.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.03%)</title><rect x="447.7" y="467.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="450.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.03%)</title><rect x="447.7" y="451.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="450.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.03%)</title><rect x="447.7" y="435.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="450.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (60 samples, 0.08%)</title><rect x="448.1" y="499.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="451.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (42 samples, 0.06%)</title><rect x="448.1" y="483.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="451.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (42 samples, 0.06%)</title><rect x="448.1" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="451.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/403197270.linkToTargetMethod (42 samples, 0.06%)</title><rect x="448.1" y="451.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="451.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/237679548.invoke (42 samples, 0.06%)</title><rect x="448.1" y="435.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="451.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/695135699.invoke (42 samples, 0.06%)</title><rect x="448.1" y="419.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="451.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (42 samples, 0.06%)</title><rect x="448.1" y="403.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="451.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (17 samples, 0.02%)</title><rect x="448.1" y="387.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="451.1" y="398.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.02%)</title><rect x="448.1" y="371.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="451.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (25 samples, 0.03%)</title><rect x="448.3" y="387.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="451.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (25 samples, 0.03%)</title><rect x="448.3" y="371.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="451.3" y="382.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.03%)</title><rect x="448.3" y="355.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="451.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (18 samples, 0.03%)</title><rect x="448.8" y="483.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="451.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.03%)</title><rect x="448.8" y="467.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="451.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (24 samples, 0.03%)</title><rect x="449.0" y="579.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="452.0" y="590.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (24 samples, 0.03%)</title><rect x="449.0" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="452.0" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (24 samples, 0.03%)</title><rect x="449.0" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="452.0" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (24 samples, 0.03%)</title><rect x="449.0" y="531.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="452.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (101 samples, 0.14%)</title><rect x="449.4" y="579.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="452.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (65 samples, 0.09%)</title><rect x="449.4" y="563.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="452.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (36 samples, 0.05%)</title><rect x="450.5" y="563.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="453.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (36 samples, 0.05%)</title><rect x="450.5" y="547.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="453.5" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (24 samples, 0.03%)</title><rect x="450.7" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="453.7" y="542.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (24 samples, 0.03%)</title><rect x="450.7" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="453.7" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (24 samples, 0.03%)</title><rect x="450.7" y="499.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.7" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plus (24 samples, 0.03%)</title><rect x="450.7" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="453.7" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (24 samples, 0.03%)</title><rect x="450.7" y="467.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="453.7" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (24 samples, 0.03%)</title><rect x="450.7" y="451.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="453.7" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (24 samples, 0.03%)</title><rect x="450.7" y="435.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="453.7" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.create (24 samples, 0.03%)</title><rect x="450.7" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="453.7" y="430.0"></text>
</g>
<g>
<title>java.time.Instant (24 samples, 0.03%)</title><rect x="450.7" y="403.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="453.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (19,488 samples, 27.09%)</title><rect x="451.1" y="691.0" width="319.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="454.1" y="702.0">java/util/concurrent/CompletableFuture$Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (19,488 samples, 27.09%)</title><rect x="451.1" y="675.0" width="319.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="454.1" y="686.0">java/util/concurrent/CompletableFuture$UniW..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (19,488 samples, 27.09%)</title><rect x="451.1" y="659.0" width="319.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="454.1" y="670.0">java/util/concurrent/CompletableFuture.post..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (19,488 samples, 27.09%)</title><rect x="451.1" y="643.0" width="319.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="454.1" y="654.0">java/util/concurrent/CompletableFuture.post..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (3,439 samples, 4.78%)</title><rect x="451.1" y="627.0" width="56.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="454.1" y="638.0">java/u..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$412/59149577.accept (3,439 samples, 4.78%)</title><rect x="451.1" y="611.0" width="56.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="454.1" y="622.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entities$6 (3,439 samples, 4.78%)</title><rect x="451.1" y="595.0" width="56.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="454.1" y="606.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (3,439 samples, 4.78%)</title><rect x="451.1" y="579.0" width="56.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="454.1" y="590.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/StreamHttpSession.stream (3,439 samples, 4.78%)</title><rect x="451.1" y="563.0" width="56.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="454.1" y="574.0">ru/mai..</text>
</g>
<g>
<title>one.nio.http.Response (106 samples, 0.15%)</title><rect x="451.1" y="547.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="454.1" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (622 samples, 0.86%)</title><rect x="452.8" y="547.0" width="10.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="455.8" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (435 samples, 0.60%)</title><rect x="452.8" y="531.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="455.8" y="542.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (435 samples, 0.60%)</title><rect x="452.8" y="515.0" width="7.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="455.8" y="526.0"></text>
</g>
<g>
<title>byte[] (393 samples, 0.55%)</title><rect x="452.8" y="499.0" width="6.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="455.8" y="510.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.06%)</title><rect x="459.3" y="499.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="462.3" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (187 samples, 0.26%)</title><rect x="460.0" y="531.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="463.0" y="542.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (187 samples, 0.26%)</title><rect x="460.0" y="515.0" width="3.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="463.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (164 samples, 0.23%)</title><rect x="463.0" y="547.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.0" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (164 samples, 0.23%)</title><rect x="463.0" y="531.0" width="2.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="466.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/StreamHttpSession.next (2,547 samples, 3.54%)</title><rect x="465.7" y="547.0" width="41.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="468.7" y="558.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/StreamHttpSession.handleStreamEnding (184 samples, 0.26%)</title><rect x="465.7" y="531.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.7" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (184 samples, 0.26%)</title><rect x="465.7" y="515.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.7" y="526.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (184 samples, 0.26%)</title><rect x="465.7" y="499.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="468.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/StreamHttpSession.writeRecord (2,101 samples, 2.92%)</title><rect x="468.7" y="531.0" width="34.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="471.7" y="542.0">ru..</text>
</g>
<g>
<title>byte[] (170 samples, 0.24%)</title><rect x="468.7" y="515.0" width="2.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="471.7" y="526.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (120 samples, 0.17%)</title><rect x="471.5" y="515.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="474.5" y="526.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (120 samples, 0.17%)</title><rect x="471.5" y="499.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="474.5" y="510.0"></text>
</g>
<g>
<title>byte[] (120 samples, 0.17%)</title><rect x="471.5" y="483.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="474.5" y="494.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (127 samples, 0.18%)</title><rect x="473.5" y="515.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="476.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (127 samples, 0.18%)</title><rect x="473.5" y="499.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="476.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (127 samples, 0.18%)</title><rect x="473.5" y="483.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="476.5" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (127 samples, 0.18%)</title><rect x="473.5" y="467.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="476.5" y="478.0"></text>
</g>
<g>
<title>byte[] (127 samples, 0.18%)</title><rect x="473.5" y="451.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="476.5" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (217 samples, 0.30%)</title><rect x="475.6" y="515.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="478.6" y="526.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (217 samples, 0.30%)</title><rect x="475.6" y="499.0" width="3.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="478.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/payload/RecordPayload.toRawBytes (1,467 samples, 2.04%)</title><rect x="479.1" y="515.0" width="24.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.1" y="526.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (157 samples, 0.22%)</title><rect x="479.1" y="499.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.1" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (157 samples, 0.22%)</title><rect x="479.1" y="483.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="482.1" y="494.0"></text>
</g>
<g>
<title>byte[] (157 samples, 0.22%)</title><rect x="479.1" y="467.0" width="2.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="482.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (295 samples, 0.41%)</title><rect x="481.7" y="499.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="484.7" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (295 samples, 0.41%)</title><rect x="481.7" y="483.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="484.7" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (295 samples, 0.41%)</title><rect x="481.7" y="467.0" width="4.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="484.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (249 samples, 0.35%)</title><rect x="486.6" y="499.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="489.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (249 samples, 0.35%)</title><rect x="486.6" y="483.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="489.6" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (249 samples, 0.35%)</title><rect x="486.6" y="467.0" width="4.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="489.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArray (766 samples, 1.06%)</title><rect x="490.6" y="499.0" width="12.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="493.6" y="510.0"></text>
</g>
<g>
<title>byte[] (232 samples, 0.32%)</title><rect x="490.6" y="483.0" width="3.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="493.6" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (534 samples, 0.74%)</title><rect x="494.4" y="483.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.4" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (534 samples, 0.74%)</title><rect x="494.4" y="467.0" width="8.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="497.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$ReplicatedRecordsIterator.next (262 samples, 0.36%)</title><rect x="503.2" y="531.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="506.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$ReplicatedRecordsIterator.next (262 samples, 0.36%)</title><rect x="503.2" y="515.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="506.2" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.payload.RecordPayload (112 samples, 0.16%)</title><rect x="503.2" y="499.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="506.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (128 samples, 0.18%)</title><rect x="505.0" y="499.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.0" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (128 samples, 0.18%)</title><rect x="505.0" y="483.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="508.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$ReplicatedRecordsIterator.advance (22 samples, 0.03%)</title><rect x="507.1" y="499.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="510.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$ReplicatedRecordsIterator.advanceRecord (22 samples, 0.03%)</title><rect x="507.1" y="483.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="510.1" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (22 samples, 0.03%)</title><rect x="507.1" y="467.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="510.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (22 samples, 0.03%)</title><rect x="507.1" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="510.1" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (16 samples, 0.02%)</title><rect x="507.1" y="435.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="510.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (16,049 samples, 22.31%)</title><rect x="507.5" y="627.0" width="263.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="510.5" y="638.0">java/util/concurrent/CompletableFut..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$$Lambda$411/1225976976.apply (16,049 samples, 22.31%)</title><rect x="507.5" y="611.0" width="263.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="510.5" y="622.0">ru/mail/polis/service/saloed/reques..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor.lambda$processForUser$2 (16,049 samples, 22.31%)</title><rect x="507.5" y="595.0" width="263.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="510.5" y="606.0">ru/mail/polis/service/saloed/reques..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (12,162 samples, 16.90%)</title><rect x="507.5" y="579.0" width="199.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="510.5" y="590.0">com/google/common/collect/..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (81 samples, 0.11%)</title><rect x="507.5" y="563.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="510.5" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (12,081 samples, 16.79%)</title><rect x="508.8" y="563.0" width="198.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="511.8" y="574.0">com/google/common/collect/..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (118 samples, 0.16%)</title><rect x="508.8" y="547.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="511.8" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (354 samples, 0.49%)</title><rect x="510.8" y="547.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.8" y="558.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (354 samples, 0.49%)</title><rect x="510.8" y="531.0" width="5.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="513.8" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (9,866 samples, 13.71%)</title><rect x="516.6" y="547.0" width="161.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="519.6" y="558.0">com/google/common/col..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (9,866 samples, 13.71%)</title><rect x="516.6" y="531.0" width="161.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="519.6" y="542.0">com/google/common/col..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (9,866 samples, 13.71%)</title><rect x="516.6" y="515.0" width="161.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.6" y="526.0">com/google/common/col..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (9,866 samples, 13.71%)</title><rect x="516.6" y="499.0" width="161.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="519.6" y="510.0">com/google/common/col..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (9,866 samples, 13.71%)</title><rect x="516.6" y="483.0" width="161.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="519.6" y="494.0">com/google/common/col..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (35 samples, 0.05%)</title><rect x="516.6" y="467.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="519.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub$$Lambda$420/580357341.apply (35 samples, 0.05%)</title><rect x="516.6" y="451.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub.lambda$getBody$2 (35 samples, 0.05%)</title><rect x="516.6" y="435.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="519.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (35 samples, 0.05%)</title><rect x="516.6" y="419.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.timedGet (35 samples, 0.05%)</title><rect x="516.6" y="403.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="519.6" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (35 samples, 0.05%)</title><rect x="516.6" y="387.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="519.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub.next (9,831 samples, 13.66%)</title><rect x="517.1" y="467.0" width="161.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="520.1" y="478.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub.next (9,831 samples, 13.66%)</title><rect x="517.1" y="451.0" width="161.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.1" y="462.0">ru/mail/polis/service..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (208 samples, 0.29%)</title><rect x="517.1" y="435.0" width="3.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="520.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (218 samples, 0.30%)</title><rect x="520.6" y="435.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (218 samples, 0.30%)</title><rect x="520.6" y="419.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="523.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (218 samples, 0.30%)</title><rect x="520.6" y="403.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="523.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (218 samples, 0.30%)</title><rect x="520.6" y="387.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="523.6" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (218 samples, 0.30%)</title><rect x="520.6" y="371.0" width="3.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="523.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (9,405 samples, 13.07%)</title><rect x="524.1" y="435.0" width="154.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="527.1" y="446.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9,405 samples, 13.07%)</title><rect x="524.1" y="419.0" width="154.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="527.1" y="430.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9,405 samples, 13.07%)</title><rect x="524.1" y="403.0" width="154.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="527.1" y="414.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (9,405 samples, 13.07%)</title><rect x="524.1" y="387.0" width="154.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="527.1" y="398.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (9,405 samples, 13.07%)</title><rect x="524.1" y="371.0" width="154.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="527.1" y="382.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (9,405 samples, 13.07%)</title><rect x="524.1" y="355.0" width="154.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="527.1" y="366.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$272/309565785.run (9,405 samples, 13.07%)</title><rect x="524.1" y="339.0" width="154.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="527.1" y="350.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (9,405 samples, 13.07%)</title><rect x="524.1" y="323.0" width="154.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="527.1" y="334.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (30 samples, 0.04%)</title><rect x="524.1" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="527.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (30 samples, 0.04%)</title><rect x="524.1" y="291.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="527.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (30 samples, 0.04%)</title><rect x="524.1" y="275.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="527.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (30 samples, 0.04%)</title><rect x="524.1" y="259.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="527.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/112619572.linkToTargetMethod (19 samples, 0.03%)</title><rect x="524.1" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="527.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/827084938.invoke (19 samples, 0.03%)</title><rect x="524.1" y="227.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="527.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.03%)</title><rect x="524.1" y="211.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="527.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (19 samples, 0.03%)</title><rect x="524.1" y="195.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="527.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (19 samples, 0.03%)</title><rect x="524.1" y="179.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="527.1" y="190.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.03%)</title><rect x="524.1" y="163.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="527.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (9,375 samples, 13.03%)</title><rect x="524.6" y="307.0" width="153.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="527.6" y="318.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (9,375 samples, 13.03%)</title><rect x="524.6" y="291.0" width="153.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="527.6" y="302.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (9,375 samples, 13.03%)</title><rect x="524.6" y="275.0" width="153.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="527.6" y="286.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (9,375 samples, 13.03%)</title><rect x="524.6" y="259.0" width="153.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="527.6" y="270.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$ChunkedBodyParser.accept (9,375 samples, 13.03%)</title><rect x="524.6" y="243.0" width="153.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="527.6" y="254.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$ChunkedBodyParser.accept (9,375 samples, 13.03%)</title><rect x="524.6" y="227.0" width="153.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="527.6" y="238.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>java.util.ArrayList (214 samples, 0.30%)</title><rect x="524.6" y="211.0" width="3.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="527.6" y="222.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (196 samples, 0.27%)</title><rect x="528.1" y="211.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.1" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (196 samples, 0.27%)</title><rect x="528.1" y="195.0" width="3.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="531.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$367/1609374688.run (3,569 samples, 4.96%)</title><rect x="531.4" y="211.0" width="58.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.4" y="222.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (3,569 samples, 4.96%)</title><rect x="531.4" y="195.0" width="58.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="534.4" y="206.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (3,569 samples, 4.96%)</title><rect x="531.4" y="179.0" width="58.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="534.4" y="190.0">jdk/in..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1,095 samples, 1.52%)</title><rect x="531.4" y="163.0" width="17.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="534.4" y="174.0"></text>
</g>
<g>
<title>java/util/Collection.stream (739 samples, 1.03%)</title><rect x="531.4" y="147.0" width="12.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.4" y="158.0"></text>
</g>
<g>
<title>java/util/List.spliterator (272 samples, 0.38%)</title><rect x="531.4" y="131.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="534.4" y="142.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (272 samples, 0.38%)</title><rect x="531.4" y="115.0" width="4.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="534.4" y="126.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (467 samples, 0.65%)</title><rect x="535.8" y="131.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.8" y="142.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (466 samples, 0.65%)</title><rect x="535.8" y="115.0" width="7.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="538.8" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (356 samples, 0.49%)</title><rect x="543.5" y="147.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (356 samples, 0.49%)</title><rect x="543.5" y="131.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="546.5" y="142.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (356 samples, 0.49%)</title><rect x="543.5" y="115.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="546.5" y="126.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$107/1281414889.get (208 samples, 0.29%)</title><rect x="543.5" y="99.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="546.5" y="110.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (208 samples, 0.29%)</title><rect x="543.5" y="83.0" width="3.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="546.5" y="94.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (148 samples, 0.21%)</title><rect x="546.9" y="99.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="549.9" y="110.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (148 samples, 0.21%)</title><rect x="546.9" y="83.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="549.9" y="94.0"></text>
</g>
<g>
<title>java/util/Optional.of (148 samples, 0.21%)</title><rect x="546.9" y="67.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="549.9" y="78.0"></text>
</g>
<g>
<title>java.util.Optional (148 samples, 0.21%)</title><rect x="546.9" y="51.0" width="2.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="549.9" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2,474 samples, 3.44%)</title><rect x="549.3" y="163.0" width="40.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="552.3" y="174.0">jdk..</text>
</g>
<g>
<title>java/time/Instant.now (210 samples, 0.29%)</title><rect x="549.3" y="147.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.3" y="158.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (210 samples, 0.29%)</title><rect x="549.3" y="131.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.3" y="142.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (210 samples, 0.29%)</title><rect x="549.3" y="115.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="552.3" y="126.0"></text>
</g>
<g>
<title>java/time/Instant.create (210 samples, 0.29%)</title><rect x="549.3" y="99.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.3" y="110.0"></text>
</g>
<g>
<title>java.time.Instant (210 samples, 0.29%)</title><rect x="549.3" y="83.0" width="3.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="552.3" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2,264 samples, 3.15%)</title><rect x="552.8" y="147.0" width="37.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="555.8" y="158.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (825 samples, 1.15%)</title><rect x="552.8" y="131.0" width="13.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="555.8" y="142.0"></text>
</g>
<g>
<title>java/time/Instant.plus (208 samples, 0.29%)</title><rect x="552.8" y="115.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="555.8" y="126.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (208 samples, 0.29%)</title><rect x="552.8" y="99.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.8" y="110.0"></text>
</g>
<g>
<title>java/time/Instant.plus (208 samples, 0.29%)</title><rect x="552.8" y="83.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="555.8" y="94.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (208 samples, 0.29%)</title><rect x="552.8" y="67.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="555.8" y="78.0"></text>
</g>
<g>
<title>java/time/Instant.create (208 samples, 0.29%)</title><rect x="552.8" y="51.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.8" y="62.0"></text>
</g>
<g>
<title>java.time.Instant (208 samples, 0.29%)</title><rect x="552.8" y="35.0" width="3.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="555.8" y="46.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (172 samples, 0.24%)</title><rect x="556.2" y="115.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="559.2" y="126.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (172 samples, 0.24%)</title><rect x="556.2" y="99.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="559.2" y="110.0"></text>
</g>
<g>
<title>java/time/Instant.plus (172 samples, 0.24%)</title><rect x="556.2" y="83.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="559.2" y="94.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (172 samples, 0.24%)</title><rect x="556.2" y="67.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="559.2" y="78.0"></text>
</g>
<g>
<title>java/time/Instant.create (172 samples, 0.24%)</title><rect x="556.2" y="51.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="559.2" y="62.0"></text>
</g>
<g>
<title>java.time.Instant (172 samples, 0.24%)</title><rect x="556.2" y="35.0" width="2.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="559.2" y="46.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.add (193 samples, 0.27%)</title><rect x="559.0" y="115.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="562.0" y="126.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkBefore (193 samples, 0.27%)</title><rect x="559.0" y="99.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.0" y="110.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (193 samples, 0.27%)</title><rect x="559.0" y="83.0" width="3.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="562.0" y="94.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (42 samples, 0.06%)</title><rect x="562.2" y="115.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="565.2" y="126.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (42 samples, 0.06%)</title><rect x="562.2" y="99.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.2" y="110.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (42 samples, 0.06%)</title><rect x="562.2" y="83.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="565.2" y="94.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (210 samples, 0.29%)</title><rect x="562.8" y="115.0" width="3.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="565.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (617 samples, 0.86%)</title><rect x="566.3" y="131.0" width="10.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="569.3" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.get (195 samples, 0.27%)</title><rect x="566.3" y="115.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.3" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (195 samples, 0.27%)</title><rect x="566.3" y="99.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.3" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (195 samples, 0.27%)</title><rect x="566.3" y="83.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="569.3" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (195 samples, 0.27%)</title><rect x="566.3" y="67.0" width="3.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="569.3" y="78.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (207 samples, 0.29%)</title><rect x="569.5" y="115.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.5" y="126.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (207 samples, 0.29%)</title><rect x="569.5" y="99.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="572.5" y="110.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (207 samples, 0.29%)</title><rect x="569.5" y="83.0" width="3.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="572.5" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (215 samples, 0.30%)</title><rect x="572.9" y="115.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="575.9" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (215 samples, 0.30%)</title><rect x="572.9" y="99.0" width="3.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="575.9" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (822 samples, 1.14%)</title><rect x="576.4" y="131.0" width="13.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="579.4" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (187 samples, 0.26%)</title><rect x="576.4" y="115.0" width="3.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="579.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (635 samples, 0.88%)</title><rect x="579.5" y="115.0" width="10.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="582.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (169 samples, 0.23%)</title><rect x="579.5" y="99.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="582.5" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (169 samples, 0.23%)</title><rect x="579.5" y="83.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="582.5" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (169 samples, 0.23%)</title><rect x="579.5" y="67.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="582.5" y="78.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (169 samples, 0.23%)</title><rect x="579.5" y="51.0" width="2.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="582.5" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (466 samples, 0.65%)</title><rect x="582.2" y="99.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="585.2" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (466 samples, 0.65%)</title><rect x="582.2" y="83.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="585.2" y="94.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (343 samples, 0.48%)</title><rect x="582.2" y="67.0" width="5.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="585.2" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (123 samples, 0.17%)</title><rect x="587.9" y="67.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.9" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (123 samples, 0.17%)</title><rect x="587.9" y="51.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="590.9" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (243 samples, 0.34%)</title><rect x="589.9" y="211.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="592.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (243 samples, 0.34%)</title><rect x="589.9" y="195.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="592.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub.onComplete (243 samples, 0.34%)</title><rect x="589.9" y="179.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="592.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.iterator (243 samples, 0.34%)</title><rect x="589.9" y="163.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="592.9" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Itr (243 samples, 0.34%)</title><rect x="589.9" y="147.0" width="4.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="592.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (4,167 samples, 5.79%)</title><rect x="593.9" y="211.0" width="68.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="596.9" y="222.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (4,167 samples, 5.79%)</title><rect x="593.9" y="195.0" width="68.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="596.9" y="206.0">jdk/int..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub.onNext (4,167 samples, 5.79%)</title><rect x="593.9" y="179.0" width="68.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="596.9" y="190.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub.onNext (4,167 samples, 5.79%)</title><rect x="593.9" y="163.0" width="68.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="596.9" y="174.0">ru/mail..</text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (310 samples, 0.43%)</title><rect x="593.9" y="147.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.9" y="158.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (310 samples, 0.43%)</title><rect x="593.9" y="131.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="596.9" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (310 samples, 0.43%)</title><rect x="593.9" y="115.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="596.9" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (310 samples, 0.43%)</title><rect x="593.9" y="99.0" width="5.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="596.9" y="110.0"></text>
</g>
<g>
<title>java/util/Optional.of (148 samples, 0.21%)</title><rect x="599.0" y="147.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.0" y="158.0"></text>
</g>
<g>
<title>java.util.Optional (148 samples, 0.21%)</title><rect x="599.0" y="131.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="602.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (223 samples, 0.31%)</title><rect x="601.4" y="147.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="604.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (223 samples, 0.31%)</title><rect x="601.4" y="131.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="604.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (223 samples, 0.31%)</title><rect x="601.4" y="115.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="604.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (223 samples, 0.31%)</title><rect x="601.4" y="99.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="604.4" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (223 samples, 0.31%)</title><rect x="601.4" y="83.0" width="3.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="604.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/timestamp/RecordWithTimestampAndKey.fromRawBytes (1,964 samples, 2.73%)</title><rect x="605.0" y="147.0" width="32.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="608.0" y="158.0">ru..</text>
</g>
<g>
<title>byte[] (548 samples, 0.76%)</title><rect x="605.0" y="131.0" width="9.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="608.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (460 samples, 0.64%)</title><rect x="614.0" y="131.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="617.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (460 samples, 0.64%)</title><rect x="614.0" y="115.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="617.0" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (460 samples, 0.64%)</title><rect x="614.0" y="99.0" width="7.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="617.0" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.timestamp.RecordWithTimestampAndKey (238 samples, 0.33%)</title><rect x="621.6" y="131.0" width="3.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="624.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/timestamp/RecordWithTimestamp.fromBytes (718 samples, 1.00%)</title><rect x="625.5" y="131.0" width="11.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.5" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (451 samples, 0.63%)</title><rect x="625.5" y="115.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.5" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (451 samples, 0.63%)</title><rect x="625.5" y="99.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (451 samples, 0.63%)</title><rect x="625.5" y="83.0" width="7.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="628.5" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.timestamp.RecordWithTimestamp (267 samples, 0.37%)</title><rect x="632.9" y="115.0" width="4.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="635.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub.extend (912 samples, 1.27%)</title><rect x="637.3" y="147.0" width="14.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.3" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (912 samples, 1.27%)</title><rect x="637.3" y="131.0" width="14.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.3" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (444 samples, 0.62%)</title><rect x="637.3" y="115.0" width="7.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="640.3" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (468 samples, 0.65%)</title><rect x="644.5" y="115.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="647.5" y="126.0"></text>
</g>
<g>
<title>byte[] (468 samples, 0.65%)</title><rect x="644.5" y="99.0" width="7.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="647.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub.truncate (610 samples, 0.85%)</title><rect x="652.2" y="147.0" width="10.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.2" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (608 samples, 0.85%)</title><rect x="652.2" y="131.0" width="10.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="655.2" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (450 samples, 0.63%)</title><rect x="652.2" y="115.0" width="7.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="655.2" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (158 samples, 0.22%)</title><rect x="659.6" y="115.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="662.6" y="126.0"></text>
</g>
<g>
<title>byte[] (158 samples, 0.22%)</title><rect x="659.6" y="99.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="662.6" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$ChunkedBodyParser.tryPushOneHunk (986 samples, 1.37%)</title><rect x="662.2" y="211.0" width="16.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="665.2" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (479 samples, 0.67%)</title><rect x="662.2" y="195.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="665.2" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (479 samples, 0.67%)</title><rect x="662.2" y="179.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="665.2" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (479 samples, 0.67%)</title><rect x="662.2" y="163.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="665.2" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (479 samples, 0.67%)</title><rect x="662.2" y="147.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.2" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (479 samples, 0.67%)</title><rect x="662.2" y="131.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.2" y="142.0"></text>
</g>
<g>
<title>java.lang.Object[] (471 samples, 0.65%)</title><rect x="662.2" y="115.0" width="7.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="665.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$ChunkedBodyParser.tryReadOneHunk (507 samples, 0.70%)</title><rect x="670.1" y="195.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="673.1" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (507 samples, 0.70%)</title><rect x="670.1" y="179.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="673.1" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (507 samples, 0.70%)</title><rect x="670.1" y="163.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="673.1" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (507 samples, 0.70%)</title><rect x="670.1" y="147.0" width="8.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="673.1" y="158.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (131 samples, 0.18%)</title><rect x="678.4" y="547.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="681.4" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (132 samples, 0.18%)</title><rect x="680.5" y="547.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.5" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (132 samples, 0.18%)</title><rect x="680.5" y="531.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="683.5" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,393 samples, 1.94%)</title><rect x="682.7" y="547.0" width="22.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="685.7" y="558.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,393 samples, 1.94%)</title><rect x="682.7" y="531.0" width="22.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="685.7" y="542.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (185 samples, 0.26%)</title><rect x="682.7" y="515.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="685.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (185 samples, 0.26%)</title><rect x="682.7" y="499.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.7" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (185 samples, 0.26%)</title><rect x="682.7" y="483.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="685.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,208 samples, 1.68%)</title><rect x="685.7" y="515.0" width="19.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="688.7" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,208 samples, 1.68%)</title><rect x="685.7" y="499.0" width="19.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="688.7" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,208 samples, 1.68%)</title><rect x="685.7" y="483.0" width="19.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="688.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,208 samples, 1.68%)</title><rect x="685.7" y="467.0" width="19.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="688.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,208 samples, 1.68%)</title><rect x="685.7" y="451.0" width="19.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="688.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksDAOIterator.next (1,208 samples, 1.68%)</title><rect x="685.7" y="435.0" width="19.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="688.7" y="446.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (122 samples, 0.17%)</title><rect x="685.7" y="419.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="688.7" y="430.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (122 samples, 0.17%)</title><rect x="685.7" y="403.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="688.7" y="414.0"></text>
</g>
<g>
<title>byte[] (122 samples, 0.17%)</title><rect x="685.7" y="387.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="688.7" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value (153 samples, 0.21%)</title><rect x="687.7" y="419.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.7" y="430.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value0 (153 samples, 0.21%)</title><rect x="687.7" y="403.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.7" y="414.0"></text>
</g>
<g>
<title>byte[] (153 samples, 0.21%)</title><rect x="687.7" y="387.0" width="2.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="690.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksDAOIterator.hasNext (104 samples, 0.14%)</title><rect x="690.2" y="419.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="693.2" y="430.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (104 samples, 0.14%)</title><rect x="690.2" y="403.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="693.2" y="414.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (104 samples, 0.14%)</title><rect x="690.2" y="387.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="693.2" y="398.0"></text>
</g>
<g>
<title>byte[] (104 samples, 0.14%)</title><rect x="690.2" y="371.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="693.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordWithTimestampIterator.construct (829 samples, 1.15%)</title><rect x="692.0" y="419.0" width="13.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordWithTimestampIterator.construct (829 samples, 1.15%)</title><rect x="692.0" y="403.0" width="13.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="695.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.fromArrayShifted (343 samples, 0.48%)</title><rect x="692.0" y="387.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.0" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (216 samples, 0.30%)</title><rect x="692.0" y="371.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.0" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (216 samples, 0.30%)</title><rect x="692.0" y="355.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="695.0" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (216 samples, 0.30%)</title><rect x="692.0" y="339.0" width="3.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="695.0" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (127 samples, 0.18%)</title><rect x="695.5" y="371.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="698.5" y="382.0"></text>
</g>
<g>
<title>byte[] (127 samples, 0.18%)</title><rect x="695.5" y="355.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="698.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/timestamp/RecordWithTimestamp.fromBytes (371 samples, 0.52%)</title><rect x="697.6" y="387.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="700.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (231 samples, 0.32%)</title><rect x="697.6" y="371.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="700.6" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (231 samples, 0.32%)</title><rect x="697.6" y="355.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="700.6" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (231 samples, 0.32%)</title><rect x="697.6" y="339.0" width="3.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="700.6" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.timestamp.RecordWithTimestamp (140 samples, 0.19%)</title><rect x="701.4" y="371.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="704.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/timestamp/RecordWithTimestampAndKey.fromKeyValue (115 samples, 0.16%)</title><rect x="703.7" y="387.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="706.7" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.timestamp.RecordWithTimestampAndKey (115 samples, 0.16%)</title><rect x="703.7" y="371.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="706.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksDAOIterator.hasNext (87 samples, 0.12%)</title><rect x="705.6" y="547.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="708.6" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (87 samples, 0.12%)</title><rect x="705.6" y="531.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="708.6" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (87 samples, 0.12%)</title><rect x="705.6" y="515.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="708.6" y="526.0"></text>
</g>
<g>
<title>byte[] (87 samples, 0.12%)</title><rect x="705.6" y="499.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="708.6" y="510.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,100 samples, 1.53%)</title><rect x="707.0" y="579.0" width="18.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="710.0" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (602 samples, 0.84%)</title><rect x="707.0" y="563.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="710.0" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (602 samples, 0.84%)</title><rect x="707.0" y="547.0" width="9.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="710.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (498 samples, 0.69%)</title><rect x="716.9" y="563.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="719.9" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (489 samples, 0.68%)</title><rect x="716.9" y="547.0" width="8.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="719.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (174 samples, 0.24%)</title><rect x="725.0" y="579.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="728.0" y="590.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (174 samples, 0.24%)</title><rect x="725.0" y="563.0" width="2.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="728.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (874 samples, 1.21%)</title><rect x="727.9" y="579.0" width="14.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="730.9" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (715 samples, 0.99%)</title><rect x="727.9" y="563.0" width="11.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (715 samples, 0.99%)</title><rect x="727.9" y="547.0" width="11.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (577 samples, 0.80%)</title><rect x="727.9" y="531.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="730.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (577 samples, 0.80%)</title><rect x="727.9" y="515.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="730.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (114 samples, 0.16%)</title><rect x="727.9" y="499.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="730.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$62/501107890.get (114 samples, 0.16%)</title><rect x="727.9" y="483.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.9" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (114 samples, 0.16%)</title><rect x="727.9" y="467.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="730.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/Streams$ConcatSpliterator.forEachRemaining (463 samples, 0.64%)</title><rect x="729.7" y="499.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="732.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.forEachRemaining (463 samples, 0.64%)</title><rect x="729.7" y="483.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="732.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (92 samples, 0.13%)</title><rect x="729.7" y="467.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (92 samples, 0.13%)</title><rect x="729.7" y="451.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.7" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$434/1302433279.get$Lambda (92 samples, 0.13%)</title><rect x="729.7" y="435.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.7" y="446.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$434 (92 samples, 0.13%)</title><rect x="729.7" y="419.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="732.7" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (371 samples, 0.52%)</title><rect x="731.3" y="467.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="734.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (248 samples, 0.34%)</title><rect x="731.3" y="451.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="734.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (248 samples, 0.34%)</title><rect x="731.3" y="435.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="734.3" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (248 samples, 0.34%)</title><rect x="731.3" y="419.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="734.3" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$434/1302433279.accept (248 samples, 0.34%)</title><rect x="731.3" y="403.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="734.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (248 samples, 0.34%)</title><rect x="731.3" y="387.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.3" y="398.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$63/1997859171.accept (248 samples, 0.34%)</title><rect x="731.3" y="371.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="734.3" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (248 samples, 0.34%)</title><rect x="731.3" y="355.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="734.3" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (248 samples, 0.34%)</title><rect x="731.3" y="339.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (248 samples, 0.34%)</title><rect x="731.3" y="323.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="734.3" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (248 samples, 0.34%)</title><rect x="731.3" y="307.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="734.3" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (248 samples, 0.34%)</title><rect x="731.3" y="291.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="734.3" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (240 samples, 0.33%)</title><rect x="731.3" y="275.0" width="3.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="734.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (123 samples, 0.17%)</title><rect x="735.3" y="451.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="738.3" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (123 samples, 0.17%)</title><rect x="735.3" y="435.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="738.3" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (123 samples, 0.17%)</title><rect x="735.3" y="419.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="738.3" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (138 samples, 0.19%)</title><rect x="737.3" y="531.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (138 samples, 0.19%)</title><rect x="737.3" y="515.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.3" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (138 samples, 0.19%)</title><rect x="737.3" y="499.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="740.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (159 samples, 0.22%)</title><rect x="739.6" y="563.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="742.6" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (159 samples, 0.22%)</title><rect x="739.6" y="547.0" width="2.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="742.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (305 samples, 0.42%)</title><rect x="742.2" y="579.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="745.2" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (283 samples, 0.39%)</title><rect x="742.2" y="563.0" width="4.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="745.2" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (22 samples, 0.03%)</title><rect x="746.9" y="563.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="749.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/Stream.concat (815 samples, 1.13%)</title><rect x="747.2" y="579.0" width="13.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="750.2" y="590.0"></text>
</g>
<g>
<title>java.util.stream.Streams$ConcatSpliterator$OfRef (114 samples, 0.16%)</title><rect x="747.2" y="563.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="750.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (319 samples, 0.44%)</title><rect x="749.1" y="563.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="752.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (73 samples, 0.10%)</title><rect x="749.1" y="547.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="752.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (73 samples, 0.10%)</title><rect x="749.1" y="531.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="752.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$430/187642822.get$Lambda (73 samples, 0.10%)</title><rect x="749.1" y="515.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.1" y="526.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$430 (73 samples, 0.10%)</title><rect x="749.1" y="499.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="752.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (246 samples, 0.34%)</title><rect x="750.3" y="547.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="753.3" y="558.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (246 samples, 0.34%)</title><rect x="750.3" y="531.0" width="4.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="753.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (263 samples, 0.37%)</title><rect x="754.3" y="563.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.3" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (260 samples, 0.36%)</title><rect x="754.3" y="547.0" width="4.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="757.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Streams.composedClose (119 samples, 0.17%)</title><rect x="758.6" y="563.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="761.6" y="574.0"></text>
</g>
<g>
<title>java.util.stream.Streams$2 (119 samples, 0.17%)</title><rect x="758.6" y="547.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="761.6" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.request.processor.EntitiesRequestProcessor$ReplicatedRecordsIterator (123 samples, 0.17%)</title><rect x="760.6" y="579.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="763.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$ReplicatedRecordsIterator.&lt;init&gt; (496 samples, 0.69%)</title><rect x="762.6" y="579.0" width="8.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="765.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (102 samples, 0.14%)</title><rect x="762.6" y="563.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="765.6" y="574.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (102 samples, 0.14%)</title><rect x="762.6" y="547.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="765.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$ReplicatedRecordsIterator.advance (394 samples, 0.55%)</title><rect x="764.3" y="563.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="767.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$ReplicatedRecordsIterator.advanceRecord (394 samples, 0.55%)</title><rect x="764.3" y="547.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="767.3" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (65 samples, 0.09%)</title><rect x="764.3" y="531.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="767.3" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (65 samples, 0.09%)</title><rect x="764.3" y="515.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="767.3" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (58 samples, 0.08%)</title><rect x="764.3" y="499.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="767.3" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (48 samples, 0.07%)</title><rect x="764.3" y="483.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="767.3" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (48 samples, 0.07%)</title><rect x="764.3" y="467.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="767.3" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (48 samples, 0.07%)</title><rect x="764.3" y="451.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="767.3" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (48 samples, 0.07%)</title><rect x="764.3" y="435.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="767.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (48 samples, 0.07%)</title><rect x="764.3" y="419.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="767.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub.next (33 samples, 0.05%)</title><rect x="764.5" y="403.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="767.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub.next (33 samples, 0.05%)</title><rect x="764.5" y="387.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="767.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (329 samples, 0.46%)</title><rect x="765.3" y="531.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="768.3" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (329 samples, 0.46%)</title><rect x="765.3" y="515.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="768.3" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (205 samples, 0.28%)</title><rect x="765.3" y="499.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="768.3" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (78 samples, 0.11%)</title><rect x="765.3" y="483.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="768.3" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (78 samples, 0.11%)</title><rect x="765.3" y="467.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.3" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (78 samples, 0.11%)</title><rect x="765.3" y="451.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="768.3" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (78 samples, 0.11%)</title><rect x="765.3" y="435.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (78 samples, 0.11%)</title><rect x="765.3" y="419.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="768.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (23 samples, 0.03%)</title><rect x="765.3" y="403.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="768.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub$$Lambda$420/580357341.apply (23 samples, 0.03%)</title><rect x="765.3" y="387.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="768.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub.lambda$getBody$2 (23 samples, 0.03%)</title><rect x="765.3" y="371.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="768.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (23 samples, 0.03%)</title><rect x="765.3" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.timedGet (23 samples, 0.03%)</title><rect x="765.3" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="768.3" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (22 samples, 0.03%)</title><rect x="765.3" y="323.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="768.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub.next (55 samples, 0.08%)</title><rect x="765.7" y="403.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="768.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub.next (55 samples, 0.08%)</title><rect x="765.7" y="387.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="768.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completedFuture (16 samples, 0.02%)</title><rect x="766.1" y="371.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="769.1" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (16 samples, 0.02%)</title><rect x="766.1" y="355.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="769.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksDAOIterator.hasNext (127 samples, 0.18%)</title><rect x="766.6" y="483.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="769.6" y="494.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (127 samples, 0.18%)</title><rect x="766.6" y="467.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="769.6" y="478.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (127 samples, 0.18%)</title><rect x="766.6" y="451.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="769.6" y="462.0"></text>
</g>
<g>
<title>byte[] (127 samples, 0.18%)</title><rect x="766.6" y="435.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="769.6" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (124 samples, 0.17%)</title><rect x="768.7" y="499.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="771.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (124 samples, 0.17%)</title><rect x="768.7" y="483.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="771.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (124 samples, 0.17%)</title><rect x="768.7" y="467.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="771.7" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (124 samples, 0.17%)</title><rect x="768.7" y="451.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (124 samples, 0.17%)</title><rect x="768.7" y="435.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (124 samples, 0.17%)</title><rect x="768.7" y="419.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (124 samples, 0.17%)</title><rect x="768.7" y="403.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="771.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksDAOIterator.next (124 samples, 0.17%)</title><rect x="768.7" y="387.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksDAOIterator.hasNext (17 samples, 0.02%)</title><rect x="769.0" y="371.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="772.0" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (17 samples, 0.02%)</title><rect x="769.0" y="355.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="772.0" y="366.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (17 samples, 0.02%)</title><rect x="769.0" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="772.0" y="350.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.02%)</title><rect x="769.0" y="323.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="772.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordWithTimestampIterator.construct (87 samples, 0.12%)</title><rect x="769.3" y="371.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="772.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordWithTimestampIterator.construct (87 samples, 0.12%)</title><rect x="769.3" y="355.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="772.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.fromArrayShifted (37 samples, 0.05%)</title><rect x="769.3" y="339.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="772.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (26 samples, 0.04%)</title><rect x="769.3" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="772.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (26 samples, 0.04%)</title><rect x="769.3" y="307.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="772.3" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.04%)</title><rect x="769.3" y="291.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="772.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/timestamp/RecordWithTimestamp.fromBytes (42 samples, 0.06%)</title><rect x="769.9" y="339.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="772.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (26 samples, 0.04%)</title><rect x="769.9" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="772.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (26 samples, 0.04%)</title><rect x="769.9" y="307.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="772.9" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.04%)</title><rect x="769.9" y="291.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="772.9" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.timestamp.RecordWithTimestamp (16 samples, 0.02%)</title><rect x="770.3" y="323.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="773.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask$RunnableExecuteAction.exec (3,150 samples, 4.38%)</title><rect x="770.7" y="691.0" width="51.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="773.7" y="702.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$322/21500752.run (421 samples, 0.59%)</title><rect x="770.7" y="675.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="773.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (421 samples, 0.59%)</title><rect x="770.7" y="659.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (421 samples, 0.59%)</title><rect x="770.7" y="643.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="773.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (421 samples, 0.59%)</title><rect x="770.7" y="627.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="773.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (421 samples, 0.59%)</title><rect x="770.7" y="611.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="773.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (421 samples, 0.59%)</title><rect x="770.7" y="595.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="773.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (421 samples, 0.59%)</title><rect x="770.7" y="579.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (421 samples, 0.59%)</title><rect x="770.7" y="563.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (421 samples, 0.59%)</title><rect x="770.7" y="547.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="773.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (421 samples, 0.59%)</title><rect x="770.7" y="531.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (421 samples, 0.59%)</title><rect x="770.7" y="515.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="773.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (381 samples, 0.53%)</title><rect x="770.7" y="499.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="773.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.07%)</title><rect x="770.7" y="483.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.07%)</title><rect x="770.7" y="467.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="773.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$351/1197879810.get$Lambda (43 samples, 0.06%)</title><rect x="770.8" y="451.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$351 (43 samples, 0.06%)</title><rect x="770.8" y="435.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="773.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (332 samples, 0.46%)</title><rect x="771.5" y="483.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="774.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (25 samples, 0.03%)</title><rect x="771.5" y="467.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="774.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (307 samples, 0.43%)</title><rect x="771.9" y="467.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="774.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (307 samples, 0.43%)</title><rect x="771.9" y="451.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="774.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (307 samples, 0.43%)</title><rect x="771.9" y="435.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="774.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (108 samples, 0.15%)</title><rect x="771.9" y="419.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="774.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (37 samples, 0.05%)</title><rect x="771.9" y="403.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="774.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$339/516282602.apply (70 samples, 0.10%)</title><rect x="772.6" y="403.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="775.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (70 samples, 0.10%)</title><rect x="772.6" y="387.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="775.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (70 samples, 0.10%)</title><rect x="772.6" y="371.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="775.6" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (18 samples, 0.03%)</title><rect x="772.6" y="355.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="775.6" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (18 samples, 0.03%)</title><rect x="772.6" y="339.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="775.6" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (18 samples, 0.03%)</title><rect x="772.6" y="323.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="775.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (52 samples, 0.07%)</title><rect x="772.8" y="355.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="775.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (39 samples, 0.05%)</title><rect x="773.1" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="776.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (39 samples, 0.05%)</title><rect x="773.1" y="323.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.1" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (23 samples, 0.03%)</title><rect x="773.1" y="307.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="776.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.02%)</title><rect x="773.4" y="307.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="776.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.02%)</title><rect x="773.4" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.02%)</title><rect x="773.4" y="275.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="776.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (199 samples, 0.28%)</title><rect x="773.7" y="419.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="776.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (199 samples, 0.28%)</title><rect x="773.7" y="403.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$306/156009212.apply (199 samples, 0.28%)</title><rect x="773.7" y="387.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="776.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (199 samples, 0.28%)</title><rect x="773.7" y="371.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="776.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (199 samples, 0.28%)</title><rect x="773.7" y="355.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="776.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/1845834383.apply (199 samples, 0.28%)</title><rect x="773.7" y="339.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="776.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (199 samples, 0.28%)</title><rect x="773.7" y="323.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="776.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (45 samples, 0.06%)</title><rect x="773.9" y="307.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (45 samples, 0.06%)</title><rect x="773.9" y="291.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="776.9" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (25 samples, 0.03%)</title><rect x="773.9" y="275.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="776.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.03%)</title><rect x="774.3" y="275.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="777.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.03%)</title><rect x="774.3" y="259.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="777.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.03%)</title><rect x="774.3" y="243.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="777.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (60 samples, 0.08%)</title><rect x="774.7" y="307.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="777.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (54 samples, 0.08%)</title><rect x="774.7" y="291.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="777.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (54 samples, 0.08%)</title><rect x="774.7" y="275.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="777.7" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (32 samples, 0.04%)</title><rect x="774.7" y="259.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="777.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.03%)</title><rect x="775.3" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="778.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.03%)</title><rect x="775.3" y="243.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.3" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.03%)</title><rect x="775.3" y="227.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="778.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (82 samples, 0.11%)</title><rect x="775.6" y="307.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="778.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (49 samples, 0.07%)</title><rect x="775.6" y="291.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (25 samples, 0.03%)</title><rect x="775.6" y="275.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="778.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (24 samples, 0.03%)</title><rect x="776.0" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (24 samples, 0.03%)</title><rect x="776.0" y="259.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="779.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.03%)</title><rect x="776.0" y="243.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="779.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (33 samples, 0.05%)</title><rect x="776.4" y="291.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="779.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (17 samples, 0.02%)</title><rect x="776.4" y="275.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="779.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (16 samples, 0.02%)</title><rect x="776.7" y="275.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="779.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (16 samples, 0.02%)</title><rect x="776.7" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="779.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (16 samples, 0.02%)</title><rect x="776.7" y="243.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="779.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (16 samples, 0.02%)</title><rect x="776.7" y="227.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="779.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (16 samples, 0.02%)</title><rect x="776.7" y="211.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="779.7" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (16 samples, 0.02%)</title><rect x="776.7" y="195.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="779.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (40 samples, 0.06%)</title><rect x="777.0" y="499.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="780.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (40 samples, 0.06%)</title><rect x="777.0" y="483.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="780.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (40 samples, 0.06%)</title><rect x="777.0" y="467.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="780.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (40 samples, 0.06%)</title><rect x="777.0" y="451.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="780.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (40 samples, 0.06%)</title><rect x="777.0" y="435.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="780.0" y="446.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (40 samples, 0.06%)</title><rect x="777.0" y="419.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="780.0" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (27 samples, 0.04%)</title><rect x="777.2" y="403.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="780.2" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (27 samples, 0.04%)</title><rect x="777.2" y="387.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="780.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,729 samples, 3.79%)</title><rect x="777.6" y="675.0" width="44.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="780.6" y="686.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,729 samples, 3.79%)</title><rect x="777.6" y="659.0" width="44.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="780.6" y="670.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,506 samples, 3.48%)</title><rect x="777.6" y="643.0" width="41.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="780.6" y="654.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$272/309565785.run (2,506 samples, 3.48%)</title><rect x="777.6" y="627.0" width="41.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="780.6" y="638.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,506 samples, 3.48%)</title><rect x="777.6" y="611.0" width="41.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="780.6" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (48 samples, 0.07%)</title><rect x="777.6" y="595.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="780.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (48 samples, 0.07%)</title><rect x="777.6" y="579.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="780.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (48 samples, 0.07%)</title><rect x="777.6" y="563.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="780.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (48 samples, 0.07%)</title><rect x="777.6" y="547.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="780.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/112619572.linkToTargetMethod (29 samples, 0.04%)</title><rect x="777.6" y="531.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/827084938.invoke (29 samples, 0.04%)</title><rect x="777.6" y="515.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.04%)</title><rect x="777.6" y="499.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="780.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (29 samples, 0.04%)</title><rect x="777.6" y="483.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (29 samples, 0.04%)</title><rect x="777.6" y="467.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.6" y="478.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.04%)</title><rect x="777.6" y="451.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="780.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (19 samples, 0.03%)</title><rect x="778.1" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="781.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.03%)</title><rect x="778.1" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.03%)</title><rect x="778.1" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="781.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$324/475119356.get$Lambda (19 samples, 0.03%)</title><rect x="778.1" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="781.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$324 (19 samples, 0.03%)</title><rect x="778.1" y="467.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="781.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (28 samples, 0.04%)</title><rect x="778.4" y="595.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="781.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (28 samples, 0.04%)</title><rect x="778.4" y="579.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="781.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (28 samples, 0.04%)</title><rect x="778.4" y="563.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (28 samples, 0.04%)</title><rect x="778.4" y="547.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="781.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$ChunkedBodyParser.accept (28 samples, 0.04%)</title><rect x="778.4" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$ChunkedBodyParser.accept (28 samples, 0.04%)</title><rect x="778.4" y="515.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="781.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2,430 samples, 3.38%)</title><rect x="778.9" y="595.0" width="39.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="781.9" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2,430 samples, 3.38%)</title><rect x="778.9" y="579.0" width="39.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="781.9" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,430 samples, 3.38%)</title><rect x="778.9" y="563.0" width="39.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="781.9" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,430 samples, 3.38%)</title><rect x="778.9" y="547.0" width="39.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="781.9" y="558.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,246 samples, 1.73%)</title><rect x="778.9" y="531.0" width="20.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="781.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,246 samples, 1.73%)</title><rect x="778.9" y="515.0" width="20.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="781.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,246 samples, 1.73%)</title><rect x="778.9" y="499.0" width="20.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="781.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,246 samples, 1.73%)</title><rect x="778.9" y="483.0" width="20.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,246 samples, 1.73%)</title><rect x="778.9" y="467.0" width="20.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="781.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,246 samples, 1.73%)</title><rect x="778.9" y="451.0" width="20.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="781.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,246 samples, 1.73%)</title><rect x="778.9" y="435.0" width="20.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="781.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,218 samples, 1.69%)</title><rect x="778.9" y="419.0" width="20.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,218 samples, 1.69%)</title><rect x="778.9" y="403.0" width="20.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="781.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,186 samples, 1.65%)</title><rect x="778.9" y="387.0" width="19.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.9" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (23 samples, 0.03%)</title><rect x="778.9" y="371.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="781.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$182/2020955110.apply (1,099 samples, 1.53%)</title><rect x="779.5" y="371.0" width="18.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="782.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1,099 samples, 1.53%)</title><rect x="779.5" y="355.0" width="18.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="782.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.03%)</title><rect x="779.5" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.03%)</title><rect x="779.5" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$380/1245746287.get$Lambda (21 samples, 0.03%)</title><rect x="779.5" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="782.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$380 (21 samples, 0.03%)</title><rect x="779.5" y="291.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="782.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (44 samples, 0.06%)</title><rect x="779.8" y="339.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="782.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (44 samples, 0.06%)</title><rect x="779.8" y="323.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="782.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (22 samples, 0.03%)</title><rect x="779.8" y="307.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="782.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.03%)</title><rect x="780.2" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="783.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.03%)</title><rect x="780.2" y="291.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="783.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.03%)</title><rect x="780.2" y="275.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="783.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1,034 samples, 1.44%)</title><rect x="780.6" y="339.0" width="16.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.02%)</title><rect x="780.6" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="783.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.02%)</title><rect x="780.6" y="307.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="783.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$378/1008780653.get$Lambda (17 samples, 0.02%)</title><rect x="780.6" y="291.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="783.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$378 (17 samples, 0.02%)</title><rect x="780.6" y="275.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="783.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (65 samples, 0.09%)</title><rect x="780.9" y="323.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="783.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (65 samples, 0.09%)</title><rect x="780.9" y="307.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="783.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (34 samples, 0.05%)</title><rect x="780.9" y="291.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="783.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.04%)</title><rect x="781.4" y="291.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="784.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.04%)</title><rect x="781.4" y="275.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (31 samples, 0.04%)</title><rect x="781.4" y="259.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="784.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (952 samples, 1.32%)</title><rect x="781.9" y="323.0" width="15.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="784.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseInfoImpl (17 samples, 0.02%)</title><rect x="781.9" y="307.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="784.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (935 samples, 1.30%)</title><rect x="782.2" y="307.0" width="15.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="785.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.03%)</title><rect x="782.2" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="785.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.03%)</title><rect x="782.2" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="785.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1531097765.linkToTargetMethod (37 samples, 0.05%)</title><rect x="782.5" y="291.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="785.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/774581482.invokeStatic (37 samples, 0.05%)</title><rect x="782.5" y="275.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="785.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$366/2082601169.get$Lambda (37 samples, 0.05%)</title><rect x="782.5" y="259.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="785.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$366 (37 samples, 0.05%)</title><rect x="782.5" y="243.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="785.5" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (127 samples, 0.18%)</title><rect x="783.1" y="291.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="786.1" y="302.0"></text>
</g>
<g>
<title>java/util/Collection.stream (52 samples, 0.07%)</title><rect x="783.1" y="275.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="786.1" y="286.0"></text>
</g>
<g>
<title>java/util/List.spliterator (17 samples, 0.02%)</title><rect x="783.1" y="259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="786.1" y="270.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (17 samples, 0.02%)</title><rect x="783.1" y="243.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="786.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (35 samples, 0.05%)</title><rect x="783.4" y="259.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="786.4" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (35 samples, 0.05%)</title><rect x="783.4" y="243.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="786.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (34 samples, 0.05%)</title><rect x="784.0" y="275.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="787.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (34 samples, 0.05%)</title><rect x="784.0" y="259.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="787.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (34 samples, 0.05%)</title><rect x="784.0" y="243.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="787.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (20 samples, 0.03%)</title><rect x="784.0" y="227.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="787.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (20 samples, 0.03%)</title><rect x="784.0" y="211.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="787.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (20 samples, 0.03%)</title><rect x="784.0" y="195.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="787.0" y="206.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (20 samples, 0.03%)</title><rect x="784.0" y="179.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="787.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (41 samples, 0.06%)</title><rect x="784.5" y="275.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="787.5" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (41 samples, 0.06%)</title><rect x="784.5" y="259.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="787.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (95 samples, 0.13%)</title><rect x="785.2" y="291.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (51 samples, 0.07%)</title><rect x="785.2" y="275.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.2" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (32 samples, 0.04%)</title><rect x="785.2" y="259.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="788.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.03%)</title><rect x="785.7" y="259.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="788.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.03%)</title><rect x="785.7" y="243.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="788.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.03%)</title><rect x="785.7" y="227.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="788.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (44 samples, 0.06%)</title><rect x="786.0" y="275.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="789.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (44 samples, 0.06%)</title><rect x="786.0" y="259.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="789.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (25 samples, 0.03%)</title><rect x="786.0" y="243.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="789.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (19 samples, 0.03%)</title><rect x="786.4" y="243.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="789.4" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (19 samples, 0.03%)</title><rect x="786.4" y="227.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="789.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.04%)</title><rect x="787.2" y="291.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="790.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.fixupContentLen (80 samples, 0.11%)</title><rect x="787.8" y="291.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="790.8" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (80 samples, 0.11%)</title><rect x="787.8" y="275.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="790.8" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (60 samples, 0.08%)</title><rect x="787.8" y="259.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="790.8" y="270.0"></text>
</g>
<g>
<title>java/util/List.spliterator (25 samples, 0.03%)</title><rect x="787.8" y="243.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="790.8" y="254.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (25 samples, 0.03%)</title><rect x="787.8" y="227.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="790.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (35 samples, 0.05%)</title><rect x="788.2" y="243.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="791.2" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (35 samples, 0.05%)</title><rect x="788.2" y="227.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="791.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (20 samples, 0.03%)</title><rect x="788.8" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (20 samples, 0.03%)</title><rect x="788.8" y="243.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (20 samples, 0.03%)</title><rect x="788.8" y="227.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="791.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (467 samples, 0.65%)</title><rect x="789.1" y="291.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="792.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$366/2082601169.run (467 samples, 0.65%)</title><rect x="789.1" y="275.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (467 samples, 0.65%)</title><rect x="789.1" y="259.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.08%)</title><rect x="789.1" y="243.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="792.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.08%)</title><rect x="789.1" y="227.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="792.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$372/1105543368.get$Lambda (31 samples, 0.04%)</title><rect x="789.5" y="211.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="792.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$372 (31 samples, 0.04%)</title><rect x="789.5" y="195.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="792.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (70 samples, 0.10%)</title><rect x="790.1" y="243.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="793.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (70 samples, 0.10%)</title><rect x="790.1" y="227.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="793.1" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (46 samples, 0.06%)</title><rect x="790.1" y="211.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="793.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.03%)</title><rect x="790.8" y="211.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="793.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.03%)</title><rect x="790.8" y="195.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="793.8" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.03%)</title><rect x="790.8" y="179.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="793.8" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (20 samples, 0.03%)</title><rect x="791.2" y="243.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="794.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (25 samples, 0.03%)</title><rect x="791.5" y="243.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.03%)</title><rect x="791.5" y="227.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="794.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (51 samples, 0.07%)</title><rect x="791.9" y="243.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="794.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (51 samples, 0.07%)</title><rect x="791.9" y="227.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="794.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.03%)</title><rect x="791.9" y="211.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.03%)</title><rect x="791.9" y="195.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="794.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$373/2051619203.get$Lambda (18 samples, 0.03%)</title><rect x="791.9" y="179.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="794.9" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$373 (18 samples, 0.03%)</title><rect x="791.9" y="163.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="794.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (33 samples, 0.05%)</title><rect x="792.2" y="211.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (33 samples, 0.05%)</title><rect x="792.2" y="195.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="795.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (33 samples, 0.05%)</title><rect x="792.2" y="179.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.2" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (16 samples, 0.02%)</title><rect x="792.2" y="163.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="795.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.02%)</title><rect x="792.5" y="163.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="795.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.02%)</title><rect x="792.5" y="147.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="795.5" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.02%)</title><rect x="792.5" y="131.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="795.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (53 samples, 0.07%)</title><rect x="792.8" y="243.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="795.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.07%)</title><rect x="792.8" y="227.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="795.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/101775274.invoke (53 samples, 0.07%)</title><rect x="792.8" y="211.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="795.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.07%)</title><rect x="792.8" y="195.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (44 samples, 0.06%)</title><rect x="792.9" y="179.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="795.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (44 samples, 0.06%)</title><rect x="792.9" y="163.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.9" y="174.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.06%)</title><rect x="792.9" y="147.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="795.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (191 samples, 0.27%)</title><rect x="793.6" y="243.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="796.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$ChunkedBodyParser (52 samples, 0.07%)</title><rect x="793.6" y="227.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="796.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$ChunkedBodyParser.&lt;init&gt; (67 samples, 0.09%)</title><rect x="794.5" y="227.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="797.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (67 samples, 0.09%)</title><rect x="794.5" y="211.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="797.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/400785596.invoke (67 samples, 0.09%)</title><rect x="794.5" y="195.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (67 samples, 0.09%)</title><rect x="794.5" y="179.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="797.5" y="190.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (18 samples, 0.03%)</title><rect x="794.5" y="163.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="797.5" y="174.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.03%)</title><rect x="794.5" y="147.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="797.5" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (49 samples, 0.07%)</title><rect x="794.8" y="163.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="797.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (49 samples, 0.07%)</title><rect x="794.8" y="147.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="797.8" y="158.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.07%)</title><rect x="794.8" y="131.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="797.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.contentChunked (72 samples, 0.10%)</title><rect x="795.6" y="227.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="798.6" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (72 samples, 0.10%)</title><rect x="795.6" y="211.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="798.6" y="222.0"></text>
</g>
<g>
<title>java/util/Collection.stream (51 samples, 0.07%)</title><rect x="795.6" y="195.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="798.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (36 samples, 0.05%)</title><rect x="795.8" y="179.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="798.8" y="190.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (36 samples, 0.05%)</title><rect x="795.8" y="163.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="798.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (21 samples, 0.03%)</title><rect x="796.4" y="195.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="799.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (21 samples, 0.03%)</title><rect x="796.4" y="179.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (21 samples, 0.03%)</title><rect x="796.4" y="163.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub.getBody (46 samples, 0.06%)</title><rect x="796.8" y="291.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (37 samples, 0.05%)</title><rect x="796.9" y="275.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="799.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (37 samples, 0.05%)</title><rect x="796.9" y="259.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.9" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (26 samples, 0.04%)</title><rect x="796.9" y="243.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="799.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$307/1458980780.apply (49 samples, 0.07%)</title><rect x="797.5" y="371.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="800.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (49 samples, 0.07%)</title><rect x="797.5" y="355.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="800.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (21 samples, 0.03%)</title><rect x="797.5" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="800.5" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (21 samples, 0.03%)</title><rect x="797.5" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="800.5" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (21 samples, 0.03%)</title><rect x="797.5" y="307.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="800.5" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (21 samples, 0.03%)</title><rect x="797.5" y="291.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="800.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (28 samples, 0.04%)</title><rect x="797.9" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="800.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.04%)</title><rect x="797.9" y="323.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="800.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (32 samples, 0.04%)</title><rect x="798.3" y="387.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="801.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (32 samples, 0.04%)</title><rect x="798.3" y="371.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="801.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$309/994079980.apply (32 samples, 0.04%)</title><rect x="798.3" y="355.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="801.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (32 samples, 0.04%)</title><rect x="798.3" y="339.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="801.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (32 samples, 0.04%)</title><rect x="798.3" y="323.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="801.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (32 samples, 0.04%)</title><rect x="798.3" y="307.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="801.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$354/391694035.apply (28 samples, 0.04%)</title><rect x="798.9" y="419.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="801.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (28 samples, 0.04%)</title><rect x="798.9" y="403.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="801.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (28 samples, 0.04%)</title><rect x="798.9" y="387.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="801.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1,184 samples, 1.65%)</title><rect x="799.3" y="531.0" width="19.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="802.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (96 samples, 0.13%)</title><rect x="799.3" y="515.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="802.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (96 samples, 0.13%)</title><rect x="799.3" y="499.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="802.3" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (96 samples, 0.13%)</title><rect x="799.3" y="483.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.3" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (96 samples, 0.13%)</title><rect x="799.3" y="467.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="802.3" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (96 samples, 0.13%)</title><rect x="799.3" y="451.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="802.3" y="462.0"></text>
</g>
<g>
<title>byte[] (96 samples, 0.13%)</title><rect x="799.3" y="435.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="802.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (100 samples, 0.14%)</title><rect x="800.9" y="515.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="803.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (17 samples, 0.02%)</title><rect x="801.1" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17 samples, 0.02%)</title><rect x="801.1" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="804.1" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.02%)</title><rect x="801.1" y="467.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.1" y="478.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.02%)</title><rect x="801.1" y="451.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="804.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (21 samples, 0.03%)</title><rect x="801.4" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="804.4" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (21 samples, 0.03%)</title><rect x="801.4" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="804.4" y="494.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.03%)</title><rect x="801.4" y="467.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="804.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (50 samples, 0.07%)</title><rect x="801.7" y="499.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="804.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (50 samples, 0.07%)</title><rect x="801.7" y="483.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="804.7" y="494.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.04%)</title><rect x="801.7" y="467.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="804.7" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.03%)</title><rect x="802.2" y="467.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="805.2" y="478.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.03%)</title><rect x="802.2" y="451.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="805.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (367 samples, 0.51%)</title><rect x="802.5" y="515.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="805.5" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (367 samples, 0.51%)</title><rect x="802.5" y="499.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="805.5" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (367 samples, 0.51%)</title><rect x="802.5" y="483.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="805.5" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (18 samples, 0.03%)</title><rect x="802.8" y="467.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="805.8" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (40 samples, 0.06%)</title><rect x="803.1" y="467.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="806.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.03%)</title><rect x="804.0" y="467.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.03%)</title><rect x="804.0" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="807.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/1966280024.get$Lambda (20 samples, 0.03%)</title><rect x="804.0" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.0" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$151 (20 samples, 0.03%)</title><rect x="804.0" y="419.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="807.0" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (24 samples, 0.03%)</title><rect x="804.3" y="467.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="807.3" y="478.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (24 samples, 0.03%)</title><rect x="804.3" y="451.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="807.3" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (195 samples, 0.27%)</title><rect x="804.7" y="467.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="807.7" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/1966280024.accept (195 samples, 0.27%)</title><rect x="804.7" y="451.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.7" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (195 samples, 0.27%)</title><rect x="804.7" y="435.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="807.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 0.06%)</title><rect x="804.7" y="419.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 0.06%)</title><rect x="804.7" y="403.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="807.7" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$156/142789664.get$Lambda (41 samples, 0.06%)</title><rect x="804.7" y="387.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.7" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$156 (41 samples, 0.06%)</title><rect x="804.7" y="371.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="807.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (33 samples, 0.05%)</title><rect x="805.4" y="419.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="808.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$156/142789664.accept (33 samples, 0.05%)</title><rect x="805.4" y="403.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="808.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (33 samples, 0.05%)</title><rect x="805.4" y="387.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="808.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (33 samples, 0.05%)</title><rect x="805.4" y="371.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (33 samples, 0.05%)</title><rect x="805.4" y="355.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="808.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (33 samples, 0.05%)</title><rect x="805.4" y="339.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="808.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (33 samples, 0.05%)</title><rect x="805.4" y="323.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.4" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (33 samples, 0.05%)</title><rect x="805.4" y="307.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="808.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.05%)</title><rect x="805.4" y="291.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="808.4" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (56 samples, 0.08%)</title><rect x="805.9" y="419.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="808.9" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (56 samples, 0.08%)</title><rect x="805.9" y="403.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.9" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (20 samples, 0.03%)</title><rect x="805.9" y="387.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="808.9" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (20 samples, 0.03%)</title><rect x="805.9" y="371.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="808.9" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.03%)</title><rect x="805.9" y="355.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="808.9" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (36 samples, 0.05%)</title><rect x="806.2" y="387.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="809.2" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (36 samples, 0.05%)</title><rect x="806.2" y="371.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="809.2" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (65 samples, 0.09%)</title><rect x="806.8" y="419.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.8" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (65 samples, 0.09%)</title><rect x="806.8" y="403.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="809.8" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (41 samples, 0.06%)</title><rect x="807.9" y="467.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="810.9" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (41 samples, 0.06%)</title><rect x="807.9" y="451.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="810.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (621 samples, 0.86%)</title><rect x="808.6" y="515.0" width="10.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="811.6" y="526.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (26 samples, 0.04%)</title><rect x="808.6" y="499.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="811.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (33 samples, 0.05%)</title><rect x="809.0" y="499.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="812.0" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (33 samples, 0.05%)</title><rect x="809.0" y="483.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="812.0" y="494.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.05%)</title><rect x="809.0" y="467.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="812.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (88 samples, 0.12%)</title><rect x="809.5" y="499.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="812.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (88 samples, 0.12%)</title><rect x="809.5" y="483.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="812.5" y="494.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.05%)</title><rect x="809.5" y="467.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="812.5" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (55 samples, 0.08%)</title><rect x="810.1" y="467.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="813.1" y="478.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.08%)</title><rect x="810.1" y="451.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="813.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (474 samples, 0.66%)</title><rect x="811.0" y="499.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="814.0" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (133 samples, 0.18%)</title><rect x="811.0" y="483.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="814.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (133 samples, 0.18%)</title><rect x="811.0" y="467.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="814.0" y="478.0"></text>
</g>
<g>
<title>java.lang.String (50 samples, 0.07%)</title><rect x="811.0" y="451.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="814.0" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (83 samples, 0.12%)</title><rect x="811.8" y="451.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="814.8" y="462.0"></text>
</g>
<g>
<title>byte[] (83 samples, 0.12%)</title><rect x="811.8" y="435.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="814.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (78 samples, 0.11%)</title><rect x="813.1" y="483.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="816.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (78 samples, 0.11%)</title><rect x="813.1" y="467.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="816.1" y="478.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.07%)</title><rect x="813.1" y="451.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="816.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.04%)</title><rect x="813.9" y="451.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="816.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.trim (58 samples, 0.08%)</title><rect x="814.4" y="483.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="817.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (58 samples, 0.08%)</title><rect x="814.4" y="467.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="817.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (58 samples, 0.08%)</title><rect x="814.4" y="451.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="817.4" y="462.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.03%)</title><rect x="814.4" y="435.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="817.4" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (34 samples, 0.05%)</title><rect x="814.8" y="435.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="817.8" y="446.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.05%)</title><rect x="814.8" y="419.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="817.8" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (74 samples, 0.10%)</title><rect x="815.4" y="483.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="818.4" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (74 samples, 0.10%)</title><rect x="815.4" y="467.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="818.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (74 samples, 0.10%)</title><rect x="815.4" y="451.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="818.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (74 samples, 0.10%)</title><rect x="815.4" y="435.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="818.4" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (74 samples, 0.10%)</title><rect x="815.4" y="419.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="818.4" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (74 samples, 0.10%)</title><rect x="815.4" y="403.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="818.4" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (131 samples, 0.18%)</title><rect x="816.6" y="483.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="819.6" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (48 samples, 0.07%)</title><rect x="816.6" y="467.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.6" y="478.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (48 samples, 0.07%)</title><rect x="816.6" y="451.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="819.6" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (55 samples, 0.08%)</title><rect x="817.4" y="467.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="820.4" y="478.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (55 samples, 0.08%)</title><rect x="817.4" y="451.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="820.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$357/1542623573.apply (28 samples, 0.04%)</title><rect x="818.3" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="821.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (28 samples, 0.04%)</title><rect x="818.3" y="451.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="821.3" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (28 samples, 0.04%)</title><rect x="818.3" y="435.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="821.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (223 samples, 0.31%)</title><rect x="818.7" y="643.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="821.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (223 samples, 0.31%)</title><rect x="818.7" y="627.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="821.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (223 samples, 0.31%)</title><rect x="818.7" y="611.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="821.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$272/309565785.run (223 samples, 0.31%)</title><rect x="818.7" y="595.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="821.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (223 samples, 0.31%)</title><rect x="818.7" y="579.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="821.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (173 samples, 0.24%)</title><rect x="818.7" y="563.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="821.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.04%)</title><rect x="818.7" y="547.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="821.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.04%)</title><rect x="818.7" y="531.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="821.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$296/1194036443.get$Lambda (17 samples, 0.02%)</title><rect x="818.9" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="821.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$296 (17 samples, 0.02%)</title><rect x="818.9" y="499.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="821.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (25 samples, 0.03%)</title><rect x="819.2" y="547.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="822.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (24 samples, 0.03%)</title><rect x="819.6" y="547.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="822.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (24 samples, 0.03%)</title><rect x="819.6" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="822.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (96 samples, 0.13%)</title><rect x="820.0" y="547.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="823.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$ChunkedBodyParser.onSubscribe (96 samples, 0.13%)</title><rect x="820.0" y="531.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="823.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (96 samples, 0.13%)</title><rect x="820.0" y="515.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="823.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub.onSubscribe (96 samples, 0.13%)</title><rect x="820.0" y="499.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="823.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (96 samples, 0.13%)</title><rect x="820.0" y="483.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (96 samples, 0.13%)</title><rect x="820.0" y="467.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="823.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (58 samples, 0.08%)</title><rect x="820.0" y="451.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="823.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub$$Lambda$417/1721017173.apply (58 samples, 0.08%)</title><rect x="820.0" y="435.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="823.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub.lambda$getBody$3 (58 samples, 0.08%)</title><rect x="820.0" y="419.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (27 samples, 0.04%)</title><rect x="820.0" y="403.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="823.0" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (27 samples, 0.04%)</title><rect x="820.0" y="387.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="823.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (31 samples, 0.04%)</title><rect x="820.4" y="403.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="823.4" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (31 samples, 0.04%)</title><rect x="820.4" y="387.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="823.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (38 samples, 0.05%)</title><rect x="821.0" y="451.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="824.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (38 samples, 0.05%)</title><rect x="821.0" y="435.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="824.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$375/630615954.accept (38 samples, 0.05%)</title><rect x="821.0" y="419.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (38 samples, 0.05%)</title><rect x="821.0" y="403.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="824.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (38 samples, 0.05%)</title><rect x="821.0" y="387.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="824.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (38 samples, 0.05%)</title><rect x="821.0" y="371.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="824.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (38 samples, 0.05%)</title><rect x="821.0" y="355.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="824.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$380/1245746287.apply (38 samples, 0.05%)</title><rect x="821.0" y="339.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="824.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (38 samples, 0.05%)</title><rect x="821.0" y="323.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="824.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (38 samples, 0.05%)</title><rect x="821.0" y="307.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="824.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (47 samples, 0.07%)</title><rect x="821.6" y="563.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="824.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (47 samples, 0.07%)</title><rect x="821.6" y="547.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="824.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (47 samples, 0.07%)</title><rect x="821.6" y="531.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="824.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (47 samples, 0.07%)</title><rect x="821.6" y="515.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="824.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$ChunkedBodyParser.accept (47 samples, 0.07%)</title><rect x="821.6" y="499.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="824.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$ChunkedBodyParser.accept (47 samples, 0.07%)</title><rect x="821.6" y="483.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="824.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$367/1609374688.run (20 samples, 0.03%)</title><rect x="821.6" y="467.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="824.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (20 samples, 0.03%)</title><rect x="821.6" y="451.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (20 samples, 0.03%)</title><rect x="821.6" y="435.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="824.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (19 samples, 0.03%)</title><rect x="822.0" y="467.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="825.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (19 samples, 0.03%)</title><rect x="822.0" y="451.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="825.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub.onNext (19 samples, 0.03%)</title><rect x="822.0" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="825.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Stub.onNext (19 samples, 0.03%)</title><rect x="822.0" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="825.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (2,606 samples, 3.62%)</title><rect x="822.4" y="771.0" width="42.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="825.4" y="782.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (80 samples, 0.11%)</title><rect x="822.4" y="755.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="825.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (80 samples, 0.11%)</title><rect x="822.4" y="739.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="825.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$311/888283439.get$Lambda (48 samples, 0.07%)</title><rect x="822.4" y="723.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="825.4" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$311 (48 samples, 0.07%)</title><rect x="822.4" y="707.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="825.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$313/1669323621.get$Lambda (17 samples, 0.02%)</title><rect x="823.2" y="723.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="826.2" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$313 (17 samples, 0.02%)</title><rect x="823.2" y="707.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="826.2" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1943325854.linkToTargetMethod (54 samples, 0.08%)</title><rect x="823.7" y="755.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="826.7" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.08%)</title><rect x="823.7" y="739.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="826.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$312/652492928.get$Lambda (54 samples, 0.08%)</title><rect x="823.7" y="723.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="826.7" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$312 (54 samples, 0.08%)</title><rect x="823.7" y="707.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="826.7" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (711 samples, 0.99%)</title><rect x="824.6" y="755.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="827.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$313/1669323621.accept (602 samples, 0.84%)</title><rect x="824.6" y="739.0" width="9.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (602 samples, 0.84%)</title><rect x="824.6" y="723.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="827.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (602 samples, 0.84%)</title><rect x="824.6" y="707.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="827.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (602 samples, 0.84%)</title><rect x="824.6" y="691.0" width="9.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="827.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (602 samples, 0.84%)</title><rect x="824.6" y="675.0" width="9.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="827.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (602 samples, 0.84%)</title><rect x="824.6" y="659.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="827.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (602 samples, 0.84%)</title><rect x="824.6" y="643.0" width="9.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="827.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (602 samples, 0.84%)</title><rect x="824.6" y="627.0" width="9.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="827.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (602 samples, 0.84%)</title><rect x="824.6" y="611.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="827.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (602 samples, 0.84%)</title><rect x="824.6" y="595.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="827.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$264/1333168607.run (602 samples, 0.84%)</title><rect x="824.6" y="579.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="827.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (602 samples, 0.84%)</title><rect x="824.6" y="563.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="827.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (136 samples, 0.19%)</title><rect x="824.6" y="547.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="827.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (136 samples, 0.19%)</title><rect x="824.6" y="531.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="827.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (136 samples, 0.19%)</title><rect x="824.6" y="515.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="827.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (63 samples, 0.09%)</title><rect x="824.6" y="499.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="827.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (63 samples, 0.09%)</title><rect x="824.6" y="483.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="827.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (63 samples, 0.09%)</title><rect x="824.6" y="467.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="827.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (63 samples, 0.09%)</title><rect x="824.6" y="451.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (63 samples, 0.09%)</title><rect x="824.6" y="435.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="827.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (73 samples, 0.10%)</title><rect x="825.6" y="499.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (73 samples, 0.10%)</title><rect x="825.6" y="483.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="828.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (73 samples, 0.10%)</title><rect x="825.6" y="467.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="828.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (73 samples, 0.10%)</title><rect x="825.6" y="451.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ForkJoinTask$RunnableExecuteAction (73 samples, 0.10%)</title><rect x="825.6" y="435.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="828.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (48 samples, 0.07%)</title><rect x="826.8" y="547.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="829.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.07%)</title><rect x="826.8" y="531.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="829.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.07%)</title><rect x="826.8" y="515.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="829.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$324/475119356.get$Lambda (48 samples, 0.07%)</title><rect x="826.8" y="499.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="829.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$324 (48 samples, 0.07%)</title><rect x="826.8" y="483.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="829.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (418 samples, 0.58%)</title><rect x="827.6" y="547.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (193 samples, 0.27%)</title><rect x="827.6" y="531.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.6" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (124 samples, 0.17%)</title><rect x="827.6" y="515.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.6" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (124 samples, 0.17%)</title><rect x="827.6" y="499.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="830.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (69 samples, 0.10%)</title><rect x="829.6" y="515.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.6" y="526.0"></text>
</g>
<g>
<title>java/util/List.of (69 samples, 0.10%)</title><rect x="829.6" y="499.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="832.6" y="510.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (69 samples, 0.10%)</title><rect x="829.6" y="483.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="832.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (225 samples, 0.31%)</title><rect x="830.8" y="531.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="833.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$260/1671294764.get (225 samples, 0.31%)</title><rect x="830.8" y="515.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="833.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (225 samples, 0.31%)</title><rect x="830.8" y="499.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="833.8" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (225 samples, 0.31%)</title><rect x="830.8" y="483.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="833.8" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (225 samples, 0.31%)</title><rect x="830.8" y="467.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="833.8" y="478.0"></text>
</g>
<g>
<title>byte[] (216 samples, 0.30%)</title><rect x="830.9" y="451.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="833.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$316/607381770.accept (109 samples, 0.15%)</title><rect x="834.5" y="739.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="837.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (109 samples, 0.15%)</title><rect x="834.5" y="723.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="837.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$312/652492928.run (109 samples, 0.15%)</title><rect x="834.5" y="707.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="837.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (109 samples, 0.15%)</title><rect x="834.5" y="691.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="837.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (109 samples, 0.15%)</title><rect x="834.5" y="675.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="837.5" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (109 samples, 0.15%)</title><rect x="834.5" y="659.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="837.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (109 samples, 0.15%)</title><rect x="834.5" y="643.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="837.5" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (109 samples, 0.15%)</title><rect x="834.5" y="627.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="837.5" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (100 samples, 0.14%)</title><rect x="836.3" y="755.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.3" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (100 samples, 0.14%)</title><rect x="836.3" y="739.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="839.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (145 samples, 0.20%)</title><rect x="837.9" y="755.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.9" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (66 samples, 0.09%)</title><rect x="837.9" y="739.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="840.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (66 samples, 0.09%)</title><rect x="837.9" y="723.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="840.9" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (66 samples, 0.09%)</title><rect x="837.9" y="707.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="840.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (66 samples, 0.09%)</title><rect x="837.9" y="691.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="840.9" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (66 samples, 0.09%)</title><rect x="837.9" y="675.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="840.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (66 samples, 0.09%)</title><rect x="837.9" y="659.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="840.9" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (66 samples, 0.09%)</title><rect x="837.9" y="643.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="840.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (79 samples, 0.11%)</title><rect x="839.0" y="739.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="842.0" y="750.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (79 samples, 0.11%)</title><rect x="839.0" y="723.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="842.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (360 samples, 0.50%)</title><rect x="840.3" y="755.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="843.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$266/1532864534.run (169 samples, 0.23%)</title><rect x="840.3" y="739.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="843.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (169 samples, 0.23%)</title><rect x="840.3" y="723.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="843.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (169 samples, 0.23%)</title><rect x="840.3" y="707.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="843.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (169 samples, 0.23%)</title><rect x="840.3" y="691.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="843.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (169 samples, 0.23%)</title><rect x="840.3" y="675.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (169 samples, 0.23%)</title><rect x="840.3" y="659.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="843.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$264/1333168607.run (169 samples, 0.23%)</title><rect x="840.3" y="643.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="843.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (169 samples, 0.23%)</title><rect x="840.3" y="627.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="843.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (169 samples, 0.23%)</title><rect x="840.3" y="611.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="843.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (169 samples, 0.23%)</title><rect x="840.3" y="595.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="843.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (120 samples, 0.17%)</title><rect x="840.3" y="579.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="843.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (120 samples, 0.17%)</title><rect x="840.3" y="563.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="843.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (120 samples, 0.17%)</title><rect x="840.3" y="547.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="843.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/112619572.linkToTargetMethod (89 samples, 0.12%)</title><rect x="840.3" y="531.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="843.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/827084938.invoke (89 samples, 0.12%)</title><rect x="840.3" y="515.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="843.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (89 samples, 0.12%)</title><rect x="840.3" y="499.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="843.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (89 samples, 0.12%)</title><rect x="840.3" y="483.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="843.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (89 samples, 0.12%)</title><rect x="840.3" y="467.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="843.3" y="478.0"></text>
</g>
<g>
<title>byte[] (89 samples, 0.12%)</title><rect x="840.3" y="451.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="843.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (31 samples, 0.04%)</title><rect x="841.7" y="531.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="844.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.04%)</title><rect x="841.7" y="515.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="844.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.04%)</title><rect x="841.7" y="499.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="844.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$324/475119356.get$Lambda (31 samples, 0.04%)</title><rect x="841.7" y="483.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="844.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$324 (31 samples, 0.04%)</title><rect x="841.7" y="467.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="844.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (49 samples, 0.07%)</title><rect x="842.2" y="579.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="845.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (49 samples, 0.07%)</title><rect x="842.2" y="563.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (49 samples, 0.07%)</title><rect x="842.2" y="547.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (49 samples, 0.07%)</title><rect x="842.2" y="531.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (49 samples, 0.07%)</title><rect x="842.2" y="515.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="845.2" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.ForkJoinTask$RunnableExecuteAction (49 samples, 0.07%)</title><rect x="842.2" y="499.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="845.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$268/835958608.run (191 samples, 0.27%)</title><rect x="843.0" y="739.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="846.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (191 samples, 0.27%)</title><rect x="843.0" y="723.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="846.0" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (76 samples, 0.11%)</title><rect x="843.0" y="707.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="846.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (76 samples, 0.11%)</title><rect x="843.0" y="691.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="846.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$322/21500752.get$Lambda (76 samples, 0.11%)</title><rect x="843.0" y="675.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="846.0" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$322 (76 samples, 0.11%)</title><rect x="843.0" y="659.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="846.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (115 samples, 0.16%)</title><rect x="844.3" y="707.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="847.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (115 samples, 0.16%)</title><rect x="844.3" y="691.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="847.3" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.ForkJoinTask$RunnableExecuteAction (115 samples, 0.16%)</title><rect x="844.3" y="675.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="847.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (384 samples, 0.53%)</title><rect x="846.2" y="755.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="849.2" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.now (62 samples, 0.09%)</title><rect x="846.2" y="739.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="849.2" y="750.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (62 samples, 0.09%)</title><rect x="846.2" y="723.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="849.2" y="734.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (62 samples, 0.09%)</title><rect x="846.2" y="707.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="849.2" y="718.0"></text>
</g>
<g>
<title>java/time/Instant.create (62 samples, 0.09%)</title><rect x="846.2" y="691.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="849.2" y="702.0"></text>
</g>
<g>
<title>java.time.Instant (62 samples, 0.09%)</title><rect x="846.2" y="675.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="849.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (322 samples, 0.45%)</title><rect x="847.2" y="739.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="850.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.06%)</title><rect x="847.2" y="723.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="850.2" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.06%)</title><rect x="847.2" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$384/2120123075.get$Lambda (44 samples, 0.06%)</title><rect x="847.2" y="691.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="850.2" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$384 (44 samples, 0.06%)</title><rect x="847.2" y="675.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="850.2" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (80 samples, 0.11%)</title><rect x="847.9" y="723.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.9" y="734.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (80 samples, 0.11%)</title><rect x="847.9" y="707.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="850.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (38 samples, 0.05%)</title><rect x="849.2" y="723.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="852.2" y="734.0"></text>
</g>
<g>
<title>java/util/Optional.of (38 samples, 0.05%)</title><rect x="849.2" y="707.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="852.2" y="718.0"></text>
</g>
<g>
<title>java.util.Optional (38 samples, 0.05%)</title><rect x="849.2" y="691.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="852.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (160 samples, 0.22%)</title><rect x="849.9" y="723.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="852.9" y="734.0"></text>
</g>
<g>
<title>java.util.ArrayList (67 samples, 0.09%)</title><rect x="849.9" y="707.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="852.9" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (93 samples, 0.13%)</title><rect x="850.9" y="707.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="853.9" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (93 samples, 0.13%)</title><rect x="850.9" y="691.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="853.9" y="702.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (93 samples, 0.13%)</title><rect x="850.9" y="675.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="853.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (524 samples, 0.73%)</title><rect x="852.5" y="755.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="855.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (42 samples, 0.06%)</title><rect x="852.5" y="739.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="855.5" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (42 samples, 0.06%)</title><rect x="852.5" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$310/1238471144.get$Lambda (42 samples, 0.06%)</title><rect x="852.5" y="707.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.5" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$310 (42 samples, 0.06%)</title><rect x="852.5" y="691.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="855.5" y="702.0"></text>
</g>
<g>
<title>java/util/Collection.stream (287 samples, 0.40%)</title><rect x="853.2" y="739.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.2" y="750.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (135 samples, 0.19%)</title><rect x="853.2" y="723.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="856.2" y="734.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (135 samples, 0.19%)</title><rect x="853.2" y="707.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="856.2" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (152 samples, 0.21%)</title><rect x="855.4" y="723.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="858.4" y="734.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (151 samples, 0.21%)</title><rect x="855.4" y="707.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="858.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (195 samples, 0.27%)</title><rect x="857.9" y="739.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="860.9" y="750.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (193 samples, 0.27%)</title><rect x="857.9" y="723.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="860.9" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (145 samples, 0.20%)</title><rect x="861.1" y="755.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="864.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (145 samples, 0.20%)</title><rect x="861.1" y="739.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="864.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (145 samples, 0.20%)</title><rect x="861.1" y="723.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="864.1" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (140 samples, 0.19%)</title><rect x="861.1" y="707.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="864.1" y="718.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (48 samples, 0.07%)</title><rect x="861.1" y="691.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="864.1" y="702.0"></text>
</g>
<g>
<title>java.lang.Integer (48 samples, 0.07%)</title><rect x="861.1" y="675.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="864.1" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (92 samples, 0.13%)</title><rect x="861.9" y="691.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="864.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.add (92 samples, 0.13%)</title><rect x="861.9" y="675.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="864.9" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.put (92 samples, 0.13%)</title><rect x="861.9" y="659.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="864.9" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (92 samples, 0.13%)</title><rect x="861.9" y="643.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="864.9" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (92 samples, 0.13%)</title><rect x="861.9" y="627.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="864.9" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (92 samples, 0.13%)</title><rect x="861.9" y="611.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="864.9" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (59 samples, 0.08%)</title><rect x="863.4" y="755.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="866.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (59 samples, 0.08%)</title><rect x="863.4" y="739.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="866.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (59 samples, 0.08%)</title><rect x="863.4" y="723.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="866.4" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (59 samples, 0.08%)</title><rect x="863.4" y="707.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="866.4" y="718.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (54 samples, 0.08%)</title><rect x="863.4" y="691.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="866.4" y="702.0"></text>
</g>
<g>
<title>java.lang.Integer (54 samples, 0.08%)</title><rect x="863.4" y="675.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="866.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (44 samples, 0.06%)</title><rect x="864.4" y="755.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="867.4" y="766.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (44 samples, 0.06%)</title><rect x="864.4" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.4" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (44 samples, 0.06%)</title><rect x="864.4" y="723.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="867.4" y="734.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (44 samples, 0.06%)</title><rect x="864.4" y="707.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="867.4" y="718.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (19,807 samples, 27.53%)</title><rect x="865.1" y="771.0" width="324.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="868.1" y="782.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (455 samples, 0.63%)</title><rect x="865.1" y="755.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="868.1" y="766.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (455 samples, 0.63%)</title><rect x="865.1" y="739.0" width="7.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="868.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (19,352 samples, 26.90%)</title><rect x="872.6" y="755.0" width="317.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="875.6" y="766.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (19,352 samples, 26.90%)</title><rect x="872.6" y="739.0" width="317.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="875.6" y="750.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (19,352 samples, 26.90%)</title><rect x="872.6" y="723.0" width="317.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="875.6" y="734.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,625 samples, 7.82%)</title><rect x="872.6" y="707.0" width="92.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="875.6" y="718.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,625 samples, 7.82%)</title><rect x="872.6" y="691.0" width="92.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="875.6" y="702.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler1_entities.handleRequest (4,865 samples, 6.76%)</title><rect x="872.6" y="675.0" width="79.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="875.6" y="686.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,236 samples, 1.72%)</title><rect x="872.6" y="659.0" width="20.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="875.6" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,236 samples, 1.72%)</title><rect x="872.6" y="643.0" width="20.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="875.6" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,236 samples, 1.72%)</title><rect x="872.6" y="627.0" width="20.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="875.6" y="638.0"></text>
</g>
<g>
<title>java.lang.String (583 samples, 0.81%)</title><rect x="872.6" y="611.0" width="9.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="875.6" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (653 samples, 0.91%)</title><rect x="882.2" y="611.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="885.2" y="622.0"></text>
</g>
<g>
<title>byte[] (653 samples, 0.91%)</title><rect x="882.2" y="595.0" width="10.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="885.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.entities (3,629 samples, 5.04%)</title><rect x="892.9" y="659.0" width="59.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="895.9" y="670.0">ru/mai..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (289 samples, 0.40%)</title><rect x="892.9" y="643.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="895.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (289 samples, 0.40%)</title><rect x="892.9" y="627.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="895.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$408/1738233451.get$Lambda (289 samples, 0.40%)</title><rect x="892.9" y="611.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="895.9" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.ServiceImpl$$Lambda$408 (289 samples, 0.40%)</title><rect x="892.9" y="595.0" width="4.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="895.9" y="606.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (413 samples, 0.57%)</title><rect x="897.6" y="643.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="900.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (413 samples, 0.57%)</title><rect x="897.6" y="627.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="900.6" y="638.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (413 samples, 0.57%)</title><rect x="897.6" y="611.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="900.6" y="622.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (413 samples, 0.57%)</title><rect x="897.6" y="595.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="900.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (413 samples, 0.57%)</title><rect x="897.6" y="579.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="900.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (413 samples, 0.57%)</title><rect x="897.6" y="563.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="900.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (413 samples, 0.57%)</title><rect x="897.6" y="547.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="900.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (413 samples, 0.57%)</title><rect x="897.6" y="531.0" width="6.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="900.6" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.request.handler.RequestHandler (290 samples, 0.40%)</title><rect x="904.4" y="643.0" width="4.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="907.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/RequestUtils.isRequestFromService (346 samples, 0.48%)</title><rect x="909.1" y="643.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="912.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (346 samples, 0.48%)</title><rect x="909.1" y="627.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="912.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (346 samples, 0.48%)</title><rect x="909.1" y="611.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="912.1" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (346 samples, 0.48%)</title><rect x="909.1" y="595.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="912.1" y="606.0"></text>
</g>
<g>
<title>java.lang.String (178 samples, 0.25%)</title><rect x="909.1" y="579.0" width="3.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="912.1" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (168 samples, 0.23%)</title><rect x="912.1" y="579.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.1" y="590.0"></text>
</g>
<g>
<title>byte[] (168 samples, 0.23%)</title><rect x="912.1" y="563.0" width="2.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="915.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntitiesRequestProcessor$Arguments.parse (2,291 samples, 3.18%)</title><rect x="914.8" y="643.0" width="37.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="917.8" y="654.0">ru/..</text>
</g>
<g>
<title>java/lang/String.getBytes (640 samples, 0.89%)</title><rect x="914.8" y="627.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="917.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (640 samples, 0.89%)</title><rect x="914.8" y="611.0" width="10.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="917.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (640 samples, 0.89%)</title><rect x="914.8" y="595.0" width="10.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="917.8" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (640 samples, 0.89%)</title><rect x="914.8" y="579.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="917.8" y="590.0"></text>
</g>
<g>
<title>byte[] (640 samples, 0.89%)</title><rect x="914.8" y="563.0" width="10.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="917.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,277 samples, 1.77%)</title><rect x="925.3" y="627.0" width="21.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="928.3" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,277 samples, 1.77%)</title><rect x="925.3" y="611.0" width="21.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="928.3" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,277 samples, 1.77%)</title><rect x="925.3" y="595.0" width="21.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="928.3" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.request.processor.EntitiesRequestProcessor$Arguments (374 samples, 0.52%)</title><rect x="946.3" y="627.0" width="6.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="949.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (760 samples, 1.06%)</title><rect x="952.4" y="675.0" width="12.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="955.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (760 samples, 1.06%)</title><rect x="952.4" y="659.0" width="12.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="955.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (760 samples, 1.06%)</title><rect x="952.4" y="643.0" width="12.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="955.4" y="654.0"></text>
</g>
<g>
<title>java.lang.String (277 samples, 0.39%)</title><rect x="952.4" y="627.0" width="4.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="955.4" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (483 samples, 0.67%)</title><rect x="956.9" y="627.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="959.9" y="638.0"></text>
</g>
<g>
<title>byte[] (483 samples, 0.67%)</title><rect x="956.9" y="611.0" width="8.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="959.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3,983 samples, 5.54%)</title><rect x="964.9" y="707.0" width="65.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="967.9" y="718.0">one/nio..</text>
</g>
<g>
<title>one.nio.http.Request (482 samples, 0.67%)</title><rect x="964.9" y="691.0" width="7.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="967.9" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,077 samples, 1.50%)</title><rect x="972.8" y="691.0" width="17.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="975.8" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (1,063 samples, 1.48%)</title><rect x="972.8" y="675.0" width="17.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="975.8" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,424 samples, 3.37%)</title><rect x="990.4" y="691.0" width="39.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="993.4" y="702.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,424 samples, 3.37%)</title><rect x="990.4" y="675.0" width="39.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="993.4" y="686.0">one..</text>
</g>
<g>
<title>char[] (1,344 samples, 1.87%)</title><rect x="990.4" y="659.0" width="22.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="993.4" y="670.0">c..</text>
</g>
<g>
<title>char[] (35 samples, 0.05%)</title><rect x="1012.5" y="659.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1015.5" y="670.0"></text>
</g>
<g>
<title>java.lang.String (315 samples, 0.44%)</title><rect x="1013.0" y="659.0" width="5.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1016.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (730 samples, 1.01%)</title><rect x="1018.2" y="659.0" width="12.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1021.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (730 samples, 1.01%)</title><rect x="1018.2" y="643.0" width="12.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1021.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (730 samples, 1.01%)</title><rect x="1018.2" y="627.0" width="12.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1021.2" y="638.0"></text>
</g>
<g>
<title>byte[] (729 samples, 1.01%)</title><rect x="1018.2" y="611.0" width="12.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1021.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (115 samples, 0.16%)</title><rect x="1030.2" y="707.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1033.2" y="718.0"></text>
</g>
<g>
<title>byte[] (115 samples, 0.16%)</title><rect x="1030.2" y="691.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1033.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (392 samples, 0.54%)</title><rect x="1032.1" y="707.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1035.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (392 samples, 0.54%)</title><rect x="1032.1" y="691.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1035.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (392 samples, 0.54%)</title><rect x="1032.1" y="675.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1035.1" y="686.0"></text>
</g>
<g>
<title>java.lang.String (173 samples, 0.24%)</title><rect x="1032.1" y="659.0" width="2.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1035.1" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (219 samples, 0.30%)</title><rect x="1034.9" y="659.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1037.9" y="670.0"></text>
</g>
<g>
<title>byte[] (219 samples, 0.30%)</title><rect x="1034.9" y="643.0" width="3.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1037.9" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9,237 samples, 12.84%)</title><rect x="1038.5" y="707.0" width="151.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1041.5" y="718.0">one/nio/util/Utf8.r..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (9,237 samples, 12.84%)</title><rect x="1038.5" y="691.0" width="151.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1041.5" y="702.0">one/nio/util/Utf8.r..</text>
</g>
<g>
<title>char[] (4,608 samples, 6.40%)</title><rect x="1038.5" y="675.0" width="75.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1041.5" y="686.0">char[]</text>
</g>
<g>
<title>char[] (143 samples, 0.20%)</title><rect x="1114.1" y="675.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1117.1" y="686.0"></text>
</g>
<g>
<title>java.lang.String (1,462 samples, 2.03%)</title><rect x="1116.4" y="675.0" width="24.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1119.4" y="686.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,024 samples, 4.20%)</title><rect x="1140.4" y="675.0" width="49.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1143.4" y="686.0">java/..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,024 samples, 4.20%)</title><rect x="1140.4" y="659.0" width="49.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1143.4" y="670.0">java/..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,024 samples, 4.20%)</title><rect x="1140.4" y="643.0" width="49.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1143.4" y="654.0">java/..</text>
</g>
<g>
<title>byte[] (3,009 samples, 4.18%)</title><rect x="1140.4" y="627.0" width="49.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1143.4" y="638.0">byte[]</text>
</g>
</g>
</svg>
