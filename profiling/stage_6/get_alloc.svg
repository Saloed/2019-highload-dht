<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="789"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="789"> </text>
<g id="frames">
<g>
<title>all (509,951 samples, 100.00%)</title><rect x="10.0" y="755.0" width="1180.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="766.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (184,238 samples, 36.13%)</title><rect x="10.0" y="739.0" width="426.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (184,238 samples, 36.13%)</title><rect x="10.0" y="723.0" width="426.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (184,238 samples, 36.13%)</title><rect x="10.0" y="707.0" width="426.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="718.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,774 samples, 0.35%)</title><rect x="10.0" y="691.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (1,774 samples, 0.35%)</title><rect x="10.0" y="675.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1,774 samples, 0.35%)</title><rect x="10.0" y="659.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1,774 samples, 0.35%)</title><rect x="10.0" y="643.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (1,774 samples, 0.35%)</title><rect x="10.0" y="627.0" width="4.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/handler/RequestHandler.run (182,464 samples, 35.78%)</title><rect x="14.1" y="691.0" width="422.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.1" y="702.0">ru/mail/polis/service/saloed/request/handler/RequestHandle..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$118/623724724.run (182,464 samples, 35.78%)</title><rect x="14.1" y="675.0" width="422.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.1" y="686.0">ru/mail/polis/service/saloed/ServiceImpl$$Lambda$118/62372..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (182,464 samples, 35.78%)</title><rect x="14.1" y="659.0" width="422.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.1" y="670.0">ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.processEntityForService (16,289 samples, 3.19%)</title><rect x="14.1" y="643.0" width="37.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.1" y="654.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (7,218 samples, 1.42%)</title><rect x="14.1" y="627.0" width="16.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6,588 samples, 1.29%)</title><rect x="14.1" y="611.0" width="15.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4,378 samples, 0.86%)</title><rect x="14.1" y="595.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="17.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3,013 samples, 0.59%)</title><rect x="14.1" y="579.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.1" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3,013 samples, 0.59%)</title><rect x="14.1" y="563.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.1" y="574.0"></text>
</g>
<g>
<title>byte[] (2,940 samples, 0.58%)</title><rect x="14.1" y="547.0" width="6.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="17.1" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,365 samples, 0.27%)</title><rect x="21.1" y="579.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.1" y="590.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1,365 samples, 0.27%)</title><rect x="21.1" y="563.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="24.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2,210 samples, 0.43%)</title><rect x="24.2" y="595.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,210 samples, 0.43%)</title><rect x="24.2" y="579.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,210 samples, 0.43%)</title><rect x="24.2" y="563.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.2" y="574.0"></text>
</g>
<g>
<title>java.lang.String (813 samples, 0.16%)</title><rect x="24.2" y="547.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="27.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,397 samples, 0.27%)</title><rect x="26.1" y="547.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="29.1" y="558.0"></text>
</g>
<g>
<title>byte[] (1,397 samples, 0.27%)</title><rect x="26.1" y="531.0" width="3.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="29.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceMetrics.responseWithStatus (630 samples, 0.12%)</title><rect x="29.4" y="611.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.4" y="622.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (630 samples, 0.12%)</title><rect x="29.4" y="595.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="32.4" y="606.0"></text>
</g>
<g>
<title>java.lang.Integer (630 samples, 0.12%)</title><rect x="29.4" y="579.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="32.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/GetEntityRequestProcessor.makeResponseForService (5,344 samples, 1.05%)</title><rect x="30.8" y="627.0" width="12.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="33.8" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Response (878 samples, 0.17%)</title><rect x="30.8" y="611.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="33.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3,305 samples, 0.65%)</title><rect x="32.8" y="611.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="35.8" y="622.0"></text>
</g>
<g>
<title>byte[] (1,419 samples, 0.28%)</title><rect x="32.8" y="595.0" width="3.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="35.8" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (1,112 samples, 0.22%)</title><rect x="36.1" y="595.0" width="2.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="39.1" y="606.0"></text>
</g>
<g>
<title>java.lang.String (774 samples, 0.15%)</title><rect x="38.7" y="595.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="41.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/timestamp/RecordWithTimestamp.toRawBytes (1,161 samples, 0.23%)</title><rect x="40.5" y="611.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="43.5" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,161 samples, 0.23%)</title><rect x="40.5" y="595.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.5" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,161 samples, 0.23%)</title><rect x="40.5" y="579.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="43.5" y="590.0"></text>
</g>
<g>
<title>byte[] (1,161 samples, 0.23%)</title><rect x="40.5" y="563.0" width="2.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="43.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/GetEntityRequestProcessor.processLocal (3,727 samples, 0.73%)</title><rect x="43.2" y="627.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.2" y="638.0"></text>
</g>
<g>
<title>java/util/Optional.of (494 samples, 0.10%)</title><rect x="43.2" y="611.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.2" y="622.0"></text>
</g>
<g>
<title>java.util.Optional (494 samples, 0.10%)</title><rect x="43.2" y="595.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="46.2" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.request.processor.entity.MaybeRecordWithTimestamp (624 samples, 0.12%)</title><rect x="44.3" y="611.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="47.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.getRecord (2,609 samples, 0.51%)</title><rect x="45.8" y="611.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (1,523 samples, 0.30%)</title><rect x="45.8" y="595.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.8" y="606.0"></text>
</g>
<g>
<title>byte[] (1,523 samples, 0.30%)</title><rect x="45.8" y="579.0" width="3.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="48.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/timestamp/RecordWithTimestamp.fromBytes (1,086 samples, 0.21%)</title><rect x="49.3" y="595.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="52.3" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.timestamp.RecordWithTimestamp (1,086 samples, 0.21%)</title><rect x="49.3" y="579.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="52.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.processEntityForUser (166,175 samples, 32.59%)</title><rect x="51.8" y="643.0" width="384.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.8" y="654.0">ru/mail/polis/service/saloed/ServiceImpl.processEnti..</text>
</g>
<g>
<title>com/google/common/collect/ImmutableMap.of (752 samples, 0.15%)</title><rect x="51.8" y="627.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="54.8" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableBiMap.of (752 samples, 0.15%)</title><rect x="51.8" y="611.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="54.8" y="622.0"></text>
</g>
<g>
<title>com.google.common.collect.SingletonImmutableBiMap (752 samples, 0.15%)</title><rect x="51.8" y="595.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="54.8" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (357 samples, 0.07%)</title><rect x="53.5" y="627.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="56.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (761 samples, 0.15%)</title><rect x="54.4" y="627.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (761 samples, 0.15%)</title><rect x="54.4" y="611.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="57.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$234/998175126.get$Lambda (359 samples, 0.07%)</title><rect x="54.4" y="595.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.4" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.ServiceImpl$$Lambda$234 (359 samples, 0.07%)</title><rect x="54.4" y="579.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="57.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$237/594302577.get$Lambda (402 samples, 0.08%)</title><rect x="55.2" y="595.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.2" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.ServiceImpl$$Lambda$237 (402 samples, 0.08%)</title><rect x="55.2" y="579.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="58.2" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (808 samples, 0.16%)</title><rect x="56.1" y="627.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="59.1" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (808 samples, 0.16%)</title><rect x="56.1" y="611.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="59.1" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (808 samples, 0.16%)</title><rect x="56.1" y="595.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="59.1" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (808 samples, 0.16%)</title><rect x="56.1" y="579.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="59.1" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (808 samples, 0.16%)</title><rect x="56.1" y="563.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="59.1" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (806 samples, 0.16%)</title><rect x="56.1" y="547.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="59.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completedFuture (336 samples, 0.07%)</title><rect x="58.0" y="627.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.0" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (336 samples, 0.07%)</title><rect x="58.0" y="611.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="61.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (1,596 samples, 0.31%)</title><rect x="58.8" y="627.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (1,596 samples, 0.31%)</title><rect x="58.8" y="611.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="61.8" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (1,026 samples, 0.20%)</title><rect x="58.8" y="595.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="61.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (570 samples, 0.11%)</title><rect x="61.1" y="595.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (570 samples, 0.11%)</title><rect x="61.1" y="579.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="64.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (937 samples, 0.18%)</title><rect x="62.5" y="627.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (937 samples, 0.18%)</title><rect x="62.5" y="611.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="65.5" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (600 samples, 0.12%)</title><rect x="62.5" y="595.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="65.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (337 samples, 0.07%)</title><rect x="63.9" y="595.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (337 samples, 0.07%)</title><rect x="63.9" y="579.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="66.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter.selectNodes (15,326 samples, 3.01%)</title><rect x="64.6" y="627.0" width="35.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.6" y="638.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/topology/ConsistentHashTopology.selectNode (15,326 samples, 3.01%)</title><rect x="64.6" y="611.0" width="35.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.6" y="622.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/TreeRangeMap.get (289 samples, 0.06%)</title><rect x="64.6" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.6" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/TreeRangeMap.getEntry (289 samples, 0.06%)</title><rect x="64.6" y="579.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Cut.belowValue (289 samples, 0.06%)</title><rect x="64.6" y="563.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.6" y="574.0"></text>
</g>
<g>
<title>com.google.common.collect.Cut$BelowValue (289 samples, 0.06%)</title><rect x="64.6" y="547.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="67.6" y="558.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (300 samples, 0.06%)</title><rect x="65.3" y="595.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="68.3" y="606.0"></text>
</g>
<g>
<title>java.lang.Integer (300 samples, 0.06%)</title><rect x="65.3" y="579.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="68.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/topology/ConsistentHashTopology.getReplicasForNode (1,654 samples, 0.32%)</title><rect x="66.0" y="595.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.0" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (475 samples, 0.09%)</title><rect x="66.0" y="579.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="69.0" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1,179 samples, 0.23%)</title><rect x="67.1" y="579.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.1" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,179 samples, 0.23%)</title><rect x="67.1" y="563.0" width="2.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="70.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/topology/ConsistentHashTopology.hash (13,083 samples, 2.57%)</title><rect x="69.8" y="595.0" width="30.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="72.8" y="606.0">ru..</text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (12,192 samples, 2.39%)</title><rect x="69.8" y="579.0" width="28.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.8" y="590.0">co..</text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction.newHasher (12,192 samples, 2.39%)</title><rect x="69.8" y="563.0" width="28.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.8" y="574.0">co..</text>
</g>
<g>
<title>com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher (2,852 samples, 0.56%)</title><rect x="69.8" y="547.0" width="6.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="72.8" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (1,203 samples, 0.24%)</title><rect x="76.4" y="547.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.4" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (1,203 samples, 0.24%)</title><rect x="76.4" y="531.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.4" y="542.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractByteHasher.&lt;init&gt; (1,203 samples, 0.24%)</title><rect x="76.4" y="515.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,203 samples, 0.24%)</title><rect x="76.4" y="499.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="79.4" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (763 samples, 0.15%)</title><rect x="76.4" y="483.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="79.4" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (440 samples, 0.09%)</title><rect x="78.2" y="483.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="81.2" y="494.0"></text>
</g>
<g>
<title>byte[] (440 samples, 0.09%)</title><rect x="78.2" y="467.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="81.2" y="478.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.clone (8,137 samples, 1.60%)</title><rect x="79.2" y="547.0" width="18.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.2" y="558.0"></text>
</g>
<g>
<title>java.security.MessageDigest$Delegate (470 samples, 0.09%)</title><rect x="79.2" y="531.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="82.2" y="542.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.clone (7,667 samples, 1.50%)</title><rect x="80.3" y="531.0" width="17.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="83.3" y="542.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.clone (7,667 samples, 1.50%)</title><rect x="80.3" y="515.0" width="17.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="83.3" y="526.0"></text>
</g>
<g>
<title>int[] (4,351 samples, 0.85%)</title><rect x="80.3" y="499.0" width="10.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="83.3" y="510.0"></text>
</g>
<g>
<title>int[] (1,215 samples, 0.24%)</title><rect x="90.4" y="499.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="93.4" y="510.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.clone (2,101 samples, 0.41%)</title><rect x="93.2" y="499.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="96.2" y="510.0"></text>
</g>
<g>
<title>byte[] (1,138 samples, 0.22%)</title><rect x="93.2" y="483.0" width="2.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="96.2" y="494.0"></text>
</g>
<g>
<title>java/security/MessageDigestSpi.clone (936 samples, 0.18%)</title><rect x="95.9" y="483.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="98.9" y="494.0"></text>
</g>
<g>
<title>sun.security.provider.SHA2$SHA256 (920 samples, 0.18%)</title><rect x="95.9" y="467.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="98.9" y="478.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.hash (891 samples, 0.17%)</title><rect x="98.0" y="579.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="101.0" y="590.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (891 samples, 0.17%)</title><rect x="98.0" y="563.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.0" y="574.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (891 samples, 0.17%)</title><rect x="98.0" y="547.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="101.0" y="558.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (891 samples, 0.17%)</title><rect x="98.0" y="531.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.0" y="542.0"></text>
</g>
<g>
<title>byte[] (891 samples, 0.17%)</title><rect x="98.0" y="515.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="101.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.remoteRequest (133,832 samples, 26.24%)</title><rect x="100.1" y="627.0" width="309.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="103.1" y="638.0">ru/mail/polis/service/saloed/ServiceImpl.r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (486 samples, 0.10%)</title><rect x="100.1" y="611.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="103.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (486 samples, 0.10%)</title><rect x="100.1" y="595.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="103.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$162/2065850530.get$Lambda (486 samples, 0.10%)</title><rect x="100.1" y="579.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="103.1" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.ServiceImpl$$Lambda$162 (486 samples, 0.10%)</title><rect x="100.1" y="563.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="103.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (2,820 samples, 0.55%)</title><rect x="101.2" y="611.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="104.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (2,820 samples, 0.55%)</title><rect x="101.2" y="595.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (1,887 samples, 0.37%)</title><rect x="101.2" y="579.0" width="4.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="104.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (933 samples, 0.18%)</title><rect x="105.6" y="579.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="108.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (933 samples, 0.18%)</title><rect x="105.6" y="563.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (933 samples, 0.18%)</title><rect x="105.6" y="547.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="108.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2,598 samples, 0.51%)</title><rect x="107.7" y="611.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="110.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2,598 samples, 0.51%)</title><rect x="107.7" y="595.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="110.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (1,400 samples, 0.27%)</title><rect x="107.7" y="579.0" width="3.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="110.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,198 samples, 0.23%)</title><rect x="111.0" y="579.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="114.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,198 samples, 0.23%)</title><rect x="111.0" y="563.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,198 samples, 0.23%)</title><rect x="111.0" y="547.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="114.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (65,362 samples, 12.82%)</title><rect x="113.8" y="611.0" width="151.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="116.8" y="622.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (65,362 samples, 12.82%)</title><rect x="113.8" y="595.0" width="151.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.8" y="606.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (65,362 samples, 12.82%)</title><rect x="113.8" y="579.0" width="151.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.8" y="590.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (65,362 samples, 12.82%)</title><rect x="113.8" y="563.0" width="151.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="116.8" y="574.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (450 samples, 0.09%)</title><rect x="113.8" y="547.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (450 samples, 0.09%)</title><rect x="113.8" y="531.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="116.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$188/1017548720.get$Lambda (450 samples, 0.09%)</title><rect x="113.8" y="515.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$188 (450 samples, 0.09%)</title><rect x="113.8" y="499.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="116.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2,039 samples, 0.40%)</title><rect x="114.8" y="547.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2,039 samples, 0.40%)</title><rect x="114.8" y="531.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="117.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,224 samples, 0.24%)</title><rect x="114.8" y="515.0" width="2.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="117.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (815 samples, 0.16%)</title><rect x="117.6" y="515.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="120.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (815 samples, 0.16%)</title><rect x="117.6" y="499.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (815 samples, 0.16%)</title><rect x="117.6" y="483.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="120.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2,198 samples, 0.43%)</title><rect x="119.5" y="547.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="122.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2,198 samples, 0.43%)</title><rect x="119.5" y="531.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,274 samples, 0.25%)</title><rect x="119.5" y="515.0" width="3.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="122.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (924 samples, 0.18%)</title><rect x="122.5" y="515.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (924 samples, 0.18%)</title><rect x="122.5" y="499.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="125.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (924 samples, 0.18%)</title><rect x="122.5" y="483.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="125.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (2,211 samples, 0.43%)</title><rect x="124.6" y="547.0" width="5.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="127.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (2,686 samples, 0.53%)</title><rect x="129.7" y="547.0" width="6.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="132.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (32,723 samples, 6.42%)</title><rect x="136.2" y="547.0" width="75.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="139.2" y="558.0">jdk/inte..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (3,267 samples, 0.64%)</title><rect x="136.2" y="531.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="139.2" y="542.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2,537 samples, 0.50%)</title><rect x="136.2" y="515.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="139.2" y="526.0"></text>
</g>
<g>
<title>java/util/List.spliterator (914 samples, 0.18%)</title><rect x="136.2" y="499.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="139.2" y="510.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (914 samples, 0.18%)</title><rect x="136.2" y="483.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="139.2" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,623 samples, 0.32%)</title><rect x="138.3" y="499.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="141.3" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,620 samples, 0.32%)</title><rect x="138.3" y="483.0" width="3.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="141.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (730 samples, 0.14%)</title><rect x="142.0" y="515.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (730 samples, 0.14%)</title><rect x="142.0" y="499.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (730 samples, 0.14%)</title><rect x="142.0" y="483.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="145.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$107/1281414889.get (730 samples, 0.14%)</title><rect x="142.0" y="467.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="145.0" y="478.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (730 samples, 0.14%)</title><rect x="142.0" y="451.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="145.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (16,917 samples, 3.32%)</title><rect x="143.7" y="531.0" width="39.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.7" y="542.0">jav..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (16,917 samples, 3.32%)</title><rect x="143.7" y="515.0" width="39.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="146.7" y="526.0">jav..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (956 samples, 0.19%)</title><rect x="143.7" y="499.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="146.7" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (707 samples, 0.14%)</title><rect x="145.9" y="499.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="148.9" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (2,153 samples, 0.42%)</title><rect x="147.6" y="499.0" width="4.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="150.6" y="510.0"></text>
</g>
<g>
<title>java.util.TreeSet (459 samples, 0.09%)</title><rect x="152.5" y="499.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="155.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (827 samples, 0.16%)</title><rect x="153.6" y="499.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (827 samples, 0.16%)</title><rect x="153.6" y="483.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="156.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/1966280024.get$Lambda (827 samples, 0.16%)</title><rect x="153.6" y="467.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.6" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$151 (827 samples, 0.16%)</title><rect x="153.6" y="451.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="156.6" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (9,280 samples, 1.82%)</title><rect x="155.5" y="499.0" width="21.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="158.5" y="510.0">j..</text>
</g>
<g>
<title>java/util/TreeMap.forEach (9,280 samples, 1.82%)</title><rect x="155.5" y="483.0" width="21.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.5" y="494.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/1966280024.accept (9,280 samples, 1.82%)</title><rect x="155.5" y="467.0" width="21.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="158.5" y="478.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (9,280 samples, 1.82%)</title><rect x="155.5" y="451.0" width="21.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="158.5" y="462.0">j..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,575 samples, 0.31%)</title><rect x="155.5" y="435.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="158.5" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$156/142789664.accept (1,575 samples, 0.31%)</title><rect x="155.5" y="419.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="158.5" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1,575 samples, 0.31%)</title><rect x="155.5" y="403.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="158.5" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,575 samples, 0.31%)</title><rect x="155.5" y="387.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.5" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,575 samples, 0.31%)</title><rect x="155.5" y="371.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,575 samples, 0.31%)</title><rect x="155.5" y="355.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,575 samples, 0.31%)</title><rect x="155.5" y="339.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="158.5" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,575 samples, 0.31%)</title><rect x="155.5" y="323.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="158.5" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,564 samples, 0.31%)</title><rect x="155.5" y="307.0" width="3.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="158.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,540 samples, 0.30%)</title><rect x="159.2" y="435.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,540 samples, 0.30%)</title><rect x="159.2" y="419.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.2" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$156/142789664.get$Lambda (1,540 samples, 0.30%)</title><rect x="159.2" y="403.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="162.2" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$156 (1,540 samples, 0.30%)</title><rect x="159.2" y="387.0" width="3.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="162.2" y="398.0"></text>
</g>
<g>
<title>java/util/List.copyOf (3,212 samples, 0.63%)</title><rect x="162.7" y="435.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.7" y="446.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (3,212 samples, 0.63%)</title><rect x="162.7" y="419.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="165.7" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,728 samples, 0.34%)</title><rect x="162.7" y="403.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="165.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,728 samples, 0.34%)</title><rect x="162.7" y="387.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="165.7" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,728 samples, 0.34%)</title><rect x="162.7" y="371.0" width="4.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="165.7" y="382.0"></text>
</g>
<g>
<title>java/util/List.of (1,484 samples, 0.29%)</title><rect x="166.7" y="403.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="169.7" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,484 samples, 0.29%)</title><rect x="166.7" y="387.0" width="3.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="169.7" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2,953 samples, 0.58%)</title><rect x="170.2" y="435.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="173.2" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2,953 samples, 0.58%)</title><rect x="170.2" y="419.0" width="6.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="173.2" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1,024 samples, 0.20%)</title><rect x="177.0" y="499.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="180.0" y="510.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1,024 samples, 0.20%)</title><rect x="177.0" y="483.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="180.0" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1,511 samples, 0.30%)</title><rect x="179.4" y="499.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="182.4" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,511 samples, 0.30%)</title><rect x="179.4" y="483.0" width="3.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="182.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (424 samples, 0.08%)</title><rect x="182.9" y="531.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="185.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (8,094 samples, 1.59%)</title><rect x="183.8" y="531.0" width="18.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="186.8" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (8,094 samples, 1.59%)</title><rect x="183.8" y="515.0" width="18.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="186.8" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (7,059 samples, 1.38%)</title><rect x="183.8" y="499.0" width="16.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.8" y="510.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (7,059 samples, 1.38%)</title><rect x="183.8" y="483.0" width="16.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="186.8" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (7,059 samples, 1.38%)</title><rect x="183.8" y="467.0" width="16.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3,508 samples, 0.69%)</title><rect x="183.8" y="451.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="186.8" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3,508 samples, 0.69%)</title><rect x="183.8" y="435.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="186.8" y="446.0"></text>
</g>
<g>
<title>byte[] (3,508 samples, 0.69%)</title><rect x="183.8" y="419.0" width="8.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="186.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3,551 samples, 0.70%)</title><rect x="192.0" y="451.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,551 samples, 0.70%)</title><rect x="192.0" y="435.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="195.0" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,551 samples, 0.70%)</title><rect x="192.0" y="419.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="195.0" y="430.0"></text>
</g>
<g>
<title>byte[] (3,551 samples, 0.70%)</title><rect x="192.0" y="403.0" width="8.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="195.0" y="414.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (1,035 samples, 0.20%)</title><rect x="200.2" y="499.0" width="2.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="203.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (1,455 samples, 0.29%)</title><rect x="202.6" y="531.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="205.6" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,455 samples, 0.29%)</title><rect x="202.6" y="515.0" width="3.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="205.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2,566 samples, 0.50%)</title><rect x="205.9" y="531.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.9" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (670 samples, 0.13%)</title><rect x="205.9" y="515.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="208.9" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (704 samples, 0.14%)</title><rect x="207.5" y="515.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="210.5" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (704 samples, 0.14%)</title><rect x="207.5" y="499.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="210.5" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,192 samples, 0.23%)</title><rect x="209.1" y="515.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="212.1" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,192 samples, 0.23%)</title><rect x="209.1" y="499.0" width="2.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="212.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (16,046 samples, 3.15%)</title><rect x="211.9" y="547.0" width="37.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="214.9" y="558.0">jdk..</text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (487 samples, 0.10%)</title><rect x="211.9" y="531.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="214.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (2,043 samples, 0.40%)</title><rect x="213.0" y="531.0" width="4.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="216.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (584 samples, 0.11%)</title><rect x="217.9" y="531.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="220.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (584 samples, 0.11%)</title><rect x="217.9" y="515.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="220.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (12,837 samples, 2.52%)</title><rect x="219.3" y="531.0" width="29.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="222.3" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (12,837 samples, 2.52%)</title><rect x="219.3" y="515.0" width="29.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="222.3" y="526.0">jd..</text>
</g>
<g>
<title>java.lang.Class[] (1,597 samples, 0.31%)</title><rect x="219.3" y="499.0" width="3.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="222.3" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,385 samples, 0.27%)</title><rect x="223.0" y="499.0" width="3.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="226.0" y="510.0"></text>
</g>
<g>
<title>java.util.LinkedList (899 samples, 0.18%)</title><rect x="226.2" y="499.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="229.2" y="510.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (5,659 samples, 1.11%)</title><rect x="228.3" y="499.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (5,659 samples, 1.11%)</title><rect x="228.3" y="483.0" width="13.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="231.3" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (5,659 samples, 1.11%)</title><rect x="228.3" y="467.0" width="13.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.3" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (5,659 samples, 1.11%)</title><rect x="228.3" y="451.0" width="13.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="231.3" y="462.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (5,548 samples, 1.09%)</title><rect x="228.3" y="435.0" width="12.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="231.3" y="446.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (111 samples, 0.02%)</title><rect x="241.1" y="435.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="244.1" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1,882 samples, 0.37%)</title><rect x="241.4" y="499.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="244.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1,882 samples, 0.37%)</title><rect x="241.4" y="483.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="244.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor301.newInstance (673 samples, 0.13%)</title><rect x="241.4" y="467.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="244.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (673 samples, 0.13%)</title><rect x="241.4" y="451.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="244.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor307.newInstance (1,209 samples, 0.24%)</title><rect x="242.9" y="467.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="245.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (1,209 samples, 0.24%)</title><rect x="242.9" y="451.0" width="2.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="245.9" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1,415 samples, 0.28%)</title><rect x="245.7" y="499.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="248.7" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1,415 samples, 0.28%)</title><rect x="245.7" y="483.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="248.7" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1,415 samples, 0.28%)</title><rect x="245.7" y="467.0" width="3.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="248.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (6,916 samples, 1.36%)</title><rect x="249.0" y="547.0" width="16.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (691 samples, 0.14%)</title><rect x="249.0" y="531.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="252.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (691 samples, 0.14%)</title><rect x="249.0" y="515.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="252.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (943 samples, 0.18%)</title><rect x="250.6" y="531.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="253.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (5,282 samples, 1.04%)</title><rect x="252.8" y="531.0" width="12.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="255.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,073 samples, 0.21%)</title><rect x="252.8" y="515.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="255.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,073 samples, 0.21%)</title><rect x="252.8" y="499.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="255.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$179/16826935.get$Lambda (594 samples, 0.12%)</title><rect x="252.8" y="483.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="255.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$179 (594 samples, 0.12%)</title><rect x="252.8" y="467.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="255.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$182/2020955110.get$Lambda (479 samples, 0.09%)</title><rect x="254.2" y="483.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="257.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$182 (479 samples, 0.09%)</title><rect x="254.2" y="467.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="257.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4,209 samples, 0.83%)</title><rect x="255.3" y="515.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="258.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4,209 samples, 0.83%)</title><rect x="255.3" y="499.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="258.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2,317 samples, 0.45%)</title><rect x="255.3" y="483.0" width="5.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="258.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,892 samples, 0.37%)</title><rect x="260.6" y="483.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="263.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,892 samples, 0.37%)</title><rect x="260.6" y="467.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,892 samples, 0.37%)</title><rect x="260.6" y="451.0" width="4.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="263.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (16,801 samples, 3.29%)</title><rect x="265.0" y="611.0" width="38.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="268.0" y="622.0">jdk..</text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (1,199 samples, 0.24%)</title><rect x="265.0" y="595.0" width="2.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="268.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (15,602 samples, 3.06%)</title><rect x="267.8" y="595.0" width="36.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="270.8" y="606.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (14,976 samples, 2.94%)</title><rect x="267.8" y="579.0" width="34.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="270.8" y="590.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (14,976 samples, 2.94%)</title><rect x="267.8" y="563.0" width="34.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="270.8" y="574.0">ja..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (462 samples, 0.09%)</title><rect x="267.8" y="547.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="270.8" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (707 samples, 0.14%)</title><rect x="268.8" y="547.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="271.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,493 samples, 0.29%)</title><rect x="270.5" y="547.0" width="3.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="273.5" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (475 samples, 0.09%)</title><rect x="273.9" y="547.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="276.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (951 samples, 0.19%)</title><rect x="275.0" y="547.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="278.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (951 samples, 0.19%)</title><rect x="275.0" y="531.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="278.0" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/1966280024.get$Lambda (951 samples, 0.19%)</title><rect x="275.0" y="515.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="278.0" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$151 (951 samples, 0.19%)</title><rect x="275.0" y="499.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="278.0" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1,153 samples, 0.23%)</title><rect x="277.2" y="547.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="280.2" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1,153 samples, 0.23%)</title><rect x="277.2" y="531.0" width="2.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="280.2" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (8,334 samples, 1.63%)</title><rect x="279.9" y="547.0" width="19.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="282.9" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/1966280024.accept (8,334 samples, 1.63%)</title><rect x="279.9" y="531.0" width="19.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="282.9" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8,334 samples, 1.63%)</title><rect x="279.9" y="515.0" width="19.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,499 samples, 0.29%)</title><rect x="279.9" y="499.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="282.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,499 samples, 0.29%)</title><rect x="279.9" y="483.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="282.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$156/142789664.get$Lambda (1,499 samples, 0.29%)</title><rect x="279.9" y="467.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="282.9" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$156 (1,499 samples, 0.29%)</title><rect x="279.9" y="451.0" width="3.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="282.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,615 samples, 0.32%)</title><rect x="283.4" y="499.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="286.4" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$156/142789664.accept (1,615 samples, 0.32%)</title><rect x="283.4" y="483.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="286.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1,615 samples, 0.32%)</title><rect x="283.4" y="467.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="286.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,615 samples, 0.32%)</title><rect x="283.4" y="451.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="286.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,615 samples, 0.32%)</title><rect x="283.4" y="435.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="286.4" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,615 samples, 0.32%)</title><rect x="283.4" y="419.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="286.4" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,615 samples, 0.32%)</title><rect x="283.4" y="403.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="286.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,615 samples, 0.32%)</title><rect x="283.4" y="387.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="286.4" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,612 samples, 0.32%)</title><rect x="283.4" y="371.0" width="3.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="286.4" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2,782 samples, 0.55%)</title><rect x="287.1" y="499.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.1" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2,782 samples, 0.55%)</title><rect x="287.1" y="483.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="290.1" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,374 samples, 0.27%)</title><rect x="287.1" y="467.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.1" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,374 samples, 0.27%)</title><rect x="287.1" y="451.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.1" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,374 samples, 0.27%)</title><rect x="287.1" y="435.0" width="3.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="290.1" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (1,408 samples, 0.28%)</title><rect x="290.3" y="467.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="293.3" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,408 samples, 0.28%)</title><rect x="290.3" y="451.0" width="3.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="293.3" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2,438 samples, 0.48%)</title><rect x="293.5" y="499.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="296.5" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2,438 samples, 0.48%)</title><rect x="293.5" y="483.0" width="5.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="296.5" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1,401 samples, 0.27%)</title><rect x="299.2" y="547.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="302.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,401 samples, 0.27%)</title><rect x="299.2" y="531.0" width="3.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="302.2" y="542.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (626 samples, 0.12%)</title><rect x="302.4" y="579.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="305.4" y="590.0"></text>
</g>
<g>
<title>java/util/Optional.of (626 samples, 0.12%)</title><rect x="302.4" y="563.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="305.4" y="574.0"></text>
</g>
<g>
<title>java.util.Optional (626 samples, 0.12%)</title><rect x="302.4" y="547.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="305.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$ClusterNode.requestBuilder (36,792 samples, 7.21%)</title><rect x="303.9" y="611.0" width="85.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="306.9" y="622.0">ru/mail/po..</text>
</g>
<g>
<title>com/google/common/collect/ImmutableMap.entrySet (687 samples, 0.13%)</title><rect x="303.9" y="595.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="306.9" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableMap.entrySet (687 samples, 0.13%)</title><rect x="303.9" y="579.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="306.9" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/SingletonImmutableBiMap.createEntrySet (687 samples, 0.13%)</title><rect x="303.9" y="563.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="306.9" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet.of (341 samples, 0.07%)</title><rect x="303.9" y="547.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.9" y="558.0"></text>
</g>
<g>
<title>com.google.common.collect.SingletonImmutableSet (341 samples, 0.07%)</title><rect x="303.9" y="531.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="306.9" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Maps.immutableEntry (346 samples, 0.07%)</title><rect x="304.7" y="547.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="307.7" y="558.0"></text>
</g>
<g>
<title>com.google.common.collect.ImmutableEntry (346 samples, 0.07%)</title><rect x="304.7" y="531.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="307.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3,580 samples, 0.70%)</title><rect x="305.5" y="595.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/537014553.invoke (2,667 samples, 0.52%)</title><rect x="305.5" y="579.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/656594080.invoke (2,667 samples, 0.52%)</title><rect x="305.5" y="563.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="308.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,667 samples, 0.52%)</title><rect x="305.5" y="547.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (702 samples, 0.14%)</title><rect x="305.5" y="531.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="308.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (702 samples, 0.14%)</title><rect x="305.5" y="515.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="308.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,965 samples, 0.39%)</title><rect x="307.1" y="531.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,965 samples, 0.39%)</title><rect x="307.1" y="515.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.1" y="526.0"></text>
</g>
<g>
<title>byte[] (1,910 samples, 0.37%)</title><rect x="307.1" y="499.0" width="4.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="310.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/671471369.invoke (913 samples, 0.18%)</title><rect x="311.6" y="579.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="314.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (913 samples, 0.18%)</title><rect x="311.6" y="563.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="314.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (913 samples, 0.18%)</title><rect x="311.6" y="547.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="314.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (913 samples, 0.18%)</title><rect x="311.6" y="531.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="314.6" y="542.0"></text>
</g>
<g>
<title>byte[] (913 samples, 0.18%)</title><rect x="311.6" y="515.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="314.6" y="526.0"></text>
</g>
<g>
<title>java/net/URI.create (13,144 samples, 2.58%)</title><rect x="313.8" y="595.0" width="30.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="316.8" y="606.0">ja..</text>
</g>
<g>
<title>java.net.URI (2,513 samples, 0.49%)</title><rect x="313.8" y="579.0" width="5.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="316.8" y="590.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (10,560 samples, 2.07%)</title><rect x="319.7" y="579.0" width="24.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="322.7" y="590.0">j..</text>
</g>
<g>
<title>java.net.URI$Parser (1,098 samples, 0.22%)</title><rect x="319.7" y="563.0" width="2.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="322.7" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (9,462 samples, 1.86%)</title><rect x="322.3" y="563.0" width="21.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="325.3" y="574.0">j..</text>
</g>
<g>
<title>java/lang/String.substring (2,213 samples, 0.43%)</title><rect x="322.3" y="547.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="325.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,213 samples, 0.43%)</title><rect x="322.3" y="531.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="325.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String (809 samples, 0.16%)</title><rect x="322.3" y="515.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="325.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,404 samples, 0.28%)</title><rect x="324.1" y="515.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="327.1" y="526.0"></text>
</g>
<g>
<title>byte[] (1,404 samples, 0.28%)</title><rect x="324.1" y="499.0" width="3.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="327.1" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (7,249 samples, 1.42%)</title><rect x="327.4" y="547.0" width="16.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="330.4" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,331 samples, 0.65%)</title><rect x="327.4" y="531.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="330.4" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,331 samples, 0.65%)</title><rect x="327.4" y="515.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.4" y="526.0"></text>
</g>
<g>
<title>java.lang.String (1,363 samples, 0.27%)</title><rect x="327.4" y="499.0" width="3.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="330.4" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,968 samples, 0.39%)</title><rect x="330.5" y="499.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="333.5" y="510.0"></text>
</g>
<g>
<title>byte[] (1,968 samples, 0.39%)</title><rect x="330.5" y="483.0" width="4.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="333.5" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (3,918 samples, 0.77%)</title><rect x="335.1" y="531.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="338.1" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,793 samples, 0.35%)</title><rect x="335.1" y="515.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.1" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,793 samples, 0.35%)</title><rect x="335.1" y="499.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="338.1" y="510.0"></text>
</g>
<g>
<title>java.lang.String (730 samples, 0.14%)</title><rect x="335.1" y="483.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="338.1" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,063 samples, 0.21%)</title><rect x="336.8" y="483.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="339.8" y="494.0"></text>
</g>
<g>
<title>byte[] (1,063 samples, 0.21%)</title><rect x="336.8" y="467.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="339.8" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (2,125 samples, 0.42%)</title><rect x="339.3" y="515.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="342.3" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (2,125 samples, 0.42%)</title><rect x="339.3" y="499.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.3" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,125 samples, 0.42%)</title><rect x="339.3" y="483.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.3" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,125 samples, 0.42%)</title><rect x="339.3" y="467.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="342.3" y="478.0"></text>
</g>
<g>
<title>java.lang.String (1,141 samples, 0.22%)</title><rect x="339.3" y="451.0" width="2.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="342.3" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (984 samples, 0.19%)</title><rect x="341.9" y="451.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="344.9" y="462.0"></text>
</g>
<g>
<title>byte[] (984 samples, 0.19%)</title><rect x="341.9" y="435.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="344.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (3,022 samples, 0.59%)</title><rect x="344.2" y="595.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="347.2" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (1,165 samples, 0.23%)</title><rect x="344.2" y="579.0" width="2.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="347.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (1,857 samples, 0.36%)</title><rect x="346.9" y="579.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="349.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (476 samples, 0.09%)</title><rect x="346.9" y="563.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="349.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (1,381 samples, 0.27%)</title><rect x="348.0" y="563.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="351.0" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,381 samples, 0.27%)</title><rect x="348.0" y="547.0" width="3.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="351.0" y="558.0"></text>
</g>
<g>
<title>java/time/Duration.ofMillis (657 samples, 0.13%)</title><rect x="351.2" y="595.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.2" y="606.0"></text>
</g>
<g>
<title>java/time/Duration.create (657 samples, 0.13%)</title><rect x="351.2" y="579.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="354.2" y="590.0"></text>
</g>
<g>
<title>java.time.Duration (657 samples, 0.13%)</title><rect x="351.2" y="563.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="354.2" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2,863 samples, 0.56%)</title><rect x="352.7" y="595.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="355.7" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableCollection.spliterator (1,192 samples, 0.23%)</title><rect x="352.7" y="579.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="355.7" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (1,192 samples, 0.23%)</title><rect x="352.7" y="563.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="355.7" y="574.0"></text>
</g>
<g>
<title>java.util.Spliterators$IteratorSpliterator (1,192 samples, 0.23%)</title><rect x="352.7" y="547.0" width="2.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="355.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,671 samples, 0.33%)</title><rect x="355.4" y="579.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="358.4" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,668 samples, 0.33%)</title><rect x="355.4" y="563.0" width="3.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="358.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.joining (1,908 samples, 0.37%)</title><rect x="359.3" y="595.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="362.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.joining (1,908 samples, 0.37%)</title><rect x="359.3" y="579.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="362.3" y="590.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (1,040 samples, 0.20%)</title><rect x="359.3" y="563.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="362.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (868 samples, 0.17%)</title><rect x="361.7" y="563.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="364.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (868 samples, 0.17%)</title><rect x="361.7" y="547.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="364.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$126/1405491392.get$Lambda (868 samples, 0.17%)</title><rect x="361.7" y="531.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="364.7" y="542.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$$Lambda$126 (868 samples, 0.17%)</title><rect x="361.7" y="515.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="364.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (8,996 samples, 1.76%)</title><rect x="363.7" y="595.0" width="20.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="366.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7,886 samples, 1.55%)</title><rect x="363.7" y="579.0" width="18.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="366.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (7,886 samples, 1.55%)</title><rect x="363.7" y="563.0" width="18.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="366.7" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (6,800 samples, 1.33%)</title><rect x="363.7" y="547.0" width="15.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="366.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6,080 samples, 1.19%)</title><rect x="363.7" y="531.0" width="14.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="366.7" y="542.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (1,231 samples, 0.24%)</title><rect x="363.7" y="515.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="366.7" y="526.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (1,231 samples, 0.24%)</title><rect x="363.7" y="499.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="366.7" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/SingletonImmutableSet.iterator (1,231 samples, 0.24%)</title><rect x="363.7" y="483.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="366.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/SingletonImmutableSet.iterator (1,231 samples, 0.24%)</title><rect x="363.7" y="467.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="366.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.singletonIterator (1,231 samples, 0.24%)</title><rect x="363.7" y="451.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="366.7" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$9 (1,231 samples, 0.24%)</title><rect x="363.7" y="435.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="366.7" y="446.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.forEachRemaining (3,180 samples, 0.62%)</title><rect x="366.6" y="515.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="369.6" y="526.0"></text>
</g>
<g>
<title>java/util/Iterator.forEachRemaining (3,180 samples, 0.62%)</title><rect x="366.6" y="499.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="369.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3,180 samples, 0.62%)</title><rect x="366.6" y="483.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="369.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (1,478 samples, 0.29%)</title><rect x="366.6" y="467.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="369.6" y="478.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$132/202906813.accept (1,478 samples, 0.29%)</title><rect x="366.6" y="451.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="369.6" y="462.0"></text>
</g>
<g>
<title>java/util/StringJoiner.add (1,478 samples, 0.29%)</title><rect x="366.6" y="435.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="369.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (1,478 samples, 0.29%)</title><rect x="366.6" y="419.0" width="3.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="369.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$ClusterNode$$Lambda$120/1716626316.apply (1,702 samples, 0.33%)</title><rect x="370.0" y="467.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="373.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$ClusterNode.lambda$requestBuilder$0 (1,702 samples, 0.33%)</title><rect x="370.0" y="451.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="373.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,702 samples, 0.33%)</title><rect x="370.0" y="435.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="373.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1,702 samples, 0.33%)</title><rect x="370.0" y="419.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="373.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1095088856.invoke (1,702 samples, 0.33%)</title><rect x="370.0" y="403.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="373.0" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,702 samples, 0.33%)</title><rect x="370.0" y="387.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="373.0" y="398.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (731 samples, 0.14%)</title><rect x="370.0" y="371.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="373.0" y="382.0"></text>
</g>
<g>
<title>java.lang.String (731 samples, 0.14%)</title><rect x="370.0" y="355.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="373.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (971 samples, 0.19%)</title><rect x="371.7" y="371.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="374.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (971 samples, 0.19%)</title><rect x="371.7" y="355.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="374.7" y="366.0"></text>
</g>
<g>
<title>byte[] (971 samples, 0.19%)</title><rect x="371.7" y="339.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="374.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1,669 samples, 0.33%)</title><rect x="373.9" y="515.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="376.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (1,669 samples, 0.33%)</title><rect x="373.9" y="499.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="376.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$126/1405491392.get (1,669 samples, 0.33%)</title><rect x="373.9" y="483.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="376.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$joining$11 (1,669 samples, 0.33%)</title><rect x="373.9" y="467.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="376.9" y="478.0"></text>
</g>
<g>
<title>java.util.StringJoiner (1,669 samples, 0.33%)</title><rect x="373.9" y="451.0" width="3.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="376.9" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (720 samples, 0.14%)</title><rect x="377.8" y="531.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="380.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (720 samples, 0.14%)</title><rect x="377.8" y="515.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="380.8" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (720 samples, 0.14%)</title><rect x="377.8" y="499.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="380.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (1,086 samples, 0.21%)</title><rect x="379.5" y="547.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="382.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (1,086 samples, 0.21%)</title><rect x="379.5" y="531.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.5" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (1,086 samples, 0.21%)</title><rect x="379.5" y="515.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="382.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (1,110 samples, 0.22%)</title><rect x="382.0" y="579.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="385.0" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (1,110 samples, 0.22%)</title><rect x="382.0" y="563.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="385.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (1,935 samples, 0.38%)</title><rect x="384.5" y="595.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.5" y="606.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (1,878 samples, 0.37%)</title><rect x="384.5" y="579.0" width="4.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="387.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/GetEntityRequestProcessor.preprocessRemote (8,973 samples, 1.76%)</title><rect x="389.0" y="611.0" width="20.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="392.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntityRequestProcessor.preprocessRemote (8,973 samples, 1.76%)</title><rect x="389.0" y="595.0" width="20.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="392.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/RequestUtils.setRequestFromService (3,399 samples, 0.67%)</title><rect x="389.0" y="579.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="392.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (3,399 samples, 0.67%)</title><rect x="389.0" y="563.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="392.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (3,399 samples, 0.67%)</title><rect x="389.0" y="547.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="392.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (3,399 samples, 0.67%)</title><rect x="389.0" y="531.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="392.0" y="542.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (3,399 samples, 0.67%)</title><rect x="389.0" y="515.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="392.0" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,779 samples, 0.35%)</title><rect x="389.0" y="499.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="392.0" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,779 samples, 0.35%)</title><rect x="389.0" y="483.0" width="4.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="392.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$143/2089837477.apply (1,620 samples, 0.32%)</title><rect x="393.1" y="499.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="396.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (1,620 samples, 0.32%)</title><rect x="393.1" y="483.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="396.1" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (744 samples, 0.15%)</title><rect x="393.1" y="467.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="396.1" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (876 samples, 0.17%)</title><rect x="394.9" y="467.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="397.9" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (876 samples, 0.17%)</title><rect x="394.9" y="451.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="397.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/RequestUtils.setRequestTimestamp (5,574 samples, 1.09%)</title><rect x="396.9" y="579.0" width="12.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="399.9" y="590.0"></text>
</g>
<g>
<title>java/lang/Long.toString (2,442 samples, 0.48%)</title><rect x="396.9" y="563.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="399.9" y="574.0"></text>
</g>
<g>
<title>byte[] (1,356 samples, 0.27%)</title><rect x="396.9" y="547.0" width="3.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="399.9" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1,086 samples, 0.21%)</title><rect x="400.0" y="547.0" width="2.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="403.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (3,132 samples, 0.61%)</title><rect x="402.5" y="563.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="405.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (3,132 samples, 0.61%)</title><rect x="402.5" y="547.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="405.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (3,132 samples, 0.61%)</title><rect x="402.5" y="531.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="405.5" y="542.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (3,132 samples, 0.61%)</title><rect x="402.5" y="515.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="405.5" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,209 samples, 0.24%)</title><rect x="402.5" y="499.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="405.5" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,209 samples, 0.24%)</title><rect x="402.5" y="483.0" width="2.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="405.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$143/2089837477.apply (1,923 samples, 0.38%)</title><rect x="405.3" y="499.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="408.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (1,923 samples, 0.38%)</title><rect x="405.3" y="483.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="408.3" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (684 samples, 0.13%)</title><rect x="405.3" y="467.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="408.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1,239 samples, 0.24%)</title><rect x="406.9" y="467.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="409.9" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,239 samples, 0.24%)</title><rect x="406.9" y="451.0" width="2.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="409.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.someOf (9,485 samples, 1.86%)</title><rect x="409.8" y="627.0" width="21.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="412.8" y="638.0">r..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (374 samples, 0.07%)</title><rect x="409.8" y="611.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="412.8" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedQueue (348 samples, 0.07%)</title><rect x="410.6" y="611.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="413.6" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (256 samples, 0.05%)</title><rect x="411.4" y="611.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="414.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (751 samples, 0.15%)</title><rect x="412.0" y="611.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (751 samples, 0.15%)</title><rect x="412.0" y="595.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="415.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$221/394967708.get$Lambda (751 samples, 0.15%)</title><rect x="412.0" y="579.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.0" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.ServiceImpl$$Lambda$221 (751 samples, 0.15%)</title><rect x="412.0" y="563.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="415.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1628258610.linkToTargetMethod (1,321 samples, 0.26%)</title><rect x="413.8" y="611.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="416.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/19541049.invokeStatic (1,321 samples, 0.26%)</title><rect x="413.8" y="595.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="416.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$214/477892750.get$Lambda (1,321 samples, 0.26%)</title><rect x="413.8" y="579.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="416.8" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.ServiceImpl$$Lambda$214 (1,321 samples, 0.26%)</title><rect x="413.8" y="563.0" width="3.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="416.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (2,802 samples, 0.55%)</title><rect x="416.8" y="611.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="419.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (2,802 samples, 0.55%)</title><rect x="416.8" y="595.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="419.8" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (1,519 samples, 0.30%)</title><rect x="416.8" y="579.0" width="3.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="419.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (346 samples, 0.07%)</title><rect x="420.4" y="579.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="423.4" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (346 samples, 0.07%)</title><rect x="420.4" y="563.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="423.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (937 samples, 0.18%)</title><rect x="421.2" y="579.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (937 samples, 0.18%)</title><rect x="421.2" y="563.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="424.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (937 samples, 0.18%)</title><rect x="421.2" y="547.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="424.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (3,299 samples, 0.65%)</title><rect x="423.3" y="611.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="426.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (3,299 samples, 0.65%)</title><rect x="423.3" y="595.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="426.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (1,105 samples, 0.22%)</title><rect x="423.3" y="579.0" width="2.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="426.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (736 samples, 0.14%)</title><rect x="425.9" y="579.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="428.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (380 samples, 0.07%)</title><rect x="425.9" y="563.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="428.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (380 samples, 0.07%)</title><rect x="425.9" y="547.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="428.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$214/477892750.accept (356 samples, 0.07%)</title><rect x="426.8" y="563.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="429.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$someOf$1 (356 samples, 0.07%)</title><rect x="426.8" y="547.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.8" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.ifPresentOrElse (354 samples, 0.07%)</title><rect x="426.8" y="531.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$225/1580364293.accept (354 samples, 0.07%)</title><rect x="426.8" y="515.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="429.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (354 samples, 0.07%)</title><rect x="426.8" y="499.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="429.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (354 samples, 0.07%)</title><rect x="426.8" y="483.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedQueue$Node (354 samples, 0.07%)</title><rect x="426.8" y="467.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="429.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,458 samples, 0.29%)</title><rect x="427.6" y="579.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="430.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,458 samples, 0.29%)</title><rect x="427.6" y="563.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,458 samples, 0.29%)</title><rect x="427.6" y="547.0" width="3.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="430.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.&lt;init&gt; (334 samples, 0.07%)</title><rect x="431.0" y="611.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.0" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedQueue$Node (334 samples, 0.07%)</title><rect x="431.0" y="595.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="434.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/GetEntityRequestProcessor.processLocal (1,985 samples, 0.39%)</title><rect x="431.7" y="627.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="434.7" y="638.0"></text>
</g>
<g>
<title>java/util/Optional.of (243 samples, 0.05%)</title><rect x="431.7" y="611.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="434.7" y="622.0"></text>
</g>
<g>
<title>java.util.Optional (243 samples, 0.05%)</title><rect x="431.7" y="595.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="434.7" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.request.processor.entity.MaybeRecordWithTimestamp (244 samples, 0.05%)</title><rect x="432.3" y="611.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="435.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.getRecord (1,498 samples, 0.29%)</title><rect x="432.9" y="611.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="435.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (1,041 samples, 0.20%)</title><rect x="432.9" y="595.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="435.9" y="606.0"></text>
</g>
<g>
<title>byte[] (1,041 samples, 0.20%)</title><rect x="432.9" y="579.0" width="2.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="435.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/timestamp/RecordWithTimestamp.fromBytes (457 samples, 0.09%)</title><rect x="435.3" y="595.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="438.3" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.timestamp.RecordWithTimestamp (457 samples, 0.09%)</title><rect x="435.3" y="579.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="438.3" y="590.0"></text>
</g>
<g>
<title>java/util/TimerThread.run (225 samples, 0.04%)</title><rect x="436.3" y="739.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.3" y="750.0"></text>
</g>
<g>
<title>java/util/TimerThread.mainLoop (225 samples, 0.04%)</title><rect x="436.3" y="723.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="439.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceMetrics$InfoTask.run (225 samples, 0.04%)</title><rect x="436.3" y="707.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="439.3" y="718.0"></text>
</g>
<g>
<title>org/apache/commons/logging/impl/Log4JLogger.info (162 samples, 0.03%)</title><rect x="436.3" y="691.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.3" y="702.0"></text>
</g>
<g>
<title>org/apache/log4j/Category.log (162 samples, 0.03%)</title><rect x="436.3" y="675.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.3" y="686.0"></text>
</g>
<g>
<title>org/apache/log4j/Category.forcedLog (162 samples, 0.03%)</title><rect x="436.3" y="659.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="439.3" y="670.0"></text>
</g>
<g>
<title>org/apache/log4j/Category.callAppenders (155 samples, 0.03%)</title><rect x="436.3" y="643.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="439.3" y="654.0"></text>
</g>
<g>
<title>org/apache/log4j/helpers/AppenderAttachableImpl.appendLoopOnAppenders (155 samples, 0.03%)</title><rect x="436.3" y="627.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.3" y="638.0"></text>
</g>
<g>
<title>org/apache/log4j/AppenderSkeleton.doAppend (155 samples, 0.03%)</title><rect x="436.3" y="611.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="439.3" y="622.0"></text>
</g>
<g>
<title>org/apache/log4j/WriterAppender.append (155 samples, 0.03%)</title><rect x="436.3" y="595.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="439.3" y="606.0"></text>
</g>
<g>
<title>org/apache/log4j/WriterAppender.subAppend (155 samples, 0.03%)</title><rect x="436.3" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="439.3" y="590.0"></text>
</g>
<g>
<title>org/apache/log4j/PatternLayout.format (141 samples, 0.03%)</title><rect x="436.3" y="563.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="439.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (128,335 samples, 25.17%)</title><rect x="436.8" y="739.0" width="297.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="439.8" y="750.0">java/util/concurrent/ForkJoinWorkerThrea..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (128,335 samples, 25.17%)</title><rect x="436.8" y="723.0" width="297.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.8" y="734.0">java/util/concurrent/ForkJoinPool.runWor..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (128,335 samples, 25.17%)</title><rect x="436.8" y="707.0" width="297.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="439.8" y="718.0">java/util/concurrent/ForkJoinPool.scan</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (128,335 samples, 25.17%)</title><rect x="436.8" y="691.0" width="297.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="439.8" y="702.0">java/util/concurrent/ForkJoinPool$WorkQu..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (128,335 samples, 25.17%)</title><rect x="436.8" y="675.0" width="297.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="439.8" y="686.0">java/util/concurrent/ForkJoinTask.doExec</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (45,006 samples, 8.83%)</title><rect x="436.8" y="659.0" width="104.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="439.8" y="670.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (45,006 samples, 8.83%)</title><rect x="436.8" y="643.0" width="104.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="439.8" y="654.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (45,006 samples, 8.83%)</title><rect x="436.8" y="627.0" width="104.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="439.8" y="638.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (45,006 samples, 8.83%)</title><rect x="436.8" y="611.0" width="104.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="439.8" y="622.0">java/util/co..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (173 samples, 0.03%)</title><rect x="436.8" y="595.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="439.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$179/16826935.apply (44,832 samples, 8.79%)</title><rect x="437.2" y="595.0" width="103.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="440.2" y="606.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (44,832 samples, 8.79%)</title><rect x="437.2" y="579.0" width="103.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="440.2" y="590.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (44,832 samples, 8.79%)</title><rect x="437.2" y="563.0" width="103.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="440.2" y="574.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (242 samples, 0.05%)</title><rect x="437.2" y="547.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="440.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (242 samples, 0.05%)</title><rect x="437.2" y="531.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="440.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$307/1458980780.get$Lambda (144 samples, 0.03%)</title><rect x="437.2" y="515.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="440.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$307 (144 samples, 0.03%)</title><rect x="437.2" y="499.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="440.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (412 samples, 0.08%)</title><rect x="437.8" y="547.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="440.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (412 samples, 0.08%)</title><rect x="437.8" y="531.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="440.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (231 samples, 0.05%)</title><rect x="437.8" y="515.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="440.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (180 samples, 0.04%)</title><rect x="438.3" y="515.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="441.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (180 samples, 0.04%)</title><rect x="438.3" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="441.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (180 samples, 0.04%)</title><rect x="438.3" y="483.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="441.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (768 samples, 0.15%)</title><rect x="438.8" y="547.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="441.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (768 samples, 0.15%)</title><rect x="438.8" y="531.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="441.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (425 samples, 0.08%)</title><rect x="438.8" y="515.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="441.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (343 samples, 0.07%)</title><rect x="439.7" y="515.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="442.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (343 samples, 0.07%)</title><rect x="439.7" y="499.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (343 samples, 0.07%)</title><rect x="439.7" y="483.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="442.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (42,401 samples, 8.31%)</title><rect x="440.5" y="547.0" width="98.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="443.5" y="558.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (42,401 samples, 8.31%)</title><rect x="440.5" y="531.0" width="98.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="443.5" y="542.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (42,401 samples, 8.31%)</title><rect x="440.5" y="515.0" width="98.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="443.5" y="526.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (436 samples, 0.09%)</title><rect x="440.5" y="499.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="443.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (436 samples, 0.09%)</title><rect x="440.5" y="483.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="443.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/1845834383.get$Lambda (126 samples, 0.02%)</title><rect x="440.5" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="443.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$207 (126 samples, 0.02%)</title><rect x="440.5" y="451.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="443.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$208/2050541168.get$Lambda (174 samples, 0.03%)</title><rect x="440.8" y="467.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="443.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$208 (174 samples, 0.03%)</title><rect x="440.8" y="451.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="443.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$281/2106426509.get$Lambda (136 samples, 0.03%)</title><rect x="441.2" y="467.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="444.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$281 (136 samples, 0.03%)</title><rect x="441.2" y="451.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="444.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (28,708 samples, 5.63%)</title><rect x="441.5" y="499.0" width="66.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="444.5" y="510.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (28,708 samples, 5.63%)</title><rect x="441.5" y="483.0" width="66.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="444.5" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (28,521 samples, 5.59%)</title><rect x="441.5" y="467.0" width="66.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="444.5" y="478.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$281/2106426509.apply (28,521 samples, 5.59%)</title><rect x="441.5" y="451.0" width="66.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="444.5" y="462.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (28,521 samples, 5.59%)</title><rect x="441.5" y="435.0" width="66.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="444.5" y="446.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (28,521 samples, 5.59%)</title><rect x="441.5" y="419.0" width="66.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="444.5" y="430.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$208/2050541168.apply (28,521 samples, 5.59%)</title><rect x="441.5" y="403.0" width="66.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="444.5" y="414.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (28,521 samples, 5.59%)</title><rect x="441.5" y="387.0" width="66.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="444.5" y="398.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (195 samples, 0.04%)</title><rect x="441.5" y="371.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="444.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (195 samples, 0.04%)</title><rect x="441.5" y="355.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="444.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$306/156009212.get$Lambda (195 samples, 0.04%)</title><rect x="441.5" y="339.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="444.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$306 (195 samples, 0.04%)</title><rect x="441.5" y="323.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="444.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (597 samples, 0.12%)</title><rect x="442.0" y="371.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="445.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (597 samples, 0.12%)</title><rect x="442.0" y="355.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="445.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (324 samples, 0.06%)</title><rect x="442.0" y="339.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="445.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (262 samples, 0.05%)</title><rect x="442.8" y="339.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="445.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (262 samples, 0.05%)</title><rect x="442.8" y="323.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (262 samples, 0.05%)</title><rect x="442.8" y="307.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="445.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (606 samples, 0.12%)</title><rect x="443.4" y="371.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="446.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (606 samples, 0.12%)</title><rect x="443.4" y="355.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (260 samples, 0.05%)</title><rect x="443.4" y="339.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="446.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (346 samples, 0.07%)</title><rect x="444.0" y="339.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="447.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (346 samples, 0.07%)</title><rect x="444.0" y="323.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="447.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (346 samples, 0.07%)</title><rect x="444.0" y="307.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="447.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (27,123 samples, 5.32%)</title><rect x="444.8" y="371.0" width="62.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="447.8" y="382.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (181 samples, 0.04%)</title><rect x="444.8" y="355.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="447.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (181 samples, 0.04%)</title><rect x="444.8" y="339.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="447.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (23,980 samples, 4.70%)</title><rect x="445.2" y="355.0" width="55.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="448.2" y="366.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (23,980 samples, 4.70%)</title><rect x="445.2" y="339.0" width="55.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="448.2" y="350.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (280 samples, 0.05%)</title><rect x="445.2" y="323.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="448.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$303/2073682402.apply (23,255 samples, 4.56%)</title><rect x="445.8" y="323.0" width="53.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="448.8" y="334.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (23,255 samples, 4.56%)</title><rect x="445.8" y="307.0" width="53.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="448.8" y="318.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (398 samples, 0.08%)</title><rect x="446.0" y="291.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="449.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (398 samples, 0.08%)</title><rect x="446.0" y="275.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="449.0" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (238 samples, 0.05%)</title><rect x="446.0" y="259.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="449.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (160 samples, 0.03%)</title><rect x="446.6" y="259.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="449.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (160 samples, 0.03%)</title><rect x="446.6" y="243.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="449.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (160 samples, 0.03%)</title><rect x="446.6" y="227.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="449.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (192 samples, 0.04%)</title><rect x="447.0" y="291.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="450.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (329 samples, 0.06%)</title><rect x="447.4" y="291.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="450.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (181 samples, 0.04%)</title><rect x="447.4" y="275.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="450.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (148 samples, 0.03%)</title><rect x="447.8" y="275.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="450.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (137 samples, 0.03%)</title><rect x="447.8" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="450.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (137 samples, 0.03%)</title><rect x="447.8" y="243.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="450.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (137 samples, 0.03%)</title><rect x="447.8" y="227.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="450.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (137 samples, 0.03%)</title><rect x="447.8" y="211.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.8" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (137 samples, 0.03%)</title><rect x="447.8" y="195.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="450.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (509 samples, 0.10%)</title><rect x="448.2" y="291.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="451.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (509 samples, 0.10%)</title><rect x="448.2" y="275.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="451.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (173 samples, 0.03%)</title><rect x="448.2" y="259.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (173 samples, 0.03%)</title><rect x="448.2" y="243.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="451.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (173 samples, 0.03%)</title><rect x="448.2" y="227.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (173 samples, 0.03%)</title><rect x="448.2" y="211.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="451.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (336 samples, 0.07%)</title><rect x="448.6" y="259.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="451.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (336 samples, 0.07%)</title><rect x="448.6" y="243.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="451.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (240 samples, 0.05%)</title><rect x="448.6" y="227.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="451.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (21,741 samples, 4.26%)</title><rect x="449.3" y="291.0" width="50.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="452.3" y="302.0">jdk/i..</text>
</g>
<g>
<title>java.lang.StringBuilder (138 samples, 0.03%)</title><rect x="449.3" y="275.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="452.3" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2,396 samples, 0.47%)</title><rect x="449.7" y="275.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="452.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2,396 samples, 0.47%)</title><rect x="449.7" y="259.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="452.7" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (2,396 samples, 0.47%)</title><rect x="449.7" y="243.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="452.7" y="254.0"></text>
</g>
<g>
<title>byte[] (1,938 samples, 0.38%)</title><rect x="449.7" y="227.0" width="4.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="452.7" y="238.0"></text>
</g>
<g>
<title>byte[] (458 samples, 0.09%)</title><rect x="454.1" y="227.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="457.1" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (439 samples, 0.09%)</title><rect x="455.2" y="275.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="458.2" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (439 samples, 0.09%)</title><rect x="455.2" y="259.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="458.2" y="270.0"></text>
</g>
<g>
<title>byte[] (439 samples, 0.09%)</title><rect x="455.2" y="243.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="458.2" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,941 samples, 0.38%)</title><rect x="456.2" y="275.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="459.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,941 samples, 0.38%)</title><rect x="456.2" y="259.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.2" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,941 samples, 0.38%)</title><rect x="456.2" y="243.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="459.2" y="254.0"></text>
</g>
<g>
<title>byte[] (1,660 samples, 0.33%)</title><rect x="456.2" y="227.0" width="3.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="459.2" y="238.0"></text>
</g>
<g>
<title>byte[] (281 samples, 0.06%)</title><rect x="460.1" y="227.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="463.1" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (322 samples, 0.06%)</title><rect x="460.7" y="275.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="463.7" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (322 samples, 0.06%)</title><rect x="460.7" y="259.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="463.7" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (322 samples, 0.06%)</title><rect x="460.7" y="243.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="463.7" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (156 samples, 0.03%)</title><rect x="461.5" y="275.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="464.5" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (156 samples, 0.03%)</title><rect x="461.5" y="259.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="464.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (14,630 samples, 2.87%)</title><rect x="461.8" y="275.0" width="33.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="464.8" y="286.0">jd..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (151 samples, 0.03%)</title><rect x="461.8" y="259.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="464.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (151 samples, 0.03%)</title><rect x="461.8" y="243.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="464.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (151 samples, 0.03%)</title><rect x="461.8" y="227.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="464.8" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$321/1262751266.get$Lambda (151 samples, 0.03%)</title><rect x="461.8" y="211.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="464.8" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$321 (151 samples, 0.03%)</title><rect x="461.8" y="195.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="464.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (8,926 samples, 1.75%)</title><rect x="462.2" y="259.0" width="20.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="465.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6,044 samples, 1.19%)</title><rect x="462.2" y="243.0" width="14.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="465.2" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6,044 samples, 1.19%)</title><rect x="462.2" y="227.0" width="14.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="465.2" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (6,044 samples, 1.19%)</title><rect x="462.2" y="211.0" width="14.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="465.2" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6,044 samples, 1.19%)</title><rect x="462.2" y="195.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.2" y="206.0"></text>
</g>
<g>
<title>byte[] (5,428 samples, 1.06%)</title><rect x="462.2" y="179.0" width="12.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="465.2" y="190.0"></text>
</g>
<g>
<title>byte[] (616 samples, 0.12%)</title><rect x="474.7" y="179.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="477.7" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (429 samples, 0.08%)</title><rect x="476.2" y="243.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="479.2" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (429 samples, 0.08%)</title><rect x="476.2" y="227.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.2" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (429 samples, 0.08%)</title><rect x="476.2" y="211.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.2" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (429 samples, 0.08%)</title><rect x="476.2" y="195.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="479.2" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (352 samples, 0.07%)</title><rect x="477.1" y="243.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.1" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (188 samples, 0.04%)</title><rect x="477.1" y="227.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="480.1" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (164 samples, 0.03%)</title><rect x="477.6" y="227.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="480.6" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (164 samples, 0.03%)</title><rect x="477.6" y="211.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="480.6" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$321/1262751266.test (2,101 samples, 0.41%)</title><rect x="478.0" y="243.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="481.0" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (2,101 samples, 0.41%)</title><rect x="478.0" y="227.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$33/660879561.test (2,101 samples, 0.41%)</title><rect x="478.0" y="211.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="481.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (2,101 samples, 0.41%)</title><rect x="478.0" y="195.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="481.0" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$22/79290965.test (2,101 samples, 0.41%)</title><rect x="478.0" y="179.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="481.0" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (2,101 samples, 0.41%)</title><rect x="478.0" y="163.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$21/508198356.test (2,101 samples, 0.41%)</title><rect x="478.0" y="147.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="481.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (2,101 samples, 0.41%)</title><rect x="478.0" y="131.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="481.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,101 samples, 0.41%)</title><rect x="478.0" y="115.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,101 samples, 0.41%)</title><rect x="478.0" y="99.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="481.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String (1,065 samples, 0.21%)</title><rect x="478.0" y="83.0" width="2.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="481.0" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,036 samples, 0.20%)</title><rect x="480.4" y="83.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="483.4" y="94.0"></text>
</g>
<g>
<title>byte[] (1,036 samples, 0.20%)</title><rect x="480.4" y="67.0" width="2.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="483.4" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (5,553 samples, 1.09%)</title><rect x="482.8" y="259.0" width="12.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (5,553 samples, 1.09%)</title><rect x="482.8" y="243.0" width="12.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="485.8" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (5,553 samples, 1.09%)</title><rect x="482.8" y="227.0" width="12.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.8" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (126 samples, 0.02%)</title><rect x="483.1" y="211.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="486.1" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (314 samples, 0.06%)</title><rect x="483.3" y="211.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="486.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (216 samples, 0.04%)</title><rect x="484.3" y="211.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="487.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (216 samples, 0.04%)</title><rect x="484.3" y="195.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="487.3" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/1966280024.get$Lambda (216 samples, 0.04%)</title><rect x="484.3" y="179.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.3" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$151 (216 samples, 0.04%)</title><rect x="484.3" y="163.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="487.3" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (204 samples, 0.04%)</title><rect x="484.8" y="211.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="487.8" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (204 samples, 0.04%)</title><rect x="484.8" y="195.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="487.8" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (4,195 samples, 0.82%)</title><rect x="485.3" y="211.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="488.3" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/1966280024.accept (4,195 samples, 0.82%)</title><rect x="485.3" y="195.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="488.3" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4,195 samples, 0.82%)</title><rect x="485.3" y="179.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="488.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (837 samples, 0.16%)</title><rect x="485.3" y="163.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="488.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (837 samples, 0.16%)</title><rect x="485.3" y="147.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="488.3" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$156/142789664.get$Lambda (837 samples, 0.16%)</title><rect x="485.3" y="131.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="488.3" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$156 (837 samples, 0.16%)</title><rect x="485.3" y="115.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="488.3" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (303 samples, 0.06%)</title><rect x="487.2" y="163.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.2" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$156/142789664.accept (303 samples, 0.06%)</title><rect x="487.2" y="147.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.2" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (303 samples, 0.06%)</title><rect x="487.2" y="131.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="490.2" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (303 samples, 0.06%)</title><rect x="487.2" y="115.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="490.2" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (303 samples, 0.06%)</title><rect x="487.2" y="99.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.2" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (303 samples, 0.06%)</title><rect x="487.2" y="83.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.2" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (303 samples, 0.06%)</title><rect x="487.2" y="67.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.2" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (303 samples, 0.06%)</title><rect x="487.2" y="51.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="490.2" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (303 samples, 0.06%)</title><rect x="487.2" y="35.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="490.2" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,684 samples, 0.33%)</title><rect x="487.9" y="163.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="490.9" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,684 samples, 0.33%)</title><rect x="487.9" y="147.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="490.9" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (842 samples, 0.17%)</title><rect x="487.9" y="131.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.9" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (842 samples, 0.17%)</title><rect x="487.9" y="115.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.9" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (842 samples, 0.17%)</title><rect x="487.9" y="99.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="490.9" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (842 samples, 0.17%)</title><rect x="489.9" y="131.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="492.9" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (842 samples, 0.17%)</title><rect x="489.9" y="115.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="492.9" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,371 samples, 0.27%)</title><rect x="491.8" y="163.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="494.8" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,371 samples, 0.27%)</title><rect x="491.8" y="147.0" width="3.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="494.8" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (298 samples, 0.06%)</title><rect x="495.0" y="211.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="498.0" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (298 samples, 0.06%)</title><rect x="495.0" y="195.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="498.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (417 samples, 0.08%)</title><rect x="495.7" y="275.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="498.7" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (125 samples, 0.02%)</title><rect x="495.7" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="498.7" y="270.0"></text>
</g>
<g>
<title>byte[] (125 samples, 0.02%)</title><rect x="495.7" y="243.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="498.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (292 samples, 0.06%)</title><rect x="496.0" y="259.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (292 samples, 0.06%)</title><rect x="496.0" y="243.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="499.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1095088856.invoke (292 samples, 0.06%)</title><rect x="496.0" y="227.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="499.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (292 samples, 0.06%)</title><rect x="496.0" y="211.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="499.0" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (130 samples, 0.03%)</title><rect x="496.0" y="195.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="499.0" y="206.0"></text>
</g>
<g>
<title>java.lang.String (130 samples, 0.03%)</title><rect x="496.0" y="179.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="499.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (162 samples, 0.03%)</title><rect x="496.3" y="195.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="499.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (162 samples, 0.03%)</title><rect x="496.3" y="179.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="499.3" y="190.0"></text>
</g>
<g>
<title>byte[] (162 samples, 0.03%)</title><rect x="496.3" y="163.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="499.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (344 samples, 0.07%)</title><rect x="496.6" y="275.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="499.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (344 samples, 0.07%)</title><rect x="496.6" y="259.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="499.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (344 samples, 0.07%)</title><rect x="496.6" y="243.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="499.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (344 samples, 0.07%)</title><rect x="496.6" y="227.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="499.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1095088856.invoke (344 samples, 0.07%)</title><rect x="496.6" y="211.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="499.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (344 samples, 0.07%)</title><rect x="496.6" y="195.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="499.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (131 samples, 0.03%)</title><rect x="496.6" y="179.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="499.6" y="190.0"></text>
</g>
<g>
<title>java.lang.String (131 samples, 0.03%)</title><rect x="496.6" y="163.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="499.6" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (213 samples, 0.04%)</title><rect x="496.9" y="179.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (213 samples, 0.04%)</title><rect x="496.9" y="163.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="499.9" y="174.0"></text>
</g>
<g>
<title>byte[] (213 samples, 0.04%)</title><rect x="496.9" y="147.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="499.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (958 samples, 0.19%)</title><rect x="497.4" y="275.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="500.4" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (278 samples, 0.05%)</title><rect x="497.4" y="259.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="500.4" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (237 samples, 0.05%)</title><rect x="498.1" y="259.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="501.1" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (237 samples, 0.05%)</title><rect x="498.1" y="243.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="501.1" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (443 samples, 0.09%)</title><rect x="498.6" y="259.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="501.6" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (443 samples, 0.09%)</title><rect x="498.6" y="243.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="501.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (445 samples, 0.09%)</title><rect x="499.7" y="323.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="502.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (445 samples, 0.09%)</title><rect x="499.7" y="307.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="502.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (445 samples, 0.09%)</title><rect x="499.7" y="291.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="502.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (520 samples, 0.10%)</title><rect x="500.7" y="355.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="503.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (184 samples, 0.04%)</title><rect x="501.9" y="355.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="504.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (2,258 samples, 0.44%)</title><rect x="502.3" y="355.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="505.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (204 samples, 0.04%)</title><rect x="502.3" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="505.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (204 samples, 0.04%)</title><rect x="502.3" y="323.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="505.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (236 samples, 0.05%)</title><rect x="502.8" y="339.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="505.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (161 samples, 0.03%)</title><rect x="503.3" y="339.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="506.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (251 samples, 0.05%)</title><rect x="503.7" y="339.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="506.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (656 samples, 0.13%)</title><rect x="504.3" y="339.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="507.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (656 samples, 0.13%)</title><rect x="504.3" y="323.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="507.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (656 samples, 0.13%)</title><rect x="504.3" y="307.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="507.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (656 samples, 0.13%)</title><rect x="504.3" y="291.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="507.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (656 samples, 0.13%)</title><rect x="504.3" y="275.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="507.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (656 samples, 0.13%)</title><rect x="504.3" y="259.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="507.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$272/309565785.run (656 samples, 0.13%)</title><rect x="504.3" y="243.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="507.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (656 samples, 0.13%)</title><rect x="504.3" y="227.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="507.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (656 samples, 0.13%)</title><rect x="504.3" y="211.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="507.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (234 samples, 0.05%)</title><rect x="504.3" y="195.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="507.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (234 samples, 0.05%)</title><rect x="504.3" y="179.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="507.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$296/1194036443.get$Lambda (138 samples, 0.03%)</title><rect x="504.5" y="163.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="507.5" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$296 (138 samples, 0.03%)</title><rect x="504.5" y="147.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="507.5" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (206 samples, 0.04%)</title><rect x="504.8" y="195.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="507.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (216 samples, 0.04%)</title><rect x="505.3" y="195.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="508.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (216 samples, 0.04%)</title><rect x="505.3" y="179.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="508.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (135 samples, 0.03%)</title><rect x="505.5" y="163.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.5" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (135 samples, 0.03%)</title><rect x="505.5" y="147.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="508.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (587 samples, 0.12%)</title><rect x="505.8" y="339.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="508.8" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (139 samples, 0.03%)</title><rect x="505.8" y="323.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="508.8" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (269 samples, 0.05%)</title><rect x="506.1" y="323.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="509.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (179 samples, 0.04%)</title><rect x="506.7" y="323.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="509.7" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (179 samples, 0.04%)</title><rect x="506.7" y="307.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="509.7" y="318.0"></text>
</g>
<g>
<title>byte[] (179 samples, 0.04%)</title><rect x="506.7" y="291.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="509.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (163 samples, 0.03%)</title><rect x="507.2" y="339.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (163 samples, 0.03%)</title><rect x="507.2" y="323.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="510.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (187 samples, 0.04%)</title><rect x="507.5" y="467.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="510.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (187 samples, 0.04%)</title><rect x="507.5" y="451.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="510.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (187 samples, 0.04%)</title><rect x="507.5" y="435.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="510.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (365 samples, 0.07%)</title><rect x="508.0" y="499.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="511.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (365 samples, 0.07%)</title><rect x="508.0" y="483.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="511.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (182 samples, 0.04%)</title><rect x="508.0" y="467.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="511.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (183 samples, 0.04%)</title><rect x="508.4" y="467.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="511.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (183 samples, 0.04%)</title><rect x="508.4" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="511.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (183 samples, 0.04%)</title><rect x="508.4" y="435.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="511.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (12,892 samples, 2.53%)</title><rect x="508.8" y="499.0" width="29.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="511.8" y="510.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (223 samples, 0.04%)</title><rect x="508.8" y="483.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="511.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (223 samples, 0.04%)</title><rect x="508.8" y="467.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="511.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$276/1281496589.get$Lambda (126 samples, 0.02%)</title><rect x="508.8" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="511.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$276 (126 samples, 0.02%)</title><rect x="508.8" y="435.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="511.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (424 samples, 0.08%)</title><rect x="509.3" y="483.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="512.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (424 samples, 0.08%)</title><rect x="509.3" y="467.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="512.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$279/56657639.apply (201 samples, 0.04%)</title><rect x="509.3" y="451.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="512.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (201 samples, 0.04%)</title><rect x="509.3" y="435.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (201 samples, 0.04%)</title><rect x="509.3" y="419.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="512.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (201 samples, 0.04%)</title><rect x="509.3" y="403.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="512.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (223 samples, 0.04%)</title><rect x="509.8" y="451.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="512.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (223 samples, 0.04%)</title><rect x="509.8" y="435.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="512.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (223 samples, 0.04%)</title><rect x="509.8" y="419.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="512.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (178 samples, 0.03%)</title><rect x="510.3" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="513.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (178 samples, 0.03%)</title><rect x="510.3" y="467.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (178 samples, 0.03%)</title><rect x="510.3" y="451.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="513.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (178 samples, 0.03%)</title><rect x="510.3" y="435.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="513.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (178 samples, 0.03%)</title><rect x="510.3" y="419.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="513.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (12,067 samples, 2.37%)</title><rect x="510.7" y="483.0" width="27.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="513.7" y="494.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (140 samples, 0.03%)</title><rect x="510.7" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="513.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (140 samples, 0.03%)</title><rect x="510.7" y="451.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="513.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$241/1594368192.get$Lambda (140 samples, 0.03%)</title><rect x="510.7" y="435.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$241 (140 samples, 0.03%)</title><rect x="510.7" y="419.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="513.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (11,236 samples, 2.20%)</title><rect x="511.0" y="467.0" width="26.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="514.0" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (11,236 samples, 2.20%)</title><rect x="511.0" y="451.0" width="26.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.0" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (11,062 samples, 2.17%)</title><rect x="511.0" y="435.0" width="25.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="514.0" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$241/1594368192.apply (11,062 samples, 2.17%)</title><rect x="511.0" y="419.0" width="25.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="514.0" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (11,062 samples, 2.17%)</title><rect x="511.0" y="403.0" width="25.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.0" y="414.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (11,062 samples, 2.17%)</title><rect x="511.0" y="387.0" width="25.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="514.0" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (4,526 samples, 0.89%)</title><rect x="511.2" y="371.0" width="10.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="514.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4,526 samples, 0.89%)</title><rect x="511.2" y="355.0" width="10.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="514.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (4,526 samples, 0.89%)</title><rect x="511.2" y="339.0" width="10.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="514.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$273/703382578.apply (4,336 samples, 0.85%)</title><rect x="511.2" y="323.0" width="10.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (4,336 samples, 0.85%)</title><rect x="511.2" y="307.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="514.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (4,336 samples, 0.85%)</title><rect x="511.2" y="291.0" width="10.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (4,336 samples, 0.85%)</title><rect x="511.2" y="275.0" width="10.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="514.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (2,746 samples, 0.54%)</title><rect x="511.2" y="259.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="514.2" y="270.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (745 samples, 0.15%)</title><rect x="511.2" y="243.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="514.2" y="254.0"></text>
</g>
<g>
<title>java.lang.String (164 samples, 0.03%)</title><rect x="511.2" y="227.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="514.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (279 samples, 0.05%)</title><rect x="511.6" y="227.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="514.6" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (279 samples, 0.05%)</title><rect x="511.6" y="211.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="514.6" y="222.0"></text>
</g>
<g>
<title>byte[] (279 samples, 0.05%)</title><rect x="511.6" y="195.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="514.6" y="206.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (302 samples, 0.06%)</title><rect x="512.3" y="227.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="515.3" y="238.0"></text>
</g>
<g>
<title>byte[] (302 samples, 0.06%)</title><rect x="512.3" y="211.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="515.3" y="222.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (128 samples, 0.03%)</title><rect x="513.0" y="243.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="516.0" y="254.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (128 samples, 0.03%)</title><rect x="513.0" y="227.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="516.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (1,335 samples, 0.26%)</title><rect x="513.2" y="243.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (121 samples, 0.02%)</title><rect x="513.2" y="227.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="516.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (989 samples, 0.19%)</title><rect x="513.5" y="227.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="516.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (989 samples, 0.19%)</title><rect x="513.5" y="211.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="516.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1943325854.linkToTargetMethod (726 samples, 0.14%)</title><rect x="513.5" y="195.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="516.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (726 samples, 0.14%)</title><rect x="513.5" y="179.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="516.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$17/1411892748.get$Lambda (726 samples, 0.14%)</title><rect x="513.5" y="163.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="516.5" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$17 (726 samples, 0.14%)</title><rect x="513.5" y="147.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="516.5" y="158.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (263 samples, 0.05%)</title><rect x="515.2" y="195.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="518.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$17/1411892748.run (263 samples, 0.05%)</title><rect x="515.2" y="179.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="518.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (263 samples, 0.05%)</title><rect x="515.2" y="163.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.2" y="174.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (263 samples, 0.05%)</title><rect x="515.2" y="147.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="518.2" y="158.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (263 samples, 0.05%)</title><rect x="515.2" y="131.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.2" y="142.0"></text>
</g>
<g>
<title>java.lang.Integer (263 samples, 0.05%)</title><rect x="515.2" y="115.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="518.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (225 samples, 0.04%)</title><rect x="515.8" y="227.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (225 samples, 0.04%)</title><rect x="515.8" y="211.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="518.8" y="222.0"></text>
</g>
<g>
<title>int[] (225 samples, 0.04%)</title><rect x="515.8" y="195.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="518.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (538 samples, 0.11%)</title><rect x="516.3" y="243.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="519.3" y="254.0"></text>
</g>
<g>
<title>byte[] (283 samples, 0.06%)</title><rect x="516.3" y="227.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="519.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (255 samples, 0.05%)</title><rect x="517.0" y="227.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.0" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (255 samples, 0.05%)</title><rect x="517.0" y="211.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="520.0" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (255 samples, 0.05%)</title><rect x="517.0" y="195.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="520.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1,590 samples, 0.31%)</title><rect x="517.6" y="259.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.6" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (433 samples, 0.08%)</title><rect x="517.6" y="243.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="520.6" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (488 samples, 0.10%)</title><rect x="518.6" y="243.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="521.6" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (488 samples, 0.10%)</title><rect x="518.6" y="227.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="521.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (669 samples, 0.13%)</title><rect x="519.7" y="243.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="522.7" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (669 samples, 0.13%)</title><rect x="519.7" y="227.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="522.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (190 samples, 0.04%)</title><rect x="521.3" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="524.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (190 samples, 0.04%)</title><rect x="521.3" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="524.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (190 samples, 0.04%)</title><rect x="521.3" y="291.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="524.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (6,457 samples, 1.27%)</title><rect x="521.7" y="371.0" width="14.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="524.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (513 samples, 0.10%)</title><rect x="521.7" y="355.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="524.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (5,776 samples, 1.13%)</title><rect x="522.9" y="355.0" width="13.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="525.9" y="366.0"></text>
</g>
<g>
<title>java.util.LinkedList (173 samples, 0.03%)</title><rect x="523.1" y="339.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="526.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (124 samples, 0.02%)</title><rect x="523.5" y="339.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="526.5" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (301 samples, 0.06%)</title><rect x="523.8" y="339.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="526.8" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (301 samples, 0.06%)</title><rect x="523.8" y="323.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="526.8" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (301 samples, 0.06%)</title><rect x="523.8" y="307.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="526.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (176 samples, 0.03%)</title><rect x="524.5" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="527.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (176 samples, 0.03%)</title><rect x="524.5" y="323.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="527.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (459 samples, 0.09%)</title><rect x="524.9" y="339.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="527.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (280 samples, 0.05%)</title><rect x="525.9" y="339.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="528.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (325 samples, 0.06%)</title><rect x="526.6" y="339.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="529.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (359 samples, 0.07%)</title><rect x="527.3" y="339.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="530.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (1,716 samples, 0.34%)</title><rect x="528.2" y="339.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="531.2" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (131 samples, 0.03%)</title><rect x="528.2" y="323.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="531.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (123 samples, 0.02%)</title><rect x="528.7" y="323.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="531.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (140 samples, 0.03%)</title><rect x="529.3" y="323.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (140 samples, 0.03%)</title><rect x="529.3" y="307.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="532.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (145 samples, 0.03%)</title><rect x="529.7" y="323.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="532.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (190 samples, 0.04%)</title><rect x="530.0" y="323.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="533.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (737 samples, 0.14%)</title><rect x="530.4" y="323.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (154 samples, 0.03%)</title><rect x="530.4" y="307.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="533.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (201 samples, 0.04%)</title><rect x="530.8" y="307.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="533.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (280 samples, 0.05%)</title><rect x="531.5" y="307.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="534.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (1,115 samples, 0.22%)</title><rect x="532.1" y="339.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="535.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (116 samples, 0.02%)</title><rect x="532.8" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="535.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (116 samples, 0.02%)</title><rect x="532.8" y="307.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="535.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (697 samples, 0.14%)</title><rect x="533.1" y="323.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="536.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (127 samples, 0.02%)</title><rect x="533.1" y="307.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="536.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (185 samples, 0.04%)</title><rect x="533.4" y="307.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="536.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (291 samples, 0.06%)</title><rect x="534.0" y="307.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="537.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (148 samples, 0.03%)</title><rect x="534.7" y="339.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="537.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (148 samples, 0.03%)</title><rect x="534.7" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="537.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (148 samples, 0.03%)</title><rect x="534.7" y="307.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="537.7" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (148 samples, 0.03%)</title><rect x="534.7" y="291.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="537.7" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (148 samples, 0.03%)</title><rect x="534.7" y="275.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="537.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (148 samples, 0.03%)</title><rect x="534.7" y="259.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="537.7" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (148 samples, 0.03%)</title><rect x="534.7" y="243.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="537.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (514 samples, 0.10%)</title><rect x="535.1" y="339.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="538.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1943325854.linkToTargetMethod (118 samples, 0.02%)</title><rect x="535.1" y="323.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="538.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (118 samples, 0.02%)</title><rect x="535.1" y="307.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="538.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$249/466264337.get$Lambda (118 samples, 0.02%)</title><rect x="535.1" y="291.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="538.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$249 (118 samples, 0.02%)</title><rect x="535.1" y="275.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="538.1" y="286.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (396 samples, 0.08%)</title><rect x="535.3" y="323.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="538.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$249/466264337.run (396 samples, 0.08%)</title><rect x="535.3" y="307.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="538.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (396 samples, 0.08%)</title><rect x="535.3" y="291.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="538.3" y="302.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (289 samples, 0.06%)</title><rect x="535.6" y="275.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="538.6" y="286.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (144 samples, 0.03%)</title><rect x="535.6" y="259.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="538.6" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (145 samples, 0.03%)</title><rect x="535.9" y="259.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="538.9" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (145 samples, 0.03%)</title><rect x="535.9" y="243.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="538.9" y="254.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (145 samples, 0.03%)</title><rect x="535.9" y="227.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="538.9" y="238.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (145 samples, 0.03%)</title><rect x="535.9" y="211.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="538.9" y="222.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (145 samples, 0.03%)</title><rect x="535.9" y="195.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="538.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (168 samples, 0.03%)</title><rect x="536.3" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="539.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (168 samples, 0.03%)</title><rect x="536.3" y="339.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="539.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (174 samples, 0.03%)</title><rect x="536.6" y="435.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="539.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (174 samples, 0.03%)</title><rect x="536.6" y="419.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="539.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (174 samples, 0.03%)</title><rect x="536.6" y="403.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="539.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (177 samples, 0.03%)</title><rect x="537.0" y="467.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="540.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (177 samples, 0.03%)</title><rect x="537.0" y="451.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="540.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (177 samples, 0.03%)</title><rect x="537.0" y="435.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="540.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (177 samples, 0.03%)</title><rect x="537.0" y="419.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="540.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (177 samples, 0.03%)</title><rect x="537.0" y="403.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="540.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (514 samples, 0.10%)</title><rect x="537.5" y="467.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="540.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (341 samples, 0.07%)</title><rect x="537.5" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="540.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (341 samples, 0.07%)</title><rect x="537.5" y="435.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="540.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/403197270.linkToTargetMethod (341 samples, 0.07%)</title><rect x="537.5" y="419.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="540.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/237679548.invoke (341 samples, 0.07%)</title><rect x="537.5" y="403.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="540.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/695135699.invoke (341 samples, 0.07%)</title><rect x="537.5" y="387.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="540.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (341 samples, 0.07%)</title><rect x="537.5" y="371.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="540.5" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (129 samples, 0.03%)</title><rect x="537.5" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="540.5" y="366.0"></text>
</g>
<g>
<title>java.lang.String (129 samples, 0.03%)</title><rect x="537.5" y="339.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="540.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (212 samples, 0.04%)</title><rect x="537.8" y="355.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="540.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (212 samples, 0.04%)</title><rect x="537.8" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="540.8" y="350.0"></text>
</g>
<g>
<title>byte[] (212 samples, 0.04%)</title><rect x="537.8" y="323.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="540.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (173 samples, 0.03%)</title><rect x="538.2" y="451.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (173 samples, 0.03%)</title><rect x="538.2" y="435.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="541.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (231 samples, 0.05%)</title><rect x="538.6" y="547.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="541.6" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (231 samples, 0.05%)</title><rect x="538.6" y="531.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="541.6" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (231 samples, 0.05%)</title><rect x="538.6" y="515.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="541.6" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (231 samples, 0.05%)</title><rect x="538.6" y="499.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="541.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (778 samples, 0.15%)</title><rect x="539.2" y="547.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="542.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (495 samples, 0.10%)</title><rect x="539.2" y="531.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="542.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (283 samples, 0.06%)</title><rect x="540.3" y="531.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (283 samples, 0.06%)</title><rect x="540.3" y="515.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.3" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.now (152 samples, 0.03%)</title><rect x="540.3" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="543.3" y="510.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (152 samples, 0.03%)</title><rect x="540.3" y="483.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="543.3" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (152 samples, 0.03%)</title><rect x="540.3" y="467.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.3" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.create (152 samples, 0.03%)</title><rect x="540.3" y="451.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="543.3" y="462.0"></text>
</g>
<g>
<title>java.time.Instant (152 samples, 0.03%)</title><rect x="540.3" y="435.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="543.3" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (131 samples, 0.03%)</title><rect x="540.7" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="543.7" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (131 samples, 0.03%)</title><rect x="540.7" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="543.7" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (131 samples, 0.03%)</title><rect x="540.7" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="543.7" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (131 samples, 0.03%)</title><rect x="540.7" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="543.7" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (131 samples, 0.03%)</title><rect x="540.7" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="543.7" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (131 samples, 0.03%)</title><rect x="540.7" y="419.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.7" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (131 samples, 0.03%)</title><rect x="540.7" y="403.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.7" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (131 samples, 0.03%)</title><rect x="540.7" y="387.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.7" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (131 samples, 0.03%)</title><rect x="540.7" y="371.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="543.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (54,598 samples, 10.71%)</title><rect x="541.0" y="659.0" width="126.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="544.0" y="670.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (54,598 samples, 10.71%)</title><rect x="541.0" y="643.0" width="126.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="544.0" y="654.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (54,598 samples, 10.71%)</title><rect x="541.0" y="627.0" width="126.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="544.0" y="638.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (54,598 samples, 10.71%)</title><rect x="541.0" y="611.0" width="126.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="544.0" y="622.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (54,598 samples, 10.71%)</title><rect x="541.0" y="595.0" width="126.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="544.0" y="606.0">java/util/concur..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$214/477892750.accept (54,598 samples, 10.71%)</title><rect x="541.0" y="579.0" width="126.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.0" y="590.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$someOf$1 (54,598 samples, 10.71%)</title><rect x="541.0" y="563.0" width="126.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="544.0" y="574.0">ru/mail/polis/se..</text>
</g>
<g>
<title>java/util/Optional.ifPresentOrElse (5,260 samples, 1.03%)</title><rect x="541.1" y="547.0" width="12.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="544.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$225/1580364293.accept (5,260 samples, 1.03%)</title><rect x="541.1" y="531.0" width="12.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="544.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (5,260 samples, 1.03%)</title><rect x="541.1" y="515.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="544.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (5,260 samples, 1.03%)</title><rect x="541.1" y="499.0" width="12.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="544.1" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedQueue$Node (5,260 samples, 1.03%)</title><rect x="541.1" y="483.0" width="12.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="544.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (49,303 samples, 9.67%)</title><rect x="553.2" y="547.0" width="114.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="556.2" y="558.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (49,303 samples, 9.67%)</title><rect x="553.2" y="531.0" width="114.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="556.2" y="542.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (49,303 samples, 9.67%)</title><rect x="553.2" y="515.0" width="114.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="556.2" y="526.0">java/util/conc..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$234/998175126.accept (49,303 samples, 9.67%)</title><rect x="553.2" y="499.0" width="114.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="556.2" y="510.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$processEntityForUser$3 (49,303 samples, 9.67%)</title><rect x="553.2" y="483.0" width="114.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="556.2" y="494.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (11,106 samples, 2.18%)</title><rect x="553.2" y="467.0" width="25.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="556.2" y="478.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9,865 samples, 1.93%)</title><rect x="553.2" y="451.0" width="22.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="556.2" y="462.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9,865 samples, 1.93%)</title><rect x="553.2" y="435.0" width="22.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="556.2" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6,665 samples, 1.31%)</title><rect x="553.2" y="419.0" width="15.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="556.2" y="430.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (6,665 samples, 1.31%)</title><rect x="553.2" y="403.0" width="15.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="556.2" y="414.0"></text>
</g>
<g>
<title>byte[] (5,556 samples, 1.09%)</title><rect x="553.2" y="387.0" width="12.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="556.2" y="398.0"></text>
</g>
<g>
<title>byte[] (1,109 samples, 0.22%)</title><rect x="566.1" y="387.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="569.1" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3,200 samples, 0.63%)</title><rect x="568.7" y="419.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="571.7" y="430.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3,200 samples, 0.63%)</title><rect x="568.7" y="403.0" width="7.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="571.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceMetrics.responseWithStatus (1,241 samples, 0.24%)</title><rect x="576.1" y="451.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="579.1" y="462.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1,241 samples, 0.24%)</title><rect x="576.1" y="435.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="579.1" y="446.0"></text>
</g>
<g>
<title>java.lang.Integer (1,241 samples, 0.24%)</title><rect x="576.1" y="419.0" width="2.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="579.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/GetEntityRequestProcessor.makeResponseForUser (38,197 samples, 7.49%)</title><rect x="578.9" y="467.0" width="88.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.9" y="478.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/Collection.stream (7,304 samples, 1.43%)</title><rect x="578.9" y="451.0" width="16.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="581.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.spliterator (2,997 samples, 0.59%)</title><rect x="578.9" y="435.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="581.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedQueue$CLQSpliterator (2,997 samples, 0.59%)</title><rect x="578.9" y="419.0" width="7.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="581.9" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4,307 samples, 0.84%)</title><rect x="585.9" y="435.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="588.9" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (4,290 samples, 0.84%)</title><rect x="585.9" y="419.0" width="9.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="588.9" y="430.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (2,323 samples, 0.46%)</title><rect x="595.8" y="451.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.8" y="462.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (2,323 samples, 0.46%)</title><rect x="595.8" y="435.0" width="5.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="598.8" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (10,017 samples, 1.96%)</title><rect x="601.2" y="451.0" width="23.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="604.2" y="462.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7,682 samples, 1.51%)</title><rect x="601.2" y="435.0" width="17.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="604.2" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (7,682 samples, 1.51%)</title><rect x="601.2" y="419.0" width="17.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="604.2" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5,363 samples, 1.05%)</title><rect x="601.2" y="403.0" width="12.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="604.2" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1,835 samples, 0.36%)</title><rect x="601.2" y="387.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1,835 samples, 0.36%)</title><rect x="601.2" y="371.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="604.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (1,835 samples, 0.36%)</title><rect x="601.2" y="355.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.2" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (1,835 samples, 0.36%)</title><rect x="601.2" y="339.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="604.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$62/501107890.get (1,835 samples, 0.36%)</title><rect x="601.2" y="323.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="604.2" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,835 samples, 0.36%)</title><rect x="601.2" y="307.0" width="4.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="604.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3,528 samples, 0.69%)</title><rect x="605.5" y="387.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="608.5" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (1,743 samples, 0.34%)</title><rect x="605.5" y="371.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="608.5" y="382.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (1,743 samples, 0.34%)</title><rect x="605.5" y="355.0" width="4.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="608.5" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (1,785 samples, 0.35%)</title><rect x="609.5" y="371.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="612.5" y="382.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (1,785 samples, 0.35%)</title><rect x="609.5" y="355.0" width="4.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="612.5" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (2,319 samples, 0.45%)</title><rect x="613.6" y="403.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="616.6" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (2,319 samples, 0.45%)</title><rect x="613.6" y="387.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="616.6" y="398.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (2,319 samples, 0.45%)</title><rect x="613.6" y="371.0" width="5.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="616.6" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (2,335 samples, 0.46%)</title><rect x="619.0" y="435.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="622.0" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (2,335 samples, 0.46%)</title><rect x="619.0" y="419.0" width="5.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="622.0" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (4,805 samples, 0.94%)</title><rect x="624.4" y="451.0" width="11.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.4" y="462.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (4,720 samples, 0.93%)</title><rect x="624.4" y="435.0" width="10.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="627.4" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (4,641 samples, 0.91%)</title><rect x="635.5" y="451.0" width="10.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="638.5" y="462.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (4,553 samples, 0.89%)</title><rect x="635.5" y="435.0" width="10.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="638.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/ResponseUtils.notFound (9,107 samples, 1.79%)</title><rect x="646.2" y="451.0" width="21.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="649.2" y="462.0">r..</text>
</g>
<g>
<title>one.nio.http.Response (1,758 samples, 0.34%)</title><rect x="646.2" y="435.0" width="4.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="649.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7,349 samples, 1.44%)</title><rect x="650.3" y="435.0" width="17.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="653.3" y="446.0"></text>
</g>
<g>
<title>byte[] (3,058 samples, 0.60%)</title><rect x="650.3" y="419.0" width="7.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="653.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (2,436 samples, 0.48%)</title><rect x="657.4" y="419.0" width="5.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="660.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String (1,855 samples, 0.36%)</title><rect x="663.0" y="419.0" width="4.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="666.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask$RunnableExecuteAction.exec (28,731 samples, 5.63%)</title><rect x="667.3" y="659.0" width="66.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.3" y="670.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$322/21500752.run (3,584 samples, 0.70%)</title><rect x="667.3" y="643.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="670.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (3,584 samples, 0.70%)</title><rect x="667.3" y="627.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="670.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (3,584 samples, 0.70%)</title><rect x="667.3" y="611.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="670.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (3,584 samples, 0.70%)</title><rect x="667.3" y="595.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="670.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3,584 samples, 0.70%)</title><rect x="667.3" y="579.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3,584 samples, 0.70%)</title><rect x="667.3" y="563.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="670.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3,584 samples, 0.70%)</title><rect x="667.3" y="547.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3,584 samples, 0.70%)</title><rect x="667.3" y="531.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3,584 samples, 0.70%)</title><rect x="667.3" y="515.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3,584 samples, 0.70%)</title><rect x="667.3" y="499.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (3,584 samples, 0.70%)</title><rect x="667.3" y="483.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="670.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (3,291 samples, 0.65%)</title><rect x="667.3" y="467.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="670.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (443 samples, 0.09%)</title><rect x="667.3" y="451.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="670.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (443 samples, 0.09%)</title><rect x="667.3" y="435.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="670.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$328/1075952906.get$Lambda (124 samples, 0.02%)</title><rect x="667.3" y="419.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="670.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$328 (124 samples, 0.02%)</title><rect x="667.3" y="403.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="670.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$351/1197879810.get$Lambda (319 samples, 0.06%)</title><rect x="667.6" y="419.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="670.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$351 (319 samples, 0.06%)</title><rect x="667.6" y="403.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="670.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (2,848 samples, 0.56%)</title><rect x="668.3" y="451.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="671.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (269 samples, 0.05%)</title><rect x="668.3" y="435.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="671.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,579 samples, 0.51%)</title><rect x="669.0" y="435.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="672.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2,579 samples, 0.51%)</title><rect x="669.0" y="419.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="672.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,579 samples, 0.51%)</title><rect x="669.0" y="403.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="672.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (966 samples, 0.19%)</title><rect x="669.0" y="387.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="672.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (348 samples, 0.07%)</title><rect x="669.0" y="371.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="672.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$339/516282602.apply (613 samples, 0.12%)</title><rect x="669.8" y="371.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="672.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (613 samples, 0.12%)</title><rect x="669.8" y="355.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="672.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (613 samples, 0.12%)</title><rect x="669.8" y="339.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="672.8" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (143 samples, 0.03%)</title><rect x="669.8" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="672.8" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (143 samples, 0.03%)</title><rect x="669.8" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="672.8" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (143 samples, 0.03%)</title><rect x="669.8" y="291.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="672.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (470 samples, 0.09%)</title><rect x="670.1" y="323.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (369 samples, 0.07%)</title><rect x="670.3" y="307.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (369 samples, 0.07%)</title><rect x="670.3" y="291.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="673.3" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (189 samples, 0.04%)</title><rect x="670.3" y="275.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="673.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (180 samples, 0.04%)</title><rect x="670.8" y="275.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="673.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (180 samples, 0.04%)</title><rect x="670.8" y="259.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="673.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (180 samples, 0.04%)</title><rect x="670.8" y="243.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="673.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1,613 samples, 0.32%)</title><rect x="671.2" y="387.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="674.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,613 samples, 0.32%)</title><rect x="671.2" y="371.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="674.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$306/156009212.apply (1,613 samples, 0.32%)</title><rect x="671.2" y="355.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1,613 samples, 0.32%)</title><rect x="671.2" y="339.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="674.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,613 samples, 0.32%)</title><rect x="671.2" y="323.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="674.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/1845834383.apply (1,613 samples, 0.32%)</title><rect x="671.2" y="307.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1,613 samples, 0.32%)</title><rect x="671.2" y="291.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="674.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (369 samples, 0.07%)</title><rect x="671.4" y="275.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (369 samples, 0.07%)</title><rect x="671.4" y="259.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="674.4" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (203 samples, 0.04%)</title><rect x="671.4" y="243.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="674.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (166 samples, 0.03%)</title><rect x="671.8" y="243.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="674.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (166 samples, 0.03%)</title><rect x="671.8" y="227.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="674.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (166 samples, 0.03%)</title><rect x="671.8" y="211.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="674.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (509 samples, 0.10%)</title><rect x="672.2" y="275.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="675.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (418 samples, 0.08%)</title><rect x="672.4" y="259.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="675.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (418 samples, 0.08%)</title><rect x="672.4" y="243.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="675.4" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (232 samples, 0.05%)</title><rect x="672.4" y="227.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="675.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (186 samples, 0.04%)</title><rect x="673.0" y="227.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="676.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (186 samples, 0.04%)</title><rect x="673.0" y="211.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.0" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (186 samples, 0.04%)</title><rect x="673.0" y="195.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="676.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (658 samples, 0.13%)</title><rect x="673.4" y="275.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (378 samples, 0.07%)</title><rect x="673.4" y="259.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="676.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (180 samples, 0.04%)</title><rect x="673.4" y="243.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="676.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (198 samples, 0.04%)</title><rect x="673.8" y="243.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="676.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (198 samples, 0.04%)</title><rect x="673.8" y="227.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="676.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (198 samples, 0.04%)</title><rect x="673.8" y="211.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="676.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (280 samples, 0.05%)</title><rect x="674.3" y="259.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="677.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (146 samples, 0.03%)</title><rect x="674.3" y="243.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="677.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (134 samples, 0.03%)</title><rect x="674.6" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="677.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (134 samples, 0.03%)</title><rect x="674.6" y="227.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="677.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (134 samples, 0.03%)</title><rect x="674.6" y="211.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="677.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (134 samples, 0.03%)</title><rect x="674.6" y="195.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="677.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (134 samples, 0.03%)</title><rect x="674.6" y="179.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="677.6" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (134 samples, 0.03%)</title><rect x="674.6" y="163.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="677.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (293 samples, 0.06%)</title><rect x="674.9" y="467.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="677.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (293 samples, 0.06%)</title><rect x="674.9" y="451.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="677.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (293 samples, 0.06%)</title><rect x="674.9" y="435.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (293 samples, 0.06%)</title><rect x="674.9" y="419.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="677.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (293 samples, 0.06%)</title><rect x="674.9" y="403.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="677.9" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (293 samples, 0.06%)</title><rect x="674.9" y="387.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="677.9" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (139 samples, 0.03%)</title><rect x="674.9" y="371.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="677.9" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (139 samples, 0.03%)</title><rect x="674.9" y="355.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="677.9" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (154 samples, 0.03%)</title><rect x="675.3" y="371.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="678.3" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (154 samples, 0.03%)</title><rect x="675.3" y="355.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="678.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (25,147 samples, 4.93%)</title><rect x="675.6" y="643.0" width="58.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="678.6" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (25,147 samples, 4.93%)</title><rect x="675.6" y="627.0" width="58.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="678.6" y="638.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (19,937 samples, 3.91%)</title><rect x="675.6" y="611.0" width="46.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="678.6" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$272/309565785.run (19,937 samples, 3.91%)</title><rect x="675.6" y="595.0" width="46.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="678.6" y="606.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (19,937 samples, 3.91%)</title><rect x="675.6" y="579.0" width="46.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="678.6" y="590.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (353 samples, 0.07%)</title><rect x="675.6" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="678.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (353 samples, 0.07%)</title><rect x="675.6" y="547.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="678.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (353 samples, 0.07%)</title><rect x="675.6" y="531.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (353 samples, 0.07%)</title><rect x="675.6" y="515.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/112619572.linkToTargetMethod (211 samples, 0.04%)</title><rect x="675.6" y="499.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="678.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/827084938.invoke (211 samples, 0.04%)</title><rect x="675.6" y="483.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="678.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (211 samples, 0.04%)</title><rect x="675.6" y="467.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (211 samples, 0.04%)</title><rect x="675.6" y="451.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="678.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (211 samples, 0.04%)</title><rect x="675.6" y="435.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="678.6" y="446.0"></text>
</g>
<g>
<title>byte[] (211 samples, 0.04%)</title><rect x="675.6" y="419.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="678.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (142 samples, 0.03%)</title><rect x="676.1" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (142 samples, 0.03%)</title><rect x="676.1" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="679.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (142 samples, 0.03%)</title><rect x="676.1" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$324/475119356.get$Lambda (142 samples, 0.03%)</title><rect x="676.1" y="451.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="679.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$324 (142 samples, 0.03%)</title><rect x="676.1" y="435.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="679.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (19,584 samples, 3.84%)</title><rect x="676.4" y="563.0" width="45.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="679.4" y="574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (19,584 samples, 3.84%)</title><rect x="676.4" y="547.0" width="45.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="679.4" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (19,584 samples, 3.84%)</title><rect x="676.4" y="531.0" width="45.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.4" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (19,584 samples, 3.84%)</title><rect x="676.4" y="515.0" width="45.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="679.4" y="526.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (9,812 samples, 1.92%)</title><rect x="676.4" y="499.0" width="22.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="679.4" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9,812 samples, 1.92%)</title><rect x="676.4" y="483.0" width="22.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="679.4" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (9,812 samples, 1.92%)</title><rect x="676.4" y="467.0" width="22.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="679.4" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (9,812 samples, 1.92%)</title><rect x="676.4" y="451.0" width="22.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.4" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9,812 samples, 1.92%)</title><rect x="676.4" y="435.0" width="22.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.4" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (9,812 samples, 1.92%)</title><rect x="676.4" y="419.0" width="22.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.4" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (9,812 samples, 1.92%)</title><rect x="676.4" y="403.0" width="22.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.4" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (9,544 samples, 1.87%)</title><rect x="676.4" y="387.0" width="22.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="679.4" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9,544 samples, 1.87%)</title><rect x="676.4" y="371.0" width="22.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.4" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (9,323 samples, 1.83%)</title><rect x="676.4" y="355.0" width="21.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.4" y="366.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (187 samples, 0.04%)</title><rect x="676.4" y="339.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="679.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$342/1408695677.apply (183 samples, 0.04%)</title><rect x="676.9" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (183 samples, 0.04%)</title><rect x="676.9" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (183 samples, 0.04%)</title><rect x="676.9" y="307.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (183 samples, 0.04%)</title><rect x="676.9" y="291.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="679.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (183 samples, 0.04%)</title><rect x="676.9" y="275.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="679.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$182/2020955110.apply (8,599 samples, 1.69%)</title><rect x="677.3" y="339.0" width="19.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="680.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (8,599 samples, 1.69%)</title><rect x="677.3" y="323.0" width="19.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (137 samples, 0.03%)</title><rect x="677.3" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (137 samples, 0.03%)</title><rect x="677.3" y="291.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="680.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$380/1245746287.get$Lambda (137 samples, 0.03%)</title><rect x="677.3" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$380 (137 samples, 0.03%)</title><rect x="677.3" y="259.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="680.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (406 samples, 0.08%)</title><rect x="677.6" y="307.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="680.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (406 samples, 0.08%)</title><rect x="677.6" y="291.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.6" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (222 samples, 0.04%)</title><rect x="677.6" y="275.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="680.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (184 samples, 0.04%)</title><rect x="678.1" y="275.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="681.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (184 samples, 0.04%)</title><rect x="678.1" y="259.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="681.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (184 samples, 0.04%)</title><rect x="678.1" y="243.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="681.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (8,056 samples, 1.58%)</title><rect x="678.5" y="307.0" width="18.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="681.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (367 samples, 0.07%)</title><rect x="678.8" y="291.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (367 samples, 0.07%)</title><rect x="678.8" y="275.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="681.8" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (198 samples, 0.04%)</title><rect x="678.8" y="259.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="681.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (169 samples, 0.03%)</title><rect x="679.2" y="259.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="682.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (169 samples, 0.03%)</title><rect x="679.2" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (169 samples, 0.03%)</title><rect x="679.2" y="227.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="682.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (7,589 samples, 1.49%)</title><rect x="679.6" y="291.0" width="17.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="682.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseInfoImpl (159 samples, 0.03%)</title><rect x="679.6" y="275.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="682.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (6,793 samples, 1.33%)</title><rect x="680.0" y="275.0" width="15.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="683.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (157 samples, 0.03%)</title><rect x="680.0" y="259.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="683.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (157 samples, 0.03%)</title><rect x="680.0" y="243.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="683.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1531097765.linkToTargetMethod (243 samples, 0.05%)</title><rect x="680.4" y="259.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="683.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/774581482.invokeStatic (243 samples, 0.05%)</title><rect x="680.4" y="243.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="683.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$366/2082601169.get$Lambda (243 samples, 0.05%)</title><rect x="680.4" y="227.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$366 (243 samples, 0.05%)</title><rect x="680.4" y="211.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="683.4" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (1,325 samples, 0.26%)</title><rect x="680.9" y="259.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="683.9" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (536 samples, 0.11%)</title><rect x="680.9" y="243.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="683.9" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (211 samples, 0.04%)</title><rect x="680.9" y="227.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="683.9" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (211 samples, 0.04%)</title><rect x="680.9" y="211.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="683.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (325 samples, 0.06%)</title><rect x="681.4" y="227.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="684.4" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (325 samples, 0.06%)</title><rect x="681.4" y="211.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="684.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (437 samples, 0.09%)</title><rect x="682.2" y="243.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (437 samples, 0.09%)</title><rect x="682.2" y="227.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="685.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (437 samples, 0.09%)</title><rect x="682.2" y="211.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="685.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (147 samples, 0.03%)</title><rect x="682.2" y="195.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (147 samples, 0.03%)</title><rect x="682.2" y="179.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (147 samples, 0.03%)</title><rect x="682.2" y="163.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="685.2" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (147 samples, 0.03%)</title><rect x="682.2" y="147.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="685.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$362/1338884144.get (144 samples, 0.03%)</title><rect x="682.5" y="195.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.5" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (144 samples, 0.03%)</title><rect x="682.5" y="179.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="685.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (146 samples, 0.03%)</title><rect x="682.8" y="195.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="685.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (146 samples, 0.03%)</title><rect x="682.8" y="179.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="685.8" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (146 samples, 0.03%)</title><rect x="682.8" y="163.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="685.8" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (146 samples, 0.03%)</title><rect x="682.8" y="147.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="685.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (352 samples, 0.07%)</title><rect x="683.2" y="243.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="686.2" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (352 samples, 0.07%)</title><rect x="683.2" y="227.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="686.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (799 samples, 0.16%)</title><rect x="684.0" y="259.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="687.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (411 samples, 0.08%)</title><rect x="684.0" y="243.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="687.0" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (256 samples, 0.05%)</title><rect x="684.0" y="227.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="687.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (155 samples, 0.03%)</title><rect x="684.6" y="227.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="687.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (155 samples, 0.03%)</title><rect x="684.6" y="211.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.6" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (155 samples, 0.03%)</title><rect x="684.6" y="195.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="687.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (388 samples, 0.08%)</title><rect x="684.9" y="243.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (388 samples, 0.08%)</title><rect x="684.9" y="227.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="687.9" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (243 samples, 0.05%)</title><rect x="684.9" y="211.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="687.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (145 samples, 0.03%)</title><rect x="685.5" y="211.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="688.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (145 samples, 0.03%)</title><rect x="685.5" y="195.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="688.5" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (145 samples, 0.03%)</title><rect x="685.5" y="179.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="688.5" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (149 samples, 0.03%)</title><rect x="685.8" y="259.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="688.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (184 samples, 0.04%)</title><rect x="686.2" y="259.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="689.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (183 samples, 0.04%)</title><rect x="686.6" y="259.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="689.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3,239 samples, 0.64%)</title><rect x="687.3" y="259.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="690.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$366/2082601169.run (3,239 samples, 0.64%)</title><rect x="687.3" y="243.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (3,239 samples, 0.64%)</title><rect x="687.3" y="227.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (408 samples, 0.08%)</title><rect x="687.3" y="211.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="690.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (408 samples, 0.08%)</title><rect x="687.3" y="195.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="690.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$368/102646038.get$Lambda (151 samples, 0.03%)</title><rect x="687.5" y="179.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="690.5" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$368 (151 samples, 0.03%)</title><rect x="687.5" y="163.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="690.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$372/1105543368.get$Lambda (169 samples, 0.03%)</title><rect x="687.8" y="179.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.8" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$372 (169 samples, 0.03%)</title><rect x="687.8" y="163.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="690.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (380 samples, 0.07%)</title><rect x="688.2" y="211.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (380 samples, 0.07%)</title><rect x="688.2" y="195.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.2" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (219 samples, 0.04%)</title><rect x="688.2" y="179.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="691.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (161 samples, 0.03%)</title><rect x="688.7" y="179.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (161 samples, 0.03%)</title><rect x="688.7" y="163.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.7" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (161 samples, 0.03%)</title><rect x="688.7" y="147.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="691.7" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (218 samples, 0.04%)</title><rect x="689.1" y="211.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="692.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (161 samples, 0.03%)</title><rect x="689.6" y="211.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="692.6" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (161 samples, 0.03%)</title><rect x="689.6" y="195.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="692.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (534 samples, 0.10%)</title><rect x="690.0" y="211.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="693.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (534 samples, 0.10%)</title><rect x="690.0" y="195.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="693.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (145 samples, 0.03%)</title><rect x="690.0" y="179.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (145 samples, 0.03%)</title><rect x="690.0" y="163.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="693.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$373/2051619203.get$Lambda (145 samples, 0.03%)</title><rect x="690.0" y="147.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.0" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$373 (145 samples, 0.03%)</title><rect x="690.0" y="131.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="693.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (389 samples, 0.08%)</title><rect x="690.3" y="179.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (389 samples, 0.08%)</title><rect x="690.3" y="163.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="693.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (389 samples, 0.08%)</title><rect x="690.3" y="147.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="693.3" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (228 samples, 0.04%)</title><rect x="690.3" y="131.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="693.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (161 samples, 0.03%)</title><rect x="690.8" y="131.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="693.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (161 samples, 0.03%)</title><rect x="690.8" y="115.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.8" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (161 samples, 0.03%)</title><rect x="690.8" y="99.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="693.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (549 samples, 0.11%)</title><rect x="691.2" y="211.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="694.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (549 samples, 0.11%)</title><rect x="691.2" y="195.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/101775274.invoke (549 samples, 0.11%)</title><rect x="691.2" y="179.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="694.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (549 samples, 0.11%)</title><rect x="691.2" y="163.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.2" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (134 samples, 0.03%)</title><rect x="691.2" y="147.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.2" y="158.0"></text>
</g>
<g>
<title>java.lang.String (134 samples, 0.03%)</title><rect x="691.2" y="131.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="694.2" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (415 samples, 0.08%)</title><rect x="691.5" y="147.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="694.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (415 samples, 0.08%)</title><rect x="691.5" y="131.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="694.5" y="142.0"></text>
</g>
<g>
<title>byte[] (415 samples, 0.08%)</title><rect x="691.5" y="115.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="694.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (989 samples, 0.19%)</title><rect x="692.5" y="211.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (340 samples, 0.07%)</title><rect x="692.5" y="195.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="695.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (649 samples, 0.13%)</title><rect x="693.3" y="195.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (649 samples, 0.13%)</title><rect x="693.3" y="179.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/101775274.invoke (649 samples, 0.13%)</title><rect x="693.3" y="163.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="696.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (649 samples, 0.13%)</title><rect x="693.3" y="147.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="696.3" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (134 samples, 0.03%)</title><rect x="693.3" y="131.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="696.3" y="142.0"></text>
</g>
<g>
<title>java.lang.String (134 samples, 0.03%)</title><rect x="693.3" y="115.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="696.3" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (515 samples, 0.10%)</title><rect x="693.6" y="131.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="696.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (515 samples, 0.10%)</title><rect x="693.6" y="115.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.6" y="126.0"></text>
</g>
<g>
<title>byte[] (515 samples, 0.10%)</title><rect x="693.6" y="99.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="696.6" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.getBody (408 samples, 0.08%)</title><rect x="694.8" y="259.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="697.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (408 samples, 0.08%)</title><rect x="694.8" y="243.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="697.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (408 samples, 0.08%)</title><rect x="694.8" y="227.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="697.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (408 samples, 0.08%)</title><rect x="694.8" y="211.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="697.8" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (221 samples, 0.04%)</title><rect x="694.8" y="195.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="697.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (187 samples, 0.04%)</title><rect x="695.3" y="195.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="698.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (187 samples, 0.04%)</title><rect x="695.3" y="179.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.3" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (187 samples, 0.04%)</title><rect x="695.3" y="163.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="698.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$162/2065850530.apply (637 samples, 0.12%)</title><rect x="695.7" y="275.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="698.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/GetEntityRequestProcessor.obtainRemoteResult (637 samples, 0.12%)</title><rect x="695.7" y="259.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.7" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.mapping (120 samples, 0.02%)</title><rect x="695.7" y="243.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="698.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$MappingSubscriber (120 samples, 0.02%)</title><rect x="695.7" y="227.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="698.7" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (517 samples, 0.10%)</title><rect x="696.0" y="243.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (200 samples, 0.04%)</title><rect x="696.0" y="227.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="699.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (317 samples, 0.06%)</title><rect x="696.4" y="227.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="699.4" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (157 samples, 0.03%)</title><rect x="696.4" y="211.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="699.4" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (160 samples, 0.03%)</title><rect x="696.8" y="211.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="699.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$307/1458980780.apply (354 samples, 0.07%)</title><rect x="697.2" y="339.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="700.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (354 samples, 0.07%)</title><rect x="697.2" y="323.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="700.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (155 samples, 0.03%)</title><rect x="697.2" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.2" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (155 samples, 0.03%)</title><rect x="697.2" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="700.2" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (155 samples, 0.03%)</title><rect x="697.2" y="275.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="700.2" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (155 samples, 0.03%)</title><rect x="697.2" y="259.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="700.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (199 samples, 0.04%)</title><rect x="697.5" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="700.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (199 samples, 0.04%)</title><rect x="697.5" y="291.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="700.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (221 samples, 0.04%)</title><rect x="698.0" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (221 samples, 0.04%)</title><rect x="698.0" y="339.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="701.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$309/994079980.apply (221 samples, 0.04%)</title><rect x="698.0" y="323.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="701.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (221 samples, 0.04%)</title><rect x="698.0" y="307.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (221 samples, 0.04%)</title><rect x="698.0" y="291.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (221 samples, 0.04%)</title><rect x="698.0" y="275.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="701.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$354/391694035.apply (268 samples, 0.05%)</title><rect x="698.5" y="387.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (268 samples, 0.05%)</title><rect x="698.5" y="371.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="701.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (268 samples, 0.05%)</title><rect x="698.5" y="355.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="701.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (9,772 samples, 1.92%)</title><rect x="699.1" y="499.0" width="22.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.1" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (604 samples, 0.12%)</title><rect x="699.1" y="483.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (604 samples, 0.12%)</title><rect x="699.1" y="467.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.1" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (604 samples, 0.12%)</title><rect x="699.1" y="451.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.1" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (604 samples, 0.12%)</title><rect x="699.1" y="435.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (604 samples, 0.12%)</title><rect x="699.1" y="419.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.1" y="430.0"></text>
</g>
<g>
<title>byte[] (604 samples, 0.12%)</title><rect x="699.1" y="403.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="702.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (923 samples, 0.18%)</title><rect x="700.5" y="483.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="703.5" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (142 samples, 0.03%)</title><rect x="700.5" y="467.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="703.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (149 samples, 0.03%)</title><rect x="700.9" y="467.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="703.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (149 samples, 0.03%)</title><rect x="700.9" y="451.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="703.9" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (149 samples, 0.03%)</title><rect x="700.9" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="703.9" y="446.0"></text>
</g>
<g>
<title>byte[] (149 samples, 0.03%)</title><rect x="700.9" y="419.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="703.9" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (186 samples, 0.04%)</title><rect x="701.2" y="467.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="704.2" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (186 samples, 0.04%)</title><rect x="701.2" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="704.2" y="462.0"></text>
</g>
<g>
<title>byte[] (186 samples, 0.04%)</title><rect x="701.2" y="435.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="704.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (446 samples, 0.09%)</title><rect x="701.6" y="467.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="704.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (446 samples, 0.09%)</title><rect x="701.6" y="451.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="704.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (249 samples, 0.05%)</title><rect x="701.6" y="435.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="704.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (197 samples, 0.04%)</title><rect x="702.2" y="435.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.2" y="446.0"></text>
</g>
<g>
<title>byte[] (197 samples, 0.04%)</title><rect x="702.2" y="419.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="705.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (2,810 samples, 0.55%)</title><rect x="702.7" y="483.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="705.7" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,810 samples, 0.55%)</title><rect x="702.7" y="467.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.7" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,810 samples, 0.55%)</title><rect x="702.7" y="451.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.7" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (130 samples, 0.03%)</title><rect x="702.9" y="435.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="705.9" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (272 samples, 0.05%)</title><rect x="703.2" y="435.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="706.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (178 samples, 0.03%)</title><rect x="704.0" y="435.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (178 samples, 0.03%)</title><rect x="704.0" y="419.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/1966280024.get$Lambda (178 samples, 0.03%)</title><rect x="704.0" y="403.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.0" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$151 (178 samples, 0.03%)</title><rect x="704.0" y="387.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="707.0" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (192 samples, 0.04%)</title><rect x="704.4" y="435.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="707.4" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (192 samples, 0.04%)</title><rect x="704.4" y="419.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="707.4" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (1,582 samples, 0.31%)</title><rect x="704.9" y="435.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="707.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$151/1966280024.accept (1,582 samples, 0.31%)</title><rect x="704.9" y="419.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="707.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,582 samples, 0.31%)</title><rect x="704.9" y="403.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="707.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (270 samples, 0.05%)</title><rect x="704.9" y="387.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="707.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (270 samples, 0.05%)</title><rect x="704.9" y="371.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="707.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$156/142789664.get$Lambda (270 samples, 0.05%)</title><rect x="704.9" y="355.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.9" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$156 (270 samples, 0.05%)</title><rect x="704.9" y="339.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="707.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (319 samples, 0.06%)</title><rect x="705.5" y="387.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="708.5" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$156/142789664.accept (319 samples, 0.06%)</title><rect x="705.5" y="371.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.5" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (319 samples, 0.06%)</title><rect x="705.5" y="355.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (319 samples, 0.06%)</title><rect x="705.5" y="339.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (319 samples, 0.06%)</title><rect x="705.5" y="323.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="708.5" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (319 samples, 0.06%)</title><rect x="705.5" y="307.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="708.5" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (319 samples, 0.06%)</title><rect x="705.5" y="291.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (319 samples, 0.06%)</title><rect x="705.5" y="275.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="708.5" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (319 samples, 0.06%)</title><rect x="705.5" y="259.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="708.5" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (551 samples, 0.11%)</title><rect x="706.2" y="387.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.2" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (551 samples, 0.11%)</title><rect x="706.2" y="371.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (275 samples, 0.05%)</title><rect x="706.2" y="355.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.2" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (275 samples, 0.05%)</title><rect x="706.2" y="339.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.2" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (275 samples, 0.05%)</title><rect x="706.2" y="323.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="709.2" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (276 samples, 0.05%)</title><rect x="706.9" y="355.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.9" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (276 samples, 0.05%)</title><rect x="706.9" y="339.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="709.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (442 samples, 0.09%)</title><rect x="707.5" y="387.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="710.5" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (442 samples, 0.09%)</title><rect x="707.5" y="371.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="710.5" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (274 samples, 0.05%)</title><rect x="708.5" y="435.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="711.5" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (274 samples, 0.05%)</title><rect x="708.5" y="419.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="711.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (5,435 samples, 1.07%)</title><rect x="709.2" y="483.0" width="12.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="712.2" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (245 samples, 0.05%)</title><rect x="709.2" y="467.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="712.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (398 samples, 0.08%)</title><rect x="709.7" y="467.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="712.7" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (398 samples, 0.08%)</title><rect x="709.7" y="451.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="712.7" y="462.0"></text>
</g>
<g>
<title>byte[] (398 samples, 0.08%)</title><rect x="709.7" y="435.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="712.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (759 samples, 0.15%)</title><rect x="710.7" y="467.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="713.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (759 samples, 0.15%)</title><rect x="710.7" y="451.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="713.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (297 samples, 0.06%)</title><rect x="710.7" y="435.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="713.7" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (462 samples, 0.09%)</title><rect x="711.3" y="435.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="714.3" y="446.0"></text>
</g>
<g>
<title>byte[] (462 samples, 0.09%)</title><rect x="711.3" y="419.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="714.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (4,033 samples, 0.79%)</title><rect x="712.4" y="467.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="715.4" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,157 samples, 0.23%)</title><rect x="712.4" y="451.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="715.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,157 samples, 0.23%)</title><rect x="712.4" y="435.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="715.4" y="446.0"></text>
</g>
<g>
<title>java.lang.String (509 samples, 0.10%)</title><rect x="712.4" y="419.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="715.4" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (648 samples, 0.13%)</title><rect x="713.6" y="419.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="716.6" y="430.0"></text>
</g>
<g>
<title>byte[] (648 samples, 0.13%)</title><rect x="713.6" y="403.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="716.6" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (593 samples, 0.12%)</title><rect x="715.1" y="451.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="718.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (593 samples, 0.12%)</title><rect x="715.1" y="435.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="718.1" y="446.0"></text>
</g>
<g>
<title>byte[] (349 samples, 0.07%)</title><rect x="715.1" y="419.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="718.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (244 samples, 0.05%)</title><rect x="715.9" y="419.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="718.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (624 samples, 0.12%)</title><rect x="716.5" y="451.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="719.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (624 samples, 0.12%)</title><rect x="716.5" y="435.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="719.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (624 samples, 0.12%)</title><rect x="716.5" y="419.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String (284 samples, 0.06%)</title><rect x="716.5" y="403.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="719.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (340 samples, 0.07%)</title><rect x="717.1" y="403.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="720.1" y="414.0"></text>
</g>
<g>
<title>byte[] (340 samples, 0.07%)</title><rect x="717.1" y="387.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="720.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (617 samples, 0.12%)</title><rect x="717.9" y="451.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="720.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (617 samples, 0.12%)</title><rect x="717.9" y="435.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="720.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (617 samples, 0.12%)</title><rect x="717.9" y="419.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="720.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (617 samples, 0.12%)</title><rect x="717.9" y="403.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="720.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (617 samples, 0.12%)</title><rect x="717.9" y="387.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="720.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (617 samples, 0.12%)</title><rect x="717.9" y="371.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="720.9" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1,042 samples, 0.20%)</title><rect x="719.3" y="451.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="722.3" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (345 samples, 0.07%)</title><rect x="719.3" y="435.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="722.3" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (345 samples, 0.07%)</title><rect x="719.3" y="419.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="722.3" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (446 samples, 0.09%)</title><rect x="720.1" y="435.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="723.1" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (446 samples, 0.09%)</title><rect x="720.1" y="419.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="723.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$357/1542623573.apply (251 samples, 0.05%)</title><rect x="721.2" y="435.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (251 samples, 0.05%)</title><rect x="721.2" y="419.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="724.2" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (251 samples, 0.05%)</title><rect x="721.2" y="403.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="724.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (5,210 samples, 1.02%)</title><rect x="721.7" y="611.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="724.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5,210 samples, 1.02%)</title><rect x="721.7" y="595.0" width="12.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="724.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5,210 samples, 1.02%)</title><rect x="721.7" y="579.0" width="12.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="724.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$272/309565785.run (5,210 samples, 1.02%)</title><rect x="721.7" y="563.0" width="12.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="724.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5,210 samples, 1.02%)</title><rect x="721.7" y="547.0" width="12.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="724.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (603 samples, 0.12%)</title><rect x="721.7" y="531.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="724.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (201 samples, 0.04%)</title><rect x="721.7" y="515.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="724.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (201 samples, 0.04%)</title><rect x="721.7" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="724.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$296/1194036443.get$Lambda (118 samples, 0.02%)</title><rect x="721.9" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="724.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$296 (118 samples, 0.02%)</title><rect x="721.9" y="467.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="724.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (173 samples, 0.03%)</title><rect x="722.2" y="515.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="725.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (229 samples, 0.04%)</title><rect x="722.6" y="515.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="725.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (229 samples, 0.04%)</title><rect x="722.6" y="499.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="725.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (141 samples, 0.03%)</title><rect x="722.8" y="483.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="725.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (141 samples, 0.03%)</title><rect x="722.8" y="467.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="725.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (4,569 samples, 0.90%)</title><rect x="723.1" y="531.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="726.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (4,569 samples, 0.90%)</title><rect x="723.1" y="515.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="726.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (4,569 samples, 0.90%)</title><rect x="723.1" y="499.0" width="10.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="726.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (4,569 samples, 0.90%)</title><rect x="723.1" y="483.0" width="10.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="726.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (4,569 samples, 0.90%)</title><rect x="723.1" y="467.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="726.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (4,569 samples, 0.90%)</title><rect x="723.1" y="451.0" width="10.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="726.1" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (259 samples, 0.05%)</title><rect x="723.1" y="435.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="726.1" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (259 samples, 0.05%)</title><rect x="723.1" y="419.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="726.1" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (259 samples, 0.05%)</title><rect x="723.1" y="403.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="726.1" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (129 samples, 0.03%)</title><rect x="723.7" y="435.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="726.7" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (129 samples, 0.03%)</title><rect x="723.7" y="419.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="726.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$367/1609374688.run (2,552 samples, 0.50%)</title><rect x="724.0" y="435.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="727.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (2,552 samples, 0.50%)</title><rect x="724.0" y="419.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="727.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (2,552 samples, 0.50%)</title><rect x="724.0" y="403.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="727.0" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (749 samples, 0.15%)</title><rect x="724.0" y="387.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.0" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (531 samples, 0.10%)</title><rect x="724.0" y="371.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="727.0" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (202 samples, 0.04%)</title><rect x="724.0" y="355.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="727.0" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (202 samples, 0.04%)</title><rect x="724.0" y="339.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="727.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (329 samples, 0.06%)</title><rect x="724.5" y="355.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="727.5" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (329 samples, 0.06%)</title><rect x="724.5" y="339.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="727.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (218 samples, 0.04%)</title><rect x="725.3" y="371.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="728.3" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (218 samples, 0.04%)</title><rect x="725.3" y="355.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.3" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (218 samples, 0.04%)</title><rect x="725.3" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="728.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$107/1281414889.get (129 samples, 0.03%)</title><rect x="725.3" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.3" y="334.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (129 samples, 0.03%)</title><rect x="725.3" y="307.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="728.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1,803 samples, 0.35%)</title><rect x="725.8" y="387.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.8" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (152 samples, 0.03%)</title><rect x="725.8" y="371.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="728.8" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (152 samples, 0.03%)</title><rect x="725.8" y="355.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="728.8" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (152 samples, 0.03%)</title><rect x="725.8" y="339.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="728.8" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (152 samples, 0.03%)</title><rect x="725.8" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="728.8" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (152 samples, 0.03%)</title><rect x="725.8" y="307.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="728.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1,651 samples, 0.32%)</title><rect x="726.1" y="371.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="729.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (603 samples, 0.12%)</title><rect x="726.1" y="355.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="729.1" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (123 samples, 0.02%)</title><rect x="726.1" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.1" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (123 samples, 0.02%)</title><rect x="726.1" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="729.1" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (123 samples, 0.02%)</title><rect x="726.1" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="729.1" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (123 samples, 0.02%)</title><rect x="726.1" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="729.1" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (123 samples, 0.02%)</title><rect x="726.1" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="729.1" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (123 samples, 0.02%)</title><rect x="726.1" y="259.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="729.1" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (139 samples, 0.03%)</title><rect x="726.4" y="339.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="729.4" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (139 samples, 0.03%)</title><rect x="726.4" y="323.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="729.4" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (139 samples, 0.03%)</title><rect x="726.4" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="729.4" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (139 samples, 0.03%)</title><rect x="726.4" y="291.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="729.4" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (139 samples, 0.03%)</title><rect x="726.4" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="729.4" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (139 samples, 0.03%)</title><rect x="726.4" y="259.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="729.4" y="270.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (122 samples, 0.02%)</title><rect x="726.8" y="339.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="729.8" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (122 samples, 0.02%)</title><rect x="726.8" y="323.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="729.8" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (122 samples, 0.02%)</title><rect x="726.8" y="307.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="729.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (206 samples, 0.04%)</title><rect x="727.0" y="339.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="730.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (453 samples, 0.09%)</title><rect x="727.5" y="355.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.5" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (141 samples, 0.03%)</title><rect x="727.5" y="339.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.5" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (141 samples, 0.03%)</title><rect x="727.5" y="323.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (141 samples, 0.03%)</title><rect x="727.5" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="730.5" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (141 samples, 0.03%)</title><rect x="727.5" y="291.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="730.5" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (137 samples, 0.03%)</title><rect x="727.8" y="339.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="730.8" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (137 samples, 0.03%)</title><rect x="727.8" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="730.8" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (137 samples, 0.03%)</title><rect x="727.8" y="307.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="730.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (175 samples, 0.03%)</title><rect x="728.2" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="731.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (175 samples, 0.03%)</title><rect x="728.2" y="323.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="731.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (595 samples, 0.12%)</title><rect x="728.6" y="355.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="731.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (136 samples, 0.03%)</title><rect x="728.6" y="339.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="731.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (459 samples, 0.09%)</title><rect x="728.9" y="339.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="731.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (152 samples, 0.03%)</title><rect x="728.9" y="323.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (152 samples, 0.03%)</title><rect x="728.9" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (152 samples, 0.03%)</title><rect x="728.9" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="731.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (152 samples, 0.03%)</title><rect x="728.9" y="275.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="731.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (307 samples, 0.06%)</title><rect x="729.2" y="323.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="732.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (307 samples, 0.06%)</title><rect x="729.2" y="307.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="732.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (220 samples, 0.04%)</title><rect x="729.2" y="291.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="732.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1,160 samples, 0.23%)</title><rect x="729.9" y="435.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="732.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (1,160 samples, 0.23%)</title><rect x="729.9" y="419.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="732.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onComplete (1,160 samples, 0.23%)</title><rect x="729.9" y="403.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="732.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (1,160 samples, 0.23%)</title><rect x="729.9" y="387.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="732.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,005 samples, 0.20%)</title><rect x="729.9" y="371.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,005 samples, 0.20%)</title><rect x="729.9" y="355.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (635 samples, 0.12%)</title><rect x="729.9" y="339.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="732.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/GetEntityRequestProcessor$$Lambda$394/937089925.apply (635 samples, 0.12%)</title><rect x="729.9" y="323.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="732.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/GetEntityRequestProcessor.lambda$obtainRemoteResult$0 (635 samples, 0.12%)</title><rect x="729.9" y="307.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="732.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/timestamp/RecordWithTimestamp.fromBytes (448 samples, 0.09%)</title><rect x="730.4" y="291.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.4" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (244 samples, 0.05%)</title><rect x="730.4" y="275.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="733.4" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (244 samples, 0.05%)</title><rect x="730.4" y="259.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.4" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (244 samples, 0.05%)</title><rect x="730.4" y="243.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="733.4" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.timestamp.RecordWithTimestamp (204 samples, 0.04%)</title><rect x="730.9" y="275.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="733.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (370 samples, 0.07%)</title><rect x="731.4" y="339.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="734.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (370 samples, 0.07%)</title><rect x="731.4" y="323.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$375/630615954.accept (370 samples, 0.07%)</title><rect x="731.4" y="307.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="734.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (370 samples, 0.07%)</title><rect x="731.4" y="291.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (370 samples, 0.07%)</title><rect x="731.4" y="275.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (370 samples, 0.07%)</title><rect x="731.4" y="259.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="734.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (370 samples, 0.07%)</title><rect x="731.4" y="243.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$380/1245746287.apply (370 samples, 0.07%)</title><rect x="731.4" y="227.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (370 samples, 0.07%)</title><rect x="731.4" y="211.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="734.4" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (370 samples, 0.07%)</title><rect x="731.4" y="195.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="734.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (155 samples, 0.03%)</title><rect x="732.3" y="371.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="735.3" y="382.0"></text>
</g>
<g>
<title>byte[] (155 samples, 0.03%)</title><rect x="732.3" y="355.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="735.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (469 samples, 0.09%)</title><rect x="732.6" y="435.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="735.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (469 samples, 0.09%)</title><rect x="732.6" y="419.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="735.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (469 samples, 0.09%)</title><rect x="732.6" y="403.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="735.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (469 samples, 0.09%)</title><rect x="732.6" y="387.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="735.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (469 samples, 0.09%)</title><rect x="732.6" y="371.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="735.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (469 samples, 0.09%)</title><rect x="732.6" y="355.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="735.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (469 samples, 0.09%)</title><rect x="732.6" y="339.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.6" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (136 samples, 0.03%)</title><rect x="732.6" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="735.6" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (136 samples, 0.03%)</title><rect x="732.6" y="307.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="735.6" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (333 samples, 0.07%)</title><rect x="732.9" y="323.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="735.9" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (333 samples, 0.07%)</title><rect x="732.9" y="307.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.9" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (333 samples, 0.07%)</title><rect x="732.9" y="291.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="735.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (23,439 samples, 4.60%)</title><rect x="733.8" y="739.0" width="54.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="736.8" y="750.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (687 samples, 0.13%)</title><rect x="733.8" y="723.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="736.8" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (687 samples, 0.13%)</title><rect x="733.8" y="707.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="736.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$311/888283439.get$Lambda (403 samples, 0.08%)</title><rect x="733.8" y="691.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="736.8" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$311 (403 samples, 0.08%)</title><rect x="733.8" y="675.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="736.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$313/1669323621.get$Lambda (144 samples, 0.03%)</title><rect x="734.7" y="691.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="737.7" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$313 (144 samples, 0.03%)</title><rect x="734.7" y="675.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="737.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$315/957004221.get$Lambda (140 samples, 0.03%)</title><rect x="735.1" y="691.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.1" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$315 (140 samples, 0.03%)</title><rect x="735.1" y="675.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="738.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1943325854.linkToTargetMethod (562 samples, 0.11%)</title><rect x="735.4" y="723.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="738.4" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (562 samples, 0.11%)</title><rect x="735.4" y="707.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="738.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$312/652492928.get$Lambda (562 samples, 0.11%)</title><rect x="735.4" y="691.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.4" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$312 (562 samples, 0.11%)</title><rect x="735.4" y="675.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="738.4" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (6,189 samples, 1.21%)</title><rect x="736.7" y="723.0" width="14.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="739.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$313/1669323621.accept (5,166 samples, 1.01%)</title><rect x="736.7" y="707.0" width="11.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (5,166 samples, 1.01%)</title><rect x="736.7" y="691.0" width="11.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="739.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (5,166 samples, 1.01%)</title><rect x="736.7" y="675.0" width="11.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="739.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (5,166 samples, 1.01%)</title><rect x="736.7" y="659.0" width="11.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="739.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (5,166 samples, 1.01%)</title><rect x="736.7" y="643.0" width="11.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="739.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (5,166 samples, 1.01%)</title><rect x="736.7" y="627.0" width="11.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="739.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5,166 samples, 1.01%)</title><rect x="736.7" y="611.0" width="11.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="739.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5,166 samples, 1.01%)</title><rect x="736.7" y="595.0" width="11.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="739.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5,166 samples, 1.01%)</title><rect x="736.7" y="579.0" width="11.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="739.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (5,166 samples, 1.01%)</title><rect x="736.7" y="563.0" width="11.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="739.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$264/1333168607.run (5,166 samples, 1.01%)</title><rect x="736.7" y="547.0" width="11.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="739.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (5,166 samples, 1.01%)</title><rect x="736.7" y="531.0" width="11.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="739.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1,240 samples, 0.24%)</title><rect x="736.7" y="515.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="739.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1,240 samples, 0.24%)</title><rect x="736.7" y="499.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="739.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (1,240 samples, 0.24%)</title><rect x="736.7" y="483.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="739.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (611 samples, 0.12%)</title><rect x="736.7" y="467.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="739.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (611 samples, 0.12%)</title><rect x="736.7" y="451.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="739.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (611 samples, 0.12%)</title><rect x="736.7" y="435.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="739.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (611 samples, 0.12%)</title><rect x="736.7" y="419.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="739.7" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (611 samples, 0.12%)</title><rect x="736.7" y="403.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="739.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (629 samples, 0.12%)</title><rect x="738.1" y="467.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="741.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (629 samples, 0.12%)</title><rect x="738.1" y="451.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="741.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (629 samples, 0.12%)</title><rect x="738.1" y="435.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="741.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (629 samples, 0.12%)</title><rect x="738.1" y="419.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="741.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ForkJoinTask$RunnableExecuteAction (629 samples, 0.12%)</title><rect x="738.1" y="403.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="741.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (428 samples, 0.08%)</title><rect x="739.6" y="515.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="742.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (428 samples, 0.08%)</title><rect x="739.6" y="499.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="742.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (428 samples, 0.08%)</title><rect x="739.6" y="483.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="742.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$324/475119356.get$Lambda (428 samples, 0.08%)</title><rect x="739.6" y="467.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="742.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$324 (428 samples, 0.08%)</title><rect x="739.6" y="451.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="742.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (3,498 samples, 0.69%)</title><rect x="740.6" y="515.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="743.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (1,882 samples, 0.37%)</title><rect x="740.6" y="499.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,237 samples, 0.24%)</title><rect x="740.6" y="483.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="743.6" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,237 samples, 0.24%)</title><rect x="740.6" y="467.0" width="2.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="743.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (645 samples, 0.13%)</title><rect x="743.4" y="483.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.4" y="494.0"></text>
</g>
<g>
<title>java/util/List.of (645 samples, 0.13%)</title><rect x="743.4" y="467.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="746.4" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (645 samples, 0.13%)</title><rect x="743.4" y="451.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="746.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (1,616 samples, 0.32%)</title><rect x="744.9" y="499.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="747.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$260/1671294764.get (1,616 samples, 0.32%)</title><rect x="744.9" y="483.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (1,616 samples, 0.32%)</title><rect x="744.9" y="467.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.9" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,616 samples, 0.32%)</title><rect x="744.9" y="451.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="747.9" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,614 samples, 0.32%)</title><rect x="744.9" y="435.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="747.9" y="446.0"></text>
</g>
<g>
<title>byte[] (1,557 samples, 0.31%)</title><rect x="745.0" y="419.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="748.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$316/607381770.accept (1,023 samples, 0.20%)</title><rect x="748.6" y="707.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="751.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (1,023 samples, 0.20%)</title><rect x="748.6" y="691.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$312/652492928.run (1,023 samples, 0.20%)</title><rect x="748.6" y="675.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="751.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (1,023 samples, 0.20%)</title><rect x="748.6" y="659.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (1,023 samples, 0.20%)</title><rect x="748.6" y="643.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="751.6" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1,023 samples, 0.20%)</title><rect x="748.6" y="627.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="751.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1,023 samples, 0.20%)</title><rect x="748.6" y="611.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.6" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1,023 samples, 0.20%)</title><rect x="748.6" y="595.0" width="2.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="751.6" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (895 samples, 0.18%)</title><rect x="751.0" y="723.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="754.0" y="734.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (895 samples, 0.18%)</title><rect x="751.0" y="707.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="754.0" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (1,245 samples, 0.24%)</title><rect x="753.1" y="723.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="756.1" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (620 samples, 0.12%)</title><rect x="753.1" y="707.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="756.1" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (620 samples, 0.12%)</title><rect x="753.1" y="691.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="756.1" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (620 samples, 0.12%)</title><rect x="753.1" y="675.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="756.1" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (620 samples, 0.12%)</title><rect x="753.1" y="659.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (620 samples, 0.12%)</title><rect x="753.1" y="643.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="756.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (620 samples, 0.12%)</title><rect x="753.1" y="627.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="756.1" y="638.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (620 samples, 0.12%)</title><rect x="753.1" y="611.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="756.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (625 samples, 0.12%)</title><rect x="754.5" y="707.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.5" y="718.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (625 samples, 0.12%)</title><rect x="754.5" y="691.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="757.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (4,037 samples, 0.79%)</title><rect x="756.0" y="723.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="759.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$266/1532864534.run (2,033 samples, 0.40%)</title><rect x="756.0" y="707.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="759.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (2,033 samples, 0.40%)</title><rect x="756.0" y="691.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="759.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,033 samples, 0.40%)</title><rect x="756.0" y="675.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="759.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,033 samples, 0.40%)</title><rect x="756.0" y="659.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="759.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,033 samples, 0.40%)</title><rect x="756.0" y="643.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="759.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (2,033 samples, 0.40%)</title><rect x="756.0" y="627.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="759.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$264/1333168607.run (2,033 samples, 0.40%)</title><rect x="756.0" y="611.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="759.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (2,033 samples, 0.40%)</title><rect x="756.0" y="595.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="759.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (2,032 samples, 0.40%)</title><rect x="756.0" y="579.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (2,032 samples, 0.40%)</title><rect x="756.0" y="563.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="759.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (1,437 samples, 0.28%)</title><rect x="756.0" y="547.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="759.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1,437 samples, 0.28%)</title><rect x="756.0" y="531.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="759.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1,437 samples, 0.28%)</title><rect x="756.0" y="515.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="759.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/112619572.linkToTargetMethod (1,054 samples, 0.21%)</title><rect x="756.0" y="499.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="759.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/827084938.invoke (1,054 samples, 0.21%)</title><rect x="756.0" y="483.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="759.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,054 samples, 0.21%)</title><rect x="756.0" y="467.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="759.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,054 samples, 0.21%)</title><rect x="756.0" y="451.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="759.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,054 samples, 0.21%)</title><rect x="756.0" y="435.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="759.0" y="446.0"></text>
</g>
<g>
<title>byte[] (1,054 samples, 0.21%)</title><rect x="756.0" y="419.0" width="2.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="759.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (383 samples, 0.08%)</title><rect x="758.4" y="499.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="761.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (383 samples, 0.08%)</title><rect x="758.4" y="483.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="761.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (383 samples, 0.08%)</title><rect x="758.4" y="467.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="761.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$324/475119356.get$Lambda (383 samples, 0.08%)</title><rect x="758.4" y="451.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="761.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$324 (383 samples, 0.08%)</title><rect x="758.4" y="435.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="761.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (595 samples, 0.12%)</title><rect x="759.3" y="547.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="762.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (595 samples, 0.12%)</title><rect x="759.3" y="531.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="762.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (595 samples, 0.12%)</title><rect x="759.3" y="515.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (595 samples, 0.12%)</title><rect x="759.3" y="499.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="762.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (595 samples, 0.12%)</title><rect x="759.3" y="483.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="762.3" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ForkJoinTask$RunnableExecuteAction (595 samples, 0.12%)</title><rect x="759.3" y="467.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="762.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$268/835958608.run (2,004 samples, 0.39%)</title><rect x="760.7" y="707.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="763.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (2,004 samples, 0.39%)</title><rect x="760.7" y="691.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="763.7" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (814 samples, 0.16%)</title><rect x="760.7" y="675.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="763.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (814 samples, 0.16%)</title><rect x="760.7" y="659.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="763.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$322/21500752.get$Lambda (814 samples, 0.16%)</title><rect x="760.7" y="643.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="763.7" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$322 (814 samples, 0.16%)</title><rect x="760.7" y="627.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="763.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,190 samples, 0.23%)</title><rect x="762.6" y="675.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1,190 samples, 0.23%)</title><rect x="762.6" y="659.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="765.6" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.ForkJoinTask$RunnableExecuteAction (1,190 samples, 0.23%)</title><rect x="762.6" y="643.0" width="2.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="765.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (3,144 samples, 0.62%)</title><rect x="765.3" y="723.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="768.3" y="734.0"></text>
</g>
<g>
<title>java/time/Instant.now (554 samples, 0.11%)</title><rect x="765.3" y="707.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="768.3" y="718.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (554 samples, 0.11%)</title><rect x="765.3" y="691.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="768.3" y="702.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (554 samples, 0.11%)</title><rect x="765.3" y="675.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="768.3" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.create (554 samples, 0.11%)</title><rect x="765.3" y="659.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="768.3" y="670.0"></text>
</g>
<g>
<title>java.time.Instant (554 samples, 0.11%)</title><rect x="765.3" y="643.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="768.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,590 samples, 0.51%)</title><rect x="766.6" y="707.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="769.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (350 samples, 0.07%)</title><rect x="766.6" y="691.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="769.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (350 samples, 0.07%)</title><rect x="766.6" y="675.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="769.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$384/2120123075.get$Lambda (350 samples, 0.07%)</title><rect x="766.6" y="659.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="769.6" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$384 (350 samples, 0.07%)</title><rect x="766.6" y="643.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="769.6" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (648 samples, 0.13%)</title><rect x="767.4" y="691.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="770.4" y="702.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (648 samples, 0.13%)</title><rect x="767.4" y="675.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="770.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (357 samples, 0.07%)</title><rect x="768.9" y="691.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="771.9" y="702.0"></text>
</g>
<g>
<title>java/util/Optional.of (357 samples, 0.07%)</title><rect x="768.9" y="675.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="771.9" y="686.0"></text>
</g>
<g>
<title>java.util.Optional (357 samples, 0.07%)</title><rect x="768.9" y="659.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="771.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (1,235 samples, 0.24%)</title><rect x="769.7" y="691.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="772.7" y="702.0"></text>
</g>
<g>
<title>java.util.ArrayList (551 samples, 0.11%)</title><rect x="769.7" y="675.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="772.7" y="686.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (684 samples, 0.13%)</title><rect x="771.0" y="675.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="774.0" y="686.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (684 samples, 0.13%)</title><rect x="771.0" y="659.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="774.0" y="670.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (684 samples, 0.13%)</title><rect x="771.0" y="643.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="774.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (4,429 samples, 0.87%)</title><rect x="772.6" y="723.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (404 samples, 0.08%)</title><rect x="772.6" y="707.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="775.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (404 samples, 0.08%)</title><rect x="772.6" y="691.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="775.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$310/1238471144.get$Lambda (404 samples, 0.08%)</title><rect x="772.6" y="675.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="775.6" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$310 (404 samples, 0.08%)</title><rect x="772.6" y="659.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="775.6" y="670.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2,411 samples, 0.47%)</title><rect x="773.5" y="707.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="776.5" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (1,021 samples, 0.20%)</title><rect x="773.5" y="691.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.5" y="702.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (1,021 samples, 0.20%)</title><rect x="773.5" y="675.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="776.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,390 samples, 0.27%)</title><rect x="775.9" y="691.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="778.9" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,362 samples, 0.27%)</title><rect x="775.9" y="675.0" width="3.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="778.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1,614 samples, 0.32%)</title><rect x="779.1" y="707.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.1" y="718.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (1,578 samples, 0.31%)</title><rect x="779.1" y="691.0" width="3.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="782.1" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1,366 samples, 0.27%)</title><rect x="782.8" y="723.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="785.8" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1,366 samples, 0.27%)</title><rect x="782.8" y="707.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="785.8" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1,366 samples, 0.27%)</title><rect x="782.8" y="691.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="785.8" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1,366 samples, 0.27%)</title><rect x="782.8" y="675.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="785.8" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (506 samples, 0.10%)</title><rect x="782.8" y="659.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="785.8" y="670.0"></text>
</g>
<g>
<title>java.lang.Integer (506 samples, 0.10%)</title><rect x="782.8" y="643.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="785.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (860 samples, 0.17%)</title><rect x="784.0" y="659.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="787.0" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.add (860 samples, 0.17%)</title><rect x="784.0" y="643.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="787.0" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (860 samples, 0.17%)</title><rect x="784.0" y="627.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="787.0" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (860 samples, 0.17%)</title><rect x="784.0" y="611.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="787.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (860 samples, 0.17%)</title><rect x="784.0" y="595.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="787.0" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (860 samples, 0.17%)</title><rect x="784.0" y="579.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="787.0" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (537 samples, 0.11%)</title><rect x="786.0" y="723.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="789.0" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (537 samples, 0.11%)</title><rect x="786.0" y="707.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="789.0" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (537 samples, 0.11%)</title><rect x="786.0" y="691.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="789.0" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (537 samples, 0.11%)</title><rect x="786.0" y="675.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="789.0" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (444 samples, 0.09%)</title><rect x="786.0" y="659.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="789.0" y="670.0"></text>
</g>
<g>
<title>java.lang.Integer (444 samples, 0.09%)</title><rect x="786.0" y="643.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="789.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (348 samples, 0.07%)</title><rect x="787.2" y="723.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="790.2" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (348 samples, 0.07%)</title><rect x="787.2" y="707.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="790.2" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (348 samples, 0.07%)</title><rect x="787.2" y="691.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="790.2" y="702.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (348 samples, 0.07%)</title><rect x="787.2" y="675.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="790.2" y="686.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (173,713 samples, 34.06%)</title><rect x="788.0" y="739.0" width="402.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="791.0" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4,235 samples, 0.83%)</title><rect x="788.0" y="723.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.0" y="734.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (4,235 samples, 0.83%)</title><rect x="788.0" y="707.0" width="9.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="791.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (169,478 samples, 33.23%)</title><rect x="797.8" y="723.0" width="392.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="800.8" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (169,478 samples, 33.23%)</title><rect x="797.8" y="707.0" width="392.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="800.8" y="718.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (169,478 samples, 33.23%)</title><rect x="797.8" y="691.0" width="392.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="800.8" y="702.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (61,884 samples, 12.14%)</title><rect x="797.8" y="675.0" width="143.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="800.8" y="686.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (61,884 samples, 12.14%)</title><rect x="797.8" y="659.0" width="143.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="800.8" y="670.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (56,727 samples, 11.12%)</title><rect x="797.8" y="643.0" width="131.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="800.8" y="654.0">RequestHandler0_..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4,628 samples, 0.91%)</title><rect x="797.8" y="627.0" width="10.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="800.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,628 samples, 0.91%)</title><rect x="797.8" y="611.0" width="10.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="800.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,628 samples, 0.91%)</title><rect x="797.8" y="595.0" width="10.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="800.8" y="606.0"></text>
</g>
<g>
<title>java.lang.String (2,225 samples, 0.44%)</title><rect x="797.8" y="579.0" width="5.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="800.8" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,403 samples, 0.47%)</title><rect x="803.0" y="579.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="806.0" y="590.0"></text>
</g>
<g>
<title>byte[] (2,403 samples, 0.47%)</title><rect x="803.0" y="563.0" width="5.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="806.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.entity (52,099 samples, 10.22%)</title><rect x="808.5" y="627.0" width="120.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="811.5" y="638.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,732 samples, 0.54%)</title><rect x="808.5" y="611.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="811.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,732 samples, 0.54%)</title><rect x="808.5" y="595.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="811.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$118/623724724.get$Lambda (2,732 samples, 0.54%)</title><rect x="808.5" y="579.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="811.5" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.ServiceImpl$$Lambda$118 (2,732 samples, 0.54%)</title><rect x="808.5" y="563.0" width="6.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="811.5" y="574.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (3,245 samples, 0.64%)</title><rect x="814.9" y="611.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="817.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3,245 samples, 0.64%)</title><rect x="814.9" y="595.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="817.9" y="606.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (3,245 samples, 0.64%)</title><rect x="814.9" y="579.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="817.9" y="590.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (3,245 samples, 0.64%)</title><rect x="814.9" y="563.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="817.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (3,245 samples, 0.64%)</title><rect x="814.9" y="547.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="817.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (3,245 samples, 0.64%)</title><rect x="814.9" y="531.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="817.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (3,245 samples, 0.64%)</title><rect x="814.9" y="515.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="817.9" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (3,245 samples, 0.64%)</title><rect x="814.9" y="499.0" width="7.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="817.9" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.request.handler.RequestHandler (2,381 samples, 0.47%)</title><rect x="822.4" y="611.0" width="5.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="825.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.parseEntityArguments (41,414 samples, 8.12%)</title><rect x="827.9" y="611.0" width="95.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="830.9" y="622.0">ru/mail/pol..</text>
</g>
<g>
<title>java/lang/String.getBytes (2,271 samples, 0.45%)</title><rect x="827.9" y="595.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2,271 samples, 0.45%)</title><rect x="827.9" y="579.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2,271 samples, 0.45%)</title><rect x="827.9" y="563.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,271 samples, 0.45%)</title><rect x="827.9" y="547.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.9" y="558.0"></text>
</g>
<g>
<title>byte[] (2,271 samples, 0.45%)</title><rect x="827.9" y="531.0" width="5.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="830.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4,460 samples, 0.87%)</title><rect x="833.1" y="595.0" width="10.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="836.1" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4,460 samples, 0.87%)</title><rect x="833.1" y="579.0" width="10.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="836.1" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,460 samples, 0.87%)</title><rect x="833.1" y="563.0" width="10.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="836.1" y="574.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (20,665 samples, 4.05%)</title><rect x="843.5" y="595.0" width="47.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="846.5" y="606.0">java..</text>
</g>
<g>
<title>java.util.regex.Matcher (6,849 samples, 1.34%)</title><rect x="843.5" y="579.0" width="15.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="846.5" y="590.0"></text>
</g>
<g>
<title>java.util.regex.Matcher (189 samples, 0.04%)</title><rect x="859.3" y="579.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="862.3" y="590.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (13,627 samples, 2.67%)</title><rect x="859.7" y="579.0" width="31.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="862.7" y="590.0">ja..</text>
</g>
<g>
<title>int[] (11,705 samples, 2.30%)</title><rect x="859.7" y="563.0" width="27.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="862.7" y="574.0">i..</text>
</g>
<g>
<title>int[] (321 samples, 0.06%)</title><rect x="886.8" y="563.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="889.8" y="574.0"></text>
</g>
<g>
<title>java.util.regex.IntHashSet[] (1,601 samples, 0.31%)</title><rect x="887.6" y="563.0" width="3.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="890.6" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.request.processor.entity.Arguments (3,816 samples, 0.75%)</title><rect x="891.3" y="595.0" width="8.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="894.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/RequestUtils.getRequestTimestamp (7,164 samples, 1.40%)</title><rect x="900.1" y="595.0" width="16.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="903.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.trim (3,500 samples, 0.69%)</title><rect x="900.1" y="579.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="903.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3,500 samples, 0.69%)</title><rect x="900.1" y="563.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="903.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,500 samples, 0.69%)</title><rect x="900.1" y="547.0" width="8.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="903.1" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1,435 samples, 0.28%)</title><rect x="900.1" y="531.0" width="3.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="903.1" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,065 samples, 0.40%)</title><rect x="903.4" y="531.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.4" y="542.0"></text>
</g>
<g>
<title>byte[] (2,065 samples, 0.40%)</title><rect x="903.4" y="515.0" width="4.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="906.4" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3,664 samples, 0.72%)</title><rect x="908.2" y="579.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="911.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,664 samples, 0.72%)</title><rect x="908.2" y="563.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="911.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,664 samples, 0.72%)</title><rect x="908.2" y="547.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="911.2" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1,551 samples, 0.30%)</title><rect x="908.2" y="531.0" width="3.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="911.2" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,113 samples, 0.41%)</title><rect x="911.8" y="531.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="914.8" y="542.0"></text>
</g>
<g>
<title>byte[] (2,113 samples, 0.41%)</title><rect x="911.8" y="515.0" width="4.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="914.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/RequestUtils.isRequestFromService (3,038 samples, 0.60%)</title><rect x="916.7" y="595.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="919.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3,038 samples, 0.60%)</title><rect x="916.7" y="579.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="919.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,038 samples, 0.60%)</title><rect x="916.7" y="563.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="919.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,038 samples, 0.60%)</title><rect x="916.7" y="547.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="919.7" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1,552 samples, 0.30%)</title><rect x="916.7" y="531.0" width="3.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="919.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,486 samples, 0.29%)</title><rect x="920.3" y="531.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="923.3" y="542.0"></text>
</g>
<g>
<title>byte[] (1,486 samples, 0.29%)</title><rect x="920.3" y="515.0" width="3.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="923.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntityRequestProcessor.forHttpMethod (2,327 samples, 0.46%)</title><rect x="923.7" y="611.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="926.7" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.request.processor.entity.GetEntityRequestProcessor (2,327 samples, 0.46%)</title><rect x="923.7" y="595.0" width="5.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="926.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5,157 samples, 1.01%)</title><rect x="929.1" y="643.0" width="11.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="932.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (5,157 samples, 1.01%)</title><rect x="929.1" y="627.0" width="11.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="932.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,157 samples, 1.01%)</title><rect x="929.1" y="611.0" width="11.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="932.1" y="622.0"></text>
</g>
<g>
<title>java.lang.String (2,074 samples, 0.41%)</title><rect x="929.1" y="595.0" width="4.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="932.1" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,083 samples, 0.60%)</title><rect x="933.9" y="595.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="936.9" y="606.0"></text>
</g>
<g>
<title>byte[] (3,083 samples, 0.60%)</title><rect x="933.9" y="579.0" width="7.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="936.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (23,809 samples, 4.67%)</title><rect x="941.0" y="675.0" width="55.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="944.0" y="686.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (3,742 samples, 0.73%)</title><rect x="941.0" y="659.0" width="8.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="944.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (7,643 samples, 1.50%)</title><rect x="949.7" y="659.0" width="17.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="952.7" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (7,302 samples, 1.43%)</title><rect x="949.7" y="643.0" width="16.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="952.7" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (341 samples, 0.07%)</title><rect x="966.6" y="643.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="969.6" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12,424 samples, 2.44%)</title><rect x="967.4" y="659.0" width="28.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="970.4" y="670.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (12,424 samples, 2.44%)</title><rect x="967.4" y="643.0" width="28.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="970.4" y="654.0">on..</text>
</g>
<g>
<title>char[] (6,460 samples, 1.27%)</title><rect x="967.4" y="627.0" width="14.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="970.4" y="638.0"></text>
</g>
<g>
<title>java.lang.String (2,210 samples, 0.43%)</title><rect x="982.4" y="627.0" width="5.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="985.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,737 samples, 0.73%)</title><rect x="987.5" y="627.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="990.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,737 samples, 0.73%)</title><rect x="987.5" y="611.0" width="8.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="990.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,737 samples, 0.73%)</title><rect x="987.5" y="595.0" width="8.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="990.5" y="606.0"></text>
</g>
<g>
<title>byte[] (3,737 samples, 0.73%)</title><rect x="987.5" y="579.0" width="8.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="990.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1,031 samples, 0.20%)</title><rect x="996.1" y="675.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="999.1" y="686.0"></text>
</g>
<g>
<title>byte[] (1,031 samples, 0.20%)</title><rect x="996.1" y="659.0" width="2.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="999.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3,159 samples, 0.62%)</title><rect x="998.5" y="675.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1001.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,159 samples, 0.62%)</title><rect x="998.5" y="659.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1001.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,159 samples, 0.62%)</title><rect x="998.5" y="643.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1001.5" y="654.0"></text>
</g>
<g>
<title>java.lang.String (1,489 samples, 0.29%)</title><rect x="998.5" y="627.0" width="3.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1001.5" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,670 samples, 0.33%)</title><rect x="1002.0" y="627.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1005.0" y="638.0"></text>
</g>
<g>
<title>byte[] (1,670 samples, 0.33%)</title><rect x="1002.0" y="611.0" width="3.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1005.0" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (79,595 samples, 15.61%)</title><rect x="1005.8" y="675.0" width="184.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1008.8" y="686.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (79,595 samples, 15.61%)</title><rect x="1005.8" y="659.0" width="184.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1008.8" y="670.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (39,299 samples, 7.71%)</title><rect x="1005.8" y="643.0" width="91.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1008.8" y="654.0">char[]</text>
</g>
<g>
<title>char[] (764 samples, 0.15%)</title><rect x="1096.8" y="643.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1099.8" y="654.0"></text>
</g>
<g>
<title>java.lang.String (13,414 samples, 2.63%)</title><rect x="1098.5" y="643.0" width="31.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1101.5" y="654.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26,118 samples, 5.12%)</title><rect x="1129.6" y="643.0" width="60.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1132.6" y="654.0">java/l..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26,118 samples, 5.12%)</title><rect x="1129.6" y="627.0" width="60.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1132.6" y="638.0">java/l..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (26,118 samples, 5.12%)</title><rect x="1129.6" y="611.0" width="60.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1132.6" y="622.0">java/l..</text>
</g>
<g>
<title>byte[] (26,093 samples, 5.12%)</title><rect x="1129.6" y="595.0" width="60.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1132.6" y="606.0">byte[]</text>
</g>
</g>
</svg>
