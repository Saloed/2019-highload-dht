<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="901"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="901"> </text>
<g id="frames">
<g>
<title>all (439,665 samples, 100.00%)</title><rect x="10.0" y="867.0" width="1180.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="878.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (157,767 samples, 35.88%)</title><rect x="10.0" y="851.0" width="423.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="862.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (157,767 samples, 35.88%)</title><rect x="10.0" y="835.0" width="423.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="846.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (157,767 samples, 35.88%)</title><rect x="10.0" y="819.0" width="423.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="830.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,506 samples, 0.34%)</title><rect x="10.0" y="803.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (1,506 samples, 0.34%)</title><rect x="10.0" y="787.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1,506 samples, 0.34%)</title><rect x="10.0" y="771.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1,506 samples, 0.34%)</title><rect x="10.0" y="755.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (1,506 samples, 0.34%)</title><rect x="10.0" y="739.0" width="4.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/handler/RequestHandler.run (156,261 samples, 35.54%)</title><rect x="14.0" y="803.0" width="419.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.0" y="814.0">ru/mail/polis/service/saloed/request/handler/RequestHandl..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$117/294011525.run (156,261 samples, 35.54%)</title><rect x="14.0" y="787.0" width="419.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.0" y="798.0">ru/mail/polis/service/saloed/ServiceImpl$$Lambda$117/2940..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (156,261 samples, 35.54%)</title><rect x="14.0" y="771.0" width="419.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.0" y="782.0">ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.processEntityForService (13,229 samples, 3.01%)</title><rect x="14.0" y="755.0" width="35.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.0" y="766.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (6,150 samples, 1.40%)</title><rect x="14.0" y="739.0" width="16.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5,693 samples, 1.29%)</title><rect x="14.0" y="723.0" width="15.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3,916 samples, 0.89%)</title><rect x="14.0" y="707.0" width="10.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2,610 samples, 0.59%)</title><rect x="14.0" y="691.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.0" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,610 samples, 0.59%)</title><rect x="14.0" y="675.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="17.0" y="686.0"></text>
</g>
<g>
<title>byte[] (2,496 samples, 0.57%)</title><rect x="14.0" y="659.0" width="6.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="17.0" y="670.0"></text>
</g>
<g>
<title>byte[] (114 samples, 0.03%)</title><rect x="20.7" y="659.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="23.7" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,306 samples, 0.30%)</title><rect x="21.0" y="691.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.0" y="702.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1,306 samples, 0.30%)</title><rect x="21.0" y="675.0" width="3.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="24.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,777 samples, 0.40%)</title><rect x="24.6" y="707.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,777 samples, 0.40%)</title><rect x="24.6" y="691.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="27.6" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,777 samples, 0.40%)</title><rect x="24.6" y="675.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.6" y="686.0"></text>
</g>
<g>
<title>java.lang.String (686 samples, 0.16%)</title><rect x="24.6" y="659.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="27.6" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,091 samples, 0.25%)</title><rect x="26.4" y="659.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="29.4" y="670.0"></text>
</g>
<g>
<title>byte[] (1,091 samples, 0.25%)</title><rect x="26.4" y="643.0" width="2.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="29.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceMetrics.responseWithStatus (457 samples, 0.10%)</title><rect x="29.3" y="723.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="32.3" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (457 samples, 0.10%)</title><rect x="29.3" y="707.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.3" y="718.0"></text>
</g>
<g>
<title>java.lang.Integer (457 samples, 0.10%)</title><rect x="29.3" y="691.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="32.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/UpsertEntityRequestProcessor.makeResponseForService (3,496 samples, 0.80%)</title><rect x="30.6" y="739.0" width="9.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="33.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/ResponseUtils.created (3,496 samples, 0.80%)</title><rect x="30.6" y="723.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.6" y="734.0"></text>
</g>
<g>
<title>one.nio.http.Response (738 samples, 0.17%)</title><rect x="30.6" y="707.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="33.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2,758 samples, 0.63%)</title><rect x="32.5" y="707.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="35.5" y="718.0"></text>
</g>
<g>
<title>byte[] (1,217 samples, 0.28%)</title><rect x="32.5" y="691.0" width="3.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="35.5" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (855 samples, 0.19%)</title><rect x="35.8" y="691.0" width="2.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="38.8" y="702.0"></text>
</g>
<g>
<title>java.lang.String (686 samples, 0.16%)</title><rect x="38.1" y="691.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="41.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/UpsertEntityRequestProcessor.processLocal (3,583 samples, 0.81%)</title><rect x="39.9" y="739.0" width="9.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.9" y="750.0"></text>
</g>
<g>
<title>java/util/Optional.of (494 samples, 0.11%)</title><rect x="39.9" y="723.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="42.9" y="734.0"></text>
</g>
<g>
<title>java.util.Optional (494 samples, 0.11%)</title><rect x="39.9" y="707.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="42.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.upsertRecord (1,600 samples, 0.36%)</title><rect x="41.3" y="723.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="44.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (672 samples, 0.15%)</title><rect x="41.3" y="707.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.3" y="718.0"></text>
</g>
<g>
<title>byte[] (672 samples, 0.15%)</title><rect x="41.3" y="691.0" width="1.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="44.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/timestamp/RecordWithTimestamp.toRawBytes (928 samples, 0.21%)</title><rect x="43.1" y="707.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (928 samples, 0.21%)</title><rect x="43.1" y="691.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="46.1" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (928 samples, 0.21%)</title><rect x="43.1" y="675.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="46.1" y="686.0"></text>
</g>
<g>
<title>byte[] (928 samples, 0.21%)</title><rect x="43.1" y="659.0" width="2.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="46.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/timestamp/RecordWithTimestamp.fromValue (1,489 samples, 0.34%)</title><rect x="45.6" y="723.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.6" y="734.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.timestamp.RecordWithTimestamp (1,489 samples, 0.34%)</title><rect x="45.6" y="707.0" width="3.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="48.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.processEntityForUser (143,032 samples, 32.53%)</title><rect x="49.5" y="755.0" width="383.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="52.5" y="766.0">ru/mail/polis/service/saloed/ServiceImpl.processEnti..</text>
</g>
<g>
<title>com/google/common/collect/ImmutableMap.of (615 samples, 0.14%)</title><rect x="49.5" y="739.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="52.5" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableBiMap.of (615 samples, 0.14%)</title><rect x="49.5" y="723.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="52.5" y="734.0"></text>
</g>
<g>
<title>com.google.common.collect.SingletonImmutableBiMap (615 samples, 0.14%)</title><rect x="49.5" y="707.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="52.5" y="718.0"></text>
</g>
<g>
<title>java.util.ArrayList (311 samples, 0.07%)</title><rect x="51.2" y="739.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="54.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (634 samples, 0.14%)</title><rect x="52.0" y="739.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="55.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (634 samples, 0.14%)</title><rect x="52.0" y="723.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$178/2002914424.get$Lambda (333 samples, 0.08%)</title><rect x="52.0" y="707.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.0" y="718.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.ServiceImpl$$Lambda$178 (333 samples, 0.08%)</title><rect x="52.0" y="691.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="55.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$180/2129462657.get$Lambda (301 samples, 0.07%)</title><rect x="52.9" y="707.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.9" y="718.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.ServiceImpl$$Lambda$180 (301 samples, 0.07%)</title><rect x="52.9" y="691.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="55.9" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (685 samples, 0.16%)</title><rect x="53.7" y="739.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (685 samples, 0.16%)</title><rect x="53.7" y="723.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="56.7" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (685 samples, 0.16%)</title><rect x="53.7" y="707.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="56.7" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (685 samples, 0.16%)</title><rect x="53.7" y="691.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.7" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (685 samples, 0.16%)</title><rect x="53.7" y="675.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="56.7" y="686.0"></text>
</g>
<g>
<title>java.lang.Object[] (683 samples, 0.16%)</title><rect x="53.7" y="659.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="56.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completedFuture (346 samples, 0.08%)</title><rect x="55.6" y="739.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.6" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (346 samples, 0.08%)</title><rect x="55.6" y="723.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="58.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (1,003 samples, 0.23%)</title><rect x="56.5" y="739.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="59.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (1,003 samples, 0.23%)</title><rect x="56.5" y="723.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="59.5" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (442 samples, 0.10%)</title><rect x="56.5" y="707.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="59.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (561 samples, 0.13%)</title><rect x="57.7" y="707.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.7" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (561 samples, 0.13%)</title><rect x="57.7" y="691.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="60.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (768 samples, 0.17%)</title><rect x="59.2" y="739.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (768 samples, 0.17%)</title><rect x="59.2" y="723.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.2" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (488 samples, 0.11%)</title><rect x="59.2" y="707.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="62.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (280 samples, 0.06%)</title><rect x="60.5" y="707.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.5" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (280 samples, 0.06%)</title><rect x="60.5" y="691.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="63.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter.selectNodes (12,368 samples, 2.81%)</title><rect x="61.3" y="739.0" width="33.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.3" y="750.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/topology/ConsistentHashTopology.selectNode (12,368 samples, 2.81%)</title><rect x="61.3" y="723.0" width="33.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="64.3" y="734.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/TreeRangeMap.get (227 samples, 0.05%)</title><rect x="61.3" y="707.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.3" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/TreeRangeMap.getEntry (227 samples, 0.05%)</title><rect x="61.3" y="691.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.3" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Cut.belowValue (227 samples, 0.05%)</title><rect x="61.3" y="675.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.3" y="686.0"></text>
</g>
<g>
<title>com.google.common.collect.Cut$BelowValue (227 samples, 0.05%)</title><rect x="61.3" y="659.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="64.3" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (202 samples, 0.05%)</title><rect x="61.9" y="707.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.9" y="718.0"></text>
</g>
<g>
<title>java.lang.Integer (202 samples, 0.05%)</title><rect x="61.9" y="691.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="64.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/topology/ConsistentHashTopology.getReplicasForNode (925 samples, 0.21%)</title><rect x="62.4" y="707.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="65.4" y="718.0"></text>
</g>
<g>
<title>java.util.ArrayList (353 samples, 0.08%)</title><rect x="62.4" y="691.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="65.4" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (572 samples, 0.13%)</title><rect x="63.4" y="691.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="66.4" y="702.0"></text>
</g>
<g>
<title>java.lang.Object[] (572 samples, 0.13%)</title><rect x="63.4" y="675.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="66.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/topology/ConsistentHashTopology.hash (11,014 samples, 2.51%)</title><rect x="64.9" y="707.0" width="29.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.9" y="718.0">ru..</text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (10,058 samples, 2.29%)</title><rect x="64.9" y="691.0" width="27.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.9" y="702.0">c..</text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction.newHasher (10,058 samples, 2.29%)</title><rect x="64.9" y="675.0" width="27.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.9" y="686.0">c..</text>
</g>
<g>
<title>com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher (2,441 samples, 0.56%)</title><rect x="64.9" y="659.0" width="6.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="67.9" y="670.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (909 samples, 0.21%)</title><rect x="71.4" y="659.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="74.4" y="670.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (909 samples, 0.21%)</title><rect x="71.4" y="643.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.4" y="654.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractByteHasher.&lt;init&gt; (909 samples, 0.21%)</title><rect x="71.4" y="627.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.4" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (909 samples, 0.21%)</title><rect x="71.4" y="611.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.4" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (599 samples, 0.14%)</title><rect x="71.4" y="595.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="74.4" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (310 samples, 0.07%)</title><rect x="73.0" y="595.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.0" y="606.0"></text>
</g>
<g>
<title>byte[] (310 samples, 0.07%)</title><rect x="73.0" y="579.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="76.0" y="590.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.clone (6,708 samples, 1.53%)</title><rect x="73.9" y="659.0" width="18.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.9" y="670.0"></text>
</g>
<g>
<title>java.security.MessageDigest$Delegate (379 samples, 0.09%)</title><rect x="73.9" y="643.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="76.9" y="654.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.clone (6,329 samples, 1.44%)</title><rect x="74.9" y="643.0" width="17.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.9" y="654.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.clone (6,329 samples, 1.44%)</title><rect x="74.9" y="627.0" width="17.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.9" y="638.0"></text>
</g>
<g>
<title>int[] (3,890 samples, 0.88%)</title><rect x="74.9" y="611.0" width="10.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="77.9" y="622.0"></text>
</g>
<g>
<title>int[] (573 samples, 0.13%)</title><rect x="85.3" y="611.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="88.3" y="622.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.clone (1,866 samples, 0.42%)</title><rect x="86.9" y="611.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="89.9" y="622.0"></text>
</g>
<g>
<title>byte[] (928 samples, 0.21%)</title><rect x="86.9" y="595.0" width="2.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="89.9" y="606.0"></text>
</g>
<g>
<title>byte[] (183 samples, 0.04%)</title><rect x="89.4" y="595.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="92.4" y="606.0"></text>
</g>
<g>
<title>java/security/MessageDigestSpi.clone (755 samples, 0.17%)</title><rect x="89.9" y="595.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.9" y="606.0"></text>
</g>
<g>
<title>sun.security.provider.SHA2$SHA256 (746 samples, 0.17%)</title><rect x="89.9" y="579.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="92.9" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.hash (956 samples, 0.22%)</title><rect x="91.9" y="691.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="94.9" y="702.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (956 samples, 0.22%)</title><rect x="91.9" y="675.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.9" y="686.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (956 samples, 0.22%)</title><rect x="91.9" y="659.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.9" y="670.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (956 samples, 0.22%)</title><rect x="91.9" y="643.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="94.9" y="654.0"></text>
</g>
<g>
<title>byte[] (956 samples, 0.22%)</title><rect x="91.9" y="627.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="94.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.remoteRequest (116,680 samples, 26.54%)</title><rect x="94.5" y="739.0" width="313.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.5" y="750.0">ru/mail/polis/service/saloed/ServiceImpl.r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (372 samples, 0.08%)</title><rect x="94.5" y="723.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.5" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (372 samples, 0.08%)</title><rect x="94.5" y="707.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="97.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$142/932006881.get$Lambda (372 samples, 0.08%)</title><rect x="94.5" y="691.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.5" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.ServiceImpl$$Lambda$142 (372 samples, 0.08%)</title><rect x="94.5" y="675.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="97.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (2,645 samples, 0.60%)</title><rect x="95.4" y="723.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="98.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (2,645 samples, 0.60%)</title><rect x="95.4" y="707.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.4" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (1,473 samples, 0.34%)</title><rect x="95.4" y="691.0" width="4.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="98.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,172 samples, 0.27%)</title><rect x="99.4" y="691.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="102.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,172 samples, 0.27%)</title><rect x="99.4" y="675.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="102.4" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,172 samples, 0.27%)</title><rect x="99.4" y="659.0" width="3.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="102.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1,718 samples, 0.39%)</title><rect x="102.5" y="723.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1,718 samples, 0.39%)</title><rect x="102.5" y="707.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.5" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (903 samples, 0.21%)</title><rect x="102.5" y="691.0" width="2.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="105.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (815 samples, 0.19%)</title><rect x="105.0" y="691.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (815 samples, 0.19%)</title><rect x="105.0" y="675.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="108.0" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (815 samples, 0.19%)</title><rect x="105.0" y="659.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="108.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (56,800 samples, 12.92%)</title><rect x="107.2" y="723.0" width="152.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.2" y="734.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (56,800 samples, 12.92%)</title><rect x="107.2" y="707.0" width="152.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="110.2" y="718.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (56,800 samples, 12.92%)</title><rect x="107.2" y="691.0" width="152.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="110.2" y="702.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (56,800 samples, 12.92%)</title><rect x="107.2" y="675.0" width="152.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.2" y="686.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (377 samples, 0.09%)</title><rect x="107.2" y="659.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (377 samples, 0.09%)</title><rect x="107.2" y="643.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="110.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$165/445407752.get$Lambda (377 samples, 0.09%)</title><rect x="107.2" y="627.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="110.2" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$165 (377 samples, 0.09%)</title><rect x="107.2" y="611.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="110.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2,410 samples, 0.55%)</title><rect x="108.2" y="659.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="111.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2,410 samples, 0.55%)</title><rect x="108.2" y="643.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.2" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,599 samples, 0.36%)</title><rect x="108.2" y="627.0" width="4.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="111.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (811 samples, 0.18%)</title><rect x="112.5" y="627.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (811 samples, 0.18%)</title><rect x="112.5" y="611.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.5" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (811 samples, 0.18%)</title><rect x="112.5" y="595.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="115.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1,898 samples, 0.43%)</title><rect x="114.6" y="659.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="117.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,898 samples, 0.43%)</title><rect x="114.6" y="643.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="117.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,181 samples, 0.27%)</title><rect x="114.6" y="627.0" width="3.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="117.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (717 samples, 0.16%)</title><rect x="117.8" y="627.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="120.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (717 samples, 0.16%)</title><rect x="117.8" y="611.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="120.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (717 samples, 0.16%)</title><rect x="117.8" y="595.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="120.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (1,673 samples, 0.38%)</title><rect x="119.7" y="659.0" width="4.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="122.7" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (260 samples, 0.06%)</title><rect x="124.2" y="659.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="127.2" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (2,519 samples, 0.57%)</title><rect x="124.9" y="659.0" width="6.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="127.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (29,227 samples, 6.65%)</title><rect x="131.9" y="659.0" width="78.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="134.9" y="670.0">jdk/inter..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2,758 samples, 0.63%)</title><rect x="131.9" y="643.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="134.9" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2,131 samples, 0.48%)</title><rect x="131.9" y="627.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="134.9" y="638.0"></text>
</g>
<g>
<title>java/util/List.spliterator (736 samples, 0.17%)</title><rect x="131.9" y="611.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.9" y="622.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (736 samples, 0.17%)</title><rect x="131.9" y="595.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="134.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,395 samples, 0.32%)</title><rect x="133.8" y="611.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.8" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,392 samples, 0.32%)</title><rect x="133.8" y="595.0" width="3.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="136.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (627 samples, 0.14%)</title><rect x="137.6" y="627.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="140.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (627 samples, 0.14%)</title><rect x="137.6" y="611.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="140.6" y="622.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (627 samples, 0.14%)</title><rect x="137.6" y="595.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="140.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$107/434398524.get (627 samples, 0.14%)</title><rect x="137.6" y="579.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="140.6" y="590.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (627 samples, 0.14%)</title><rect x="137.6" y="563.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="140.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (13,999 samples, 3.18%)</title><rect x="139.3" y="643.0" width="37.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="142.3" y="654.0">jav..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (13,999 samples, 3.18%)</title><rect x="139.3" y="627.0" width="37.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.3" y="638.0">jav..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (403 samples, 0.09%)</title><rect x="139.3" y="611.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="142.3" y="622.0"></text>
</g>
<g>
<title>java.util.ArrayList (753 samples, 0.17%)</title><rect x="140.4" y="611.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="143.4" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,198 samples, 0.27%)</title><rect x="142.4" y="611.0" width="3.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="145.4" y="622.0"></text>
</g>
<g>
<title>java.util.TreeSet (879 samples, 0.20%)</title><rect x="145.6" y="611.0" width="2.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="148.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (755 samples, 0.17%)</title><rect x="148.0" y="611.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="151.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (755 samples, 0.17%)</title><rect x="148.0" y="595.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.0" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1450244364.get$Lambda (755 samples, 0.17%)</title><rect x="148.0" y="579.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.0" y="590.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$134 (755 samples, 0.17%)</title><rect x="148.0" y="563.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="151.0" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (7,832 samples, 1.78%)</title><rect x="150.0" y="611.0" width="21.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.0" y="622.0">j..</text>
</g>
<g>
<title>java/util/TreeMap.forEach (7,832 samples, 1.78%)</title><rect x="150.0" y="595.0" width="21.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="153.0" y="606.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1450244364.accept (7,832 samples, 1.78%)</title><rect x="150.0" y="579.0" width="21.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.0" y="590.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (7,832 samples, 1.78%)</title><rect x="150.0" y="563.0" width="21.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.0" y="574.0">j..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,748 samples, 0.40%)</title><rect x="150.0" y="547.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="153.0" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/370512596.accept (1,748 samples, 0.40%)</title><rect x="150.0" y="531.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.0" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1,748 samples, 0.40%)</title><rect x="150.0" y="515.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="153.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,748 samples, 0.40%)</title><rect x="150.0" y="499.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,748 samples, 0.40%)</title><rect x="150.0" y="483.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,748 samples, 0.40%)</title><rect x="150.0" y="467.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="153.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,748 samples, 0.40%)</title><rect x="150.0" y="451.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.0" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,748 samples, 0.40%)</title><rect x="150.0" y="435.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="153.0" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,743 samples, 0.40%)</title><rect x="150.0" y="419.0" width="4.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="153.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,259 samples, 0.29%)</title><rect x="154.7" y="547.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="157.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,259 samples, 0.29%)</title><rect x="154.7" y="531.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="157.7" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/370512596.get$Lambda (1,259 samples, 0.29%)</title><rect x="154.7" y="515.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.7" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$136 (1,259 samples, 0.29%)</title><rect x="154.7" y="499.0" width="3.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="157.7" y="510.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2,637 samples, 0.60%)</title><rect x="158.0" y="547.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="161.0" y="558.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2,637 samples, 0.60%)</title><rect x="158.0" y="531.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="161.0" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,397 samples, 0.32%)</title><rect x="158.0" y="515.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="161.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,397 samples, 0.32%)</title><rect x="158.0" y="499.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="161.0" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,397 samples, 0.32%)</title><rect x="158.0" y="483.0" width="3.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="161.0" y="494.0"></text>
</g>
<g>
<title>java/util/List.of (1,240 samples, 0.28%)</title><rect x="161.8" y="515.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="164.8" y="526.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,240 samples, 0.28%)</title><rect x="161.8" y="499.0" width="3.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="164.8" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2,188 samples, 0.50%)</title><rect x="165.1" y="547.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="168.1" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2,188 samples, 0.50%)</title><rect x="165.1" y="531.0" width="5.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="168.1" y="542.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1,089 samples, 0.25%)</title><rect x="171.0" y="611.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="174.0" y="622.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1,089 samples, 0.25%)</title><rect x="171.0" y="595.0" width="2.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="174.0" y="606.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1,090 samples, 0.25%)</title><rect x="173.9" y="611.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="176.9" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,090 samples, 0.25%)</title><rect x="173.9" y="595.0" width="2.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="176.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (362 samples, 0.08%)</title><rect x="176.8" y="643.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="179.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (7,919 samples, 1.80%)</title><rect x="177.8" y="643.0" width="21.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="180.8" y="654.0">j..</text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (7,919 samples, 1.80%)</title><rect x="177.8" y="627.0" width="21.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="180.8" y="638.0">s..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (7,040 samples, 1.60%)</title><rect x="177.8" y="611.0" width="18.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="180.8" y="622.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (7,040 samples, 1.60%)</title><rect x="177.8" y="595.0" width="18.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="180.8" y="606.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (7,040 samples, 1.60%)</title><rect x="177.8" y="579.0" width="18.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="180.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2,669 samples, 0.61%)</title><rect x="177.8" y="563.0" width="7.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="180.8" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2,669 samples, 0.61%)</title><rect x="177.8" y="547.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="180.8" y="558.0"></text>
</g>
<g>
<title>byte[] (2,669 samples, 0.61%)</title><rect x="177.8" y="531.0" width="7.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="180.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4,371 samples, 0.99%)</title><rect x="185.0" y="563.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="188.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,371 samples, 0.99%)</title><rect x="185.0" y="547.0" width="11.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="188.0" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1,792 samples, 0.41%)</title><rect x="185.0" y="531.0" width="4.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="188.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,579 samples, 0.59%)</title><rect x="189.8" y="531.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.8" y="542.0"></text>
</g>
<g>
<title>byte[] (2,579 samples, 0.59%)</title><rect x="189.8" y="515.0" width="6.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="192.8" y="526.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (879 samples, 0.20%)</title><rect x="196.7" y="611.0" width="2.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="199.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (1,477 samples, 0.34%)</title><rect x="199.1" y="643.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.1" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,477 samples, 0.34%)</title><rect x="199.1" y="627.0" width="3.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="202.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2,712 samples, 0.62%)</title><rect x="203.0" y="643.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="206.0" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (896 samples, 0.20%)</title><rect x="203.0" y="627.0" width="2.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="206.0" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (543 samples, 0.12%)</title><rect x="205.4" y="627.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="208.4" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (543 samples, 0.12%)</title><rect x="205.4" y="611.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="208.4" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,273 samples, 0.29%)</title><rect x="206.9" y="627.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="209.9" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,273 samples, 0.29%)</title><rect x="206.9" y="611.0" width="3.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="209.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (12,009 samples, 2.73%)</title><rect x="210.3" y="659.0" width="32.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="213.3" y="670.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (361 samples, 0.08%)</title><rect x="210.3" y="643.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="213.3" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (1,699 samples, 0.39%)</title><rect x="211.3" y="643.0" width="4.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="214.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (394 samples, 0.09%)</title><rect x="215.9" y="643.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="218.9" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (394 samples, 0.09%)</title><rect x="215.9" y="627.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="218.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (9,537 samples, 2.17%)</title><rect x="216.9" y="643.0" width="25.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="219.9" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (9,537 samples, 2.17%)</title><rect x="216.9" y="627.0" width="25.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="219.9" y="638.0">j..</text>
</g>
<g>
<title>java.lang.Object[] (774 samples, 0.18%)</title><rect x="216.9" y="611.0" width="2.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="219.9" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList (1,078 samples, 0.25%)</title><rect x="219.0" y="611.0" width="2.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="222.0" y="622.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (4,833 samples, 1.10%)</title><rect x="221.9" y="611.0" width="13.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="224.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (4,833 samples, 1.10%)</title><rect x="221.9" y="595.0" width="13.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="224.9" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (4,833 samples, 1.10%)</title><rect x="221.9" y="579.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="224.9" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (4,833 samples, 1.10%)</title><rect x="221.9" y="563.0" width="13.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="224.9" y="574.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (4,420 samples, 1.01%)</title><rect x="221.9" y="547.0" width="11.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="224.9" y="558.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (413 samples, 0.09%)</title><rect x="233.8" y="547.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="236.8" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1,300 samples, 0.30%)</title><rect x="234.9" y="611.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1,300 samples, 0.30%)</title><rect x="234.9" y="595.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="237.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor12.newInstance (968 samples, 0.22%)</title><rect x="234.9" y="579.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (968 samples, 0.22%)</title><rect x="234.9" y="563.0" width="2.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="237.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (332 samples, 0.08%)</title><rect x="237.5" y="579.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="240.5" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (332 samples, 0.08%)</title><rect x="237.5" y="563.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="240.5" y="574.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1,552 samples, 0.35%)</title><rect x="238.4" y="611.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="241.4" y="622.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1,552 samples, 0.35%)</title><rect x="238.4" y="595.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="241.4" y="606.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1,552 samples, 0.35%)</title><rect x="238.4" y="579.0" width="4.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="241.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (6,355 samples, 1.45%)</title><rect x="242.5" y="659.0" width="17.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (962 samples, 0.22%)</title><rect x="242.5" y="643.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.5" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (962 samples, 0.22%)</title><rect x="242.5" y="627.0" width="2.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="245.5" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (798 samples, 0.18%)</title><rect x="245.1" y="643.0" width="2.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="248.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (4,595 samples, 1.05%)</title><rect x="247.3" y="643.0" width="12.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="250.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (728 samples, 0.17%)</title><rect x="247.3" y="627.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="250.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (728 samples, 0.17%)</title><rect x="247.3" y="611.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="250.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$154/1545781234.get$Lambda (386 samples, 0.09%)</title><rect x="247.3" y="595.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="250.3" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$154 (386 samples, 0.09%)</title><rect x="247.3" y="579.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="250.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$155/617686721.get$Lambda (342 samples, 0.08%)</title><rect x="248.3" y="595.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="251.3" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$155 (342 samples, 0.08%)</title><rect x="248.3" y="579.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="251.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3,867 samples, 0.88%)</title><rect x="249.2" y="627.0" width="10.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3,867 samples, 0.88%)</title><rect x="249.2" y="611.0" width="10.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.2" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2,080 samples, 0.47%)</title><rect x="249.2" y="595.0" width="5.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="252.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,787 samples, 0.41%)</title><rect x="254.8" y="595.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="257.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,787 samples, 0.41%)</title><rect x="254.8" y="579.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="257.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,787 samples, 0.41%)</title><rect x="254.8" y="563.0" width="4.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="257.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (15,586 samples, 3.54%)</title><rect x="259.6" y="723.0" width="41.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="262.6" y="734.0">jdk..</text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (1,017 samples, 0.23%)</title><rect x="259.6" y="707.0" width="2.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="262.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (14,569 samples, 3.31%)</title><rect x="262.3" y="707.0" width="39.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="265.3" y="718.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (13,569 samples, 3.09%)</title><rect x="262.3" y="691.0" width="36.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="265.3" y="702.0">jav..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (13,569 samples, 3.09%)</title><rect x="262.3" y="675.0" width="36.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="265.3" y="686.0">jav..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (390 samples, 0.09%)</title><rect x="262.3" y="659.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="265.3" y="670.0"></text>
</g>
<g>
<title>java.util.ArrayList (524 samples, 0.12%)</title><rect x="263.4" y="659.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="266.4" y="670.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,274 samples, 0.29%)</title><rect x="264.8" y="659.0" width="3.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="267.8" y="670.0"></text>
</g>
<g>
<title>java.util.TreeSet (398 samples, 0.09%)</title><rect x="268.2" y="659.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="271.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (766 samples, 0.17%)</title><rect x="269.3" y="659.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="272.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (766 samples, 0.17%)</title><rect x="269.3" y="643.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="272.3" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1450244364.get$Lambda (766 samples, 0.17%)</title><rect x="269.3" y="627.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="272.3" y="638.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$134 (766 samples, 0.17%)</title><rect x="269.3" y="611.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="272.3" y="622.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (824 samples, 0.19%)</title><rect x="271.3" y="659.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="274.3" y="670.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (824 samples, 0.19%)</title><rect x="271.3" y="643.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="274.3" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (8,239 samples, 1.87%)</title><rect x="273.5" y="659.0" width="22.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="276.5" y="670.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1450244364.accept (8,239 samples, 1.87%)</title><rect x="273.5" y="643.0" width="22.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="276.5" y="654.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8,239 samples, 1.87%)</title><rect x="273.5" y="627.0" width="22.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="276.5" y="638.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,556 samples, 0.35%)</title><rect x="273.5" y="611.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="276.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,556 samples, 0.35%)</title><rect x="273.5" y="595.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.5" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/370512596.get$Lambda (1,556 samples, 0.35%)</title><rect x="273.5" y="579.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="276.5" y="590.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$136 (1,556 samples, 0.35%)</title><rect x="273.5" y="563.0" width="4.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="276.5" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,502 samples, 0.34%)</title><rect x="277.7" y="611.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.7" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/370512596.accept (1,502 samples, 0.34%)</title><rect x="277.7" y="595.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="280.7" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1,502 samples, 0.34%)</title><rect x="277.7" y="579.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="280.7" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,502 samples, 0.34%)</title><rect x="277.7" y="563.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="280.7" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,502 samples, 0.34%)</title><rect x="277.7" y="547.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="280.7" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,502 samples, 0.34%)</title><rect x="277.7" y="531.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="280.7" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,502 samples, 0.34%)</title><rect x="277.7" y="515.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="280.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,502 samples, 0.34%)</title><rect x="277.7" y="499.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.7" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,496 samples, 0.34%)</title><rect x="277.7" y="483.0" width="4.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="280.7" y="494.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2,614 samples, 0.59%)</title><rect x="281.7" y="611.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="284.7" y="622.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2,614 samples, 0.59%)</title><rect x="281.7" y="595.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="284.7" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,459 samples, 0.33%)</title><rect x="281.7" y="579.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="284.7" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,459 samples, 0.33%)</title><rect x="281.7" y="563.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="284.7" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,459 samples, 0.33%)</title><rect x="281.7" y="547.0" width="4.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="284.7" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (1,155 samples, 0.26%)</title><rect x="285.7" y="579.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.7" y="590.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,155 samples, 0.26%)</title><rect x="285.7" y="563.0" width="3.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="288.7" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2,567 samples, 0.58%)</title><rect x="288.8" y="611.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="291.8" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2,567 samples, 0.58%)</title><rect x="288.8" y="595.0" width="6.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="291.8" y="606.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1,154 samples, 0.26%)</title><rect x="295.7" y="659.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="298.7" y="670.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,154 samples, 0.26%)</title><rect x="295.7" y="643.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="298.7" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (1,000 samples, 0.23%)</title><rect x="298.7" y="691.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="301.7" y="702.0"></text>
</g>
<g>
<title>java/util/Optional.of (1,000 samples, 0.23%)</title><rect x="298.7" y="675.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="301.7" y="686.0"></text>
</g>
<g>
<title>java.util.Optional (1,000 samples, 0.23%)</title><rect x="298.7" y="659.0" width="2.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="301.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$ClusterNode.requestBuilder (31,534 samples, 7.17%)</title><rect x="301.4" y="723.0" width="84.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="304.4" y="734.0">ru/mail/po..</text>
</g>
<g>
<title>com/google/common/collect/ImmutableMap.entrySet (830 samples, 0.19%)</title><rect x="301.4" y="707.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="304.4" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableMap.entrySet (830 samples, 0.19%)</title><rect x="301.4" y="691.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="304.4" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/SingletonImmutableBiMap.createEntrySet (830 samples, 0.19%)</title><rect x="301.4" y="675.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.4" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet.of (284 samples, 0.06%)</title><rect x="301.4" y="659.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="304.4" y="670.0"></text>
</g>
<g>
<title>com.google.common.collect.SingletonImmutableSet (284 samples, 0.06%)</title><rect x="301.4" y="643.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="304.4" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Maps.immutableEntry (546 samples, 0.12%)</title><rect x="302.2" y="659.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="305.2" y="670.0"></text>
</g>
<g>
<title>com.google.common.collect.ImmutableEntry (546 samples, 0.12%)</title><rect x="302.2" y="643.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="305.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3,274 samples, 0.74%)</title><rect x="303.7" y="707.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="306.7" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1389944146.invoke (2,174 samples, 0.49%)</title><rect x="303.7" y="691.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="306.7" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1591252264.invoke (2,174 samples, 0.49%)</title><rect x="303.7" y="675.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,174 samples, 0.49%)</title><rect x="303.7" y="659.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="306.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (617 samples, 0.14%)</title><rect x="303.7" y="643.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="306.7" y="654.0"></text>
</g>
<g>
<title>java.lang.String (617 samples, 0.14%)</title><rect x="303.7" y="627.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="306.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,557 samples, 0.35%)</title><rect x="305.3" y="643.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="308.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,557 samples, 0.35%)</title><rect x="305.3" y="627.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.3" y="638.0"></text>
</g>
<g>
<title>byte[] (1,522 samples, 0.35%)</title><rect x="305.3" y="611.0" width="4.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="308.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/547201549.invoke (1,100 samples, 0.25%)</title><rect x="309.5" y="691.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="312.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,100 samples, 0.25%)</title><rect x="309.5" y="675.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="312.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,100 samples, 0.25%)</title><rect x="309.5" y="659.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="312.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,100 samples, 0.25%)</title><rect x="309.5" y="643.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="312.5" y="654.0"></text>
</g>
<g>
<title>byte[] (1,100 samples, 0.25%)</title><rect x="309.5" y="627.0" width="2.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="312.5" y="638.0"></text>
</g>
<g>
<title>java/net/URI.create (10,783 samples, 2.45%)</title><rect x="312.4" y="707.0" width="29.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="315.4" y="718.0">ja..</text>
</g>
<g>
<title>java.net.URI (2,226 samples, 0.51%)</title><rect x="312.4" y="691.0" width="6.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="315.4" y="702.0"></text>
</g>
<g>
<title>java.net.URI (136 samples, 0.03%)</title><rect x="318.4" y="691.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="321.4" y="702.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (8,421 samples, 1.92%)</title><rect x="318.8" y="691.0" width="22.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="321.8" y="702.0">j..</text>
</g>
<g>
<title>java.net.URI$Parser (791 samples, 0.18%)</title><rect x="318.8" y="675.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="321.8" y="686.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (7,630 samples, 1.74%)</title><rect x="320.9" y="675.0" width="20.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="323.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,591 samples, 0.36%)</title><rect x="320.9" y="659.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="323.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,591 samples, 0.36%)</title><rect x="320.9" y="643.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="323.9" y="654.0"></text>
</g>
<g>
<title>java.lang.String (840 samples, 0.19%)</title><rect x="320.9" y="627.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="323.9" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (751 samples, 0.17%)</title><rect x="323.2" y="627.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="326.2" y="638.0"></text>
</g>
<g>
<title>byte[] (751 samples, 0.17%)</title><rect x="323.2" y="611.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="326.2" y="622.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (6,039 samples, 1.37%)</title><rect x="325.2" y="659.0" width="16.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,922 samples, 0.66%)</title><rect x="325.2" y="643.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="328.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,922 samples, 0.66%)</title><rect x="325.2" y="627.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="328.2" y="638.0"></text>
</g>
<g>
<title>java.lang.String (1,279 samples, 0.29%)</title><rect x="325.2" y="611.0" width="3.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="328.2" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,643 samples, 0.37%)</title><rect x="328.6" y="611.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.6" y="622.0"></text>
</g>
<g>
<title>byte[] (1,643 samples, 0.37%)</title><rect x="328.6" y="595.0" width="4.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="331.6" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (3,117 samples, 0.71%)</title><rect x="333.0" y="643.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="336.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,650 samples, 0.38%)</title><rect x="333.0" y="627.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="336.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,650 samples, 0.38%)</title><rect x="333.0" y="611.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="336.0" y="622.0"></text>
</g>
<g>
<title>java.lang.String (607 samples, 0.14%)</title><rect x="333.0" y="595.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="336.0" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,043 samples, 0.24%)</title><rect x="334.7" y="595.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="337.7" y="606.0"></text>
</g>
<g>
<title>byte[] (1,043 samples, 0.24%)</title><rect x="334.7" y="579.0" width="2.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="337.7" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (1,467 samples, 0.33%)</title><rect x="337.4" y="627.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="340.4" y="638.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (1,467 samples, 0.33%)</title><rect x="337.4" y="611.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="340.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,467 samples, 0.33%)</title><rect x="337.4" y="595.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="340.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,467 samples, 0.33%)</title><rect x="337.4" y="579.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.4" y="590.0"></text>
</g>
<g>
<title>java.lang.String (593 samples, 0.13%)</title><rect x="337.4" y="563.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="340.4" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (874 samples, 0.20%)</title><rect x="339.0" y="563.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.0" y="574.0"></text>
</g>
<g>
<title>byte[] (874 samples, 0.20%)</title><rect x="339.0" y="547.0" width="2.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="342.0" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (2,656 samples, 0.60%)</title><rect x="341.4" y="707.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="344.4" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (942 samples, 0.21%)</title><rect x="341.4" y="691.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="344.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (1,714 samples, 0.39%)</title><rect x="343.9" y="691.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="346.9" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (421 samples, 0.10%)</title><rect x="343.9" y="675.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="346.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (1,293 samples, 0.29%)</title><rect x="345.0" y="675.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="348.0" y="686.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,293 samples, 0.29%)</title><rect x="345.0" y="659.0" width="3.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="348.0" y="670.0"></text>
</g>
<g>
<title>java/time/Duration.ofMillis (603 samples, 0.14%)</title><rect x="348.5" y="707.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="351.5" y="718.0"></text>
</g>
<g>
<title>java/time/Duration.create (603 samples, 0.14%)</title><rect x="348.5" y="691.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="351.5" y="702.0"></text>
</g>
<g>
<title>java.time.Duration (603 samples, 0.14%)</title><rect x="348.5" y="675.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="351.5" y="686.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2,690 samples, 0.61%)</title><rect x="350.1" y="707.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="353.1" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableCollection.spliterator (1,201 samples, 0.27%)</title><rect x="350.1" y="691.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="353.1" y="702.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (1,201 samples, 0.27%)</title><rect x="350.1" y="675.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="353.1" y="686.0"></text>
</g>
<g>
<title>java.util.Spliterators$IteratorSpliterator (1,201 samples, 0.27%)</title><rect x="350.1" y="659.0" width="3.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="353.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,489 samples, 0.34%)</title><rect x="353.4" y="691.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="356.4" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,473 samples, 0.34%)</title><rect x="353.4" y="675.0" width="3.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="356.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.joining (1,741 samples, 0.40%)</title><rect x="357.4" y="707.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="360.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.joining (1,741 samples, 0.40%)</title><rect x="357.4" y="691.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="360.4" y="702.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (782 samples, 0.18%)</title><rect x="357.4" y="675.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="360.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (959 samples, 0.22%)</title><rect x="359.5" y="675.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="362.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (959 samples, 0.22%)</title><rect x="359.5" y="659.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="362.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$120/195711162.get$Lambda (959 samples, 0.22%)</title><rect x="359.5" y="643.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="362.5" y="654.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$$Lambda$120 (959 samples, 0.22%)</title><rect x="359.5" y="627.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="362.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (7,181 samples, 1.63%)</title><rect x="362.0" y="707.0" width="19.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="365.0" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6,101 samples, 1.39%)</title><rect x="362.0" y="691.0" width="16.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="365.0" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (6,101 samples, 1.39%)</title><rect x="362.0" y="675.0" width="16.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="365.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5,142 samples, 1.17%)</title><rect x="362.0" y="659.0" width="13.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="365.0" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4,524 samples, 1.03%)</title><rect x="362.0" y="643.0" width="12.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="365.0" y="654.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (628 samples, 0.14%)</title><rect x="362.0" y="627.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="365.0" y="638.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (628 samples, 0.14%)</title><rect x="362.0" y="611.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="365.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/SingletonImmutableSet.iterator (628 samples, 0.14%)</title><rect x="362.0" y="595.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="365.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/SingletonImmutableSet.iterator (628 samples, 0.14%)</title><rect x="362.0" y="579.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="365.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.singletonIterator (628 samples, 0.14%)</title><rect x="362.0" y="563.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="365.0" y="574.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$9 (628 samples, 0.14%)</title><rect x="362.0" y="547.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="365.0" y="558.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.forEachRemaining (2,945 samples, 0.67%)</title><rect x="363.7" y="627.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="366.7" y="638.0"></text>
</g>
<g>
<title>java/util/Iterator.forEachRemaining (2,945 samples, 0.67%)</title><rect x="363.7" y="611.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2,945 samples, 0.67%)</title><rect x="363.7" y="595.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="366.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (1,533 samples, 0.35%)</title><rect x="363.7" y="579.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="366.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$121/269545950.accept (1,533 samples, 0.35%)</title><rect x="363.7" y="563.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.7" y="574.0"></text>
</g>
<g>
<title>java/util/StringJoiner.add (1,533 samples, 0.35%)</title><rect x="363.7" y="547.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.7" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (1,533 samples, 0.35%)</title><rect x="363.7" y="531.0" width="4.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="366.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$ClusterNode$$Lambda$119/1457816197.apply (1,412 samples, 0.32%)</title><rect x="367.8" y="579.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="370.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$ClusterNode.lambda$requestBuilder$0 (1,412 samples, 0.32%)</title><rect x="367.8" y="563.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="370.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,412 samples, 0.32%)</title><rect x="367.8" y="547.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="370.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1,412 samples, 0.32%)</title><rect x="367.8" y="531.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="370.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/238357312.invoke (1,412 samples, 0.32%)</title><rect x="367.8" y="515.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="370.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,412 samples, 0.32%)</title><rect x="367.8" y="499.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.8" y="510.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (584 samples, 0.13%)</title><rect x="367.8" y="483.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="370.8" y="494.0"></text>
</g>
<g>
<title>java.lang.String (584 samples, 0.13%)</title><rect x="367.8" y="467.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="370.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (828 samples, 0.19%)</title><rect x="369.4" y="483.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="372.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (828 samples, 0.19%)</title><rect x="369.4" y="467.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="372.4" y="478.0"></text>
</g>
<g>
<title>byte[] (828 samples, 0.19%)</title><rect x="369.4" y="451.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="372.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (951 samples, 0.22%)</title><rect x="371.6" y="627.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (951 samples, 0.22%)</title><rect x="371.6" y="611.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="374.6" y="622.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$120/195711162.get (951 samples, 0.22%)</title><rect x="371.6" y="595.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="374.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$joining$11 (951 samples, 0.22%)</title><rect x="371.6" y="579.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="374.6" y="590.0"></text>
</g>
<g>
<title>java.util.StringJoiner (951 samples, 0.22%)</title><rect x="371.6" y="563.0" width="2.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="374.6" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (618 samples, 0.14%)</title><rect x="374.2" y="643.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="377.2" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (618 samples, 0.14%)</title><rect x="374.2" y="627.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="377.2" y="638.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (618 samples, 0.14%)</title><rect x="374.2" y="611.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="377.2" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (959 samples, 0.22%)</title><rect x="375.8" y="659.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="378.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (959 samples, 0.22%)</title><rect x="375.8" y="643.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="378.8" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (959 samples, 0.22%)</title><rect x="375.8" y="627.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="378.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (1,080 samples, 0.25%)</title><rect x="378.4" y="691.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="381.4" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (1,080 samples, 0.25%)</title><rect x="378.4" y="675.0" width="2.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="381.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (1,776 samples, 0.40%)</title><rect x="381.3" y="707.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.3" y="718.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (1,522 samples, 0.35%)</title><rect x="381.3" y="691.0" width="4.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="384.3" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (254 samples, 0.06%)</title><rect x="385.4" y="691.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="388.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/UpsertEntityRequestProcessor.preprocessRemote (8,025 samples, 1.83%)</title><rect x="386.1" y="723.0" width="21.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="389.1" y="734.0">r..</text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (1,047 samples, 0.24%)</title><rect x="386.1" y="707.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="389.1" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (1,047 samples, 0.24%)</title><rect x="386.1" y="691.0" width="2.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="389.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArray (573 samples, 0.13%)</title><rect x="388.9" y="707.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="391.9" y="718.0"></text>
</g>
<g>
<title>byte[] (573 samples, 0.13%)</title><rect x="388.9" y="691.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="391.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntityRequestProcessor.preprocessRemote (6,405 samples, 1.46%)</title><rect x="390.4" y="707.0" width="17.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="393.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/RequestUtils.setRequestFromService (2,566 samples, 0.58%)</title><rect x="390.4" y="691.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="393.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (2,566 samples, 0.58%)</title><rect x="390.4" y="675.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="393.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (2,566 samples, 0.58%)</title><rect x="390.4" y="659.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="393.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (2,566 samples, 0.58%)</title><rect x="390.4" y="643.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="393.4" y="654.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (2,566 samples, 0.58%)</title><rect x="390.4" y="627.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="393.4" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,354 samples, 0.31%)</title><rect x="390.4" y="611.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="393.4" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,354 samples, 0.31%)</title><rect x="390.4" y="595.0" width="3.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="393.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$127/1617439532.apply (1,212 samples, 0.28%)</title><rect x="394.0" y="611.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="397.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (1,212 samples, 0.28%)</title><rect x="394.0" y="595.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="397.0" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (577 samples, 0.13%)</title><rect x="394.0" y="579.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="397.0" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (635 samples, 0.14%)</title><rect x="395.6" y="579.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="398.6" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (635 samples, 0.14%)</title><rect x="395.6" y="563.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="398.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/RequestUtils.setRequestTimestamp (3,839 samples, 0.87%)</title><rect x="397.3" y="691.0" width="10.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="400.3" y="702.0"></text>
</g>
<g>
<title>java/lang/Long.toString (1,642 samples, 0.37%)</title><rect x="397.3" y="675.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="400.3" y="686.0"></text>
</g>
<g>
<title>byte[] (742 samples, 0.17%)</title><rect x="397.3" y="659.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="400.3" y="670.0"></text>
</g>
<g>
<title>java.lang.String (900 samples, 0.20%)</title><rect x="399.3" y="659.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="402.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (2,197 samples, 0.50%)</title><rect x="401.7" y="675.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="404.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (2,197 samples, 0.50%)</title><rect x="401.7" y="659.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="404.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (2,197 samples, 0.50%)</title><rect x="401.7" y="643.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="404.7" y="654.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (2,197 samples, 0.50%)</title><rect x="401.7" y="627.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="404.7" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (952 samples, 0.22%)</title><rect x="401.7" y="611.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="404.7" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (952 samples, 0.22%)</title><rect x="401.7" y="595.0" width="2.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="404.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$127/1617439532.apply (1,245 samples, 0.28%)</title><rect x="404.3" y="611.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="407.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (1,245 samples, 0.28%)</title><rect x="404.3" y="595.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="407.3" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (572 samples, 0.13%)</title><rect x="404.3" y="579.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="407.3" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (673 samples, 0.15%)</title><rect x="405.8" y="579.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="408.8" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (673 samples, 0.15%)</title><rect x="405.8" y="563.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="408.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.someOf (8,235 samples, 1.87%)</title><rect x="407.6" y="739.0" width="22.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="410.6" y="750.0">r..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (302 samples, 0.07%)</title><rect x="407.6" y="723.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="410.6" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedQueue (284 samples, 0.06%)</title><rect x="408.4" y="723.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="411.4" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (219 samples, 0.05%)</title><rect x="409.2" y="723.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="412.2" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (628 samples, 0.14%)</title><rect x="409.8" y="723.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="412.8" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (628 samples, 0.14%)</title><rect x="409.8" y="707.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="412.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$175/472839078.get$Lambda (628 samples, 0.14%)</title><rect x="409.8" y="691.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="412.8" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.ServiceImpl$$Lambda$175 (628 samples, 0.14%)</title><rect x="409.8" y="675.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="412.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1934870218.linkToTargetMethod (1,748 samples, 0.40%)</title><rect x="411.4" y="723.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.4" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/829141721.invokeStatic (1,748 samples, 0.40%)</title><rect x="411.4" y="707.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="414.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$174/46147055.get$Lambda (1,748 samples, 0.40%)</title><rect x="411.4" y="691.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="414.4" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.ServiceImpl$$Lambda$174 (1,748 samples, 0.40%)</title><rect x="411.4" y="675.0" width="4.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="414.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (2,027 samples, 0.46%)</title><rect x="416.1" y="723.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (2,027 samples, 0.46%)</title><rect x="416.1" y="707.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.1" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (970 samples, 0.22%)</title><rect x="416.1" y="691.0" width="2.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="419.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (271 samples, 0.06%)</title><rect x="418.7" y="691.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="421.7" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (271 samples, 0.06%)</title><rect x="418.7" y="675.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="421.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (786 samples, 0.18%)</title><rect x="419.5" y="691.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="422.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (786 samples, 0.18%)</title><rect x="419.5" y="675.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="422.5" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (786 samples, 0.18%)</title><rect x="419.5" y="659.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="422.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (2,338 samples, 0.53%)</title><rect x="421.6" y="723.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (2,338 samples, 0.53%)</title><rect x="421.6" y="707.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="424.6" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (985 samples, 0.22%)</title><rect x="421.6" y="691.0" width="2.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="424.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (574 samples, 0.13%)</title><rect x="424.2" y="691.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="427.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (274 samples, 0.06%)</title><rect x="424.2" y="675.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="427.2" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (274 samples, 0.06%)</title><rect x="424.2" y="659.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="427.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$174/46147055.accept (300 samples, 0.07%)</title><rect x="425.0" y="675.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="428.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$someOf$1 (300 samples, 0.07%)</title><rect x="425.0" y="659.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="428.0" y="670.0"></text>
</g>
<g>
<title>java/util/Optional.ifPresentOrElse (300 samples, 0.07%)</title><rect x="425.0" y="643.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="428.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$176/772936411.accept (300 samples, 0.07%)</title><rect x="425.0" y="627.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="428.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (300 samples, 0.07%)</title><rect x="425.0" y="611.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="428.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (300 samples, 0.07%)</title><rect x="425.0" y="595.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="428.0" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedQueue$Node (300 samples, 0.07%)</title><rect x="425.0" y="579.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="428.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (779 samples, 0.18%)</title><rect x="425.8" y="691.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="428.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (779 samples, 0.18%)</title><rect x="425.8" y="675.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="428.8" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (779 samples, 0.18%)</title><rect x="425.8" y="659.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="428.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.&lt;init&gt; (689 samples, 0.16%)</title><rect x="427.9" y="723.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="430.9" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedQueue$Node (689 samples, 0.16%)</title><rect x="427.9" y="707.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="430.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/UpsertEntityRequestProcessor.processLocal (1,387 samples, 0.32%)</title><rect x="429.7" y="739.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="432.7" y="750.0"></text>
</g>
<g>
<title>java/util/Optional.of (303 samples, 0.07%)</title><rect x="429.7" y="723.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.7" y="734.0"></text>
</g>
<g>
<title>java.util.Optional (303 samples, 0.07%)</title><rect x="429.7" y="707.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="432.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.upsertRecord (711 samples, 0.16%)</title><rect x="430.5" y="723.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="433.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (292 samples, 0.07%)</title><rect x="430.5" y="707.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="433.5" y="718.0"></text>
</g>
<g>
<title>byte[] (292 samples, 0.07%)</title><rect x="430.5" y="691.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="433.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/timestamp/RecordWithTimestamp.toRawBytes (419 samples, 0.10%)</title><rect x="431.3" y="707.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="434.3" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (419 samples, 0.10%)</title><rect x="431.3" y="691.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="434.3" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (419 samples, 0.10%)</title><rect x="431.3" y="675.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="434.3" y="686.0"></text>
</g>
<g>
<title>byte[] (419 samples, 0.10%)</title><rect x="431.3" y="659.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="434.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/timestamp/RecordWithTimestamp.fromValue (373 samples, 0.08%)</title><rect x="432.4" y="723.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="435.4" y="734.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.timestamp.RecordWithTimestamp (373 samples, 0.08%)</title><rect x="432.4" y="707.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="435.4" y="718.0"></text>
</g>
<g>
<title>java/util/TimerThread.run (214 samples, 0.05%)</title><rect x="433.4" y="851.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="436.4" y="862.0"></text>
</g>
<g>
<title>java/util/TimerThread.mainLoop (214 samples, 0.05%)</title><rect x="433.4" y="835.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.4" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceMetrics$InfoTask.run (214 samples, 0.05%)</title><rect x="433.4" y="819.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="436.4" y="830.0"></text>
</g>
<g>
<title>org/apache/commons/logging/impl/Log4JLogger.info (141 samples, 0.03%)</title><rect x="433.4" y="803.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="436.4" y="814.0"></text>
</g>
<g>
<title>org/apache/log4j/Category.log (141 samples, 0.03%)</title><rect x="433.4" y="787.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="436.4" y="798.0"></text>
</g>
<g>
<title>org/apache/log4j/Category.forcedLog (141 samples, 0.03%)</title><rect x="433.4" y="771.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="436.4" y="782.0"></text>
</g>
<g>
<title>org/apache/log4j/Category.callAppenders (141 samples, 0.03%)</title><rect x="433.4" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="436.4" y="766.0"></text>
</g>
<g>
<title>org/apache/log4j/helpers/AppenderAttachableImpl.appendLoopOnAppenders (141 samples, 0.03%)</title><rect x="433.4" y="739.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="436.4" y="750.0"></text>
</g>
<g>
<title>org/apache/log4j/AppenderSkeleton.doAppend (141 samples, 0.03%)</title><rect x="433.4" y="723.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="436.4" y="734.0"></text>
</g>
<g>
<title>org/apache/log4j/WriterAppender.append (141 samples, 0.03%)</title><rect x="433.4" y="707.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="436.4" y="718.0"></text>
</g>
<g>
<title>org/apache/log4j/WriterAppender.subAppend (141 samples, 0.03%)</title><rect x="433.4" y="691.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="436.4" y="702.0"></text>
</g>
<g>
<title>org/apache/log4j/PatternLayout.format (130 samples, 0.03%)</title><rect x="433.4" y="675.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="436.4" y="686.0"></text>
</g>
<g>
<title>org/apache/log4j/helpers/PatternConverter.format (102 samples, 0.02%)</title><rect x="433.5" y="659.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="436.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (113,023 samples, 25.71%)</title><rect x="434.0" y="851.0" width="303.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="437.0" y="862.0">java/util/concurrent/ForkJoinWorkerThread..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (113,023 samples, 25.71%)</title><rect x="434.0" y="835.0" width="303.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="437.0" y="846.0">java/util/concurrent/ForkJoinPool.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (113,023 samples, 25.71%)</title><rect x="434.0" y="819.0" width="303.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="437.0" y="830.0">java/util/concurrent/ForkJoinPool.scan</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (113,023 samples, 25.71%)</title><rect x="434.0" y="803.0" width="303.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="437.0" y="814.0">java/util/concurrent/ForkJoinPool$WorkQue..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (113,023 samples, 25.71%)</title><rect x="434.0" y="787.0" width="303.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="437.0" y="798.0">java/util/concurrent/ForkJoinTask.doExec</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (38,354 samples, 8.72%)</title><rect x="434.0" y="771.0" width="102.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="437.0" y="782.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (38,354 samples, 8.72%)</title><rect x="434.0" y="755.0" width="102.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="437.0" y="766.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (38,354 samples, 8.72%)</title><rect x="434.0" y="739.0" width="102.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="437.0" y="750.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (38,354 samples, 8.72%)</title><rect x="434.0" y="723.0" width="102.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="437.0" y="734.0">java/util/co..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (150 samples, 0.03%)</title><rect x="434.0" y="707.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="437.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$154/1545781234.apply (38,204 samples, 8.69%)</title><rect x="434.4" y="707.0" width="102.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="437.4" y="718.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (38,204 samples, 8.69%)</title><rect x="434.4" y="691.0" width="102.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="437.4" y="702.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (38,204 samples, 8.69%)</title><rect x="434.4" y="675.0" width="102.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="437.4" y="686.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (197 samples, 0.04%)</title><rect x="434.4" y="659.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="437.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (197 samples, 0.04%)</title><rect x="434.4" y="643.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="437.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$298/309738644.get$Lambda (121 samples, 0.03%)</title><rect x="434.4" y="627.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="437.4" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$298 (121 samples, 0.03%)</title><rect x="434.4" y="611.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="437.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (315 samples, 0.07%)</title><rect x="434.9" y="659.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="437.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (315 samples, 0.07%)</title><rect x="434.9" y="643.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="437.9" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (172 samples, 0.04%)</title><rect x="434.9" y="627.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="437.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (143 samples, 0.03%)</title><rect x="435.4" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="438.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (143 samples, 0.03%)</title><rect x="435.4" y="611.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="438.4" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (143 samples, 0.03%)</title><rect x="435.4" y="595.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="438.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (680 samples, 0.15%)</title><rect x="435.8" y="659.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="438.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (680 samples, 0.15%)</title><rect x="435.8" y="643.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="438.8" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (370 samples, 0.08%)</title><rect x="435.8" y="627.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="438.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (310 samples, 0.07%)</title><rect x="436.8" y="627.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="439.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (310 samples, 0.07%)</title><rect x="436.8" y="611.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (310 samples, 0.07%)</title><rect x="436.8" y="595.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="439.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (36,309 samples, 8.26%)</title><rect x="437.6" y="659.0" width="97.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="440.6" y="670.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (36,309 samples, 8.26%)</title><rect x="437.6" y="643.0" width="97.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="440.6" y="654.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (36,309 samples, 8.26%)</title><rect x="437.6" y="627.0" width="97.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="440.6" y="638.0">jdk/interna..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (333 samples, 0.08%)</title><rect x="437.6" y="611.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="440.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (333 samples, 0.08%)</title><rect x="437.6" y="595.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="440.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$179/1990518240.get$Lambda (104 samples, 0.02%)</title><rect x="437.6" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="440.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$179 (104 samples, 0.02%)</title><rect x="437.6" y="563.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="440.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$185/1399017925.get$Lambda (120 samples, 0.03%)</title><rect x="437.9" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="440.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$185 (120 samples, 0.03%)</title><rect x="437.9" y="563.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="440.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$260/584612837.get$Lambda (109 samples, 0.02%)</title><rect x="438.2" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="441.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$260 (109 samples, 0.02%)</title><rect x="438.2" y="563.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="441.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (24,892 samples, 5.66%)</title><rect x="438.5" y="611.0" width="66.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.5" y="622.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (24,892 samples, 5.66%)</title><rect x="438.5" y="595.0" width="66.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="441.5" y="606.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (24,746 samples, 5.63%)</title><rect x="438.5" y="579.0" width="66.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="441.5" y="590.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$260/584612837.apply (24,746 samples, 5.63%)</title><rect x="438.5" y="563.0" width="66.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="441.5" y="574.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (24,746 samples, 5.63%)</title><rect x="438.5" y="547.0" width="66.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="441.5" y="558.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (24,746 samples, 5.63%)</title><rect x="438.5" y="531.0" width="66.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="441.5" y="542.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$185/1399017925.apply (24,746 samples, 5.63%)</title><rect x="438.5" y="515.0" width="66.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="441.5" y="526.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (24,746 samples, 5.63%)</title><rect x="438.5" y="499.0" width="66.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="441.5" y="510.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (198 samples, 0.05%)</title><rect x="438.5" y="483.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="441.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (198 samples, 0.05%)</title><rect x="438.5" y="467.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="441.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$297/1826637317.get$Lambda (198 samples, 0.05%)</title><rect x="438.5" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="441.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$297 (198 samples, 0.05%)</title><rect x="438.5" y="435.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="441.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (610 samples, 0.14%)</title><rect x="439.0" y="483.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (610 samples, 0.14%)</title><rect x="439.0" y="467.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="442.0" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (352 samples, 0.08%)</title><rect x="439.0" y="451.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="442.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (238 samples, 0.05%)</title><rect x="440.0" y="451.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="443.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (238 samples, 0.05%)</title><rect x="440.0" y="435.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="443.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (238 samples, 0.05%)</title><rect x="440.0" y="419.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="443.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (491 samples, 0.11%)</title><rect x="440.7" y="483.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="443.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (491 samples, 0.11%)</title><rect x="440.7" y="467.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="443.7" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (213 samples, 0.05%)</title><rect x="440.7" y="451.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="443.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (278 samples, 0.06%)</title><rect x="441.2" y="451.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="444.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (278 samples, 0.06%)</title><rect x="441.2" y="435.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="444.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (278 samples, 0.06%)</title><rect x="441.2" y="419.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="444.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (23,447 samples, 5.33%)</title><rect x="442.0" y="483.0" width="62.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="445.0" y="494.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (207 samples, 0.05%)</title><rect x="442.0" y="467.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (207 samples, 0.05%)</title><rect x="442.0" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="445.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$294/766758418.get$Lambda (139 samples, 0.03%)</title><rect x="442.2" y="435.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$294 (139 samples, 0.03%)</title><rect x="442.2" y="419.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="445.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (20,765 samples, 4.72%)</title><rect x="442.5" y="467.0" width="55.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="445.5" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (20,765 samples, 4.72%)</title><rect x="442.5" y="451.0" width="55.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="445.5" y="462.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (285 samples, 0.06%)</title><rect x="442.5" y="435.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="445.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$292/579287812.apply (20,062 samples, 4.56%)</title><rect x="443.3" y="435.0" width="53.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="446.3" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (20,062 samples, 4.56%)</title><rect x="443.3" y="419.0" width="53.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="446.3" y="430.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (346 samples, 0.08%)</title><rect x="443.5" y="403.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="446.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (346 samples, 0.08%)</title><rect x="443.5" y="387.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="446.5" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (192 samples, 0.04%)</title><rect x="443.5" y="371.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="446.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (154 samples, 0.04%)</title><rect x="444.0" y="371.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="447.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (154 samples, 0.04%)</title><rect x="444.0" y="355.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="447.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (154 samples, 0.04%)</title><rect x="444.0" y="339.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="447.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (159 samples, 0.04%)</title><rect x="444.4" y="403.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="447.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (250 samples, 0.06%)</title><rect x="444.9" y="403.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="447.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (108 samples, 0.02%)</title><rect x="444.9" y="387.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="447.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (142 samples, 0.03%)</title><rect x="445.2" y="387.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="448.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (136 samples, 0.03%)</title><rect x="445.2" y="371.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="448.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (136 samples, 0.03%)</title><rect x="445.2" y="355.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="448.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (136 samples, 0.03%)</title><rect x="445.2" y="339.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="448.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (136 samples, 0.03%)</title><rect x="445.2" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="448.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (136 samples, 0.03%)</title><rect x="445.2" y="307.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="448.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (415 samples, 0.09%)</title><rect x="445.5" y="403.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="448.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (415 samples, 0.09%)</title><rect x="445.5" y="387.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="448.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (156 samples, 0.04%)</title><rect x="445.5" y="371.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="448.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (156 samples, 0.04%)</title><rect x="445.5" y="355.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="448.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (156 samples, 0.04%)</title><rect x="445.5" y="339.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="448.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (156 samples, 0.04%)</title><rect x="445.5" y="323.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="448.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (259 samples, 0.06%)</title><rect x="446.0" y="371.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="449.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (259 samples, 0.06%)</title><rect x="446.0" y="355.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="449.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (169 samples, 0.04%)</title><rect x="446.0" y="339.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="449.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (18,817 samples, 4.28%)</title><rect x="446.6" y="403.0" width="50.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="449.6" y="414.0">jdk/i..</text>
</g>
<g>
<title>java.lang.StringBuilder (111 samples, 0.03%)</title><rect x="446.6" y="387.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="449.6" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (231 samples, 0.05%)</title><rect x="446.9" y="387.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="449.9" y="398.0"></text>
</g>
<g>
<title>byte[] (119 samples, 0.03%)</title><rect x="446.9" y="371.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="449.9" y="382.0"></text>
</g>
<g>
<title>java.lang.String (112 samples, 0.03%)</title><rect x="447.3" y="371.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="450.3" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2,326 samples, 0.53%)</title><rect x="447.6" y="387.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="450.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2,326 samples, 0.53%)</title><rect x="447.6" y="371.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="450.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (2,326 samples, 0.53%)</title><rect x="447.6" y="355.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="450.6" y="366.0"></text>
</g>
<g>
<title>byte[] (1,749 samples, 0.40%)</title><rect x="447.6" y="339.0" width="4.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="450.6" y="350.0"></text>
</g>
<g>
<title>byte[] (577 samples, 0.13%)</title><rect x="452.3" y="339.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="455.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (495 samples, 0.11%)</title><rect x="453.8" y="387.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="456.8" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (495 samples, 0.11%)</title><rect x="453.8" y="371.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="456.8" y="382.0"></text>
</g>
<g>
<title>byte[] (495 samples, 0.11%)</title><rect x="453.8" y="355.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="456.8" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,960 samples, 0.45%)</title><rect x="455.1" y="387.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="458.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,960 samples, 0.45%)</title><rect x="455.1" y="371.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.1" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,960 samples, 0.45%)</title><rect x="455.1" y="355.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="458.1" y="366.0"></text>
</g>
<g>
<title>byte[] (1,521 samples, 0.35%)</title><rect x="455.1" y="339.0" width="4.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="458.1" y="350.0"></text>
</g>
<g>
<title>byte[] (439 samples, 0.10%)</title><rect x="459.2" y="339.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="462.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (275 samples, 0.06%)</title><rect x="460.4" y="387.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="463.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (275 samples, 0.06%)</title><rect x="460.4" y="371.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="463.4" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (275 samples, 0.06%)</title><rect x="460.4" y="355.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="463.4" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (130 samples, 0.03%)</title><rect x="461.1" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="464.1" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (130 samples, 0.03%)</title><rect x="461.1" y="371.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="464.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (11,819 samples, 2.69%)</title><rect x="461.5" y="387.0" width="31.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="464.5" y="398.0">jd..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (112 samples, 0.03%)</title><rect x="461.5" y="371.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="464.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (112 samples, 0.03%)</title><rect x="461.5" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (112 samples, 0.03%)</title><rect x="461.5" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="464.5" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$314/1860202746.get$Lambda (112 samples, 0.03%)</title><rect x="461.5" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="464.5" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$314 (112 samples, 0.03%)</title><rect x="461.5" y="307.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="464.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (7,188 samples, 1.63%)</title><rect x="461.8" y="371.0" width="19.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="464.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4,828 samples, 1.10%)</title><rect x="461.8" y="355.0" width="12.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="464.8" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4,828 samples, 1.10%)</title><rect x="461.8" y="339.0" width="12.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="464.8" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4,828 samples, 1.10%)</title><rect x="461.8" y="323.0" width="12.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="464.8" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4,828 samples, 1.10%)</title><rect x="461.8" y="307.0" width="12.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="464.8" y="318.0"></text>
</g>
<g>
<title>byte[] (4,337 samples, 0.99%)</title><rect x="461.8" y="291.0" width="11.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="464.8" y="302.0"></text>
</g>
<g>
<title>byte[] (491 samples, 0.11%)</title><rect x="473.4" y="291.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="476.4" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (320 samples, 0.07%)</title><rect x="474.7" y="355.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="477.7" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (320 samples, 0.07%)</title><rect x="474.7" y="339.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="477.7" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (320 samples, 0.07%)</title><rect x="474.7" y="323.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="477.7" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (320 samples, 0.07%)</title><rect x="474.7" y="307.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="477.7" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (337 samples, 0.08%)</title><rect x="475.6" y="355.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="478.6" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (175 samples, 0.04%)</title><rect x="475.6" y="339.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="478.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (162 samples, 0.04%)</title><rect x="476.1" y="339.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="479.1" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (162 samples, 0.04%)</title><rect x="476.1" y="323.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="479.1" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$314/1860202746.test (1,703 samples, 0.39%)</title><rect x="476.5" y="355.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="479.5" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (1,703 samples, 0.39%)</title><rect x="476.5" y="339.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="479.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$33/660879561.test (1,703 samples, 0.39%)</title><rect x="476.5" y="323.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="479.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (1,703 samples, 0.39%)</title><rect x="476.5" y="307.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="479.5" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$22/79290965.test (1,703 samples, 0.39%)</title><rect x="476.5" y="291.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="479.5" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (1,703 samples, 0.39%)</title><rect x="476.5" y="275.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="479.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$21/508198356.test (1,703 samples, 0.39%)</title><rect x="476.5" y="259.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="479.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1,703 samples, 0.39%)</title><rect x="476.5" y="243.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="479.5" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,703 samples, 0.39%)</title><rect x="476.5" y="227.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="479.5" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,703 samples, 0.39%)</title><rect x="476.5" y="211.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="479.5" y="222.0"></text>
</g>
<g>
<title>java.lang.String (873 samples, 0.20%)</title><rect x="476.5" y="195.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="479.5" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (830 samples, 0.19%)</title><rect x="478.8" y="195.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="481.8" y="206.0"></text>
</g>
<g>
<title>byte[] (830 samples, 0.19%)</title><rect x="478.8" y="179.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="481.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (4,519 samples, 1.03%)</title><rect x="481.1" y="371.0" width="12.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="484.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (4,519 samples, 1.03%)</title><rect x="481.1" y="355.0" width="12.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="484.1" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4,519 samples, 1.03%)</title><rect x="481.1" y="339.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="484.1" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (117 samples, 0.03%)</title><rect x="481.3" y="323.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="484.3" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (221 samples, 0.05%)</title><rect x="481.6" y="323.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="484.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (154 samples, 0.04%)</title><rect x="482.4" y="323.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="485.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (154 samples, 0.04%)</title><rect x="482.4" y="307.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.4" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1450244364.get$Lambda (154 samples, 0.04%)</title><rect x="482.4" y="291.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="485.4" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$134 (154 samples, 0.04%)</title><rect x="482.4" y="275.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="485.4" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (151 samples, 0.03%)</title><rect x="482.8" y="323.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="485.8" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (151 samples, 0.03%)</title><rect x="482.8" y="307.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="485.8" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3,522 samples, 0.80%)</title><rect x="483.2" y="323.0" width="9.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="486.2" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1450244364.accept (3,522 samples, 0.80%)</title><rect x="483.2" y="307.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="486.2" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3,522 samples, 0.80%)</title><rect x="483.2" y="291.0" width="9.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (656 samples, 0.15%)</title><rect x="483.2" y="275.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="486.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (656 samples, 0.15%)</title><rect x="483.2" y="259.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="486.2" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/370512596.get$Lambda (656 samples, 0.15%)</title><rect x="483.2" y="243.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="486.2" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$136 (656 samples, 0.15%)</title><rect x="483.2" y="227.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="486.2" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (309 samples, 0.07%)</title><rect x="485.0" y="275.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.0" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/370512596.accept (309 samples, 0.07%)</title><rect x="485.0" y="259.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="488.0" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (309 samples, 0.07%)</title><rect x="485.0" y="243.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="488.0" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (309 samples, 0.07%)</title><rect x="485.0" y="227.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="488.0" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (309 samples, 0.07%)</title><rect x="485.0" y="211.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="488.0" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (309 samples, 0.07%)</title><rect x="485.0" y="195.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="488.0" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (309 samples, 0.07%)</title><rect x="485.0" y="179.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="488.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (309 samples, 0.07%)</title><rect x="485.0" y="163.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="488.0" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (309 samples, 0.07%)</title><rect x="485.0" y="147.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="488.0" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,386 samples, 0.32%)</title><rect x="485.8" y="275.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="488.8" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,386 samples, 0.32%)</title><rect x="485.8" y="259.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="488.8" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (689 samples, 0.16%)</title><rect x="485.8" y="243.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="488.8" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (689 samples, 0.16%)</title><rect x="485.8" y="227.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="488.8" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (689 samples, 0.16%)</title><rect x="485.8" y="211.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="488.8" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (697 samples, 0.16%)</title><rect x="487.7" y="243.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="490.7" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (697 samples, 0.16%)</title><rect x="487.7" y="227.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="490.7" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,171 samples, 0.27%)</title><rect x="489.5" y="275.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="492.5" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,171 samples, 0.27%)</title><rect x="489.5" y="259.0" width="3.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="492.5" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (195 samples, 0.04%)</title><rect x="492.7" y="323.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="495.7" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (195 samples, 0.04%)</title><rect x="492.7" y="307.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="495.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (373 samples, 0.08%)</title><rect x="493.2" y="387.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="496.2" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (117 samples, 0.03%)</title><rect x="493.2" y="371.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="496.2" y="382.0"></text>
</g>
<g>
<title>byte[] (117 samples, 0.03%)</title><rect x="493.2" y="355.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="496.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (256 samples, 0.06%)</title><rect x="493.5" y="371.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="496.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (256 samples, 0.06%)</title><rect x="493.5" y="355.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="496.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/238357312.invoke (256 samples, 0.06%)</title><rect x="493.5" y="339.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="496.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (256 samples, 0.06%)</title><rect x="493.5" y="323.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (106 samples, 0.02%)</title><rect x="493.5" y="307.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="496.5" y="318.0"></text>
</g>
<g>
<title>java.lang.String (106 samples, 0.02%)</title><rect x="493.5" y="291.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="496.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (150 samples, 0.03%)</title><rect x="493.8" y="307.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="496.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (150 samples, 0.03%)</title><rect x="493.8" y="291.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="496.8" y="302.0"></text>
</g>
<g>
<title>byte[] (150 samples, 0.03%)</title><rect x="493.8" y="275.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="496.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (300 samples, 0.07%)</title><rect x="494.2" y="387.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="497.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (300 samples, 0.07%)</title><rect x="494.2" y="371.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="497.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (300 samples, 0.07%)</title><rect x="494.2" y="355.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="497.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (300 samples, 0.07%)</title><rect x="494.2" y="339.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="497.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/238357312.invoke (300 samples, 0.07%)</title><rect x="494.2" y="323.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="497.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (300 samples, 0.07%)</title><rect x="494.2" y="307.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="497.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (216 samples, 0.05%)</title><rect x="494.4" y="291.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (216 samples, 0.05%)</title><rect x="494.4" y="275.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="497.4" y="286.0"></text>
</g>
<g>
<title>byte[] (216 samples, 0.05%)</title><rect x="494.4" y="259.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="497.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (797 samples, 0.18%)</title><rect x="495.0" y="387.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="498.0" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (220 samples, 0.05%)</title><rect x="495.0" y="371.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="498.0" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (198 samples, 0.05%)</title><rect x="495.6" y="371.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="498.6" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (198 samples, 0.05%)</title><rect x="495.6" y="355.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="498.6" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (379 samples, 0.09%)</title><rect x="496.1" y="371.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="499.1" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (379 samples, 0.09%)</title><rect x="496.1" y="355.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="499.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (418 samples, 0.10%)</title><rect x="497.1" y="435.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="500.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (418 samples, 0.10%)</title><rect x="497.1" y="419.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="500.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (418 samples, 0.10%)</title><rect x="497.1" y="403.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="500.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (421 samples, 0.10%)</title><rect x="498.3" y="467.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="501.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (168 samples, 0.04%)</title><rect x="499.4" y="467.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="502.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (1,886 samples, 0.43%)</title><rect x="499.9" y="467.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="502.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (123 samples, 0.03%)</title><rect x="499.9" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="502.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (123 samples, 0.03%)</title><rect x="499.9" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="502.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (189 samples, 0.04%)</title><rect x="500.2" y="451.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="503.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (158 samples, 0.04%)</title><rect x="500.7" y="451.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="503.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (196 samples, 0.04%)</title><rect x="501.1" y="451.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="504.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (531 samples, 0.12%)</title><rect x="501.6" y="451.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="504.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (531 samples, 0.12%)</title><rect x="501.6" y="435.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (531 samples, 0.12%)</title><rect x="501.6" y="419.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="504.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (531 samples, 0.12%)</title><rect x="501.6" y="403.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="504.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (531 samples, 0.12%)</title><rect x="501.6" y="387.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="504.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (531 samples, 0.12%)</title><rect x="501.6" y="371.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="504.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$245/1308623503.run (531 samples, 0.12%)</title><rect x="501.6" y="355.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="504.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (531 samples, 0.12%)</title><rect x="501.6" y="339.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="504.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (531 samples, 0.12%)</title><rect x="501.6" y="323.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="504.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (200 samples, 0.05%)</title><rect x="501.6" y="307.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="504.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (200 samples, 0.05%)</title><rect x="501.6" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="504.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$281/1262766137.get$Lambda (112 samples, 0.03%)</title><rect x="501.9" y="275.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="504.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$281 (112 samples, 0.03%)</title><rect x="501.9" y="259.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="504.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (137 samples, 0.03%)</title><rect x="502.2" y="307.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="505.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (194 samples, 0.04%)</title><rect x="502.5" y="307.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="505.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (194 samples, 0.04%)</title><rect x="502.5" y="291.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="505.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (113 samples, 0.03%)</title><rect x="502.8" y="275.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.8" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (113 samples, 0.03%)</title><rect x="502.8" y="259.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="505.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (515 samples, 0.12%)</title><rect x="503.1" y="451.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="506.1" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (128 samples, 0.03%)</title><rect x="503.1" y="435.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="506.1" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (234 samples, 0.05%)</title><rect x="503.4" y="435.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="506.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (153 samples, 0.03%)</title><rect x="504.0" y="435.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="507.0" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (153 samples, 0.03%)</title><rect x="504.0" y="419.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="507.0" y="430.0"></text>
</g>
<g>
<title>byte[] (153 samples, 0.03%)</title><rect x="504.0" y="403.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="507.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (174 samples, 0.04%)</title><rect x="504.4" y="451.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="507.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (174 samples, 0.04%)</title><rect x="504.4" y="435.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="507.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (146 samples, 0.03%)</title><rect x="504.9" y="579.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="507.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (146 samples, 0.03%)</title><rect x="504.9" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="507.9" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (146 samples, 0.03%)</title><rect x="504.9" y="547.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="507.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (290 samples, 0.07%)</title><rect x="505.3" y="611.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="508.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (290 samples, 0.07%)</title><rect x="505.3" y="595.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="508.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (142 samples, 0.03%)</title><rect x="505.3" y="579.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="508.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (148 samples, 0.03%)</title><rect x="505.7" y="579.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="508.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (148 samples, 0.03%)</title><rect x="505.7" y="563.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="508.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (148 samples, 0.03%)</title><rect x="505.7" y="547.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="508.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (10,794 samples, 2.46%)</title><rect x="506.1" y="611.0" width="29.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.1" y="622.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (179 samples, 0.04%)</title><rect x="506.1" y="595.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="509.1" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (179 samples, 0.04%)</title><rect x="506.1" y="579.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="509.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$256/1383642366.get$Lambda (98 samples, 0.02%)</title><rect x="506.1" y="563.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="509.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$256 (98 samples, 0.02%)</title><rect x="506.1" y="547.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="509.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (288 samples, 0.07%)</title><rect x="506.6" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="509.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (288 samples, 0.07%)</title><rect x="506.6" y="579.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="509.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$258/69929482.apply (128 samples, 0.03%)</title><rect x="506.6" y="563.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="509.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (128 samples, 0.03%)</title><rect x="506.6" y="547.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="509.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (128 samples, 0.03%)</title><rect x="506.6" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="509.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (128 samples, 0.03%)</title><rect x="506.6" y="515.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="509.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (160 samples, 0.04%)</title><rect x="506.9" y="563.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="509.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (160 samples, 0.04%)</title><rect x="506.9" y="547.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="509.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (160 samples, 0.04%)</title><rect x="506.9" y="531.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="509.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (156 samples, 0.04%)</title><rect x="507.3" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (156 samples, 0.04%)</title><rect x="507.3" y="579.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="510.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (156 samples, 0.04%)</title><rect x="507.3" y="563.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="510.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (156 samples, 0.04%)</title><rect x="507.3" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="510.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (156 samples, 0.04%)</title><rect x="507.3" y="531.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="510.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (10,171 samples, 2.31%)</title><rect x="507.8" y="595.0" width="27.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="510.8" y="606.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (123 samples, 0.03%)</title><rect x="507.8" y="579.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="510.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (123 samples, 0.03%)</title><rect x="507.8" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="510.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$192/735987026.get$Lambda (123 samples, 0.03%)</title><rect x="507.8" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="510.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$192 (123 samples, 0.03%)</title><rect x="507.8" y="531.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="510.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (9,387 samples, 2.14%)</title><rect x="508.1" y="579.0" width="25.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="511.1" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (9,387 samples, 2.14%)</title><rect x="508.1" y="563.0" width="25.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="511.1" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9,235 samples, 2.10%)</title><rect x="508.1" y="547.0" width="24.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="511.1" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$192/735987026.apply (9,235 samples, 2.10%)</title><rect x="508.1" y="531.0" width="24.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="511.1" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (9,235 samples, 2.10%)</title><rect x="508.1" y="515.0" width="24.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="511.1" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (9,235 samples, 2.10%)</title><rect x="508.1" y="499.0" width="24.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="511.1" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (3,564 samples, 0.81%)</title><rect x="508.3" y="483.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="511.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3,564 samples, 0.81%)</title><rect x="508.3" y="467.0" width="9.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="511.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (3,564 samples, 0.81%)</title><rect x="508.3" y="451.0" width="9.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="511.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$251/1993782210.apply (3,395 samples, 0.77%)</title><rect x="508.3" y="435.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="511.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (3,395 samples, 0.77%)</title><rect x="508.3" y="419.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="511.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (3,395 samples, 0.77%)</title><rect x="508.3" y="403.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="511.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (3,395 samples, 0.77%)</title><rect x="508.3" y="387.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="511.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (2,121 samples, 0.48%)</title><rect x="508.3" y="371.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="511.3" y="382.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (706 samples, 0.16%)</title><rect x="508.3" y="355.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="511.3" y="366.0"></text>
</g>
<g>
<title>java.lang.String (122 samples, 0.03%)</title><rect x="508.3" y="339.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="511.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (286 samples, 0.07%)</title><rect x="508.6" y="339.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="511.6" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (286 samples, 0.07%)</title><rect x="508.6" y="323.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="511.6" y="334.0"></text>
</g>
<g>
<title>byte[] (286 samples, 0.07%)</title><rect x="508.6" y="307.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="511.6" y="318.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (298 samples, 0.07%)</title><rect x="509.4" y="339.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="512.4" y="350.0"></text>
</g>
<g>
<title>byte[] (298 samples, 0.07%)</title><rect x="509.4" y="323.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="512.4" y="334.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (128 samples, 0.03%)</title><rect x="510.2" y="355.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="513.2" y="366.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (128 samples, 0.03%)</title><rect x="510.2" y="339.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="513.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (1,033 samples, 0.23%)</title><rect x="510.5" y="355.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="513.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (836 samples, 0.19%)</title><rect x="510.5" y="339.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="513.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (836 samples, 0.19%)</title><rect x="510.5" y="323.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="513.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1943325854.linkToTargetMethod (617 samples, 0.14%)</title><rect x="510.5" y="307.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="513.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (617 samples, 0.14%)</title><rect x="510.5" y="291.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="513.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$17/1411892748.get$Lambda (617 samples, 0.14%)</title><rect x="510.5" y="275.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.5" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$17 (617 samples, 0.14%)</title><rect x="510.5" y="259.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="513.5" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (219 samples, 0.05%)</title><rect x="512.2" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="515.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$17/1411892748.run (219 samples, 0.05%)</title><rect x="512.2" y="291.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (219 samples, 0.05%)</title><rect x="512.2" y="275.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.2" y="286.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (219 samples, 0.05%)</title><rect x="512.2" y="259.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="515.2" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (219 samples, 0.05%)</title><rect x="512.2" y="243.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="515.2" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (219 samples, 0.05%)</title><rect x="512.2" y="227.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="515.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (197 samples, 0.04%)</title><rect x="512.7" y="339.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="515.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (197 samples, 0.04%)</title><rect x="512.7" y="323.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="515.7" y="334.0"></text>
</g>
<g>
<title>int[] (197 samples, 0.04%)</title><rect x="512.7" y="307.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="515.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (254 samples, 0.06%)</title><rect x="513.3" y="355.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="516.3" y="366.0"></text>
</g>
<g>
<title>byte[] (254 samples, 0.06%)</title><rect x="513.3" y="339.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="516.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1,274 samples, 0.29%)</title><rect x="513.9" y="371.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="516.9" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (345 samples, 0.08%)</title><rect x="513.9" y="355.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="516.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (351 samples, 0.08%)</title><rect x="514.9" y="355.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="517.9" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (351 samples, 0.08%)</title><rect x="514.9" y="339.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="517.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (578 samples, 0.13%)</title><rect x="515.8" y="355.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="518.8" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (578 samples, 0.13%)</title><rect x="515.8" y="339.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="518.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (169 samples, 0.04%)</title><rect x="517.4" y="435.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (169 samples, 0.04%)</title><rect x="517.4" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="520.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (169 samples, 0.04%)</title><rect x="517.4" y="403.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="520.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (5,607 samples, 1.28%)</title><rect x="517.8" y="483.0" width="15.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (419 samples, 0.10%)</title><rect x="517.8" y="467.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="520.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (5,044 samples, 1.15%)</title><rect x="518.9" y="467.0" width="13.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="521.9" y="478.0"></text>
</g>
<g>
<title>java.util.LinkedList (129 samples, 0.03%)</title><rect x="519.2" y="451.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="522.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (112 samples, 0.03%)</title><rect x="519.5" y="451.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="522.5" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (240 samples, 0.05%)</title><rect x="520.0" y="451.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="523.0" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (240 samples, 0.05%)</title><rect x="520.0" y="435.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="523.0" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (240 samples, 0.05%)</title><rect x="520.0" y="419.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="523.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (157 samples, 0.04%)</title><rect x="520.7" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="523.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (157 samples, 0.04%)</title><rect x="520.7" y="435.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="523.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (394 samples, 0.09%)</title><rect x="521.1" y="451.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="524.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (256 samples, 0.06%)</title><rect x="522.2" y="451.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="525.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (290 samples, 0.07%)</title><rect x="522.8" y="451.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="525.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (322 samples, 0.07%)</title><rect x="523.6" y="451.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="526.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (1,483 samples, 0.34%)</title><rect x="524.5" y="451.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="527.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (128 samples, 0.03%)</title><rect x="524.5" y="435.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="527.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (112 samples, 0.03%)</title><rect x="525.1" y="435.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="528.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (117 samples, 0.03%)</title><rect x="525.8" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="528.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (117 samples, 0.03%)</title><rect x="525.8" y="419.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="528.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (152 samples, 0.03%)</title><rect x="526.1" y="435.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="529.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (171 samples, 0.04%)</title><rect x="526.5" y="435.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="529.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (560 samples, 0.13%)</title><rect x="527.0" y="435.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="530.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (134 samples, 0.03%)</title><rect x="527.0" y="419.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="530.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (142 samples, 0.03%)</title><rect x="527.3" y="419.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="530.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (211 samples, 0.05%)</title><rect x="527.9" y="419.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="530.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (944 samples, 0.21%)</title><rect x="528.5" y="451.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="531.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (109 samples, 0.02%)</title><rect x="529.1" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="532.1" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (109 samples, 0.02%)</title><rect x="529.1" y="419.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="532.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (593 samples, 0.13%)</title><rect x="529.4" y="435.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="532.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (126 samples, 0.03%)</title><rect x="529.4" y="419.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="532.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (163 samples, 0.04%)</title><rect x="529.7" y="419.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="532.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (233 samples, 0.05%)</title><rect x="530.4" y="419.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="533.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (119 samples, 0.03%)</title><rect x="531.0" y="451.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="534.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (118 samples, 0.03%)</title><rect x="531.0" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (118 samples, 0.03%)</title><rect x="531.0" y="419.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="534.0" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (118 samples, 0.03%)</title><rect x="531.0" y="403.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="534.0" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (118 samples, 0.03%)</title><rect x="531.0" y="387.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="534.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (118 samples, 0.03%)</title><rect x="531.0" y="371.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="534.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (118 samples, 0.03%)</title><rect x="531.0" y="355.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="534.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (433 samples, 0.10%)</title><rect x="531.3" y="451.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="534.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1943325854.linkToTargetMethod (113 samples, 0.03%)</title><rect x="531.3" y="435.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="534.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (113 samples, 0.03%)</title><rect x="531.3" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="534.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$200/868183568.get$Lambda (113 samples, 0.03%)</title><rect x="531.3" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="534.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$200 (113 samples, 0.03%)</title><rect x="531.3" y="387.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="534.3" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (320 samples, 0.07%)</title><rect x="531.6" y="435.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$200/868183568.run (320 samples, 0.07%)</title><rect x="531.6" y="419.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="534.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (320 samples, 0.07%)</title><rect x="531.6" y="403.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="534.6" y="414.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (234 samples, 0.05%)</title><rect x="531.9" y="387.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="534.9" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (111 samples, 0.03%)</title><rect x="531.9" y="371.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="534.9" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (123 samples, 0.03%)</title><rect x="532.2" y="371.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="535.2" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (123 samples, 0.03%)</title><rect x="532.2" y="355.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="535.2" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (123 samples, 0.03%)</title><rect x="532.2" y="339.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="535.2" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (123 samples, 0.03%)</title><rect x="532.2" y="323.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="535.2" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (123 samples, 0.03%)</title><rect x="532.2" y="307.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="535.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (144 samples, 0.03%)</title><rect x="532.5" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="535.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (144 samples, 0.03%)</title><rect x="532.5" y="451.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="535.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (152 samples, 0.03%)</title><rect x="532.9" y="547.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="535.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (152 samples, 0.03%)</title><rect x="532.9" y="531.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="535.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (152 samples, 0.03%)</title><rect x="532.9" y="515.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="535.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (134 samples, 0.03%)</title><rect x="533.3" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="536.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (134 samples, 0.03%)</title><rect x="533.3" y="563.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="536.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (134 samples, 0.03%)</title><rect x="533.3" y="547.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="536.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (134 samples, 0.03%)</title><rect x="533.3" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="536.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (134 samples, 0.03%)</title><rect x="533.3" y="515.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="536.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (527 samples, 0.12%)</title><rect x="533.6" y="579.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="536.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (359 samples, 0.08%)</title><rect x="533.6" y="563.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="536.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (359 samples, 0.08%)</title><rect x="533.6" y="547.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="536.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/210009782.linkToTargetMethod (359 samples, 0.08%)</title><rect x="533.6" y="531.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="536.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/227172017.invoke (359 samples, 0.08%)</title><rect x="533.6" y="515.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="536.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/556020496.invoke (359 samples, 0.08%)</title><rect x="533.6" y="499.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="536.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (359 samples, 0.08%)</title><rect x="533.6" y="483.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="536.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (111 samples, 0.03%)</title><rect x="533.6" y="467.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="536.6" y="478.0"></text>
</g>
<g>
<title>java.lang.String (111 samples, 0.03%)</title><rect x="533.6" y="451.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="536.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (248 samples, 0.06%)</title><rect x="533.9" y="467.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="536.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (248 samples, 0.06%)</title><rect x="533.9" y="451.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="536.9" y="462.0"></text>
</g>
<g>
<title>byte[] (248 samples, 0.06%)</title><rect x="533.9" y="435.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="536.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (168 samples, 0.04%)</title><rect x="534.6" y="563.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="537.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (168 samples, 0.04%)</title><rect x="534.6" y="547.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="537.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (190 samples, 0.04%)</title><rect x="535.1" y="659.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="538.1" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (190 samples, 0.04%)</title><rect x="535.1" y="643.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="538.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (190 samples, 0.04%)</title><rect x="535.1" y="627.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="538.1" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (190 samples, 0.04%)</title><rect x="535.1" y="611.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="538.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (513 samples, 0.12%)</title><rect x="535.6" y="659.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.6" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (401 samples, 0.09%)</title><rect x="535.6" y="643.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="538.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (112 samples, 0.03%)</title><rect x="536.6" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="539.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (112 samples, 0.03%)</title><rect x="536.6" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="539.6" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plus (112 samples, 0.03%)</title><rect x="536.6" y="611.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="539.6" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (112 samples, 0.03%)</title><rect x="536.6" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="539.6" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (112 samples, 0.03%)</title><rect x="536.6" y="579.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="539.6" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (112 samples, 0.03%)</title><rect x="536.6" y="563.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="539.6" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (112 samples, 0.03%)</title><rect x="536.6" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="539.6" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (112 samples, 0.03%)</title><rect x="536.6" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="539.6" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (112 samples, 0.03%)</title><rect x="536.6" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="539.6" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (112 samples, 0.03%)</title><rect x="536.6" y="499.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="539.6" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (112 samples, 0.03%)</title><rect x="536.6" y="483.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="539.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (48,262 samples, 10.98%)</title><rect x="536.9" y="771.0" width="129.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="539.9" y="782.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (48,262 samples, 10.98%)</title><rect x="536.9" y="755.0" width="129.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="539.9" y="766.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (48,262 samples, 10.98%)</title><rect x="536.9" y="739.0" width="129.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="539.9" y="750.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (48,262 samples, 10.98%)</title><rect x="536.9" y="723.0" width="129.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="539.9" y="734.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (48,262 samples, 10.98%)</title><rect x="536.9" y="707.0" width="129.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="539.9" y="718.0">java/util/concur..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$174/46147055.accept (48,262 samples, 10.98%)</title><rect x="536.9" y="691.0" width="129.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="539.9" y="702.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$someOf$1 (48,262 samples, 10.98%)</title><rect x="536.9" y="675.0" width="129.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="539.9" y="686.0">ru/mail/polis/se..</text>
</g>
<g>
<title>java/util/Optional.ifPresentOrElse (10,195 samples, 2.32%)</title><rect x="536.9" y="659.0" width="27.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="539.9" y="670.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$176/772936411.accept (10,195 samples, 2.32%)</title><rect x="536.9" y="643.0" width="27.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="539.9" y="654.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (10,195 samples, 2.32%)</title><rect x="536.9" y="627.0" width="27.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="539.9" y="638.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (10,195 samples, 2.32%)</title><rect x="536.9" y="611.0" width="27.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="539.9" y="622.0">j..</text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedQueue$Node (10,195 samples, 2.32%)</title><rect x="536.9" y="595.0" width="27.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="539.9" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (38,067 samples, 8.66%)</title><rect x="564.3" y="659.0" width="102.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="567.3" y="670.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (38,067 samples, 8.66%)</title><rect x="564.3" y="643.0" width="102.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.3" y="654.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (38,067 samples, 8.66%)</title><rect x="564.3" y="627.0" width="102.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.3" y="638.0">java/util/co..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$178/2002914424.accept (38,067 samples, 8.66%)</title><rect x="564.3" y="611.0" width="102.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="567.3" y="622.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$processEntityForUser$3 (38,067 samples, 8.66%)</title><rect x="564.3" y="595.0" width="102.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.3" y="606.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (20,745 samples, 4.72%)</title><rect x="564.3" y="579.0" width="55.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="567.3" y="590.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (18,381 samples, 4.18%)</title><rect x="564.3" y="563.0" width="49.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.3" y="574.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (18,381 samples, 4.18%)</title><rect x="564.3" y="547.0" width="49.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.3" y="558.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11,910 samples, 2.71%)</title><rect x="564.3" y="531.0" width="32.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.3" y="542.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (11,910 samples, 2.71%)</title><rect x="564.3" y="515.0" width="32.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.3" y="526.0">on..</text>
</g>
<g>
<title>byte[] (7,136 samples, 1.62%)</title><rect x="564.3" y="499.0" width="19.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="567.3" y="510.0"></text>
</g>
<g>
<title>byte[] (4,774 samples, 1.09%)</title><rect x="583.5" y="499.0" width="12.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="586.5" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6,471 samples, 1.47%)</title><rect x="596.3" y="531.0" width="17.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="599.3" y="542.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6,471 samples, 1.47%)</title><rect x="596.3" y="515.0" width="17.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="599.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceMetrics.responseWithStatus (2,364 samples, 0.54%)</title><rect x="613.6" y="563.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="616.6" y="574.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2,364 samples, 0.54%)</title><rect x="613.6" y="547.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="616.6" y="558.0"></text>
</g>
<g>
<title>java.lang.Integer (2,364 samples, 0.54%)</title><rect x="613.6" y="531.0" width="6.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="616.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/UpsertEntityRequestProcessor.makeResponseForUser (17,322 samples, 3.94%)</title><rect x="620.0" y="579.0" width="46.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="623.0" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/ResponseUtils.created (17,322 samples, 3.94%)</title><rect x="620.0" y="563.0" width="46.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.0" y="574.0">ru/m..</text>
</g>
<g>
<title>one.nio.http.Response (5,043 samples, 1.15%)</title><rect x="620.0" y="547.0" width="13.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="623.0" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (12,279 samples, 2.79%)</title><rect x="633.5" y="547.0" width="33.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="636.5" y="558.0">on..</text>
</g>
<g>
<title>byte[] (5,619 samples, 1.28%)</title><rect x="633.5" y="531.0" width="15.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="636.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (3,553 samples, 0.81%)</title><rect x="648.6" y="531.0" width="9.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="651.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (3,107 samples, 0.71%)</title><rect x="658.1" y="531.0" width="8.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="661.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask$RunnableExecuteAction.exec (26,407 samples, 6.01%)</title><rect x="666.5" y="771.0" width="70.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="669.5" y="782.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$315/563922571.run (6,634 samples, 1.51%)</title><rect x="666.5" y="755.0" width="17.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="669.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (6,634 samples, 1.51%)</title><rect x="666.5" y="739.0" width="17.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="669.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (6,634 samples, 1.51%)</title><rect x="666.5" y="723.0" width="17.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="669.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (6,634 samples, 1.51%)</title><rect x="666.5" y="707.0" width="17.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="669.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6,634 samples, 1.51%)</title><rect x="666.5" y="691.0" width="17.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="669.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6,634 samples, 1.51%)</title><rect x="666.5" y="675.0" width="17.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6,634 samples, 1.51%)</title><rect x="666.5" y="659.0" width="17.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="669.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6,634 samples, 1.51%)</title><rect x="666.5" y="643.0" width="17.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6,634 samples, 1.51%)</title><rect x="666.5" y="627.0" width="17.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="669.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6,634 samples, 1.51%)</title><rect x="666.5" y="611.0" width="17.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="669.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (6,634 samples, 1.51%)</title><rect x="666.5" y="595.0" width="17.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="669.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (6,095 samples, 1.39%)</title><rect x="666.5" y="579.0" width="16.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="669.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (492 samples, 0.11%)</title><rect x="666.5" y="563.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="669.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (492 samples, 0.11%)</title><rect x="666.5" y="547.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$318/1945659175.get$Lambda (105 samples, 0.02%)</title><rect x="666.5" y="531.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="669.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$318 (105 samples, 0.02%)</title><rect x="666.5" y="515.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="669.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$328/1701423575.get$Lambda (210 samples, 0.05%)</title><rect x="666.7" y="531.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$328 (210 samples, 0.05%)</title><rect x="666.7" y="515.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="669.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$329/455126852.get$Lambda (177 samples, 0.04%)</title><rect x="667.3" y="531.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="670.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$329 (177 samples, 0.04%)</title><rect x="667.3" y="515.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="670.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (5,603 samples, 1.27%)</title><rect x="667.8" y="563.0" width="15.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (230 samples, 0.05%)</title><rect x="667.8" y="547.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="670.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5,373 samples, 1.22%)</title><rect x="668.4" y="547.0" width="14.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="671.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (5,373 samples, 1.22%)</title><rect x="668.4" y="531.0" width="14.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="671.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5,373 samples, 1.22%)</title><rect x="668.4" y="515.0" width="14.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="671.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (846 samples, 0.19%)</title><rect x="668.4" y="499.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="671.4" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (309 samples, 0.07%)</title><rect x="668.4" y="483.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="671.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$324/539627982.apply (534 samples, 0.12%)</title><rect x="669.2" y="483.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (534 samples, 0.12%)</title><rect x="669.2" y="467.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="672.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (534 samples, 0.12%)</title><rect x="669.2" y="451.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="672.2" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (102 samples, 0.02%)</title><rect x="669.2" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="672.2" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (102 samples, 0.02%)</title><rect x="669.2" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="672.2" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (102 samples, 0.02%)</title><rect x="669.2" y="403.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="672.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (432 samples, 0.10%)</title><rect x="669.5" y="435.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="672.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (351 samples, 0.08%)</title><rect x="669.7" y="419.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="672.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (351 samples, 0.08%)</title><rect x="669.7" y="403.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="672.7" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (201 samples, 0.05%)</title><rect x="669.7" y="387.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="672.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (150 samples, 0.03%)</title><rect x="670.3" y="387.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="673.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (150 samples, 0.03%)</title><rect x="670.3" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="673.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (150 samples, 0.03%)</title><rect x="670.3" y="355.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="673.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (4,527 samples, 1.03%)</title><rect x="670.7" y="499.0" width="12.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4,527 samples, 1.03%)</title><rect x="670.7" y="483.0" width="12.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="673.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$297/1826637317.apply (4,527 samples, 1.03%)</title><rect x="670.7" y="467.0" width="12.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="673.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (4,527 samples, 1.03%)</title><rect x="670.7" y="451.0" width="12.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="673.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (4,527 samples, 1.03%)</title><rect x="670.7" y="435.0" width="12.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="673.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$179/1990518240.apply (4,527 samples, 1.03%)</title><rect x="670.7" y="419.0" width="12.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="673.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (4,527 samples, 1.03%)</title><rect x="670.7" y="403.0" width="12.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="673.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (336 samples, 0.08%)</title><rect x="670.9" y="387.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="673.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (336 samples, 0.08%)</title><rect x="670.9" y="371.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="673.9" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (174 samples, 0.04%)</title><rect x="670.9" y="355.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="673.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (162 samples, 0.04%)</title><rect x="671.3" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="674.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (162 samples, 0.04%)</title><rect x="671.3" y="339.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="674.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (162 samples, 0.04%)</title><rect x="671.3" y="323.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="674.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (415 samples, 0.09%)</title><rect x="671.8" y="387.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="674.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (339 samples, 0.08%)</title><rect x="672.0" y="371.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="675.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (339 samples, 0.08%)</title><rect x="672.0" y="355.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="675.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (190 samples, 0.04%)</title><rect x="672.0" y="339.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="675.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (149 samples, 0.03%)</title><rect x="672.5" y="339.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="675.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (149 samples, 0.03%)</title><rect x="672.5" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="675.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (149 samples, 0.03%)</title><rect x="672.5" y="307.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="675.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (3,705 samples, 0.84%)</title><rect x="672.9" y="387.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="675.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (140 samples, 0.03%)</title><rect x="672.9" y="371.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (140 samples, 0.03%)</title><rect x="672.9" y="355.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="675.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (1,354 samples, 0.31%)</title><rect x="673.3" y="371.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="676.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (1,354 samples, 0.31%)</title><rect x="673.3" y="355.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="676.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (1,354 samples, 0.31%)</title><rect x="673.3" y="339.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$319/1083167421.accept (483 samples, 0.11%)</title><rect x="673.3" y="323.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="676.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (483 samples, 0.11%)</title><rect x="673.3" y="307.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="676.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (483 samples, 0.11%)</title><rect x="673.3" y="291.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (122 samples, 0.03%)</title><rect x="673.3" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="676.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (122 samples, 0.03%)</title><rect x="673.3" y="259.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$322/829561707.get$Lambda (122 samples, 0.03%)</title><rect x="673.3" y="243.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="676.3" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$322 (122 samples, 0.03%)</title><rect x="673.3" y="227.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="676.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (361 samples, 0.08%)</title><rect x="673.6" y="275.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="676.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (361 samples, 0.08%)</title><rect x="673.6" y="259.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.6" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (218 samples, 0.05%)</title><rect x="673.6" y="243.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="676.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (143 samples, 0.03%)</title><rect x="674.2" y="243.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (143 samples, 0.03%)</title><rect x="674.2" y="227.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="677.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (143 samples, 0.03%)</title><rect x="674.2" y="211.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="677.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$323/2084610022.accept (556 samples, 0.13%)</title><rect x="674.6" y="323.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (556 samples, 0.13%)</title><rect x="674.6" y="307.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="677.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (556 samples, 0.13%)</title><rect x="674.6" y="291.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="677.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (556 samples, 0.13%)</title><rect x="674.6" y="275.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="677.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (556 samples, 0.13%)</title><rect x="674.6" y="259.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (556 samples, 0.13%)</title><rect x="674.6" y="243.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="677.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (556 samples, 0.13%)</title><rect x="674.6" y="227.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="677.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (556 samples, 0.13%)</title><rect x="674.6" y="211.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (556 samples, 0.13%)</title><rect x="674.6" y="195.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="677.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (556 samples, 0.13%)</title><rect x="674.6" y="179.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (217 samples, 0.05%)</title><rect x="674.6" y="163.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="677.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (217 samples, 0.05%)</title><rect x="674.6" y="147.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.6" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (121 samples, 0.03%)</title><rect x="674.6" y="131.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="677.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (96 samples, 0.02%)</title><rect x="674.9" y="131.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (96 samples, 0.02%)</title><rect x="674.9" y="115.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="677.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (96 samples, 0.02%)</title><rect x="674.9" y="99.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (96 samples, 0.02%)</title><rect x="674.9" y="83.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.9" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (96 samples, 0.02%)</title><rect x="674.9" y="67.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="677.9" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (96 samples, 0.02%)</title><rect x="674.9" y="51.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="677.9" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (339 samples, 0.08%)</title><rect x="675.1" y="163.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="678.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (339 samples, 0.08%)</title><rect x="675.1" y="147.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="678.1" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (124 samples, 0.03%)</title><rect x="675.1" y="131.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.1" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (124 samples, 0.03%)</title><rect x="675.1" y="115.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="678.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (215 samples, 0.05%)</title><rect x="675.5" y="131.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="678.5" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (99 samples, 0.02%)</title><rect x="675.5" y="115.0" width="0.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="678.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (116 samples, 0.03%)</title><rect x="675.7" y="115.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="678.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (116 samples, 0.03%)</title><rect x="675.7" y="99.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="678.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (116 samples, 0.03%)</title><rect x="675.7" y="83.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="678.7" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (116 samples, 0.03%)</title><rect x="675.7" y="67.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="678.7" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (116 samples, 0.03%)</title><rect x="675.7" y="51.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="678.7" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (116 samples, 0.03%)</title><rect x="675.7" y="35.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="678.7" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (315 samples, 0.07%)</title><rect x="676.0" y="323.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (315 samples, 0.07%)</title><rect x="676.0" y="307.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="679.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (315 samples, 0.07%)</title><rect x="676.0" y="291.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="679.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (2,211 samples, 0.50%)</title><rect x="676.9" y="371.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="679.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (188 samples, 0.04%)</title><rect x="676.9" y="355.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="679.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (145 samples, 0.03%)</title><rect x="677.4" y="355.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="680.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (145 samples, 0.03%)</title><rect x="677.4" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (145 samples, 0.03%)</title><rect x="677.4" y="323.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="680.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (1,878 samples, 0.43%)</title><rect x="677.8" y="355.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (134 samples, 0.03%)</title><rect x="677.8" y="339.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="680.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (1,030 samples, 0.23%)</title><rect x="678.1" y="339.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="681.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (157 samples, 0.04%)</title><rect x="678.1" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="681.1" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (157 samples, 0.04%)</title><rect x="678.1" y="307.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="681.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (184 samples, 0.04%)</title><rect x="678.6" y="323.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="681.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (689 samples, 0.16%)</title><rect x="679.1" y="323.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="682.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (151 samples, 0.03%)</title><rect x="679.5" y="307.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="682.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (136 samples, 0.03%)</title><rect x="679.9" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="682.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (136 samples, 0.03%)</title><rect x="679.9" y="291.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="682.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (247 samples, 0.06%)</title><rect x="680.2" y="307.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="683.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (714 samples, 0.16%)</title><rect x="680.9" y="339.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="683.9" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (121 samples, 0.03%)</title><rect x="680.9" y="323.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="683.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (347 samples, 0.08%)</title><rect x="681.2" y="323.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.2" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (237 samples, 0.05%)</title><rect x="681.2" y="307.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="684.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (110 samples, 0.03%)</title><rect x="681.9" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.9" y="318.0"></text>
</g>
<g>
<title>byte[] (110 samples, 0.03%)</title><rect x="681.9" y="291.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="684.9" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (246 samples, 0.06%)</title><rect x="682.2" y="323.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.2" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (246 samples, 0.06%)</title><rect x="682.2" y="307.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.2" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (246 samples, 0.06%)</title><rect x="682.2" y="291.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.2" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (246 samples, 0.06%)</title><rect x="682.2" y="275.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="685.2" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (246 samples, 0.06%)</title><rect x="682.2" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="685.2" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (246 samples, 0.06%)</title><rect x="682.2" y="243.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="685.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (539 samples, 0.12%)</title><rect x="682.8" y="579.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (539 samples, 0.12%)</title><rect x="682.8" y="563.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (539 samples, 0.12%)</title><rect x="682.8" y="547.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (539 samples, 0.12%)</title><rect x="682.8" y="531.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (539 samples, 0.12%)</title><rect x="682.8" y="515.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.8" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (539 samples, 0.12%)</title><rect x="682.8" y="499.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.8" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (242 samples, 0.06%)</title><rect x="682.8" y="483.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="685.8" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (242 samples, 0.06%)</title><rect x="682.8" y="467.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="685.8" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (297 samples, 0.07%)</title><rect x="683.5" y="483.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="686.5" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (297 samples, 0.07%)</title><rect x="683.5" y="467.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="686.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (19,773 samples, 4.50%)</title><rect x="684.3" y="755.0" width="53.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="687.3" y="766.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (19,773 samples, 4.50%)</title><rect x="684.3" y="739.0" width="53.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.3" y="750.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (16,690 samples, 3.80%)</title><rect x="684.3" y="723.0" width="44.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.3" y="734.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$245/1308623503.run (16,690 samples, 3.80%)</title><rect x="684.3" y="707.0" width="44.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="687.3" y="718.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (16,690 samples, 3.80%)</title><rect x="684.3" y="691.0" width="44.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.3" y="702.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (334 samples, 0.08%)</title><rect x="684.3" y="675.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (334 samples, 0.08%)</title><rect x="684.3" y="659.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="687.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (334 samples, 0.08%)</title><rect x="684.3" y="643.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (334 samples, 0.08%)</title><rect x="684.3" y="627.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="687.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/112619572.linkToTargetMethod (203 samples, 0.05%)</title><rect x="684.3" y="611.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="687.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/827084938.invoke (203 samples, 0.05%)</title><rect x="684.3" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="687.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (203 samples, 0.05%)</title><rect x="684.3" y="579.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="687.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (203 samples, 0.05%)</title><rect x="684.3" y="563.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="687.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (203 samples, 0.05%)</title><rect x="684.3" y="547.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="687.3" y="558.0"></text>
</g>
<g>
<title>byte[] (203 samples, 0.05%)</title><rect x="684.3" y="531.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="687.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (131 samples, 0.03%)</title><rect x="684.8" y="611.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (131 samples, 0.03%)</title><rect x="684.8" y="595.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="687.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (131 samples, 0.03%)</title><rect x="684.8" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="687.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$316/671506886.get$Lambda (131 samples, 0.03%)</title><rect x="684.8" y="563.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="687.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$316 (131 samples, 0.03%)</title><rect x="684.8" y="547.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="687.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (16,356 samples, 3.72%)</title><rect x="685.2" y="675.0" width="43.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="688.2" y="686.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (16,356 samples, 3.72%)</title><rect x="685.2" y="659.0" width="43.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="688.2" y="670.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (16,356 samples, 3.72%)</title><rect x="685.2" y="643.0" width="43.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="688.2" y="654.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (16,356 samples, 3.72%)</title><rect x="685.2" y="627.0" width="43.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="688.2" y="638.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (7,826 samples, 1.78%)</title><rect x="685.2" y="611.0" width="21.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="688.2" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7,826 samples, 1.78%)</title><rect x="685.2" y="595.0" width="21.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="688.2" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (7,826 samples, 1.78%)</title><rect x="685.2" y="579.0" width="21.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="688.2" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7,826 samples, 1.78%)</title><rect x="685.2" y="563.0" width="21.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="688.2" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7,826 samples, 1.78%)</title><rect x="685.2" y="547.0" width="21.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="688.2" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (7,826 samples, 1.78%)</title><rect x="685.2" y="531.0" width="21.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="688.2" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (7,826 samples, 1.78%)</title><rect x="685.2" y="515.0" width="21.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="688.2" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (7,605 samples, 1.73%)</title><rect x="685.2" y="499.0" width="20.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="688.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7,605 samples, 1.73%)</title><rect x="685.2" y="483.0" width="20.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="688.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (7,449 samples, 1.69%)</title><rect x="685.2" y="467.0" width="20.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="688.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (152 samples, 0.03%)</title><rect x="685.2" y="451.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="688.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$325/504247628.apply (161 samples, 0.04%)</title><rect x="685.6" y="451.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="688.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (161 samples, 0.04%)</title><rect x="685.6" y="435.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="688.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (161 samples, 0.04%)</title><rect x="685.6" y="419.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="688.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (161 samples, 0.04%)</title><rect x="685.6" y="403.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="688.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (161 samples, 0.04%)</title><rect x="685.6" y="387.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="688.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$155/617686721.apply (6,805 samples, 1.55%)</title><rect x="686.0" y="451.0" width="18.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="689.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (6,805 samples, 1.55%)</title><rect x="686.0" y="435.0" width="18.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="689.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (97 samples, 0.02%)</title><rect x="686.0" y="419.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="689.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (97 samples, 0.02%)</title><rect x="686.0" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="689.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$350/693553213.get$Lambda (97 samples, 0.02%)</title><rect x="686.0" y="387.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$350 (97 samples, 0.02%)</title><rect x="686.0" y="371.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="689.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (352 samples, 0.08%)</title><rect x="686.3" y="419.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (352 samples, 0.08%)</title><rect x="686.3" y="403.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="689.3" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (210 samples, 0.05%)</title><rect x="686.3" y="387.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="689.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (142 samples, 0.03%)</title><rect x="686.8" y="387.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="689.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (142 samples, 0.03%)</title><rect x="686.8" y="371.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (142 samples, 0.03%)</title><rect x="686.8" y="355.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="689.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (6,356 samples, 1.45%)</title><rect x="687.2" y="419.0" width="17.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="690.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (348 samples, 0.08%)</title><rect x="687.4" y="403.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (348 samples, 0.08%)</title><rect x="687.4" y="387.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="690.4" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (196 samples, 0.04%)</title><rect x="687.4" y="371.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="690.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (152 samples, 0.03%)</title><rect x="687.9" y="371.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (152 samples, 0.03%)</title><rect x="687.9" y="355.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="690.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (152 samples, 0.03%)</title><rect x="687.9" y="339.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="690.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (5,937 samples, 1.35%)</title><rect x="688.3" y="403.0" width="16.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="691.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (5,414 samples, 1.23%)</title><rect x="688.3" y="387.0" width="14.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (162 samples, 0.04%)</title><rect x="688.3" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (162 samples, 0.04%)</title><rect x="688.3" y="355.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2069731299.linkToTargetMethod (179 samples, 0.04%)</title><rect x="688.8" y="371.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="691.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1320254999.invokeStatic (179 samples, 0.04%)</title><rect x="688.8" y="355.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$340/27388396.get$Lambda (179 samples, 0.04%)</title><rect x="688.8" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$340 (179 samples, 0.04%)</title><rect x="688.8" y="323.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="691.8" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (1,074 samples, 0.24%)</title><rect x="689.3" y="371.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="692.3" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (438 samples, 0.10%)</title><rect x="689.3" y="355.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="692.3" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (167 samples, 0.04%)</title><rect x="689.3" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="692.3" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (167 samples, 0.04%)</title><rect x="689.3" y="323.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="692.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (271 samples, 0.06%)</title><rect x="689.7" y="339.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="692.7" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (271 samples, 0.06%)</title><rect x="689.7" y="323.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="692.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (326 samples, 0.07%)</title><rect x="690.4" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="693.4" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (326 samples, 0.07%)</title><rect x="690.4" y="339.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="693.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (326 samples, 0.07%)</title><rect x="690.4" y="323.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="693.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (96 samples, 0.02%)</title><rect x="690.4" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="693.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (96 samples, 0.02%)</title><rect x="690.4" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="693.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (96 samples, 0.02%)</title><rect x="690.4" y="275.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.4" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (96 samples, 0.02%)</title><rect x="690.4" y="259.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="693.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$337/558830754.get (120 samples, 0.03%)</title><rect x="690.7" y="307.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="693.7" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (120 samples, 0.03%)</title><rect x="690.7" y="291.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="693.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (110 samples, 0.03%)</title><rect x="691.0" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="694.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (110 samples, 0.03%)</title><rect x="691.0" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="694.0" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (110 samples, 0.03%)</title><rect x="691.0" y="275.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="694.0" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (110 samples, 0.03%)</title><rect x="691.0" y="259.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="694.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (310 samples, 0.07%)</title><rect x="691.3" y="355.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="694.3" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (310 samples, 0.07%)</title><rect x="691.3" y="339.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="694.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (705 samples, 0.16%)</title><rect x="692.1" y="371.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (363 samples, 0.08%)</title><rect x="692.1" y="355.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (193 samples, 0.04%)</title><rect x="692.1" y="339.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="695.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (170 samples, 0.04%)</title><rect x="692.7" y="339.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (170 samples, 0.04%)</title><rect x="692.7" y="323.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="695.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (170 samples, 0.04%)</title><rect x="692.7" y="307.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="695.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (342 samples, 0.08%)</title><rect x="693.1" y="355.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="696.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (342 samples, 0.08%)</title><rect x="693.1" y="339.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="696.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (172 samples, 0.04%)</title><rect x="693.1" y="323.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="696.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (170 samples, 0.04%)</title><rect x="693.6" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="696.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (170 samples, 0.04%)</title><rect x="693.6" y="307.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="696.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (170 samples, 0.04%)</title><rect x="693.6" y="291.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="696.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (130 samples, 0.03%)</title><rect x="694.0" y="371.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="697.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (147 samples, 0.03%)</title><rect x="694.4" y="371.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="697.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (142 samples, 0.03%)</title><rect x="694.8" y="371.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="697.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,794 samples, 0.64%)</title><rect x="695.4" y="371.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$340/27388396.run (2,794 samples, 0.64%)</title><rect x="695.4" y="355.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="698.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (2,794 samples, 0.64%)</title><rect x="695.4" y="339.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="698.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (359 samples, 0.08%)</title><rect x="695.4" y="323.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="698.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (359 samples, 0.08%)</title><rect x="695.4" y="307.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="698.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$342/101679260.get$Lambda (115 samples, 0.03%)</title><rect x="695.6" y="291.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="698.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$342 (115 samples, 0.03%)</title><rect x="695.6" y="275.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="698.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$345/1091668340.get$Lambda (163 samples, 0.04%)</title><rect x="695.9" y="291.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$345 (163 samples, 0.04%)</title><rect x="695.9" y="275.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="698.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (335 samples, 0.08%)</title><rect x="696.3" y="323.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="699.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (335 samples, 0.08%)</title><rect x="696.3" y="307.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (178 samples, 0.04%)</title><rect x="696.3" y="291.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="699.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (157 samples, 0.04%)</title><rect x="696.8" y="291.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (157 samples, 0.04%)</title><rect x="696.8" y="275.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="699.8" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (157 samples, 0.04%)</title><rect x="696.8" y="259.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="699.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (200 samples, 0.05%)</title><rect x="697.2" y="323.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="700.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (132 samples, 0.03%)</title><rect x="697.8" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (132 samples, 0.03%)</title><rect x="697.8" y="307.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="700.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (440 samples, 0.10%)</title><rect x="698.1" y="323.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="701.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (440 samples, 0.10%)</title><rect x="698.1" y="307.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="701.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (97 samples, 0.02%)</title><rect x="698.1" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="701.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (97 samples, 0.02%)</title><rect x="698.1" y="275.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="701.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$346/1714193454.get$Lambda (97 samples, 0.02%)</title><rect x="698.1" y="259.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$346 (97 samples, 0.02%)</title><rect x="698.1" y="243.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="701.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (343 samples, 0.08%)</title><rect x="698.4" y="291.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (343 samples, 0.08%)</title><rect x="698.4" y="275.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="701.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (343 samples, 0.08%)</title><rect x="698.4" y="259.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.4" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (197 samples, 0.04%)</title><rect x="698.4" y="243.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="701.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (146 samples, 0.03%)</title><rect x="698.9" y="243.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="701.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (146 samples, 0.03%)</title><rect x="698.9" y="227.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="701.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (146 samples, 0.03%)</title><rect x="698.9" y="211.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="701.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (461 samples, 0.10%)</title><rect x="699.3" y="323.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="702.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (461 samples, 0.10%)</title><rect x="699.3" y="307.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="702.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1603198149.invoke (461 samples, 0.10%)</title><rect x="699.3" y="291.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (461 samples, 0.10%)</title><rect x="699.3" y="275.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (110 samples, 0.03%)</title><rect x="699.3" y="259.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.3" y="270.0"></text>
</g>
<g>
<title>java.lang.String (110 samples, 0.03%)</title><rect x="699.3" y="243.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="702.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (351 samples, 0.08%)</title><rect x="699.6" y="259.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (351 samples, 0.08%)</title><rect x="699.6" y="243.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.6" y="254.0"></text>
</g>
<g>
<title>byte[] (351 samples, 0.08%)</title><rect x="699.6" y="227.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="702.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (867 samples, 0.20%)</title><rect x="700.5" y="323.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="703.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (264 samples, 0.06%)</title><rect x="700.5" y="307.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="703.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (603 samples, 0.14%)</title><rect x="701.3" y="307.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="704.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (603 samples, 0.14%)</title><rect x="701.3" y="291.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="704.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1603198149.invoke (603 samples, 0.14%)</title><rect x="701.3" y="275.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="704.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (603 samples, 0.14%)</title><rect x="701.3" y="259.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="704.3" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (109 samples, 0.02%)</title><rect x="701.3" y="243.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="704.3" y="254.0"></text>
</g>
<g>
<title>java.lang.String (109 samples, 0.02%)</title><rect x="701.3" y="227.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="704.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (494 samples, 0.11%)</title><rect x="701.5" y="243.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="704.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (494 samples, 0.11%)</title><rect x="701.5" y="227.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.5" y="238.0"></text>
</g>
<g>
<title>byte[] (493 samples, 0.11%)</title><rect x="701.5" y="211.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="704.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$142/932006881.apply (523 samples, 0.12%)</title><rect x="702.9" y="387.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="705.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/UpsertEntityRequestProcessor.obtainRemoteResult (523 samples, 0.12%)</title><rect x="702.9" y="371.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="705.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.replacing (437 samples, 0.10%)</title><rect x="702.9" y="355.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$NullSubscriber (113 samples, 0.03%)</title><rect x="703.1" y="339.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="706.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (251 samples, 0.06%)</title><rect x="703.4" y="339.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="706.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (158 samples, 0.04%)</title><rect x="703.6" y="323.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="706.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$298/309738644.apply (331 samples, 0.08%)</title><rect x="704.3" y="451.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="707.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (331 samples, 0.08%)</title><rect x="704.3" y="435.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="707.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (142 samples, 0.03%)</title><rect x="704.3" y="419.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.3" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (142 samples, 0.03%)</title><rect x="704.3" y="403.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.3" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (142 samples, 0.03%)</title><rect x="704.3" y="387.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="707.3" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (142 samples, 0.03%)</title><rect x="704.3" y="371.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="707.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (189 samples, 0.04%)</title><rect x="704.7" y="419.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (189 samples, 0.04%)</title><rect x="704.7" y="403.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="707.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (156 samples, 0.04%)</title><rect x="705.2" y="467.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="708.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (156 samples, 0.04%)</title><rect x="705.2" y="451.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$299/2093519025.apply (156 samples, 0.04%)</title><rect x="705.2" y="435.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (156 samples, 0.04%)</title><rect x="705.2" y="419.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="708.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (156 samples, 0.04%)</title><rect x="705.2" y="403.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (156 samples, 0.04%)</title><rect x="705.2" y="387.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="708.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$330/1990884218.apply (221 samples, 0.05%)</title><rect x="705.6" y="499.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="708.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (221 samples, 0.05%)</title><rect x="705.6" y="483.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="708.6" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (221 samples, 0.05%)</title><rect x="705.6" y="467.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="708.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (8,530 samples, 1.94%)</title><rect x="706.2" y="611.0" width="22.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="709.2" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (527 samples, 0.12%)</title><rect x="706.2" y="595.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (527 samples, 0.12%)</title><rect x="706.2" y="579.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="709.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (527 samples, 0.12%)</title><rect x="706.2" y="563.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.2" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (527 samples, 0.12%)</title><rect x="706.2" y="547.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="709.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (527 samples, 0.12%)</title><rect x="706.2" y="531.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="709.2" y="542.0"></text>
</g>
<g>
<title>byte[] (527 samples, 0.12%)</title><rect x="706.2" y="515.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="709.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (347 samples, 0.08%)</title><rect x="707.6" y="595.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="710.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (347 samples, 0.08%)</title><rect x="707.6" y="579.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="710.6" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (347 samples, 0.08%)</title><rect x="707.6" y="563.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="710.6" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (347 samples, 0.08%)</title><rect x="707.6" y="547.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="710.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (347 samples, 0.08%)</title><rect x="707.6" y="531.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="710.6" y="542.0"></text>
</g>
<g>
<title>byte[] (347 samples, 0.08%)</title><rect x="707.6" y="515.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="710.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (687 samples, 0.16%)</title><rect x="708.5" y="595.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="711.5" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (131 samples, 0.03%)</title><rect x="708.5" y="579.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="711.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (106 samples, 0.02%)</title><rect x="708.9" y="579.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="711.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (106 samples, 0.02%)</title><rect x="708.9" y="563.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="711.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (106 samples, 0.02%)</title><rect x="708.9" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.9" y="558.0"></text>
</g>
<g>
<title>byte[] (106 samples, 0.02%)</title><rect x="708.9" y="531.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="711.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (147 samples, 0.03%)</title><rect x="709.2" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="712.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (147 samples, 0.03%)</title><rect x="709.2" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.2" y="574.0"></text>
</g>
<g>
<title>byte[] (147 samples, 0.03%)</title><rect x="709.2" y="547.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="712.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (303 samples, 0.07%)</title><rect x="709.5" y="579.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="712.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (303 samples, 0.07%)</title><rect x="709.5" y="563.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (108 samples, 0.02%)</title><rect x="709.5" y="547.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="712.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (195 samples, 0.04%)</title><rect x="709.8" y="547.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="712.8" y="558.0"></text>
</g>
<g>
<title>byte[] (195 samples, 0.04%)</title><rect x="709.8" y="531.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="712.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (2,425 samples, 0.55%)</title><rect x="710.4" y="595.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.4" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,425 samples, 0.55%)</title><rect x="710.4" y="579.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.4" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,425 samples, 0.55%)</title><rect x="710.4" y="563.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="713.4" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (114 samples, 0.03%)</title><rect x="710.6" y="547.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="713.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (245 samples, 0.06%)</title><rect x="710.9" y="547.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="713.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (143 samples, 0.03%)</title><rect x="711.8" y="547.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (143 samples, 0.03%)</title><rect x="711.8" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="714.8" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1450244364.get$Lambda (143 samples, 0.03%)</title><rect x="711.8" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="714.8" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$134 (143 samples, 0.03%)</title><rect x="711.8" y="499.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="714.8" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (147 samples, 0.03%)</title><rect x="712.2" y="547.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="715.2" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (147 samples, 0.03%)</title><rect x="712.2" y="531.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="715.2" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (1,361 samples, 0.31%)</title><rect x="712.6" y="547.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="715.6" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1450244364.accept (1,361 samples, 0.31%)</title><rect x="712.6" y="531.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="715.6" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,361 samples, 0.31%)</title><rect x="712.6" y="515.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="715.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (217 samples, 0.05%)</title><rect x="712.6" y="499.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (217 samples, 0.05%)</title><rect x="712.6" y="483.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="715.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/370512596.get$Lambda (217 samples, 0.05%)</title><rect x="712.6" y="467.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="715.6" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$136 (217 samples, 0.05%)</title><rect x="712.6" y="451.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="715.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (290 samples, 0.07%)</title><rect x="713.2" y="499.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="716.2" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/370512596.accept (290 samples, 0.07%)</title><rect x="713.2" y="483.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="716.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (290 samples, 0.07%)</title><rect x="713.2" y="467.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="716.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (290 samples, 0.07%)</title><rect x="713.2" y="451.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="716.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (290 samples, 0.07%)</title><rect x="713.2" y="435.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (290 samples, 0.07%)</title><rect x="713.2" y="419.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="716.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (290 samples, 0.07%)</title><rect x="713.2" y="403.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="716.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (290 samples, 0.07%)</title><rect x="713.2" y="387.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="716.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (290 samples, 0.07%)</title><rect x="713.2" y="371.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="716.2" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (467 samples, 0.11%)</title><rect x="713.9" y="499.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="716.9" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (467 samples, 0.11%)</title><rect x="713.9" y="483.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="716.9" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (234 samples, 0.05%)</title><rect x="713.9" y="467.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="716.9" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (234 samples, 0.05%)</title><rect x="713.9" y="451.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="716.9" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (234 samples, 0.05%)</title><rect x="713.9" y="435.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="716.9" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (233 samples, 0.05%)</title><rect x="714.6" y="467.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.6" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (233 samples, 0.05%)</title><rect x="714.6" y="451.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="717.6" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (387 samples, 0.09%)</title><rect x="715.2" y="499.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="718.2" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (387 samples, 0.09%)</title><rect x="715.2" y="483.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="718.2" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (242 samples, 0.06%)</title><rect x="716.2" y="547.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="719.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (242 samples, 0.06%)</title><rect x="716.2" y="531.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="719.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (4,544 samples, 1.03%)</title><rect x="716.9" y="595.0" width="12.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.9" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (231 samples, 0.05%)</title><rect x="716.9" y="579.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="719.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (274 samples, 0.06%)</title><rect x="717.5" y="579.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.5" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (274 samples, 0.06%)</title><rect x="717.5" y="563.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.5" y="574.0"></text>
</g>
<g>
<title>byte[] (274 samples, 0.06%)</title><rect x="717.5" y="547.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="720.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (589 samples, 0.13%)</title><rect x="718.2" y="579.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="721.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (589 samples, 0.13%)</title><rect x="718.2" y="563.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="721.2" y="574.0"></text>
</g>
<g>
<title>java.lang.String (215 samples, 0.05%)</title><rect x="718.2" y="547.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="721.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (374 samples, 0.09%)</title><rect x="718.8" y="547.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="721.8" y="558.0"></text>
</g>
<g>
<title>byte[] (374 samples, 0.09%)</title><rect x="718.8" y="531.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="721.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (3,450 samples, 0.78%)</title><rect x="719.8" y="579.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,027 samples, 0.23%)</title><rect x="719.8" y="563.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="722.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,027 samples, 0.23%)</title><rect x="719.8" y="547.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.8" y="558.0"></text>
</g>
<g>
<title>java.lang.String (448 samples, 0.10%)</title><rect x="719.8" y="531.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="722.8" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (579 samples, 0.13%)</title><rect x="721.0" y="531.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="724.0" y="542.0"></text>
</g>
<g>
<title>byte[] (579 samples, 0.13%)</title><rect x="721.0" y="515.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="724.0" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (526 samples, 0.12%)</title><rect x="722.6" y="563.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="725.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (526 samples, 0.12%)</title><rect x="722.6" y="547.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.6" y="558.0"></text>
</g>
<g>
<title>byte[] (272 samples, 0.06%)</title><rect x="722.6" y="531.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="725.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (254 samples, 0.06%)</title><rect x="723.3" y="531.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="726.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (453 samples, 0.10%)</title><rect x="724.0" y="563.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="727.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (453 samples, 0.10%)</title><rect x="724.0" y="547.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="727.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (453 samples, 0.10%)</title><rect x="724.0" y="531.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="727.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String (182 samples, 0.04%)</title><rect x="724.0" y="515.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="727.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (271 samples, 0.06%)</title><rect x="724.5" y="515.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="727.5" y="526.0"></text>
</g>
<g>
<title>byte[] (271 samples, 0.06%)</title><rect x="724.5" y="499.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="727.5" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (504 samples, 0.11%)</title><rect x="725.2" y="563.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="728.2" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (504 samples, 0.11%)</title><rect x="725.2" y="547.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="728.2" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (504 samples, 0.11%)</title><rect x="725.2" y="531.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="728.2" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (504 samples, 0.11%)</title><rect x="725.2" y="515.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="728.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (504 samples, 0.11%)</title><rect x="725.2" y="499.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.2" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (504 samples, 0.11%)</title><rect x="725.2" y="483.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="728.2" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (940 samples, 0.21%)</title><rect x="726.5" y="563.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="729.5" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (306 samples, 0.07%)</title><rect x="726.5" y="547.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="729.5" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (306 samples, 0.07%)</title><rect x="726.5" y="531.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="729.5" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (394 samples, 0.09%)</title><rect x="727.4" y="547.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="730.4" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (394 samples, 0.09%)</title><rect x="727.4" y="531.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="730.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$333/1540751663.apply (240 samples, 0.05%)</title><rect x="728.4" y="547.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="731.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (240 samples, 0.05%)</title><rect x="728.4" y="531.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.4" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (240 samples, 0.05%)</title><rect x="728.4" y="515.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="731.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (3,083 samples, 0.70%)</title><rect x="729.1" y="723.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="732.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3,083 samples, 0.70%)</title><rect x="729.1" y="707.0" width="8.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="732.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3,083 samples, 0.70%)</title><rect x="729.1" y="691.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="732.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$245/1308623503.run (3,083 samples, 0.70%)</title><rect x="729.1" y="675.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3,083 samples, 0.70%)</title><rect x="729.1" y="659.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="732.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3,055 samples, 0.69%)</title><rect x="729.1" y="643.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="732.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (199 samples, 0.05%)</title><rect x="729.1" y="627.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (199 samples, 0.05%)</title><rect x="729.1" y="611.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="732.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$281/1262766137.get$Lambda (125 samples, 0.03%)</title><rect x="729.3" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="732.3" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$281 (125 samples, 0.03%)</title><rect x="729.3" y="579.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="732.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (146 samples, 0.03%)</title><rect x="729.6" y="627.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="732.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (174 samples, 0.04%)</title><rect x="730.0" y="627.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (174 samples, 0.04%)</title><rect x="730.0" y="611.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="733.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (2,536 samples, 0.58%)</title><rect x="730.5" y="627.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (2,536 samples, 0.58%)</title><rect x="730.5" y="611.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="733.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$341/817460875.run (2,197 samples, 0.50%)</title><rect x="730.5" y="595.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (2,197 samples, 0.50%)</title><rect x="730.5" y="579.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (2,197 samples, 0.50%)</title><rect x="730.5" y="563.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.5" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (644 samples, 0.15%)</title><rect x="730.5" y="547.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="733.5" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (455 samples, 0.10%)</title><rect x="730.5" y="531.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="733.5" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (179 samples, 0.04%)</title><rect x="730.5" y="515.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="733.5" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (179 samples, 0.04%)</title><rect x="730.5" y="499.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="733.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (276 samples, 0.06%)</title><rect x="730.9" y="515.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.9" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (276 samples, 0.06%)</title><rect x="730.9" y="499.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="733.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (189 samples, 0.04%)</title><rect x="731.7" y="531.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="734.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (189 samples, 0.04%)</title><rect x="731.7" y="515.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="734.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (189 samples, 0.04%)</title><rect x="731.7" y="499.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$107/434398524.get (110 samples, 0.03%)</title><rect x="731.7" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="734.7" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (110 samples, 0.03%)</title><rect x="731.7" y="467.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="734.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1,553 samples, 0.35%)</title><rect x="732.2" y="547.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="735.2" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (106 samples, 0.02%)</title><rect x="732.2" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="735.2" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (106 samples, 0.02%)</title><rect x="732.2" y="515.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="735.2" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (106 samples, 0.02%)</title><rect x="732.2" y="499.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="735.2" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (106 samples, 0.02%)</title><rect x="732.2" y="483.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="735.2" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (106 samples, 0.02%)</title><rect x="732.2" y="467.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="735.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1,447 samples, 0.33%)</title><rect x="732.5" y="531.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="735.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (545 samples, 0.12%)</title><rect x="732.5" y="515.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="735.5" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (116 samples, 0.03%)</title><rect x="732.5" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="735.5" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (116 samples, 0.03%)</title><rect x="732.5" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="735.5" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (116 samples, 0.03%)</title><rect x="732.5" y="467.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.5" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (116 samples, 0.03%)</title><rect x="732.5" y="451.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.5" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (116 samples, 0.03%)</title><rect x="732.5" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="735.5" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (116 samples, 0.03%)</title><rect x="732.5" y="419.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="735.5" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (144 samples, 0.03%)</title><rect x="732.8" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="735.8" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (144 samples, 0.03%)</title><rect x="732.8" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.8" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (144 samples, 0.03%)</title><rect x="732.8" y="467.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.8" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (144 samples, 0.03%)</title><rect x="732.8" y="451.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="735.8" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (144 samples, 0.03%)</title><rect x="732.8" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="735.8" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (144 samples, 0.03%)</title><rect x="732.8" y="419.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="735.8" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (116 samples, 0.03%)</title><rect x="733.2" y="499.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="736.2" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (116 samples, 0.03%)</title><rect x="733.2" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.2" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (116 samples, 0.03%)</title><rect x="733.2" y="467.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="736.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (165 samples, 0.04%)</title><rect x="733.5" y="499.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="736.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (377 samples, 0.09%)</title><rect x="733.9" y="515.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="736.9" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (119 samples, 0.03%)</title><rect x="733.9" y="499.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="736.9" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (119 samples, 0.03%)</title><rect x="733.9" y="483.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="736.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (119 samples, 0.03%)</title><rect x="733.9" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="736.9" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (119 samples, 0.03%)</title><rect x="733.9" y="451.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="736.9" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (112 samples, 0.03%)</title><rect x="734.3" y="499.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.3" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (112 samples, 0.03%)</title><rect x="734.3" y="483.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.3" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (112 samples, 0.03%)</title><rect x="734.3" y="467.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="737.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (146 samples, 0.03%)</title><rect x="734.6" y="499.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="737.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (146 samples, 0.03%)</title><rect x="734.6" y="483.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="737.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (525 samples, 0.12%)</title><rect x="734.9" y="515.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (105 samples, 0.02%)</title><rect x="734.9" y="499.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="737.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (420 samples, 0.10%)</title><rect x="735.2" y="499.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="738.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (141 samples, 0.03%)</title><rect x="735.2" y="483.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="738.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (141 samples, 0.03%)</title><rect x="735.2" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="738.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (141 samples, 0.03%)</title><rect x="735.2" y="451.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="738.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (141 samples, 0.03%)</title><rect x="735.2" y="435.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="738.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (279 samples, 0.06%)</title><rect x="735.6" y="483.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="738.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (279 samples, 0.06%)</title><rect x="735.6" y="467.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="738.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (196 samples, 0.04%)</title><rect x="735.6" y="451.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="738.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (339 samples, 0.08%)</title><rect x="736.4" y="595.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="739.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (339 samples, 0.08%)</title><rect x="736.4" y="579.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="739.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (339 samples, 0.08%)</title><rect x="736.4" y="563.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="739.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (339 samples, 0.08%)</title><rect x="736.4" y="547.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="739.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (339 samples, 0.08%)</title><rect x="736.4" y="531.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="739.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (339 samples, 0.08%)</title><rect x="736.4" y="515.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="739.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (339 samples, 0.08%)</title><rect x="736.4" y="499.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="739.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$347/1519127501.accept (339 samples, 0.08%)</title><rect x="736.4" y="483.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="739.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (339 samples, 0.08%)</title><rect x="736.4" y="467.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="739.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (339 samples, 0.08%)</title><rect x="736.4" y="451.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="739.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (339 samples, 0.08%)</title><rect x="736.4" y="435.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="739.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (339 samples, 0.08%)</title><rect x="736.4" y="419.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="739.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$350/693553213.apply (339 samples, 0.08%)</title><rect x="736.4" y="403.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="739.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (339 samples, 0.08%)</title><rect x="736.4" y="387.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="739.4" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (339 samples, 0.08%)</title><rect x="736.4" y="371.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="739.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (20,205 samples, 4.60%)</title><rect x="737.3" y="851.0" width="54.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.3" y="862.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (603 samples, 0.14%)</title><rect x="737.3" y="835.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.3" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (603 samples, 0.14%)</title><rect x="737.3" y="819.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="740.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$301/1605791417.get$Lambda (360 samples, 0.08%)</title><rect x="737.3" y="803.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.3" y="814.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$301 (360 samples, 0.08%)</title><rect x="737.3" y="787.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="740.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$305/988366657.get$Lambda (121 samples, 0.03%)</title><rect x="738.3" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="741.3" y="814.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$305 (121 samples, 0.03%)</title><rect x="738.3" y="787.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="741.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$308/669254937.get$Lambda (122 samples, 0.03%)</title><rect x="738.6" y="803.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="741.6" y="814.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$308 (122 samples, 0.03%)</title><rect x="738.6" y="787.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="741.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1943325854.linkToTargetMethod (501 samples, 0.11%)</title><rect x="739.0" y="835.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.0" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (501 samples, 0.11%)</title><rect x="739.0" y="819.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="742.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$303/187549931.get$Lambda (501 samples, 0.11%)</title><rect x="739.0" y="803.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="742.0" y="814.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$303 (501 samples, 0.11%)</title><rect x="739.0" y="787.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="742.0" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5,090 samples, 1.16%)</title><rect x="740.3" y="835.0" width="13.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="743.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$305/988366657.accept (4,242 samples, 0.96%)</title><rect x="740.3" y="819.0" width="11.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="743.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (4,242 samples, 0.96%)</title><rect x="740.3" y="803.0" width="11.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="743.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (4,242 samples, 0.96%)</title><rect x="740.3" y="787.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="743.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (4,242 samples, 0.96%)</title><rect x="740.3" y="771.0" width="11.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="743.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (4,242 samples, 0.96%)</title><rect x="740.3" y="755.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="743.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (4,242 samples, 0.96%)</title><rect x="740.3" y="739.0" width="11.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="743.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4,242 samples, 0.96%)</title><rect x="740.3" y="723.0" width="11.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="743.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4,242 samples, 0.96%)</title><rect x="740.3" y="707.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="743.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4,242 samples, 0.96%)</title><rect x="740.3" y="691.0" width="11.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="743.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (4,242 samples, 0.96%)</title><rect x="740.3" y="675.0" width="11.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$215/1711762640.run (4,242 samples, 0.96%)</title><rect x="740.3" y="659.0" width="11.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="743.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (4,242 samples, 0.96%)</title><rect x="740.3" y="643.0" width="11.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1,073 samples, 0.24%)</title><rect x="740.3" y="627.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="743.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1,073 samples, 0.24%)</title><rect x="740.3" y="611.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="743.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (1,073 samples, 0.24%)</title><rect x="740.3" y="595.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="743.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (545 samples, 0.12%)</title><rect x="740.3" y="579.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="743.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (545 samples, 0.12%)</title><rect x="740.3" y="563.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (545 samples, 0.12%)</title><rect x="740.3" y="547.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (545 samples, 0.12%)</title><rect x="740.3" y="531.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="743.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (545 samples, 0.12%)</title><rect x="740.3" y="515.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="743.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (528 samples, 0.12%)</title><rect x="741.8" y="579.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (528 samples, 0.12%)</title><rect x="741.8" y="563.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="744.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (528 samples, 0.12%)</title><rect x="741.8" y="547.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="744.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (528 samples, 0.12%)</title><rect x="741.8" y="531.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="744.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ForkJoinTask$RunnableExecuteAction (528 samples, 0.12%)</title><rect x="741.8" y="515.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="744.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (342 samples, 0.08%)</title><rect x="743.2" y="627.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (342 samples, 0.08%)</title><rect x="743.2" y="611.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (342 samples, 0.08%)</title><rect x="743.2" y="595.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="746.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$316/671506886.get$Lambda (342 samples, 0.08%)</title><rect x="743.2" y="579.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="746.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$316 (342 samples, 0.08%)</title><rect x="743.2" y="563.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="746.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (2,824 samples, 0.64%)</title><rect x="744.1" y="627.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="747.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (1,593 samples, 0.36%)</title><rect x="744.1" y="611.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="747.1" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,091 samples, 0.25%)</title><rect x="744.1" y="595.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.1" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,091 samples, 0.25%)</title><rect x="744.1" y="579.0" width="2.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="747.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (502 samples, 0.11%)</title><rect x="747.0" y="595.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="750.0" y="606.0"></text>
</g>
<g>
<title>java/util/List.of (502 samples, 0.11%)</title><rect x="747.0" y="579.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="750.0" y="590.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (502 samples, 0.11%)</title><rect x="747.0" y="563.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="750.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (1,231 samples, 0.28%)</title><rect x="748.4" y="611.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="751.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$211/1824159993.get (1,231 samples, 0.28%)</title><rect x="748.4" y="595.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="751.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (1,231 samples, 0.28%)</title><rect x="748.4" y="579.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="751.4" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,231 samples, 0.28%)</title><rect x="748.4" y="563.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,227 samples, 0.28%)</title><rect x="748.4" y="547.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="751.4" y="558.0"></text>
</g>
<g>
<title>byte[] (1,181 samples, 0.27%)</title><rect x="748.5" y="531.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="751.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$310/727818676.accept (848 samples, 0.19%)</title><rect x="751.7" y="819.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="754.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (848 samples, 0.19%)</title><rect x="751.7" y="803.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$303/187549931.run (848 samples, 0.19%)</title><rect x="751.7" y="787.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (848 samples, 0.19%)</title><rect x="751.7" y="771.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="754.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (848 samples, 0.19%)</title><rect x="751.7" y="755.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="754.7" y="766.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (848 samples, 0.19%)</title><rect x="751.7" y="739.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="754.7" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (848 samples, 0.19%)</title><rect x="751.7" y="723.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="754.7" y="734.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (848 samples, 0.19%)</title><rect x="751.7" y="707.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="754.7" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1,029 samples, 0.23%)</title><rect x="754.0" y="835.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="757.0" y="846.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (1,029 samples, 0.23%)</title><rect x="754.0" y="819.0" width="2.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="757.0" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (1,007 samples, 0.23%)</title><rect x="756.7" y="835.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="759.7" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (541 samples, 0.12%)</title><rect x="756.7" y="819.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="759.7" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (541 samples, 0.12%)</title><rect x="756.7" y="803.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="759.7" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (541 samples, 0.12%)</title><rect x="756.7" y="787.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="759.7" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (541 samples, 0.12%)</title><rect x="756.7" y="771.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="759.7" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (541 samples, 0.12%)</title><rect x="756.7" y="755.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="759.7" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (541 samples, 0.12%)</title><rect x="756.7" y="739.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="759.7" y="750.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (541 samples, 0.12%)</title><rect x="756.7" y="723.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="759.7" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (466 samples, 0.11%)</title><rect x="758.2" y="819.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="761.2" y="830.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (466 samples, 0.11%)</title><rect x="758.2" y="803.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="761.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (3,370 samples, 0.77%)</title><rect x="759.4" y="835.0" width="9.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="762.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$223/1459998220.run (1,688 samples, 0.38%)</title><rect x="759.4" y="819.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="762.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (1,688 samples, 0.38%)</title><rect x="759.4" y="803.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,688 samples, 0.38%)</title><rect x="759.4" y="787.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="762.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,688 samples, 0.38%)</title><rect x="759.4" y="771.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="762.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,688 samples, 0.38%)</title><rect x="759.4" y="755.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="762.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,688 samples, 0.38%)</title><rect x="759.4" y="739.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="762.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$215/1711762640.run (1,688 samples, 0.38%)</title><rect x="759.4" y="723.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,688 samples, 0.38%)</title><rect x="759.4" y="707.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1,688 samples, 0.38%)</title><rect x="759.4" y="691.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="762.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1,688 samples, 0.38%)</title><rect x="759.4" y="675.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="762.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (1,169 samples, 0.27%)</title><rect x="759.4" y="659.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="762.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1,169 samples, 0.27%)</title><rect x="759.4" y="643.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="762.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1,169 samples, 0.27%)</title><rect x="759.4" y="627.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/112619572.linkToTargetMethod (821 samples, 0.19%)</title><rect x="759.4" y="611.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/827084938.invoke (821 samples, 0.19%)</title><rect x="759.4" y="595.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (821 samples, 0.19%)</title><rect x="759.4" y="579.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (821 samples, 0.19%)</title><rect x="759.4" y="563.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="762.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (821 samples, 0.19%)</title><rect x="759.4" y="547.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="762.4" y="558.0"></text>
</g>
<g>
<title>byte[] (821 samples, 0.19%)</title><rect x="759.4" y="531.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="762.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (348 samples, 0.08%)</title><rect x="761.6" y="611.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="764.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (348 samples, 0.08%)</title><rect x="761.6" y="595.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="764.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (348 samples, 0.08%)</title><rect x="761.6" y="579.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="764.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$316/671506886.get$Lambda (348 samples, 0.08%)</title><rect x="761.6" y="563.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="764.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$316 (348 samples, 0.08%)</title><rect x="761.6" y="547.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="764.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (519 samples, 0.12%)</title><rect x="762.6" y="659.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="765.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (519 samples, 0.12%)</title><rect x="762.6" y="643.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="765.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (519 samples, 0.12%)</title><rect x="762.6" y="627.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="765.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (519 samples, 0.12%)</title><rect x="762.6" y="611.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="765.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (519 samples, 0.12%)</title><rect x="762.6" y="595.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="765.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.ForkJoinTask$RunnableExecuteAction (519 samples, 0.12%)</title><rect x="762.6" y="579.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="765.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$234/566165421.run (1,682 samples, 0.38%)</title><rect x="764.0" y="819.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="767.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (1,682 samples, 0.38%)</title><rect x="764.0" y="803.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="767.0" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (682 samples, 0.16%)</title><rect x="764.0" y="787.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="767.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (682 samples, 0.16%)</title><rect x="764.0" y="771.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="767.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$315/563922571.get$Lambda (682 samples, 0.16%)</title><rect x="764.0" y="755.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="767.0" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$315 (682 samples, 0.16%)</title><rect x="764.0" y="739.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="767.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,000 samples, 0.23%)</title><rect x="765.8" y="787.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="768.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1,000 samples, 0.23%)</title><rect x="765.8" y="771.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="768.8" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.ForkJoinTask$RunnableExecuteAction (1,000 samples, 0.23%)</title><rect x="765.8" y="755.0" width="2.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="768.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,918 samples, 0.66%)</title><rect x="768.5" y="835.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="771.5" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.now (473 samples, 0.11%)</title><rect x="768.5" y="819.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.5" y="830.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (473 samples, 0.11%)</title><rect x="768.5" y="803.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="771.5" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (473 samples, 0.11%)</title><rect x="768.5" y="787.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.5" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.create (473 samples, 0.11%)</title><rect x="768.5" y="771.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="771.5" y="782.0"></text>
</g>
<g>
<title>java.time.Instant (473 samples, 0.11%)</title><rect x="768.5" y="755.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="771.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,445 samples, 0.56%)</title><rect x="769.7" y="819.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="772.7" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (327 samples, 0.07%)</title><rect x="769.7" y="803.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="772.7" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (327 samples, 0.07%)</title><rect x="769.7" y="787.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="772.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$355/1618985500.get$Lambda (327 samples, 0.07%)</title><rect x="769.7" y="771.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="772.7" y="782.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$355 (327 samples, 0.07%)</title><rect x="769.7" y="755.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="772.7" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (603 samples, 0.14%)</title><rect x="770.6" y="803.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="773.6" y="814.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (603 samples, 0.14%)</title><rect x="770.6" y="787.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="773.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (312 samples, 0.07%)</title><rect x="772.2" y="803.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="775.2" y="814.0"></text>
</g>
<g>
<title>java/util/Optional.of (312 samples, 0.07%)</title><rect x="772.2" y="787.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="775.2" y="798.0"></text>
</g>
<g>
<title>java.util.Optional (312 samples, 0.07%)</title><rect x="772.2" y="771.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="775.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (1,203 samples, 0.27%)</title><rect x="773.1" y="803.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="776.1" y="814.0"></text>
</g>
<g>
<title>java.util.ArrayList (541 samples, 0.12%)</title><rect x="773.1" y="787.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="776.1" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (662 samples, 0.15%)</title><rect x="774.5" y="787.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="777.5" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (662 samples, 0.15%)</title><rect x="774.5" y="771.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="777.5" y="782.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (662 samples, 0.15%)</title><rect x="774.5" y="755.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="777.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (3,792 samples, 0.86%)</title><rect x="776.3" y="835.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="779.3" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (344 samples, 0.08%)</title><rect x="776.3" y="819.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="779.3" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (344 samples, 0.08%)</title><rect x="776.3" y="803.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="779.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$300/1999166388.get$Lambda (344 samples, 0.08%)</title><rect x="776.3" y="787.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.3" y="798.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$300 (344 samples, 0.08%)</title><rect x="776.3" y="771.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="779.3" y="782.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,971 samples, 0.45%)</title><rect x="777.2" y="819.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.2" y="830.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (828 samples, 0.19%)</title><rect x="777.2" y="803.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="780.2" y="814.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (828 samples, 0.19%)</title><rect x="777.2" y="787.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="780.2" y="798.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,143 samples, 0.26%)</title><rect x="779.5" y="803.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="782.5" y="814.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,125 samples, 0.26%)</title><rect x="779.5" y="787.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="782.5" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1,477 samples, 0.34%)</title><rect x="782.5" y="819.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.5" y="830.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (1,437 samples, 0.33%)</title><rect x="782.5" y="803.0" width="3.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="785.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1,095 samples, 0.25%)</title><rect x="786.5" y="835.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="789.5" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1,095 samples, 0.25%)</title><rect x="786.5" y="819.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="789.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1,095 samples, 0.25%)</title><rect x="786.5" y="803.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1,094 samples, 0.25%)</title><rect x="786.5" y="787.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="789.5" y="798.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (424 samples, 0.10%)</title><rect x="786.5" y="771.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="789.5" y="782.0"></text>
</g>
<g>
<title>java.lang.Integer (424 samples, 0.10%)</title><rect x="786.5" y="755.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="789.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (670 samples, 0.15%)</title><rect x="787.6" y="771.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="790.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.add (670 samples, 0.15%)</title><rect x="787.6" y="755.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="790.6" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (670 samples, 0.15%)</title><rect x="787.6" y="739.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="790.6" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (670 samples, 0.15%)</title><rect x="787.6" y="723.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="790.6" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (670 samples, 0.15%)</title><rect x="787.6" y="707.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.6" y="718.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (670 samples, 0.15%)</title><rect x="787.6" y="691.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="790.6" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (494 samples, 0.11%)</title><rect x="789.4" y="835.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.4" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (494 samples, 0.11%)</title><rect x="789.4" y="819.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="792.4" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (494 samples, 0.11%)</title><rect x="789.4" y="803.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="792.4" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (494 samples, 0.11%)</title><rect x="789.4" y="787.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="792.4" y="798.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (415 samples, 0.09%)</title><rect x="789.4" y="771.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="792.4" y="782.0"></text>
</g>
<g>
<title>java.lang.Integer (415 samples, 0.09%)</title><rect x="789.4" y="755.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="792.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (304 samples, 0.07%)</title><rect x="790.8" y="835.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="793.8" y="846.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (304 samples, 0.07%)</title><rect x="790.8" y="819.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.8" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (304 samples, 0.07%)</title><rect x="790.8" y="803.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="793.8" y="814.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (304 samples, 0.07%)</title><rect x="790.8" y="787.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="793.8" y="798.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (148,409 samples, 33.76%)</title><rect x="791.7" y="851.0" width="398.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="794.7" y="862.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4,948 samples, 1.13%)</title><rect x="791.7" y="835.0" width="13.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="794.7" y="846.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (4,948 samples, 1.13%)</title><rect x="791.7" y="819.0" width="13.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="794.7" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (143,461 samples, 32.63%)</title><rect x="805.0" y="835.0" width="385.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.0" y="846.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (143,461 samples, 32.63%)</title><rect x="805.0" y="819.0" width="385.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.0" y="830.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (143,461 samples, 32.63%)</title><rect x="805.0" y="803.0" width="385.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.0" y="814.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (53,320 samples, 12.13%)</title><rect x="805.0" y="787.0" width="143.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.0" y="798.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (53,320 samples, 12.13%)</title><rect x="805.0" y="771.0" width="143.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="808.0" y="782.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (49,068 samples, 11.16%)</title><rect x="805.0" y="755.0" width="131.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.0" y="766.0">RequestHandler0_..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3,809 samples, 0.87%)</title><rect x="805.0" y="739.0" width="10.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="808.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,809 samples, 0.87%)</title><rect x="805.0" y="723.0" width="10.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="808.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,809 samples, 0.87%)</title><rect x="805.0" y="707.0" width="10.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="808.0" y="718.0"></text>
</g>
<g>
<title>java.lang.String (1,777 samples, 0.40%)</title><rect x="805.0" y="691.0" width="4.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="808.0" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,032 samples, 0.46%)</title><rect x="809.7" y="691.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="812.7" y="702.0"></text>
</g>
<g>
<title>byte[] (2,032 samples, 0.46%)</title><rect x="809.7" y="675.0" width="5.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="812.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.entity (45,259 samples, 10.29%)</title><rect x="815.2" y="739.0" width="121.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="818.2" y="750.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,327 samples, 0.53%)</title><rect x="815.2" y="723.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="818.2" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,327 samples, 0.53%)</title><rect x="815.2" y="707.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="818.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$117/294011525.get$Lambda (2,327 samples, 0.53%)</title><rect x="815.2" y="691.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="818.2" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.ServiceImpl$$Lambda$117 (2,327 samples, 0.53%)</title><rect x="815.2" y="675.0" width="6.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="818.2" y="686.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (2,382 samples, 0.54%)</title><rect x="821.4" y="723.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,382 samples, 0.54%)</title><rect x="821.4" y="707.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="824.4" y="718.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (2,363 samples, 0.54%)</title><rect x="821.5" y="691.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="824.5" y="702.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (2,363 samples, 0.54%)</title><rect x="821.5" y="675.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="824.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (2,363 samples, 0.54%)</title><rect x="821.5" y="659.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (2,363 samples, 0.54%)</title><rect x="821.5" y="643.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="824.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (2,363 samples, 0.54%)</title><rect x="821.5" y="627.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="824.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (2,363 samples, 0.54%)</title><rect x="821.5" y="611.0" width="6.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="824.5" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.request.handler.RequestHandler (1,772 samples, 0.40%)</title><rect x="827.8" y="723.0" width="4.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="830.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.parseEntityArguments (37,049 samples, 8.43%)</title><rect x="832.6" y="723.0" width="99.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="835.6" y="734.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/String.getBytes (1,930 samples, 0.44%)</title><rect x="832.6" y="707.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.6" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,930 samples, 0.44%)</title><rect x="832.6" y="691.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.6" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,930 samples, 0.44%)</title><rect x="832.6" y="675.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.6" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,930 samples, 0.44%)</title><rect x="832.6" y="659.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="835.6" y="670.0"></text>
</g>
<g>
<title>byte[] (1,930 samples, 0.44%)</title><rect x="832.6" y="643.0" width="5.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="835.6" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7,467 samples, 1.70%)</title><rect x="837.8" y="707.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="840.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7,467 samples, 1.70%)</title><rect x="837.8" y="691.0" width="20.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="840.8" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7,467 samples, 1.70%)</title><rect x="837.8" y="675.0" width="20.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="840.8" y="686.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (15,863 samples, 3.61%)</title><rect x="857.8" y="707.0" width="42.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="860.8" y="718.0">java..</text>
</g>
<g>
<title>java.util.regex.Matcher (5,374 samples, 1.22%)</title><rect x="857.8" y="691.0" width="14.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="860.8" y="702.0"></text>
</g>
<g>
<title>java.util.regex.Matcher (162 samples, 0.04%)</title><rect x="872.2" y="691.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="875.2" y="702.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (10,327 samples, 2.35%)</title><rect x="872.7" y="691.0" width="27.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="875.7" y="702.0">j..</text>
</g>
<g>
<title>int[] (8,854 samples, 2.01%)</title><rect x="872.7" y="675.0" width="23.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="875.7" y="686.0">i..</text>
</g>
<g>
<title>int[] (227 samples, 0.05%)</title><rect x="896.4" y="675.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="899.4" y="686.0"></text>
</g>
<g>
<title>java.util.regex.IntHashSet[] (1,246 samples, 0.28%)</title><rect x="897.0" y="675.0" width="3.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="900.0" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.request.processor.entity.UpsertArguments (3,734 samples, 0.85%)</title><rect x="900.4" y="707.0" width="10.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="903.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/RequestUtils.getRequestTimestamp (5,595 samples, 1.27%)</title><rect x="910.4" y="707.0" width="15.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="913.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.trim (2,736 samples, 0.62%)</title><rect x="910.4" y="691.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="913.4" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2,736 samples, 0.62%)</title><rect x="910.4" y="675.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="913.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,736 samples, 0.62%)</title><rect x="910.4" y="659.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="913.4" y="670.0"></text>
</g>
<g>
<title>java.lang.String (1,139 samples, 0.26%)</title><rect x="910.4" y="643.0" width="3.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="913.4" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,597 samples, 0.36%)</title><rect x="913.5" y="643.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="916.5" y="654.0"></text>
</g>
<g>
<title>byte[] (1,597 samples, 0.36%)</title><rect x="913.5" y="627.0" width="4.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="916.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2,859 samples, 0.65%)</title><rect x="917.7" y="691.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="920.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,859 samples, 0.65%)</title><rect x="917.7" y="675.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="920.7" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,859 samples, 0.65%)</title><rect x="917.7" y="659.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.7" y="670.0"></text>
</g>
<g>
<title>java.lang.String (1,129 samples, 0.26%)</title><rect x="917.7" y="643.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="920.7" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,730 samples, 0.39%)</title><rect x="920.8" y="643.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="923.8" y="654.0"></text>
</g>
<g>
<title>byte[] (1,730 samples, 0.39%)</title><rect x="920.8" y="627.0" width="4.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="923.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/RequestUtils.isRequestFromService (2,460 samples, 0.56%)</title><rect x="925.4" y="707.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="928.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2,460 samples, 0.56%)</title><rect x="925.4" y="691.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="928.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,460 samples, 0.56%)</title><rect x="925.4" y="675.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="928.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,460 samples, 0.56%)</title><rect x="925.4" y="659.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="928.4" y="670.0"></text>
</g>
<g>
<title>java.lang.String (1,295 samples, 0.29%)</title><rect x="925.4" y="643.0" width="3.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="928.4" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,165 samples, 0.26%)</title><rect x="928.9" y="643.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="931.9" y="654.0"></text>
</g>
<g>
<title>byte[] (1,165 samples, 0.26%)</title><rect x="928.9" y="627.0" width="3.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="931.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntityRequestProcessor.forHttpMethod (1,729 samples, 0.39%)</title><rect x="932.0" y="723.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="935.0" y="734.0"></text>
</g>
<g>
<title>ru.mail.polis.service.saloed.request.processor.entity.UpsertEntityRequestProcessor (1,729 samples, 0.39%)</title><rect x="932.0" y="707.0" width="4.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="935.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4,252 samples, 0.97%)</title><rect x="936.7" y="755.0" width="11.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="939.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,252 samples, 0.97%)</title><rect x="936.7" y="739.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="939.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,252 samples, 0.97%)</title><rect x="936.7" y="723.0" width="11.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="939.7" y="734.0"></text>
</g>
<g>
<title>java.lang.String (1,724 samples, 0.39%)</title><rect x="936.7" y="707.0" width="4.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="939.7" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,528 samples, 0.57%)</title><rect x="941.3" y="707.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="944.3" y="718.0"></text>
</g>
<g>
<title>byte[] (2,528 samples, 0.57%)</title><rect x="941.3" y="691.0" width="6.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="944.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (18,701 samples, 4.25%)</title><rect x="948.1" y="787.0" width="50.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="951.1" y="798.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (2,945 samples, 0.67%)</title><rect x="948.1" y="771.0" width="7.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="951.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6,067 samples, 1.38%)</title><rect x="956.0" y="771.0" width="16.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="959.0" y="782.0"></text>
</g>
<g>
<title>java.lang.String[] (5,993 samples, 1.36%)</title><rect x="956.0" y="755.0" width="16.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="959.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9,689 samples, 2.20%)</title><rect x="972.3" y="771.0" width="26.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="975.3" y="782.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (9,689 samples, 2.20%)</title><rect x="972.3" y="755.0" width="26.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="975.3" y="766.0">o..</text>
</g>
<g>
<title>char[] (5,010 samples, 1.14%)</title><rect x="972.3" y="739.0" width="13.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="975.3" y="750.0"></text>
</g>
<g>
<title>java.lang.String (1,698 samples, 0.39%)</title><rect x="985.7" y="739.0" width="4.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="988.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,980 samples, 0.68%)</title><rect x="990.3" y="739.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="993.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,980 samples, 0.68%)</title><rect x="990.3" y="723.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="993.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,980 samples, 0.68%)</title><rect x="990.3" y="707.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="993.3" y="718.0"></text>
</g>
<g>
<title>byte[] (2,980 samples, 0.68%)</title><rect x="990.3" y="691.0" width="8.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="993.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1,736 samples, 0.39%)</title><rect x="998.3" y="787.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1001.3" y="798.0"></text>
</g>
<g>
<title>byte[] (1,736 samples, 0.39%)</title><rect x="998.3" y="771.0" width="4.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1001.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3,824 samples, 0.87%)</title><rect x="1002.9" y="787.0" width="10.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1005.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,824 samples, 0.87%)</title><rect x="1002.9" y="771.0" width="10.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1005.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,824 samples, 0.87%)</title><rect x="1002.9" y="755.0" width="10.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1005.9" y="766.0"></text>
</g>
<g>
<title>java.lang.String (1,982 samples, 0.45%)</title><rect x="1002.9" y="739.0" width="5.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1005.9" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,842 samples, 0.42%)</title><rect x="1008.2" y="739.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1011.2" y="750.0"></text>
</g>
<g>
<title>byte[] (1,842 samples, 0.42%)</title><rect x="1008.2" y="723.0" width="5.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1011.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (65,880 samples, 14.98%)</title><rect x="1013.2" y="787.0" width="176.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1016.2" y="798.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (65,880 samples, 14.98%)</title><rect x="1013.2" y="771.0" width="176.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1016.2" y="782.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (32,630 samples, 7.42%)</title><rect x="1013.2" y="755.0" width="87.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1016.2" y="766.0">char[]</text>
</g>
<g>
<title>char[] (620 samples, 0.14%)</title><rect x="1100.8" y="755.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1103.8" y="766.0"></text>
</g>
<g>
<title>java.lang.String (10,558 samples, 2.40%)</title><rect x="1102.4" y="755.0" width="28.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1105.4" y="766.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22,072 samples, 5.02%)</title><rect x="1130.8" y="755.0" width="59.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1133.8" y="766.0">java/l..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22,072 samples, 5.02%)</title><rect x="1130.8" y="739.0" width="59.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1133.8" y="750.0">java/l..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (22,072 samples, 5.02%)</title><rect x="1130.8" y="723.0" width="59.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1133.8" y="734.0">java/l..</text>
</g>
<g>
<title>byte[] (21,839 samples, 4.97%)</title><rect x="1130.8" y="707.0" width="58.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1133.8" y="718.0">byte[]</text>
</g>
<g>
<title>byte[] (233 samples, 0.05%)</title><rect x="1189.4" y="707.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1192.4" y="718.0"></text>
</g>
</g>
</svg>
