<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="789"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="789"> </text>
<g id="frames">
<g>
<title>all (4,046 samples, 100.00%)</title><rect x="10.0" y="755.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="766.0">all</text>
</g>
<g>
<title>[Finalizer tid=1103541] (40 samples, 0.99%)</title><rect x="10.0" y="739.0" width="11.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="10.0" y="723.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.02%)</title><rect x="10.0" y="707.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (1 samples, 0.02%)</title><rect x="10.0" y="691.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.3" y="723.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.3" y="734.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.02%)</title><rect x="10.3" y="707.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.3" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="10.3" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="13.3" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="10.3" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="13.3" y="686.0"></text>
</g>
<g>
<title>__se_sys_futex (1 samples, 0.02%)</title><rect x="10.3" y="659.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="13.3" y="670.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="10.3" y="643.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="13.3" y="654.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="10.3" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="13.3" y="638.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="10.3" y="611.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="13.3" y="622.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.02%)</title><rect x="10.3" y="595.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="13.3" y="606.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer$FinalizerThread.run (38 samples, 0.94%)</title><rect x="10.6" y="723.0" width="11.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.6" y="734.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.runFinalizer (36 samples, 0.89%)</title><rect x="10.6" y="707.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.6" y="718.0"></text>
</g>
<g>
<title>java/lang/System$2.invokeFinalize (34 samples, 0.84%)</title><rect x="11.2" y="691.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.2" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.finalize (34 samples, 0.84%)</title><rect x="11.2" y="675.0" width="9.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.2" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.dispose (34 samples, 0.84%)</title><rect x="11.2" y="659.0" width="9.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.2" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.close (34 samples, 0.84%)</title><rect x="11.2" y="643.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.2" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.disposeInternal (34 samples, 0.84%)</title><rect x="11.2" y="627.0" width="9.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.2" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.disposeInternal (33 samples, 0.82%)</title><rect x="11.5" y="611.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.25%)</title><rect x="11.5" y="595.0" width="2.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="14.5" y="606.0"></text>
</g>
<g>
<title>_int_free (7 samples, 0.17%)</title><rect x="11.5" y="579.0" width="2.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="14.5" y="590.0"></text>
</g>
<g>
<title>unlink_chunk.isra.0 (3 samples, 0.07%)</title><rect x="13.5" y="579.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="16.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (22 samples, 0.54%)</title><rect x="14.4" y="595.0" width="6.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="17.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (22 samples, 0.54%)</title><rect x="14.4" y="579.0" width="6.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="17.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBIter::~DBIter() (21 samples, 0.52%)</title><rect x="14.7" y="563.0" width="6.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="17.7" y="574.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.02%)</title><rect x="16.4" y="547.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="19.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::~MergingIterator() (14 samples, 0.35%)</title><rect x="16.7" y="547.0" width="4.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="19.7" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (7 samples, 0.17%)</title><rect x="17.3" y="531.0" width="2.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="20.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::~BlockBasedTableIterator() (4 samples, 0.10%)</title><rect x="18.2" y="515.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="21.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (2 samples, 0.05%)</title><rect x="18.5" y="499.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="21.5" y="510.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.02%)</title><rect x="18.5" y="483.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="21.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.02%)</title><rect x="18.7" y="483.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="21.7" y="494.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="18.7" y="467.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="21.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() (1 samples, 0.02%)</title><rect x="19.0" y="499.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="22.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::~BlockBasedTableIterator() (5 samples, 0.12%)</title><rect x="19.3" y="531.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="22.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.02%)</title><rect x="19.6" y="515.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="22.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.02%)</title><rect x="19.6" y="499.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="22.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() (3 samples, 0.07%)</title><rect x="19.9" y="515.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="22.9" y="526.0"></text>
</g>
<g>
<title>unlink_chunk.isra.0 (1 samples, 0.02%)</title><rect x="20.8" y="595.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="23.8" y="606.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (2 samples, 0.05%)</title><rect x="21.1" y="707.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.1" y="718.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (2 samples, 0.05%)</title><rect x="21.1" y="691.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.1" y="702.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=1103571] (31 samples, 0.77%)</title><rect x="21.7" y="739.0" width="9.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="24.7" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (31 samples, 0.77%)</title><rect x="21.7" y="723.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 0.12%)</title><rect x="21.7" y="707.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 0.12%)</title><rect x="21.7" y="691.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.7" y="702.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.05%)</title><rect x="21.7" y="675.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="24.7" y="686.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="22.0" y="659.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="25.0" y="670.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="22.0" y="643.0" width="0.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="25.0" y="654.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.07%)</title><rect x="22.2" y="675.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="25.2" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="22.2" y="659.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="25.2" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="22.2" y="643.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="25.2" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (3 samples, 0.07%)</title><rect x="22.2" y="627.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="25.2" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (3 samples, 0.07%)</title><rect x="22.2" y="611.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="25.2" y="622.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="22.2" y="595.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="25.2" y="606.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="22.2" y="579.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="25.2" y="590.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.05%)</title><rect x="22.5" y="595.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="25.5" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (1 samples, 0.02%)</title><rect x="22.5" y="579.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="25.5" y="590.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (1 samples, 0.02%)</title><rect x="22.5" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="25.5" y="574.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.02%)</title><rect x="22.8" y="579.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="25.8" y="590.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="22.8" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="25.8" y="574.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="22.8" y="547.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="25.8" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (26 samples, 0.64%)</title><rect x="23.1" y="707.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (26 samples, 0.64%)</title><rect x="23.1" y="691.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="26.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (15 samples, 0.37%)</title><rect x="23.1" y="675.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="26.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (15 samples, 0.37%)</title><rect x="23.1" y="659.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (15 samples, 0.37%)</title><rect x="23.1" y="643.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.1" y="654.0"></text>
</g>
<g>
<title>RequestHandler1_entities.handleRequest (15 samples, 0.37%)</title><rect x="23.1" y="627.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="26.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.entities (15 samples, 0.37%)</title><rect x="23.1" y="611.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.1" y="622.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (15 samples, 0.37%)</title><rect x="23.1" y="595.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.37%)</title><rect x="23.1" y="579.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="26.1" y="590.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (15 samples, 0.37%)</title><rect x="23.1" y="563.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.1" y="574.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (15 samples, 0.37%)</title><rect x="23.1" y="547.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (15 samples, 0.37%)</title><rect x="23.1" y="531.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (15 samples, 0.37%)</title><rect x="23.1" y="515.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (15 samples, 0.37%)</title><rect x="23.1" y="499.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.37%)</title><rect x="23.1" y="483.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.37%)</title><rect x="23.1" y="467.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.1" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 0.37%)</title><rect x="23.1" y="451.0" width="4.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="26.1" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.37%)</title><rect x="23.1" y="435.0" width="4.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="26.1" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.37%)</title><rect x="23.1" y="419.0" width="4.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="26.1" y="430.0"></text>
</g>
<g>
<title>__se_sys_futex (13 samples, 0.32%)</title><rect x="23.7" y="403.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="26.7" y="414.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.32%)</title><rect x="23.7" y="387.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="26.7" y="398.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.30%)</title><rect x="24.0" y="371.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="27.0" y="382.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.05%)</title><rect x="24.0" y="355.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="27.0" y="366.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.25%)</title><rect x="24.6" y="355.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="27.6" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.25%)</title><rect x="24.6" y="339.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="27.6" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.25%)</title><rect x="24.6" y="323.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="27.6" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (11 samples, 0.27%)</title><rect x="27.5" y="675.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="30.5" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (9 samples, 0.22%)</title><rect x="27.5" y="659.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="27.5" y="643.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="30.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="27.5" y="627.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="30.5" y="638.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.05%)</title><rect x="27.5" y="611.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="30.5" y="622.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="27.5" y="595.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="30.5" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="27.8" y="595.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="30.8" y="606.0"></text>
</g>
<g>
<title>recv (7 samples, 0.17%)</title><rect x="28.1" y="643.0" width="2.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="31.1" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.17%)</title><rect x="28.1" y="627.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="31.1" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.17%)</title><rect x="28.1" y="611.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="31.1" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (5 samples, 0.12%)</title><rect x="28.4" y="595.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="31.4" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (5 samples, 0.12%)</title><rect x="28.4" y="579.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="31.4" y="590.0"></text>
</g>
<g>
<title>inet6_recvmsg (4 samples, 0.10%)</title><rect x="28.4" y="563.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="31.4" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (3 samples, 0.07%)</title><rect x="28.7" y="547.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="31.7" y="558.0"></text>
</g>
<g>
<title>ns_to_timespec64 (1 samples, 0.02%)</title><rect x="28.7" y="531.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="31.7" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.05%)</title><rect x="29.0" y="531.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="32.0" y="542.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.05%)</title><rect x="29.0" y="515.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="32.0" y="526.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.02%)</title><rect x="29.0" y="499.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="32.0" y="510.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.02%)</title><rect x="29.0" y="483.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="32.0" y="494.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="29.0" y="467.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="32.0" y="478.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.02%)</title><rect x="29.2" y="499.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="32.2" y="510.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="29.2" y="483.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="32.2" y="494.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="29.5" y="563.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="32.5" y="574.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="29.5" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="32.5" y="558.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.02%)</title><rect x="29.8" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="32.8" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (2 samples, 0.05%)</title><rect x="30.1" y="659.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="33.1" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=1103572] (35 samples, 0.87%)</title><rect x="30.7" y="739.0" width="10.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="33.7" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (35 samples, 0.87%)</title><rect x="30.7" y="723.0" width="10.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="33.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 0.15%)</title><rect x="30.7" y="707.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="33.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 0.15%)</title><rect x="30.7" y="691.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="33.7" y="702.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="30.7" y="675.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="33.7" y="686.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="30.7" y="659.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="33.7" y="670.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.12%)</title><rect x="31.0" y="675.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="34.0" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="31.3" y="659.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="34.3" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.10%)</title><rect x="31.3" y="643.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="34.3" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (3 samples, 0.07%)</title><rect x="31.6" y="627.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="34.6" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (3 samples, 0.07%)</title><rect x="31.6" y="611.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="34.6" y="622.0"></text>
</g>
<g>
<title>ep_poll (3 samples, 0.07%)</title><rect x="31.6" y="595.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="34.6" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (1 samples, 0.02%)</title><rect x="31.9" y="579.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="34.9" y="590.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="31.9" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="34.9" y="574.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.02%)</title><rect x="32.2" y="579.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="35.2" y="590.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="32.2" y="563.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="35.2" y="574.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="32.2" y="547.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="35.2" y="558.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="32.2" y="531.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="35.2" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.02%)</title><rect x="32.2" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="35.2" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (29 samples, 0.72%)</title><rect x="32.5" y="707.0" width="8.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="35.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (29 samples, 0.72%)</title><rect x="32.5" y="691.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="35.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (18 samples, 0.44%)</title><rect x="32.5" y="675.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="35.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (17 samples, 0.42%)</title><rect x="32.5" y="659.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="35.5" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (16 samples, 0.40%)</title><rect x="32.7" y="643.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.7" y="654.0"></text>
</g>
<g>
<title>RequestHandler1_entities.handleRequest (14 samples, 0.35%)</title><rect x="32.7" y="627.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="35.7" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.07%)</title><rect x="32.7" y="611.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="35.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.entities (11 samples, 0.27%)</title><rect x="33.6" y="611.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="36.6" y="622.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (11 samples, 0.27%)</title><rect x="33.6" y="595.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="36.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.27%)</title><rect x="33.6" y="579.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="36.6" y="590.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (11 samples, 0.27%)</title><rect x="33.6" y="563.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="36.6" y="574.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (11 samples, 0.27%)</title><rect x="33.6" y="547.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="36.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (11 samples, 0.27%)</title><rect x="33.6" y="531.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="36.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (11 samples, 0.27%)</title><rect x="33.6" y="515.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (11 samples, 0.27%)</title><rect x="33.6" y="499.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="36.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.27%)</title><rect x="33.6" y="483.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.25%)</title><rect x="33.9" y="467.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.9" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.05%)</title><rect x="33.9" y="451.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="36.9" y="462.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.05%)</title><rect x="33.9" y="435.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="36.9" y="446.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.20%)</title><rect x="34.5" y="451.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="37.5" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.20%)</title><rect x="34.5" y="435.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="37.5" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.20%)</title><rect x="34.5" y="419.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="37.5" y="430.0"></text>
</g>
<g>
<title>__se_sys_futex (8 samples, 0.20%)</title><rect x="34.5" y="403.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="37.5" y="414.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.20%)</title><rect x="34.5" y="387.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="37.5" y="398.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.20%)</title><rect x="34.5" y="371.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="37.5" y="382.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.17%)</title><rect x="34.8" y="355.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="37.8" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.17%)</title><rect x="34.8" y="339.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="37.8" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.17%)</title><rect x="34.8" y="323.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="37.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.05%)</title><rect x="36.8" y="627.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.8" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.05%)</title><rect x="36.8" y="611.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.8" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.05%)</title><rect x="36.8" y="595.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="39.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.05%)</title><rect x="36.8" y="579.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="39.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.05%)</title><rect x="36.8" y="563.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.8" y="574.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="37.1" y="547.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="40.1" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.02%)</title><rect x="37.4" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="40.4" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="37.4" y="643.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="40.4" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="37.4" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="40.4" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (11 samples, 0.27%)</title><rect x="37.7" y="675.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="40.7" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (10 samples, 0.25%)</title><rect x="37.7" y="659.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.7" y="670.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.02%)</title><rect x="38.0" y="643.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="41.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="38.3" y="643.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="41.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="38.3" y="627.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="41.3" y="638.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.05%)</title><rect x="38.3" y="611.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="41.3" y="622.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="38.3" y="595.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="41.3" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="38.6" y="595.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="41.6" y="606.0"></text>
</g>
<g>
<title>recv (1 samples, 0.02%)</title><rect x="38.9" y="611.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="41.9" y="622.0"></text>
</g>
<g>
<title>recv (5 samples, 0.12%)</title><rect x="39.2" y="643.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="42.2" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.12%)</title><rect x="39.2" y="627.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="42.2" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.12%)</title><rect x="39.2" y="611.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="42.2" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 0.07%)</title><rect x="39.5" y="595.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="42.5" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (3 samples, 0.07%)</title><rect x="39.5" y="579.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="42.5" y="590.0"></text>
</g>
<g>
<title>inet6_recvmsg (2 samples, 0.05%)</title><rect x="39.7" y="563.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="42.7" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.05%)</title><rect x="39.7" y="547.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="42.7" y="558.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="39.7" y="531.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="42.7" y="542.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="39.7" y="515.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="42.7" y="526.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="39.7" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="42.7" y="510.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.02%)</title><rect x="39.7" y="483.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="42.7" y="494.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.02%)</title><rect x="40.0" y="531.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="43.0" y="542.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.02%)</title><rect x="40.0" y="515.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="43.0" y="526.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.02%)</title><rect x="40.0" y="499.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="43.0" y="510.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="40.0" y="483.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="43.0" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="40.0" y="467.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="43.0" y="478.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.02%)</title><rect x="40.3" y="595.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="43.3" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.02%)</title><rect x="40.6" y="659.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.6" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=1103573] (33 samples, 0.82%)</title><rect x="40.9" y="739.0" width="9.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="43.9" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (33 samples, 0.82%)</title><rect x="40.9" y="723.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="43.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.10%)</title><rect x="41.8" y="707.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="44.8" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.10%)</title><rect x="41.8" y="691.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="44.8" y="702.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="41.8" y="675.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="44.8" y="686.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="42.1" y="675.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="45.1" y="686.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.05%)</title><rect x="42.4" y="675.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="45.4" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="42.4" y="659.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="45.4" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="42.4" y="643.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="45.4" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.02%)</title><rect x="42.7" y="627.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="45.7" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.02%)</title><rect x="42.7" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="45.7" y="622.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.02%)</title><rect x="42.7" y="595.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="45.7" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (1 samples, 0.02%)</title><rect x="42.7" y="579.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="45.7" y="590.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="42.7" y="563.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="45.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (26 samples, 0.64%)</title><rect x="43.0" y="707.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="46.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (25 samples, 0.62%)</title><rect x="43.2" y="691.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="46.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (16 samples, 0.40%)</title><rect x="43.2" y="675.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (15 samples, 0.37%)</title><rect x="43.2" y="659.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (15 samples, 0.37%)</title><rect x="43.2" y="643.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="46.2" y="654.0"></text>
</g>
<g>
<title>RequestHandler1_entities.handleRequest (13 samples, 0.32%)</title><rect x="43.2" y="627.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="46.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.02%)</title><rect x="43.2" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="46.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.entities (12 samples, 0.30%)</title><rect x="43.5" y="611.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="46.5" y="622.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (12 samples, 0.30%)</title><rect x="43.5" y="595.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.30%)</title><rect x="43.5" y="579.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="46.5" y="590.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (12 samples, 0.30%)</title><rect x="43.5" y="563.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="46.5" y="574.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (12 samples, 0.30%)</title><rect x="43.5" y="547.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (12 samples, 0.30%)</title><rect x="43.5" y="531.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="46.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (12 samples, 0.30%)</title><rect x="43.5" y="515.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="46.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (12 samples, 0.30%)</title><rect x="43.5" y="499.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="46.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.30%)</title><rect x="43.5" y="483.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="46.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.30%)</title><rect x="43.5" y="467.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.5" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.02%)</title><rect x="43.5" y="451.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="46.5" y="462.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.25%)</title><rect x="43.8" y="451.0" width="2.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="46.8" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.22%)</title><rect x="44.1" y="435.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="47.1" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.22%)</title><rect x="44.1" y="419.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="47.1" y="430.0"></text>
</g>
<g>
<title>__se_sys_futex (9 samples, 0.22%)</title><rect x="44.1" y="403.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="47.1" y="414.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.22%)</title><rect x="44.1" y="387.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="47.1" y="398.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.22%)</title><rect x="44.1" y="371.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="47.1" y="382.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.20%)</title><rect x="44.4" y="355.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="47.4" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.20%)</title><rect x="44.4" y="339.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="47.4" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.20%)</title><rect x="44.4" y="323.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="47.4" y="334.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="46.7" y="451.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="49.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.05%)</title><rect x="47.0" y="627.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="50.0" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.05%)</title><rect x="47.0" y="611.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="50.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.05%)</title><rect x="47.0" y="595.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="50.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.05%)</title><rect x="47.0" y="579.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="50.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.05%)</title><rect x="47.0" y="563.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="50.0" y="574.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="47.3" y="547.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="50.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="47.6" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="50.6" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (9 samples, 0.22%)</title><rect x="47.9" y="675.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="50.9" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 0.17%)</title><rect x="48.2" y="659.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.2" y="670.0"></text>
</g>
<g>
<title>recv (6 samples, 0.15%)</title><rect x="48.5" y="643.0" width="1.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="51.5" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.15%)</title><rect x="48.5" y="627.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="51.5" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.15%)</title><rect x="48.5" y="611.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="51.5" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (5 samples, 0.12%)</title><rect x="48.8" y="595.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="51.8" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (5 samples, 0.12%)</title><rect x="48.8" y="579.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="51.8" y="590.0"></text>
</g>
<g>
<title>inet6_recvmsg (5 samples, 0.12%)</title><rect x="48.8" y="563.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="51.8" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 0.12%)</title><rect x="48.8" y="547.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="51.8" y="558.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="49.1" y="531.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="52.1" y="542.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="49.4" y="531.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="52.4" y="542.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="49.4" y="515.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="52.4" y="526.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.02%)</title><rect x="49.7" y="531.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="52.7" y="542.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.02%)</title><rect x="49.7" y="515.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="52.7" y="526.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.02%)</title><rect x="49.7" y="499.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="52.7" y="510.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="49.7" y="483.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="52.7" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="49.7" y="467.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="52.7" y="478.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="50.0" y="531.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="53.0" y="542.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="50.0" y="515.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="53.0" y="526.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="50.0" y="499.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="53.0" y="510.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="50.0" y="483.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="53.0" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.02%)</title><rect x="50.2" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.2" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=1103576] (61 samples, 1.51%)</title><rect x="50.5" y="739.0" width="17.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="53.5" y="750.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.02%)</title><rect x="50.5" y="723.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="53.5" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (60 samples, 1.48%)</title><rect x="50.8" y="723.0" width="17.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 0.15%)</title><rect x="50.8" y="707.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.8" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 0.15%)</title><rect x="50.8" y="691.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.8" y="702.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="50.8" y="675.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="53.8" y="686.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="50.8" y="659.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="53.8" y="670.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.12%)</title><rect x="51.1" y="675.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="54.1" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="51.4" y="659.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="54.4" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.10%)</title><rect x="51.4" y="643.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="54.4" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (4 samples, 0.10%)</title><rect x="51.4" y="627.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="54.4" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (4 samples, 0.10%)</title><rect x="51.4" y="611.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="54.4" y="622.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="51.4" y="595.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="54.4" y="606.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="51.4" y="579.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="54.4" y="590.0"></text>
</g>
<g>
<title>ep_poll (3 samples, 0.07%)</title><rect x="51.7" y="595.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="54.7" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (2 samples, 0.05%)</title><rect x="52.0" y="579.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="55.0" y="590.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (2 samples, 0.05%)</title><rect x="52.0" y="563.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="55.0" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (54 samples, 1.33%)</title><rect x="52.6" y="707.0" width="15.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (53 samples, 1.31%)</title><rect x="52.9" y="691.0" width="15.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.9" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (27 samples, 0.67%)</title><rect x="52.9" y="675.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.9" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (21 samples, 0.52%)</title><rect x="52.9" y="659.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (19 samples, 0.47%)</title><rect x="53.5" y="643.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.5" y="654.0"></text>
</g>
<g>
<title>RequestHandler1_entities.handleRequest (18 samples, 0.44%)</title><rect x="53.5" y="627.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.entities (18 samples, 0.44%)</title><rect x="53.5" y="611.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.5" y="622.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (18 samples, 0.44%)</title><rect x="53.5" y="595.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (18 samples, 0.44%)</title><rect x="53.5" y="579.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.5" y="590.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (18 samples, 0.44%)</title><rect x="53.5" y="563.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="56.5" y="574.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (18 samples, 0.44%)</title><rect x="53.5" y="547.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (18 samples, 0.44%)</title><rect x="53.5" y="531.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (17 samples, 0.42%)</title><rect x="53.7" y="515.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (17 samples, 0.42%)</title><rect x="53.7" y="499.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.42%)</title><rect x="53.7" y="483.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.40%)</title><rect x="54.0" y="467.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.0" y="478.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="54.0" y="451.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="57.0" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="54.3" y="451.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="57.3" y="462.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.05%)</title><rect x="54.6" y="451.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="57.6" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="54.6" y="435.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="57.6" y="446.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="54.9" y="435.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="57.9" y="446.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.30%)</title><rect x="55.2" y="451.0" width="3.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="58.2" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.30%)</title><rect x="55.2" y="435.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="58.2" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.30%)</title><rect x="55.2" y="419.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="58.2" y="430.0"></text>
</g>
<g>
<title>__se_sys_futex (10 samples, 0.25%)</title><rect x="55.8" y="403.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="58.8" y="414.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.25%)</title><rect x="55.8" y="387.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="58.8" y="398.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.25%)</title><rect x="55.8" y="371.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="58.8" y="382.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="55.8" y="355.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="58.8" y="366.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.22%)</title><rect x="56.1" y="355.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="59.1" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.22%)</title><rect x="56.1" y="339.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="59.1" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.22%)</title><rect x="56.1" y="323.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="59.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.02%)</title><rect x="58.7" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.7" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="58.7" y="611.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.7" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="58.7" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.07%)</title><rect x="59.0" y="659.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.02%)</title><rect x="59.0" y="643.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="59.0" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="59.0" y="611.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="59.0" y="595.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="62.0" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.05%)</title><rect x="59.3" y="643.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.3" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.05%)</title><rect x="59.3" y="627.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.07%)</title><rect x="59.9" y="659.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="62.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="60.5" y="643.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.5" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="60.5" y="627.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.02%)</title><rect x="60.5" y="611.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.5" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.07%)</title><rect x="60.7" y="675.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.7" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (23 samples, 0.57%)</title><rect x="61.6" y="675.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.6" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (21 samples, 0.52%)</title><rect x="61.9" y="659.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="64.9" y="670.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.02%)</title><rect x="62.2" y="643.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="65.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.15%)</title><rect x="62.5" y="643.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="65.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.15%)</title><rect x="62.5" y="627.0" width="1.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="65.5" y="638.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.07%)</title><rect x="62.5" y="611.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="65.5" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="62.8" y="595.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="65.8" y="606.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="63.1" y="595.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="66.1" y="606.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="63.4" y="611.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="66.4" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="63.7" y="611.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="66.7" y="622.0"></text>
</g>
<g>
<title>recv (1 samples, 0.02%)</title><rect x="64.0" y="611.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="67.0" y="622.0"></text>
</g>
<g>
<title>recv (13 samples, 0.32%)</title><rect x="64.2" y="643.0" width="3.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="67.2" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.32%)</title><rect x="64.2" y="627.0" width="3.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="67.2" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.32%)</title><rect x="64.2" y="611.0" width="3.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="67.2" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (9 samples, 0.22%)</title><rect x="64.8" y="595.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="67.8" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (9 samples, 0.22%)</title><rect x="64.8" y="579.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="67.8" y="590.0"></text>
</g>
<g>
<title>inet6_recvmsg (8 samples, 0.20%)</title><rect x="65.1" y="563.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="68.1" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (8 samples, 0.20%)</title><rect x="65.1" y="547.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="68.1" y="558.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.05%)</title><rect x="65.1" y="531.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="68.1" y="542.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.05%)</title><rect x="65.1" y="515.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="68.1" y="526.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.05%)</title><rect x="65.1" y="499.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="68.1" y="510.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="65.1" y="483.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="68.1" y="494.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.02%)</title><rect x="65.4" y="483.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="68.4" y="494.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="65.7" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="68.7" y="542.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="65.7" y="515.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="68.7" y="526.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.05%)</title><rect x="66.0" y="531.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="69.0" y="542.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.05%)</title><rect x="66.0" y="515.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="69.0" y="526.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.05%)</title><rect x="66.0" y="499.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="69.0" y="510.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.02%)</title><rect x="66.3" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="69.3" y="494.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="66.3" y="467.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="69.3" y="478.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.07%)</title><rect x="66.6" y="531.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="69.6" y="542.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.05%)</title><rect x="67.5" y="595.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="70.5" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.02%)</title><rect x="68.0" y="659.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.0" y="670.0"></text>
</g>
<g>
<title>[NIO Worker #39 tid=1104880] (757 samples, 18.71%)</title><rect x="68.3" y="739.0" width="220.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="71.3" y="750.0">[NIO Worker #39 tid=1104880]</text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (4 samples, 0.10%)</title><rect x="68.3" y="723.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="71.3" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (4 samples, 0.10%)</title><rect x="68.3" y="707.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="71.3" y="718.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.05%)</title><rect x="68.3" y="691.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="71.3" y="702.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.02%)</title><rect x="68.9" y="691.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="71.9" y="702.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.02%)</title><rect x="69.2" y="691.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="72.2" y="702.0"></text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.07%)</title><rect x="69.5" y="723.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="72.5" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="69.5" y="707.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="72.5" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (1 samples, 0.02%)</title><rect x="69.8" y="707.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="72.8" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (1 samples, 0.02%)</title><rect x="69.8" y="691.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="72.8" y="702.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.02%)</title><rect x="69.8" y="675.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="72.8" y="686.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="70.1" y="707.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="73.1" y="718.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="70.1" y="691.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="73.1" y="702.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="70.1" y="675.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="73.1" y="686.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.02%)</title><rect x="70.4" y="723.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="73.4" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (748 samples, 18.49%)</title><rect x="70.7" y="723.0" width="218.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.7" y="734.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (748 samples, 18.49%)</title><rect x="70.7" y="707.0" width="218.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.7" y="718.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (748 samples, 18.49%)</title><rect x="70.7" y="691.0" width="218.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.7" y="702.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (11 samples, 0.27%)</title><rect x="70.7" y="675.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (11 samples, 0.27%)</title><rect x="70.7" y="659.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="73.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (11 samples, 0.27%)</title><rect x="70.7" y="643.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (11 samples, 0.27%)</title><rect x="70.7" y="627.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.02%)</title><rect x="71.0" y="611.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="74.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (9 samples, 0.22%)</title><rect x="71.2" y="611.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.20%)</title><rect x="71.5" y="595.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="74.5" y="606.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.10%)</title><rect x="71.5" y="579.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="74.5" y="590.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="71.5" y="563.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="74.5" y="574.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.07%)</title><rect x="71.8" y="563.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="74.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="72.7" y="579.0" width="1.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="75.7" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (4 samples, 0.10%)</title><rect x="72.7" y="563.0" width="1.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="75.7" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="73.0" y="547.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="76.0" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="73.0" y="531.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="76.0" y="542.0"></text>
</g>
<g>
<title>__se_sys_futex (3 samples, 0.07%)</title><rect x="73.0" y="515.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="76.0" y="526.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="73.0" y="499.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="76.0" y="510.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.07%)</title><rect x="73.0" y="483.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="76.0" y="494.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.07%)</title><rect x="73.0" y="467.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="76.0" y="478.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (3 samples, 0.07%)</title><rect x="73.0" y="451.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="76.0" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="73.0" y="435.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="76.0" y="446.0"></text>
</g>
<g>
<title>lock_hrtimer_base.isra.0 (1 samples, 0.02%)</title><rect x="73.6" y="435.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="76.6" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="73.6" y="419.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="76.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$53/1493674228.run (737 samples, 18.22%)</title><rect x="73.9" y="675.0" width="214.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.9" y="686.0">ru/mail/polis/service/saloed..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entities$1 (737 samples, 18.22%)</title><rect x="73.9" y="659.0" width="214.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.9" y="670.0">ru/mail/polis/service/saloed..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.retrieveEntities (737 samples, 18.22%)</title><rect x="73.9" y="643.0" width="214.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.9" y="654.0">ru/mail/polis/service/saloed..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (52 samples, 1.29%)</title><rect x="74.2" y="627.0" width="15.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (10 samples, 0.25%)</title><rect x="74.2" y="611.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (10 samples, 0.25%)</title><rect x="74.2" y="595.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="77.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.next (10 samples, 0.25%)</title><rect x="74.2" y="579.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.next (10 samples, 0.25%)</title><rect x="74.2" y="563.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.2" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (5 samples, 0.12%)</title><rect x="74.2" y="547.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.2" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (5 samples, 0.12%)</title><rect x="74.2" y="531.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="77.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Next() (5 samples, 0.12%)</title><rect x="74.2" y="515.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="77.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, bool) (4 samples, 0.10%)</title><rect x="74.2" y="499.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="77.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (3 samples, 0.07%)</title><rect x="74.5" y="483.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="77.5" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (2 samples, 0.05%)</title><rect x="74.5" y="467.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="77.5" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="74.5" y="451.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="77.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (1 samples, 0.02%)</title><rect x="74.7" y="451.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="77.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::FindBlockForward() (1 samples, 0.02%)</title><rect x="74.7" y="435.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="77.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (1 samples, 0.02%)</title><rect x="74.7" y="419.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="77.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (1 samples, 0.02%)</title><rect x="74.7" y="403.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="77.7" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="74.7" y="387.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="77.7" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (1 samples, 0.02%)</title><rect x="74.7" y="371.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="77.7" y="382.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (1 samples, 0.02%)</title><rect x="74.7" y="355.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="77.7" y="366.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (1 samples, 0.02%)</title><rect x="74.7" y="339.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="77.7" y="350.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (1 samples, 0.02%)</title><rect x="74.7" y="323.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="77.7" y="334.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="75.0" y="467.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="78.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (1 samples, 0.02%)</title><rect x="75.3" y="499.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="78.3" y="510.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (3 samples, 0.07%)</title><rect x="75.6" y="547.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="78.6" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (3 samples, 0.07%)</title><rect x="75.6" y="531.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="78.6" y="542.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_key0 (2 samples, 0.05%)</title><rect x="75.6" y="515.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="78.6" y="526.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="75.6" y="499.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="78.6" y="510.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.02%)</title><rect x="75.9" y="499.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="78.9" y="510.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="75.9" y="483.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="78.9" y="494.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.02%)</title><rect x="76.2" y="515.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="79.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.fromArrayShifted (2 samples, 0.05%)</title><rect x="76.5" y="547.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="79.5" y="558.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="76.5" y="531.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="79.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.iterator (42 samples, 1.04%)</title><rect x="77.1" y="611.0" width="12.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.1" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (27 samples, 0.67%)</title><rect x="77.1" y="595.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.1" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (27 samples, 0.67%)</title><rect x="77.1" y="579.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.1" y="590.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (24 samples, 0.59%)</title><rect x="77.1" y="563.0" width="7.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="80.1" y="574.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (2 samples, 0.05%)</title><rect x="77.1" y="547.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="80.1" y="558.0"></text>
</g>
<g>
<title>jni_GetByteArrayElements (1 samples, 0.02%)</title><rect x="77.7" y="547.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="80.7" y="558.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="77.7" y="531.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="80.7" y="542.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="77.7" y="515.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="80.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (21 samples, 0.52%)</title><rect x="78.0" y="547.0" width="6.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="81.0" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="78.0" y="531.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="81.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Seek(rocksdb::Slice const&amp;) (20 samples, 0.49%)</title><rect x="78.2" y="531.0" width="5.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="81.2" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (11 samples, 0.27%)</title><rect x="78.2" y="515.0" width="3.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="81.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Seek(rocksdb::Slice const&amp;) (10 samples, 0.25%)</title><rect x="78.2" y="499.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="81.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (5 samples, 0.12%)</title><rect x="78.2" y="483.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="81.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (5 samples, 0.12%)</title><rect x="78.2" y="467.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="81.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (5 samples, 0.12%)</title><rect x="78.2" y="451.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="81.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (5 samples, 0.12%)</title><rect x="78.2" y="435.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="81.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (5 samples, 0.12%)</title><rect x="78.2" y="419.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="81.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (5 samples, 0.12%)</title><rect x="78.2" y="403.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="81.2" y="414.0"></text>
</g>
<g>
<title>snappy::GetUncompressedLength(char const*, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="78.2" y="387.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="81.2" y="398.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (4 samples, 0.10%)</title><rect x="78.5" y="387.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="81.5" y="398.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (4 samples, 0.10%)</title><rect x="78.5" y="371.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="81.5" y="382.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (4 samples, 0.10%)</title><rect x="78.5" y="355.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="81.5" y="366.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (4 samples, 0.10%)</title><rect x="78.5" y="339.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="81.5" y="350.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (4 samples, 0.10%)</title><rect x="78.5" y="323.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="81.5" y="334.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="78.5" y="307.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="81.5" y="318.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (3 samples, 0.07%)</title><rect x="78.8" y="307.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="81.8" y="318.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (3 samples, 0.07%)</title><rect x="78.8" y="291.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="81.8" y="302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="79.4" y="275.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="82.4" y="286.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (3 samples, 0.07%)</title><rect x="79.7" y="483.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="82.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.05%)</title><rect x="80.0" y="467.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="83.0" y="478.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="80.0" y="451.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="83.0" y="462.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="80.3" y="451.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="83.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (2 samples, 0.05%)</title><rect x="80.6" y="483.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="83.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.02%)</title><rect x="80.9" y="467.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="83.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::FindFile(rocksdb::InternalKeyComparator const&amp;, rocksdb::LevelFilesBrief const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="81.2" y="499.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="84.2" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="81.2" y="483.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="84.2" y="494.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="81.2" y="467.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="84.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Seek(rocksdb::Slice const&amp;) (7 samples, 0.17%)</title><rect x="81.5" y="515.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="84.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (3 samples, 0.07%)</title><rect x="81.5" y="499.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="84.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (2 samples, 0.05%)</title><rect x="81.5" y="483.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="84.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (2 samples, 0.05%)</title><rect x="81.5" y="467.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="84.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, unsigned long, bool, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="81.7" y="451.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="84.7" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="81.7" y="435.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="84.7" y="446.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="81.7" y="419.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="84.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::value() const (1 samples, 0.02%)</title><rect x="82.0" y="483.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="85.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (1 samples, 0.02%)</title><rect x="82.0" y="467.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="85.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (2 samples, 0.05%)</title><rect x="82.3" y="499.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="85.3" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="82.3" y="483.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="85.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.02%)</title><rect x="82.6" y="483.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="85.6" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="82.6" y="467.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="85.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (2 samples, 0.05%)</title><rect x="82.9" y="499.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="85.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.05%)</title><rect x="82.9" y="483.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="85.9" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="83.2" y="467.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="86.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (2 samples, 0.05%)</title><rect x="83.5" y="515.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="86.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::EncodeKey(std::string*, rocksdb::Slice const&amp;) (2 samples, 0.05%)</title><rect x="83.5" y="499.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="86.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="84.1" y="563.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="87.1" y="574.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.02%)</title><rect x="84.1" y="547.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="87.1" y="558.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="84.4" y="563.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="87.4" y="574.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.02%)</title><rect x="84.7" y="563.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="87.7" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (15 samples, 0.37%)</title><rect x="85.0" y="595.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="88.0" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (15 samples, 0.37%)</title><rect x="85.0" y="579.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="88.0" y="590.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_iterator__J (7 samples, 0.17%)</title><rect x="85.0" y="563.0" width="2.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="88.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (6 samples, 0.15%)</title><rect x="85.2" y="547.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="88.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (6 samples, 0.15%)</title><rect x="85.2" y="531.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="88.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewInternalIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*, rocksdb::Arena*, rocksdb::RangeDelAggregator*, unsigned long) (4 samples, 0.10%)</title><rect x="85.2" y="515.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="88.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIterators(rocksdb::ReadOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::MergeIteratorBuilder*, rocksdb::RangeDelAggregator*) (4 samples, 0.10%)</title><rect x="85.2" y="499.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="88.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::PackFileNumberAndPathId(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="85.2" y="483.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="88.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIteratorsForLevel(rocksdb::ReadOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::MergeIteratorBuilder*, int, rocksdb::RangeDelAggregator*) (3 samples, 0.07%)</title><rect x="85.5" y="483.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="88.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int, rocksdb::InternalKey const*, rocksdb::InternalKey const*) (2 samples, 0.05%)</title><rect x="85.8" y="467.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="88.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::SliceTransform const*, rocksdb::Arena*, bool, bool) (2 samples, 0.05%)</title><rect x="85.8" y="451.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="88.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::IndexBlockIter*, bool, bool) (1 samples, 0.02%)</title><rect x="86.1" y="435.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="89.1" y="446.0"></text>
</g>
<g>
<title>rocksdb::NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (2 samples, 0.05%)</title><rect x="86.4" y="515.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="89.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Init(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (1 samples, 0.02%)</title><rect x="86.4" y="499.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="89.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.02%)</title><rect x="86.7" y="499.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="89.7" y="510.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.05%)</title><rect x="87.0" y="563.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="90.0" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="87.3" y="547.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="90.3" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="87.3" y="531.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="90.3" y="542.0"></text>
</g>
<g>
<title>__GI___mprotect (1 samples, 0.02%)</title><rect x="87.6" y="563.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="90.6" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="87.6" y="547.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="90.6" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="87.6" y="531.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="90.6" y="542.0"></text>
</g>
<g>
<title>__x64_sys_mprotect (1 samples, 0.02%)</title><rect x="87.6" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="90.6" y="526.0"></text>
</g>
<g>
<title>do_mprotect_pkey (1 samples, 0.02%)</title><rect x="87.6" y="499.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="90.6" y="510.0"></text>
</g>
<g>
<title>mprotect_fixup (1 samples, 0.02%)</title><rect x="87.6" y="483.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="90.6" y="494.0"></text>
</g>
<g>
<title>vma_merge (1 samples, 0.02%)</title><rect x="87.6" y="467.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="90.6" y="478.0"></text>
</g>
<g>
<title>__vma_adjust (1 samples, 0.02%)</title><rect x="87.6" y="451.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="90.6" y="462.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.02%)</title><rect x="87.9" y="563.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="90.9" y="574.0"></text>
</g>
<g>
<title>malloc_consolidate (1 samples, 0.02%)</title><rect x="88.2" y="563.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="91.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.02%)</title><rect x="88.5" y="563.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="91.5" y="574.0"></text>
</g>
<g>
<title>sysmalloc (1 samples, 0.02%)</title><rect x="88.7" y="563.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="91.7" y="574.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="88.7" y="547.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="91.7" y="558.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="88.7" y="531.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="91.7" y="542.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="88.7" y="515.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="91.7" y="526.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="88.7" y="499.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="91.7" y="510.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="88.7" y="483.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="91.7" y="494.0"></text>
</g>
<g>
<title>__lru_cache_add (1 samples, 0.02%)</title><rect x="88.7" y="467.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="91.7" y="478.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="88.7" y="451.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="91.7" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="88.7" y="435.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="91.7" y="446.0"></text>
</g>
<g>
<title>unlink_chunk.isra.0 (1 samples, 0.02%)</title><rect x="89.0" y="563.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="92.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.stream (684 samples, 16.91%)</title><rect x="89.3" y="627.0" width="199.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.3" y="638.0">ru/mail/polis/service/salo..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (21 samples, 0.52%)</title><rect x="89.3" y="611.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="92.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.02%)</title><rect x="89.3" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.3" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.02%)</title><rect x="89.3" y="579.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="92.3" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="89.3" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.3" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="89.3" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="92.3" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (20 samples, 0.49%)</title><rect x="89.6" y="595.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.6" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (20 samples, 0.49%)</title><rect x="89.6" y="579.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="92.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (20 samples, 0.49%)</title><rect x="89.6" y="563.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="92.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (20 samples, 0.49%)</title><rect x="89.6" y="547.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="92.6" y="558.0"></text>
</g>
<g>
<title>__send (20 samples, 0.49%)</title><rect x="89.6" y="531.0" width="5.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="92.6" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.49%)</title><rect x="89.6" y="515.0" width="5.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="92.6" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.49%)</title><rect x="89.6" y="499.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="92.6" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (20 samples, 0.49%)</title><rect x="89.6" y="483.0" width="5.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="92.6" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (20 samples, 0.49%)</title><rect x="89.6" y="467.0" width="5.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="92.6" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (20 samples, 0.49%)</title><rect x="89.6" y="451.0" width="5.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="92.6" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (20 samples, 0.49%)</title><rect x="89.6" y="435.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="92.6" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (20 samples, 0.49%)</title><rect x="89.6" y="419.0" width="5.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="92.6" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (16 samples, 0.40%)</title><rect x="89.9" y="403.0" width="4.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="92.9" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (16 samples, 0.40%)</title><rect x="89.9" y="387.0" width="4.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="92.9" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (14 samples, 0.35%)</title><rect x="89.9" y="371.0" width="4.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="92.9" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (14 samples, 0.35%)</title><rect x="89.9" y="355.0" width="4.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="92.9" y="366.0"></text>
</g>
<g>
<title>ip_output (14 samples, 0.35%)</title><rect x="89.9" y="339.0" width="4.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="92.9" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (14 samples, 0.35%)</title><rect x="89.9" y="323.0" width="4.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="92.9" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.05%)</title><rect x="89.9" y="307.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="92.9" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="90.2" y="291.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="93.2" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="90.2" y="275.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="93.2" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="90.2" y="259.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="93.2" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (12 samples, 0.30%)</title><rect x="90.5" y="307.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="93.5" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (11 samples, 0.27%)</title><rect x="90.8" y="291.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="93.8" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (11 samples, 0.27%)</title><rect x="90.8" y="275.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="93.8" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (11 samples, 0.27%)</title><rect x="90.8" y="259.0" width="3.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="93.8" y="270.0"></text>
</g>
<g>
<title>net_rx_action (11 samples, 0.27%)</title><rect x="90.8" y="243.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="93.8" y="254.0"></text>
</g>
<g>
<title>process_backlog (11 samples, 0.27%)</title><rect x="90.8" y="227.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="93.8" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (11 samples, 0.27%)</title><rect x="90.8" y="211.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="93.8" y="222.0"></text>
</g>
<g>
<title>ip_rcv (10 samples, 0.25%)</title><rect x="91.1" y="195.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="94.1" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (9 samples, 0.22%)</title><rect x="91.1" y="179.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="94.1" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (8 samples, 0.20%)</title><rect x="91.4" y="163.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="94.4" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (8 samples, 0.20%)</title><rect x="91.4" y="147.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="94.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (8 samples, 0.20%)</title><rect x="91.4" y="131.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="94.4" y="142.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="91.4" y="115.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="94.4" y="126.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="91.4" y="99.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="94.4" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (7 samples, 0.17%)</title><rect x="91.7" y="115.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="94.7" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (7 samples, 0.17%)</title><rect x="91.7" y="99.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="94.7" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.10%)</title><rect x="91.7" y="83.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="94.7" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.07%)</title><rect x="92.0" y="67.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="95.0" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="92.0" y="51.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="95.0" y="62.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.07%)</title><rect x="92.8" y="83.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="95.8" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.07%)</title><rect x="92.8" y="67.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="95.8" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="92.8" y="51.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="95.8" y="62.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="93.1" y="51.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="96.1" y="62.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="93.1" y="35.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="96.1" y="46.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="93.4" y="51.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="96.4" y="62.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.02%)</title><rect x="93.7" y="179.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="96.7" y="190.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.05%)</title><rect x="94.0" y="371.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="97.0" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="94.0" y="355.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="97.0" y="366.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="94.0" y="339.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="97.0" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="94.0" y="323.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="97.0" y="334.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.0 (1 samples, 0.02%)</title><rect x="94.3" y="355.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="97.3" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="94.6" y="403.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="97.6" y="414.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.02%)</title><rect x="94.6" y="387.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="97.6" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="94.6" y="371.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="97.6" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.02%)</title><rect x="94.9" y="403.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="97.9" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="94.9" y="387.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="97.9" y="398.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="95.2" y="403.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="98.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.next (663 samples, 16.39%)</title><rect x="95.5" y="611.0" width="193.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="98.5" y="622.0">ru/mail/polis/service/sal..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.hasNext (8 samples, 0.20%)</title><rect x="96.3" y="595.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.compareTo (8 samples, 0.20%)</title><rect x="96.3" y="579.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="99.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.compareTo (8 samples, 0.20%)</title><rect x="96.3" y="563.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.20%)</title><rect x="96.3" y="547.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.3" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.20%)</title><rect x="96.3" y="531.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (121 samples, 2.99%)</title><rect x="98.7" y="595.0" width="35.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="101.7" y="606.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.hasNext (1 samples, 0.02%)</title><rect x="99.0" y="579.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (119 samples, 2.94%)</title><rect x="99.2" y="579.0" width="34.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="102.2" y="590.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.hasNext (4 samples, 0.10%)</title><rect x="99.2" y="563.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.2" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.isValid (4 samples, 0.10%)</title><rect x="99.2" y="547.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="102.2" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.isValid0 (3 samples, 0.07%)</title><rect x="99.5" y="531.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="102.5" y="542.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_isValid0 (2 samples, 0.05%)</title><rect x="99.8" y="515.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="102.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.next (115 samples, 2.84%)</title><rect x="100.4" y="563.0" width="33.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="103.4" y="574.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.next (115 samples, 2.84%)</title><rect x="100.4" y="547.0" width="33.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.4" y="558.0">ru..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (70 samples, 1.73%)</title><rect x="100.4" y="531.0" width="20.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="103.4" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (69 samples, 1.71%)</title><rect x="100.7" y="515.0" width="20.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.7" y="526.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_next0 (1 samples, 0.02%)</title><rect x="101.0" y="499.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="104.0" y="510.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.02%)</title><rect x="101.3" y="499.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="104.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Next() (64 samples, 1.58%)</title><rect x="101.6" y="499.0" width="18.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="104.6" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="102.2" y="483.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="105.2" y="494.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="102.5" y="483.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="105.5" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="102.7" y="483.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="105.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, bool) (28 samples, 0.69%)</title><rect x="103.6" y="483.0" width="8.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="106.6" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (2 samples, 0.05%)</title><rect x="106.5" y="467.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="109.5" y="478.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="107.1" y="467.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="110.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (15 samples, 0.37%)</title><rect x="107.4" y="467.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="110.4" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (9 samples, 0.22%)</title><rect x="108.9" y="451.0" width="2.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="111.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (8 samples, 0.20%)</title><rect x="109.2" y="435.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="112.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::FindBlockForward() (6 samples, 0.15%)</title><rect x="109.2" y="419.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="112.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (6 samples, 0.15%)</title><rect x="109.2" y="403.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="112.2" y="414.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (6 samples, 0.15%)</title><rect x="109.2" y="387.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="112.2" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (6 samples, 0.15%)</title><rect x="109.2" y="371.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="112.2" y="382.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (6 samples, 0.15%)</title><rect x="109.2" y="355.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="112.2" y="366.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(unsigned long, unsigned long, rocksdb::Slice*, char*) const (1 samples, 0.02%)</title><rect x="109.2" y="339.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="112.2" y="350.0"></text>
</g>
<g>
<title>__libc_pread64 (1 samples, 0.02%)</title><rect x="109.2" y="323.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="112.2" y="334.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="109.2" y="307.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="112.2" y="318.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="109.2" y="291.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="112.2" y="302.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.02%)</title><rect x="109.2" y="275.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="112.2" y="286.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.02%)</title><rect x="109.2" y="259.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="112.2" y="270.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.02%)</title><rect x="109.2" y="243.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="112.2" y="254.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (5 samples, 0.12%)</title><rect x="109.5" y="339.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="112.5" y="350.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (5 samples, 0.12%)</title><rect x="109.5" y="323.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="112.5" y="334.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (5 samples, 0.12%)</title><rect x="109.5" y="307.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="112.5" y="318.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (5 samples, 0.12%)</title><rect x="109.5" y="291.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="112.5" y="302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (5 samples, 0.12%)</title><rect x="109.5" y="275.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="112.5" y="286.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (5 samples, 0.12%)</title><rect x="109.5" y="259.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="112.5" y="270.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (5 samples, 0.12%)</title><rect x="109.5" y="243.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="112.5" y="254.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (3 samples, 0.07%)</title><rect x="109.7" y="227.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="112.7" y="238.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (3 samples, 0.07%)</title><rect x="109.7" y="211.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="112.7" y="222.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="110.3" y="195.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="113.3" y="206.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::TryFastAppend(char const*, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="110.6" y="227.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="113.6" y="238.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="110.6" y="211.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="113.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Next() (2 samples, 0.05%)</title><rect x="110.9" y="419.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="113.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (2 samples, 0.05%)</title><rect x="110.9" y="403.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="113.9" y="414.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="111.5" y="451.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="114.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::DBIter::TooManyInternalKeysSkipped(bool) (2 samples, 0.05%)</title><rect x="111.8" y="483.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="114.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (27 samples, 0.67%)</title><rect x="112.4" y="483.0" width="7.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="115.4" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (9 samples, 0.22%)</title><rect x="113.8" y="467.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="116.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (8 samples, 0.20%)</title><rect x="114.1" y="451.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="117.1" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::FindBlockForward() (5 samples, 0.12%)</title><rect x="114.1" y="435.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="117.1" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (5 samples, 0.12%)</title><rect x="114.1" y="419.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="117.1" y="430.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (5 samples, 0.12%)</title><rect x="114.1" y="403.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="117.1" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (5 samples, 0.12%)</title><rect x="114.1" y="387.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="117.1" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, unsigned long, bool, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="114.1" y="371.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="117.1" y="382.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="114.1" y="355.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="117.1" y="366.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="114.1" y="339.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="117.1" y="350.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="114.1" y="323.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="117.1" y="334.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="114.1" y="307.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="117.1" y="318.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (4 samples, 0.10%)</title><rect x="114.4" y="371.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="117.4" y="382.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (3 samples, 0.07%)</title><rect x="114.7" y="355.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="117.7" y="366.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (3 samples, 0.07%)</title><rect x="114.7" y="339.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="117.7" y="350.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (3 samples, 0.07%)</title><rect x="114.7" y="323.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="117.7" y="334.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (3 samples, 0.07%)</title><rect x="114.7" y="307.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="117.7" y="318.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (3 samples, 0.07%)</title><rect x="114.7" y="291.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="117.7" y="302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (3 samples, 0.07%)</title><rect x="114.7" y="275.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="117.7" y="286.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (3 samples, 0.07%)</title><rect x="114.7" y="259.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="117.7" y="270.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="114.7" y="243.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="117.7" y="254.0"></text>
</g>
<g>
<title>snappy::LittleEndian::Load32(void const*) (1 samples, 0.02%)</title><rect x="115.0" y="243.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="118.0" y="254.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::TryFastAppend(char const*, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="115.3" y="243.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="118.3" y="254.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Next() (2 samples, 0.05%)</title><rect x="115.6" y="435.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="118.6" y="446.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="115.9" y="419.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="118.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.02%)</title><rect x="116.2" y="435.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="119.2" y="446.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="116.5" y="467.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="119.5" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="116.7" y="467.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="119.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Next() (2 samples, 0.05%)</title><rect x="117.0" y="467.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="120.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (9 samples, 0.22%)</title><rect x="117.6" y="467.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="120.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::FindBlockForward() (4 samples, 0.10%)</title><rect x="118.2" y="451.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="121.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (4 samples, 0.10%)</title><rect x="118.2" y="435.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="121.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (4 samples, 0.10%)</title><rect x="118.2" y="419.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="121.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (4 samples, 0.10%)</title><rect x="118.2" y="403.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="121.2" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (4 samples, 0.10%)</title><rect x="118.2" y="387.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="121.2" y="398.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (4 samples, 0.10%)</title><rect x="118.2" y="371.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="121.2" y="382.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (4 samples, 0.10%)</title><rect x="118.2" y="355.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="121.2" y="366.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (4 samples, 0.10%)</title><rect x="118.2" y="339.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="121.2" y="350.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (4 samples, 0.10%)</title><rect x="118.2" y="323.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="121.2" y="334.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (4 samples, 0.10%)</title><rect x="118.2" y="307.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="121.2" y="318.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (4 samples, 0.10%)</title><rect x="118.2" y="291.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="121.2" y="302.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (4 samples, 0.10%)</title><rect x="118.2" y="275.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="121.2" y="286.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (2 samples, 0.05%)</title><rect x="118.8" y="259.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="121.8" y="270.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::Produced() const (2 samples, 0.05%)</title><rect x="118.8" y="243.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="121.8" y="254.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Next() (2 samples, 0.05%)</title><rect x="119.4" y="451.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="122.4" y="462.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.02%)</title><rect x="119.4" y="435.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="122.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.02%)</title><rect x="119.7" y="435.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="122.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.02%)</title><rect x="120.0" y="451.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="123.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, bool) (1 samples, 0.02%)</title><rect x="120.2" y="499.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="123.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Valid() const (1 samples, 0.02%)</title><rect x="120.5" y="499.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="123.5" y="510.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (17 samples, 0.42%)</title><rect x="120.8" y="531.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.8" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (16 samples, 0.40%)</title><rect x="121.1" y="515.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="124.1" y="526.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_key0 (14 samples, 0.35%)</title><rect x="121.1" y="499.0" width="4.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="124.1" y="510.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="121.1" y="483.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="124.1" y="494.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="121.4" y="483.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="124.4" y="494.0"></text>
</g>
<g>
<title>jni_NewByteArray (10 samples, 0.25%)</title><rect x="121.7" y="483.0" width="2.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="124.7" y="494.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.02%)</title><rect x="122.3" y="467.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="125.3" y="478.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="122.6" y="467.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="125.6" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="123.2" y="467.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="126.2" y="478.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.10%)</title><rect x="123.5" y="467.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="126.5" y="478.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.10%)</title><rect x="123.5" y="451.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="126.5" y="462.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.10%)</title><rect x="123.5" y="435.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="126.5" y="446.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="124.0" y="419.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="127.0" y="430.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="124.0" y="403.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="127.0" y="414.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="124.0" y="387.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="127.0" y="398.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.02%)</title><rect x="124.0" y="371.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="127.0" y="382.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="124.3" y="419.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="127.3" y="430.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.05%)</title><rect x="124.6" y="483.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="127.6" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="124.6" y="467.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="127.6" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="124.9" y="467.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="127.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::key() const (2 samples, 0.05%)</title><rect x="125.2" y="499.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="128.2" y="510.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value (20 samples, 0.49%)</title><rect x="125.8" y="531.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="128.8" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value0 (20 samples, 0.49%)</title><rect x="125.8" y="515.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.8" y="526.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_value0 (18 samples, 0.44%)</title><rect x="126.4" y="499.0" width="5.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="129.4" y="510.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="126.7" y="483.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="129.7" y="494.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="127.0" y="483.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="130.0" y="494.0"></text>
</g>
<g>
<title>jni_NewByteArray (7 samples, 0.17%)</title><rect x="127.5" y="483.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="130.5" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="127.8" y="467.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="130.8" y="478.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.12%)</title><rect x="128.1" y="467.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="131.1" y="478.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.12%)</title><rect x="128.1" y="451.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="131.1" y="462.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.12%)</title><rect x="128.1" y="435.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="131.1" y="446.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.05%)</title><rect x="128.7" y="419.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="131.7" y="430.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="129.3" y="419.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="132.3" y="430.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.10%)</title><rect x="129.6" y="483.0" width="1.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="132.6" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="129.9" y="467.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="132.9" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="130.4" y="467.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="133.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::value() const (3 samples, 0.07%)</title><rect x="130.7" y="483.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="133.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::value() const (1 samples, 0.02%)</title><rect x="131.0" y="467.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="134.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::value() const (1 samples, 0.02%)</title><rect x="131.3" y="467.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="134.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.fromArray (1 samples, 0.02%)</title><rect x="131.6" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="131.6" y="515.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.6" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="131.6" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="131.6" y="483.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="134.6" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="131.6" y="467.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="134.6" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="131.6" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="134.6" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="131.6" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.6" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="131.6" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="134.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.fromArrayShifted (5 samples, 0.12%)</title><rect x="131.9" y="531.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="134.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="132.2" y="515.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="135.2" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (2 samples, 0.05%)</title><rect x="132.2" y="499.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.2" y="510.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="132.8" y="515.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="135.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.hasNext (2 samples, 0.05%)</title><rect x="133.4" y="531.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.4" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.isValid (2 samples, 0.05%)</title><rect x="133.4" y="515.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="136.4" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.isValid0 (1 samples, 0.02%)</title><rect x="133.7" y="499.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="136.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.handleStreamEnding (8 samples, 0.20%)</title><rect x="133.9" y="595.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.9" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.20%)</title><rect x="133.9" y="579.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="136.9" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.20%)</title><rect x="133.9" y="563.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.9" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (8 samples, 0.20%)</title><rect x="133.9" y="547.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.9" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (8 samples, 0.20%)</title><rect x="133.9" y="531.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="136.9" y="542.0"></text>
</g>
<g>
<title>__send (8 samples, 0.20%)</title><rect x="133.9" y="515.0" width="2.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="136.9" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.20%)</title><rect x="133.9" y="499.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="136.9" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.20%)</title><rect x="133.9" y="483.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="136.9" y="494.0"></text>
</g>
<g>
<title>__x64_sys_sendto (8 samples, 0.20%)</title><rect x="133.9" y="467.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="136.9" y="478.0"></text>
</g>
<g>
<title>__sys_sendto (8 samples, 0.20%)</title><rect x="133.9" y="451.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="136.9" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (8 samples, 0.20%)</title><rect x="133.9" y="435.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="136.9" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg (8 samples, 0.20%)</title><rect x="133.9" y="419.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="136.9" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (8 samples, 0.20%)</title><rect x="133.9" y="403.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="136.9" y="414.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (8 samples, 0.20%)</title><rect x="133.9" y="387.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="136.9" y="398.0"></text>
</g>
<g>
<title>tcp_write_xmit (8 samples, 0.20%)</title><rect x="133.9" y="371.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="136.9" y="382.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (7 samples, 0.17%)</title><rect x="133.9" y="355.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="136.9" y="366.0"></text>
</g>
<g>
<title>__ip_queue_xmit (5 samples, 0.12%)</title><rect x="134.5" y="339.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="137.5" y="350.0"></text>
</g>
<g>
<title>ip_output (5 samples, 0.12%)</title><rect x="134.5" y="323.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="137.5" y="334.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 0.10%)</title><rect x="134.8" y="307.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="137.8" y="318.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.10%)</title><rect x="134.8" y="291.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="137.8" y="302.0"></text>
</g>
<g>
<title>do_softirq.part.0 (4 samples, 0.10%)</title><rect x="134.8" y="275.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="137.8" y="286.0"></text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 0.10%)</title><rect x="134.8" y="259.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="137.8" y="270.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.10%)</title><rect x="134.8" y="243.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="137.8" y="254.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.07%)</title><rect x="135.1" y="227.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="138.1" y="238.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.07%)</title><rect x="135.1" y="211.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="138.1" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.05%)</title><rect x="135.4" y="195.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="138.4" y="206.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.05%)</title><rect x="135.4" y="179.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="138.4" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.05%)</title><rect x="135.4" y="163.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="138.4" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.05%)</title><rect x="135.4" y="147.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="138.4" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.05%)</title><rect x="135.4" y="131.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="138.4" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.05%)</title><rect x="135.4" y="115.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="138.4" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="135.4" y="99.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="138.4" y="110.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="135.4" y="83.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="138.4" y="94.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.02%)</title><rect x="135.7" y="99.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="138.7" y="110.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.02%)</title><rect x="135.7" y="83.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="138.7" y="94.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="136.0" y="355.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="139.0" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="136.0" y="339.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="139.0" y="350.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="136.0" y="323.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="139.0" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="136.0" y="307.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="139.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.writeRecord (523 samples, 12.93%)</title><rect x="136.3" y="595.0" width="152.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="139.3" y="606.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>java/lang/Integer.toHexString (5 samples, 0.12%)</title><rect x="136.3" y="579.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="139.3" y="590.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (5 samples, 0.12%)</title><rect x="136.3" y="563.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="139.3" y="574.0"></text>
</g>
<g>
<title>java/lang/Integer.formatUnsignedInt (5 samples, 0.12%)</title><rect x="136.3" y="547.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="139.3" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="137.2" y="531.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="140.2" y="542.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="137.2" y="515.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="140.2" y="526.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="137.4" y="531.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="140.4" y="542.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="137.4" y="515.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="140.4" y="526.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="137.4" y="499.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="140.4" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (518 samples, 12.80%)</title><rect x="137.7" y="579.0" width="151.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="140.7" y="590.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/net/Session.write (518 samples, 12.80%)</title><rect x="137.7" y="563.0" width="151.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="140.7" y="574.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.05%)</title><rect x="139.2" y="547.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.2" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (511 samples, 12.63%)</title><rect x="139.8" y="547.0" width="149.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.8" y="558.0">one/nio/net/Session..</text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.05%)</title><rect x="146.5" y="531.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="149.5" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.17%)</title><rect x="147.1" y="531.0" width="2.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="150.1" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (479 samples, 11.84%)</title><rect x="149.1" y="531.0" width="139.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.1" y="542.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.05%)</title><rect x="150.9" y="515.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="153.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.12%)</title><rect x="151.4" y="515.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="154.4" y="526.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.12%)</title><rect x="151.4" y="499.0" width="1.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="154.4" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.05%)</title><rect x="151.4" y="483.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="154.4" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="151.4" y="467.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="154.4" y="478.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="151.4" y="451.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="154.4" y="462.0"></text>
</g>
<g>
<title>__send (3 samples, 0.07%)</title><rect x="152.0" y="483.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="155.0" y="494.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="152.9" y="515.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="155.9" y="526.0"></text>
</g>
<g>
<title>__send (465 samples, 11.49%)</title><rect x="153.2" y="515.0" width="135.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="156.2" y="526.0">__send</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="159.6" y="499.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="162.6" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (441 samples, 10.90%)</title><rect x="160.2" y="499.0" width="128.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="163.2" y="510.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>do_syscall_64 (441 samples, 10.90%)</title><rect x="160.2" y="483.0" width="128.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="163.2" y="494.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (419 samples, 10.36%)</title><rect x="164.9" y="467.0" width="122.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="167.9" y="478.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (417 samples, 10.31%)</title><rect x="165.4" y="451.0" width="121.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="168.4" y="462.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="166.3" y="435.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="169.3" y="446.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.07%)</title><rect x="166.6" y="435.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="169.6" y="446.0"></text>
</g>
<g>
<title>sock_sendmsg (406 samples, 10.03%)</title><rect x="167.5" y="435.0" width="118.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="170.5" y="446.0">sock_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (404 samples, 9.99%)</title><rect x="168.1" y="419.0" width="117.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="171.1" y="430.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.10%)</title><rect x="168.4" y="403.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="171.4" y="414.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.02%)</title><rect x="168.4" y="387.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="171.4" y="398.0"></text>
</g>
<g>
<title>preempt_count_sub (3 samples, 0.07%)</title><rect x="168.7" y="387.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="171.7" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="169.5" y="403.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="172.5" y="414.0"></text>
</g>
<g>
<title>lock_sock_nested (20 samples, 0.49%)</title><rect x="169.8" y="403.0" width="5.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="172.8" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (20 samples, 0.49%)</title><rect x="169.8" y="387.0" width="5.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="172.8" y="398.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (14 samples, 0.35%)</title><rect x="171.0" y="371.0" width="4.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="174.0" y="382.0"></text>
</g>
<g>
<title>preempt_count_add (2 samples, 0.05%)</title><rect x="175.1" y="371.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="178.1" y="382.0"></text>
</g>
<g>
<title>release_sock (43 samples, 1.06%)</title><rect x="175.7" y="403.0" width="12.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="178.7" y="414.0"></text>
</g>
<g>
<title>__release_sock (33 samples, 0.82%)</title><rect x="176.8" y="387.0" width="9.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="179.8" y="398.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (33 samples, 0.82%)</title><rect x="176.8" y="371.0" width="9.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="179.8" y="382.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="177.1" y="355.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="180.1" y="366.0"></text>
</g>
<g>
<title>tcp_rcv_established (31 samples, 0.77%)</title><rect x="177.4" y="355.0" width="9.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="180.4" y="366.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.10%)</title><rect x="177.7" y="339.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="180.7" y="350.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.05%)</title><rect x="177.7" y="323.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="180.7" y="334.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="178.3" y="323.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="181.3" y="334.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="178.9" y="339.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="181.9" y="350.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="178.9" y="323.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="181.9" y="334.0"></text>
</g>
<g>
<title>tcp_ack (25 samples, 0.62%)</title><rect x="179.2" y="339.0" width="7.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="182.2" y="350.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.05%)</title><rect x="182.4" y="323.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="185.4" y="334.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="182.4" y="307.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="185.4" y="318.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="182.4" y="291.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="185.4" y="302.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="182.7" y="307.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="185.7" y="318.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.05%)</title><rect x="182.9" y="323.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="185.9" y="334.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.02%)</title><rect x="183.5" y="323.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="186.5" y="334.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.02%)</title><rect x="183.8" y="323.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="186.8" y="334.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="184.1" y="323.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="187.1" y="334.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="184.4" y="323.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="187.4" y="334.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (5 samples, 0.12%)</title><rect x="184.7" y="323.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="187.7" y="334.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.07%)</title><rect x="185.3" y="307.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="188.3" y="318.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.07%)</title><rect x="185.3" y="291.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="188.3" y="302.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="185.3" y="275.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="188.3" y="286.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="186.2" y="323.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="189.2" y="334.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.07%)</title><rect x="186.4" y="387.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="189.4" y="398.0"></text>
</g>
<g>
<title>preempt_count_add (2 samples, 0.05%)</title><rect x="186.7" y="371.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="189.7" y="382.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.07%)</title><rect x="187.3" y="387.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="190.3" y="398.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (335 samples, 8.28%)</title><rect x="188.2" y="403.0" width="97.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="191.2" y="414.0">tcp_sendmsg..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.07%)</title><rect x="190.5" y="387.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="193.5" y="398.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="191.1" y="371.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="194.1" y="382.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (277 samples, 6.85%)</title><rect x="191.4" y="387.0" width="80.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="194.4" y="398.0">__tcp_pus..</text>
</g>
<g>
<title>tcp_write_xmit (275 samples, 6.80%)</title><rect x="192.0" y="371.0" width="80.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="195.0" y="382.0">tcp_write..</text>
</g>
<g>
<title>__tcp_transmit_skb (229 samples, 5.66%)</title><rect x="195.2" y="355.0" width="66.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="198.2" y="366.0">__tcp_t..</text>
</g>
<g>
<title>__ip_queue_xmit (209 samples, 5.17%)</title><rect x="198.1" y="339.0" width="61.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="201.1" y="350.0">__ip_q..</text>
</g>
<g>
<title>__sk_dst_check (5 samples, 0.12%)</title><rect x="199.3" y="323.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="202.3" y="334.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="199.9" y="307.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="202.9" y="318.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="200.2" y="307.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="203.2" y="318.0"></text>
</g>
<g>
<title>ip_local_out (6 samples, 0.15%)</title><rect x="200.7" y="323.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="203.7" y="334.0"></text>
</g>
<g>
<title>__ip_local_out (6 samples, 0.15%)</title><rect x="200.7" y="307.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="203.7" y="318.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.02%)</title><rect x="202.2" y="291.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="205.2" y="302.0"></text>
</g>
<g>
<title>ip_output (194 samples, 4.79%)</title><rect x="202.5" y="323.0" width="56.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="205.5" y="334.0">ip_out..</text>
</g>
<g>
<title>__ip_finish_output (4 samples, 0.10%)</title><rect x="203.9" y="307.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="206.9" y="318.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.05%)</title><rect x="204.5" y="291.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="207.5" y="302.0"></text>
</g>
<g>
<title>ip_finish_output2 (182 samples, 4.50%)</title><rect x="205.1" y="307.0" width="53.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="208.1" y="318.0">ip_fi..</text>
</g>
<g>
<title>__dev_queue_xmit (34 samples, 0.84%)</title><rect x="207.7" y="291.0" width="10.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="210.7" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="211.2" y="275.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="214.2" y="286.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="211.2" y="259.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="214.2" y="270.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (19 samples, 0.47%)</title><rect x="211.5" y="275.0" width="5.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="214.5" y="286.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.02%)</title><rect x="212.1" y="259.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="215.1" y="270.0"></text>
</g>
<g>
<title>loopback_xmit (16 samples, 0.40%)</title><rect x="212.4" y="259.0" width="4.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="215.4" y="270.0"></text>
</g>
<g>
<title>netif_rx (11 samples, 0.27%)</title><rect x="212.7" y="243.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="215.7" y="254.0"></text>
</g>
<g>
<title>netif_rx_internal (11 samples, 0.27%)</title><rect x="212.7" y="227.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="215.7" y="238.0"></text>
</g>
<g>
<title>enqueue_to_backlog (7 samples, 0.17%)</title><rect x="212.7" y="211.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="215.7" y="222.0"></text>
</g>
<g>
<title>ktime_get_with_offset (4 samples, 0.10%)</title><rect x="214.7" y="211.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="217.7" y="222.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.10%)</title><rect x="214.7" y="195.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="217.7" y="206.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.02%)</title><rect x="215.9" y="243.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="218.9" y="254.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.07%)</title><rect x="216.2" y="243.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="219.2" y="254.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.05%)</title><rect x="217.1" y="275.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="220.1" y="286.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.05%)</title><rect x="217.1" y="259.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="220.1" y="270.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="217.4" y="243.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="220.4" y="254.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (138 samples, 3.41%)</title><rect x="217.7" y="291.0" width="40.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="220.7" y="302.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (134 samples, 3.31%)</title><rect x="218.5" y="275.0" width="39.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="221.5" y="286.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (125 samples, 3.09%)</title><rect x="221.2" y="259.0" width="36.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="224.2" y="270.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (125 samples, 3.09%)</title><rect x="221.2" y="243.0" width="36.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="224.2" y="254.0">__s..</text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.02%)</title><rect x="225.2" y="227.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="228.2" y="238.0"></text>
</g>
<g>
<title>net_rx_action (110 samples, 2.72%)</title><rect x="225.5" y="227.0" width="32.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="228.5" y="238.0">ne..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="226.4" y="211.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="229.4" y="222.0"></text>
</g>
<g>
<title>debug_smp_processor_id (1 samples, 0.02%)</title><rect x="226.7" y="211.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="229.7" y="222.0"></text>
</g>
<g>
<title>process_backlog (105 samples, 2.60%)</title><rect x="227.0" y="211.0" width="30.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="230.0" y="222.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (92 samples, 2.27%)</title><rect x="230.5" y="195.0" width="26.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="233.5" y="206.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (8 samples, 0.20%)</title><rect x="231.1" y="179.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="234.1" y="190.0"></text>
</g>
<g>
<title>ip_rcv (82 samples, 2.03%)</title><rect x="233.4" y="179.0" width="23.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="236.4" y="190.0">i..</text>
</g>
<g>
<title>ip_local_deliver (68 samples, 1.68%)</title><rect x="234.6" y="163.0" width="19.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="237.6" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (66 samples, 1.63%)</title><rect x="235.2" y="147.0" width="19.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="238.2" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (66 samples, 1.63%)</title><rect x="235.2" y="131.0" width="19.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="238.2" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (64 samples, 1.58%)</title><rect x="235.7" y="115.0" width="18.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="238.7" y="126.0"></text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.20%)</title><rect x="236.9" y="99.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="239.9" y="110.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.07%)</title><rect x="238.4" y="83.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="241.4" y="94.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="239.2" y="99.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="242.2" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.02%)</title><rect x="239.8" y="99.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="242.8" y="110.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="239.8" y="83.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="242.8" y="94.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.07%)</title><rect x="240.1" y="99.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="243.1" y="110.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="240.1" y="83.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="243.1" y="94.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.02%)</title><rect x="240.1" y="67.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="243.1" y="78.0"></text>
</g>
<g>
<title>__rcu_read_unlock (2 samples, 0.05%)</title><rect x="240.4" y="83.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="243.4" y="94.0"></text>
</g>
<g>
<title>tcp_add_backlog (2 samples, 0.05%)</title><rect x="241.0" y="99.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="244.0" y="110.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="241.0" y="83.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="244.0" y="94.0"></text>
</g>
<g>
<title>skb_try_coalesce (1 samples, 0.02%)</title><rect x="241.3" y="83.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="244.3" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (42 samples, 1.04%)</title><rect x="241.6" y="99.0" width="12.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="244.6" y="110.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="241.6" y="83.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="244.6" y="94.0"></text>
</g>
<g>
<title>tcp_rcv_established (41 samples, 1.01%)</title><rect x="241.9" y="83.0" width="11.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="244.9" y="94.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.07%)</title><rect x="242.4" y="67.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="245.4" y="78.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.02%)</title><rect x="243.3" y="67.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="246.3" y="78.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="243.6" y="67.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="246.6" y="78.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="243.6" y="51.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="246.6" y="62.0"></text>
</g>
<g>
<title>sock_def_readable (28 samples, 0.69%)</title><rect x="243.9" y="67.0" width="8.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="246.9" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (24 samples, 0.59%)</title><rect x="245.1" y="51.0" width="7.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="248.1" y="62.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="245.4" y="35.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="248.4" y="46.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (22 samples, 0.54%)</title><rect x="245.7" y="35.0" width="6.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="248.7" y="46.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.05%)</title><rect x="252.1" y="67.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="255.1" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.07%)</title><rect x="252.6" y="67.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="255.6" y="78.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.05%)</title><rect x="252.9" y="51.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="255.9" y="62.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="253.2" y="35.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="256.2" y="46.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="253.5" y="67.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="256.5" y="78.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb.isra.0 (2 samples, 0.05%)</title><rect x="253.8" y="99.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="256.8" y="110.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (6 samples, 0.15%)</title><rect x="254.4" y="163.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="257.4" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.10%)</title><rect x="256.1" y="163.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="259.1" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (3 samples, 0.07%)</title><rect x="256.4" y="147.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="259.4" y="158.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="257.3" y="195.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="260.3" y="206.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="257.6" y="275.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="260.6" y="286.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.02%)</title><rect x="257.9" y="291.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="260.9" y="302.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.07%)</title><rect x="258.2" y="307.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="261.2" y="318.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.05%)</title><rect x="258.5" y="291.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="261.5" y="302.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="258.8" y="275.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="261.8" y="286.0"></text>
</g>
<g>
<title>__skb_clone (6 samples, 0.15%)</title><rect x="259.1" y="339.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="262.1" y="350.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="260.5" y="323.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="263.5" y="334.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="260.8" y="339.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="263.8" y="350.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="261.1" y="339.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="264.1" y="350.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.05%)</title><rect x="261.4" y="339.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="264.4" y="350.0"></text>
</g>
<g>
<title>ktime_get (6 samples, 0.15%)</title><rect x="262.0" y="355.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="265.0" y="366.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.10%)</title><rect x="262.6" y="339.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="265.6" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (17 samples, 0.42%)</title><rect x="263.7" y="355.0" width="5.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="266.7" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (11 samples, 0.27%)</title><rect x="264.0" y="339.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="267.0" y="350.0"></text>
</g>
<g>
<title>mod_timer (11 samples, 0.27%)</title><rect x="264.0" y="323.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="267.0" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.17%)</title><rect x="264.9" y="307.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="267.9" y="318.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="266.9" y="307.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="269.9" y="318.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (4 samples, 0.10%)</title><rect x="267.2" y="339.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="270.2" y="350.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.0 (1 samples, 0.02%)</title><rect x="268.4" y="339.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="271.4" y="350.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="268.4" y="323.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="271.4" y="334.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (11 samples, 0.27%)</title><rect x="268.7" y="355.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="271.7" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (10 samples, 0.25%)</title><rect x="269.0" y="339.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="272.0" y="350.0"></text>
</g>
<g>
<title>mod_timer (10 samples, 0.25%)</title><rect x="269.0" y="323.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="272.0" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.20%)</title><rect x="269.3" y="307.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="272.3" y="318.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="271.6" y="307.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="274.6" y="318.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.02%)</title><rect x="271.9" y="355.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="274.9" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (6 samples, 0.15%)</title><rect x="272.2" y="387.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="275.2" y="398.0"></text>
</g>
<g>
<title>copyin (5 samples, 0.12%)</title><rect x="272.5" y="371.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="275.5" y="382.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.10%)</title><rect x="272.8" y="355.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="275.8" y="366.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.02%)</title><rect x="273.9" y="387.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="276.9" y="398.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.02%)</title><rect x="273.9" y="371.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="276.9" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (22 samples, 0.54%)</title><rect x="274.2" y="387.0" width="6.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="277.2" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (21 samples, 0.52%)</title><rect x="274.5" y="371.0" width="6.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="277.5" y="382.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (7 samples, 0.17%)</title><rect x="275.4" y="355.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="278.4" y="366.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.10%)</title><rect x="276.3" y="339.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="279.3" y="350.0"></text>
</g>
<g>
<title>__slab_alloc.isra.0 (1 samples, 0.02%)</title><rect x="276.3" y="323.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="279.3" y="334.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.07%)</title><rect x="276.6" y="323.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="279.6" y="334.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.05%)</title><rect x="277.4" y="355.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="280.4" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (7 samples, 0.17%)</title><rect x="278.0" y="355.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="281.0" y="366.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="279.8" y="339.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="282.8" y="350.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.05%)</title><rect x="280.1" y="355.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="283.1" y="366.0"></text>
</g>
<g>
<title>skb_entail (6 samples, 0.15%)</title><rect x="280.6" y="387.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="283.6" y="398.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.05%)</title><rect x="282.4" y="387.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="285.4" y="398.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="283.0" y="387.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="286.0" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (8 samples, 0.20%)</title><rect x="283.3" y="387.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="286.3" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.15%)</title><rect x="283.9" y="371.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="286.9" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.10%)</title><rect x="284.4" y="355.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="287.4" y="366.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="285.6" y="387.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="288.6" y="398.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.10%)</title><rect x="285.9" y="435.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="288.9" y="446.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.10%)</title><rect x="285.9" y="419.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="288.9" y="430.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.10%)</title><rect x="285.9" y="403.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="288.9" y="414.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="286.8" y="387.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="289.8" y="398.0"></text>
</g>
<g>
<title>restore_regs_and_return_to_kernel (1 samples, 0.02%)</title><rect x="287.1" y="467.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="290.1" y="478.0"></text>
</g>
<g>
<title>preempt_schedule_irq (1 samples, 0.02%)</title><rect x="287.1" y="451.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="290.1" y="462.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (3 samples, 0.07%)</title><rect x="287.4" y="467.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="290.4" y="478.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.07%)</title><rect x="287.4" y="451.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="290.4" y="462.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="287.9" y="435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="290.9" y="446.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.05%)</title><rect x="288.2" y="467.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="291.2" y="478.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (1 samples, 0.02%)</title><rect x="288.8" y="723.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="291.8" y="734.0"></text>
</g>
<g>
<title>[NIO Worker #49 tid=1105017] (782 samples, 19.33%)</title><rect x="289.1" y="739.0" width="228.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="292.1" y="750.0">[NIO Worker #49 tid=1105017]</text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (4 samples, 0.10%)</title><rect x="289.1" y="723.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="292.1" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (3 samples, 0.07%)</title><rect x="289.1" y="707.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="292.1" y="718.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.07%)</title><rect x="289.1" y="691.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="292.1" y="702.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.02%)</title><rect x="289.4" y="675.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="292.4" y="686.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.02%)</title><rect x="289.7" y="675.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="292.7" y="686.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.02%)</title><rect x="290.0" y="707.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="293.0" y="718.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.05%)</title><rect x="290.3" y="723.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="293.3" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (1 samples, 0.02%)</title><rect x="290.3" y="707.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="293.3" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (1 samples, 0.02%)</title><rect x="290.3" y="691.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="293.3" y="702.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.02%)</title><rect x="290.3" y="675.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="293.3" y="686.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="290.6" y="707.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="293.6" y="718.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="290.6" y="691.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="293.6" y="702.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="290.6" y="675.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="293.6" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.run (775 samples, 19.15%)</title><rect x="290.9" y="723.0" width="226.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="293.9" y="734.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (775 samples, 19.15%)</title><rect x="290.9" y="707.0" width="226.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.9" y="718.0">java/util/concurrent/ThreadPoo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (775 samples, 19.15%)</title><rect x="290.9" y="691.0" width="226.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="293.9" y="702.0">java/util/concurrent/ThreadPoo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (14 samples, 0.35%)</title><rect x="291.1" y="675.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (13 samples, 0.32%)</title><rect x="291.4" y="659.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="294.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (13 samples, 0.32%)</title><rect x="291.4" y="643.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="294.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (13 samples, 0.32%)</title><rect x="291.4" y="627.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (12 samples, 0.30%)</title><rect x="291.7" y="611.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="294.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.25%)</title><rect x="292.3" y="595.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="295.3" y="606.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.15%)</title><rect x="292.3" y="579.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="295.3" y="590.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="292.6" y="563.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="295.6" y="574.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="292.9" y="563.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="295.9" y="574.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="293.2" y="563.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="296.2" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.02%)</title><rect x="293.5" y="563.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="296.5" y="574.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.02%)</title><rect x="293.8" y="563.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="296.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="294.1" y="579.0" width="1.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="297.1" y="590.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="294.1" y="563.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="297.1" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (3 samples, 0.07%)</title><rect x="294.4" y="563.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="297.4" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="294.4" y="547.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="297.4" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="294.4" y="531.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="297.4" y="542.0"></text>
</g>
<g>
<title>__se_sys_futex (3 samples, 0.07%)</title><rect x="294.4" y="515.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="297.4" y="526.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="294.4" y="499.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="297.4" y="510.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.07%)</title><rect x="294.4" y="483.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="297.4" y="494.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="294.4" y="467.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="297.4" y="478.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="294.4" y="451.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="297.4" y="462.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="294.6" y="467.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="297.6" y="478.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="294.6" y="451.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="297.6" y="462.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="294.6" y="435.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="297.6" y="446.0"></text>
</g>
<g>
<title>ktime_add_safe (1 samples, 0.02%)</title><rect x="294.9" y="467.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="297.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$53/1493674228.run (760 samples, 18.78%)</title><rect x="295.2" y="675.0" width="221.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="298.2" y="686.0">ru/mail/polis/service/saloed/..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entities$1 (760 samples, 18.78%)</title><rect x="295.2" y="659.0" width="221.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.2" y="670.0">ru/mail/polis/service/saloed/..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.retrieveEntities (760 samples, 18.78%)</title><rect x="295.2" y="643.0" width="221.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="298.2" y="654.0">ru/mail/polis/service/saloed/..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (64 samples, 1.58%)</title><rect x="295.2" y="627.0" width="18.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="298.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (4 samples, 0.10%)</title><rect x="295.8" y="611.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (4 samples, 0.10%)</title><rect x="295.8" y="595.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="298.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.next (4 samples, 0.10%)</title><rect x="295.8" y="579.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="298.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.next (4 samples, 0.10%)</title><rect x="295.8" y="563.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="298.8" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (2 samples, 0.05%)</title><rect x="295.8" y="547.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="298.8" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (2 samples, 0.05%)</title><rect x="295.8" y="531.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="298.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Next() (2 samples, 0.05%)</title><rect x="295.8" y="515.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="298.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (2 samples, 0.05%)</title><rect x="295.8" y="499.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="298.8" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="296.1" y="483.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="299.1" y="494.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (1 samples, 0.02%)</title><rect x="296.4" y="547.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="299.4" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (1 samples, 0.02%)</title><rect x="296.4" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="299.4" y="542.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_key0 (1 samples, 0.02%)</title><rect x="296.4" y="515.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="299.4" y="526.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.02%)</title><rect x="296.4" y="499.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="299.4" y="510.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="296.4" y="483.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="299.4" y="494.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="296.4" y="467.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="299.4" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="296.4" y="451.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="299.4" y="462.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value (1 samples, 0.02%)</title><rect x="296.7" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="299.7" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value0 (1 samples, 0.02%)</title><rect x="296.7" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="299.7" y="542.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_value0 (1 samples, 0.02%)</title><rect x="296.7" y="515.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="299.7" y="526.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.02%)</title><rect x="296.7" y="499.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="299.7" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="296.7" y="483.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="299.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.iterator (58 samples, 1.43%)</title><rect x="297.0" y="611.0" width="16.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="300.0" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (34 samples, 0.84%)</title><rect x="297.0" y="595.0" width="9.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="300.0" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (33 samples, 0.82%)</title><rect x="297.3" y="579.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="300.3" y="590.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (30 samples, 0.74%)</title><rect x="297.6" y="563.0" width="8.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="300.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (30 samples, 0.74%)</title><rect x="297.6" y="547.0" width="8.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="300.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::TraceIteratorSeek(unsigned int const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="297.6" y="531.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="300.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="297.9" y="531.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="300.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Seek(rocksdb::Slice const&amp;) (28 samples, 0.69%)</title><rect x="298.1" y="531.0" width="8.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="301.1" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (9 samples, 0.22%)</title><rect x="298.1" y="515.0" width="2.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="301.1" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (2 samples, 0.05%)</title><rect x="298.1" y="499.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="301.1" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="298.1" y="483.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="301.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int, rocksdb::InternalKey const*, rocksdb::InternalKey const*) (1 samples, 0.02%)</title><rect x="298.4" y="483.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="301.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::SliceTransform const*, rocksdb::Arena*, bool, bool) (1 samples, 0.02%)</title><rect x="298.4" y="467.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="301.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::BlockBasedTable::IndexReader&gt;*, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="298.4" y="451.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="301.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::IndexBlockIter*, bool, bool) (1 samples, 0.02%)</title><rect x="298.4" y="435.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="301.4" y="446.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="298.4" y="419.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="301.4" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Seek(rocksdb::Slice const&amp;) (7 samples, 0.17%)</title><rect x="298.7" y="499.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="301.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (6 samples, 0.15%)</title><rect x="298.7" y="483.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="301.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (6 samples, 0.15%)</title><rect x="298.7" y="467.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="301.7" y="478.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="298.7" y="451.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="301.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (5 samples, 0.12%)</title><rect x="299.0" y="451.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="302.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::PutDataBlockToCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockContents*, rocksdb::CompressionType, unsigned int, rocksdb::UncompressionDict const&amp;, unsigned long, unsigned long, rocksdb::MemoryAllocator*, bool, rocksdb::Cache::Priority, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="299.0" y="435.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="302.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (1 samples, 0.02%)</title><rect x="299.0" y="419.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="302.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Insert(rocksdb::Slice const&amp;, unsigned int, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (1 samples, 0.02%)</title><rect x="299.0" y="403.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="302.0" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (4 samples, 0.10%)</title><rect x="299.3" y="435.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="302.3" y="446.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="299.3" y="419.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="302.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (3 samples, 0.07%)</title><rect x="299.6" y="419.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="302.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (3 samples, 0.07%)</title><rect x="299.6" y="403.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="302.6" y="414.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (3 samples, 0.07%)</title><rect x="299.6" y="387.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="302.6" y="398.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (3 samples, 0.07%)</title><rect x="299.6" y="371.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="302.6" y="382.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (3 samples, 0.07%)</title><rect x="299.6" y="355.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="302.6" y="366.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (3 samples, 0.07%)</title><rect x="299.6" y="339.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="302.6" y="350.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (3 samples, 0.07%)</title><rect x="299.6" y="323.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="302.6" y="334.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (2 samples, 0.05%)</title><rect x="299.6" y="307.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="302.6" y="318.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::Produced() const (1 samples, 0.02%)</title><rect x="299.9" y="291.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="302.9" y="302.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::TryFastAppend(char const*, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="300.2" y="307.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="303.2" y="318.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="300.5" y="483.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="303.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.02%)</title><rect x="300.5" y="467.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="303.5" y="478.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="300.5" y="451.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="303.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (1 samples, 0.02%)</title><rect x="300.8" y="515.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="303.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Seek(rocksdb::Slice const&amp;) (15 samples, 0.37%)</title><rect x="301.1" y="515.0" width="4.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="304.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (6 samples, 0.15%)</title><rect x="301.1" y="499.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="304.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (6 samples, 0.15%)</title><rect x="301.1" y="483.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="304.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (5 samples, 0.12%)</title><rect x="301.4" y="467.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="304.4" y="478.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.02%)</title><rect x="301.4" y="451.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="304.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, unsigned long, bool, rocksdb::GetContext*) (2 samples, 0.05%)</title><rect x="301.6" y="451.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="304.6" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (2 samples, 0.05%)</title><rect x="301.6" y="435.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="304.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.05%)</title><rect x="301.6" y="419.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="304.6" y="430.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.05%)</title><rect x="301.6" y="403.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="304.6" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (2 samples, 0.05%)</title><rect x="302.2" y="451.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="305.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (2 samples, 0.05%)</title><rect x="302.2" y="435.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="305.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (2 samples, 0.05%)</title><rect x="302.2" y="419.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="305.2" y="430.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (2 samples, 0.05%)</title><rect x="302.2" y="403.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="305.2" y="414.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (2 samples, 0.05%)</title><rect x="302.2" y="387.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="305.2" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (2 samples, 0.05%)</title><rect x="302.2" y="371.0" width="0.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="305.2" y="382.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (2 samples, 0.05%)</title><rect x="302.2" y="355.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="305.2" y="366.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (2 samples, 0.05%)</title><rect x="302.2" y="339.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="305.2" y="350.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="302.5" y="323.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="305.5" y="334.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="302.5" y="307.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="305.5" y="318.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (7 samples, 0.17%)</title><rect x="302.8" y="499.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="305.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.02%)</title><rect x="304.6" y="483.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="307.6" y="494.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="304.6" y="467.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="307.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (2 samples, 0.05%)</title><rect x="304.9" y="499.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="307.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="305.4" y="515.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="308.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (2 samples, 0.05%)</title><rect x="305.7" y="515.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="308.7" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="306.0" y="499.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="309.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.02%)</title><rect x="306.0" y="483.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="309.0" y="494.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="306.3" y="563.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="309.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Seek(rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="306.6" y="563.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="309.6" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (21 samples, 0.52%)</title><rect x="306.9" y="595.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="309.9" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (19 samples, 0.47%)</title><rect x="307.5" y="579.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="310.5" y="590.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_iterator__J (7 samples, 0.17%)</title><rect x="307.5" y="563.0" width="2.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="310.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (7 samples, 0.17%)</title><rect x="307.5" y="547.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="310.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (6 samples, 0.15%)</title><rect x="307.8" y="531.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="310.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetReferencedSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.02%)</title><rect x="307.8" y="515.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="310.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.02%)</title><rect x="307.8" y="499.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="310.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.02%)</title><rect x="307.8" y="483.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="310.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewInternalIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*, rocksdb::Arena*, rocksdb::RangeDelAggregator*, unsigned long) (4 samples, 0.10%)</title><rect x="308.1" y="515.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="311.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::Arena*) (1 samples, 0.02%)</title><rect x="308.4" y="499.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="311.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIterators(rocksdb::ReadOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::MergeIteratorBuilder*, rocksdb::RangeDelAggregator*) (2 samples, 0.05%)</title><rect x="308.6" y="499.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="311.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIteratorsForLevel(rocksdb::ReadOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::MergeIteratorBuilder*, int, rocksdb::RangeDelAggregator*) (2 samples, 0.05%)</title><rect x="308.6" y="483.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="311.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int, rocksdb::InternalKey const*, rocksdb::InternalKey const*) (2 samples, 0.05%)</title><rect x="308.6" y="467.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="311.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::SliceTransform const*, rocksdb::Arena*, bool, bool) (1 samples, 0.02%)</title><rect x="308.9" y="451.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="311.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateFallback(unsigned long, bool) (1 samples, 0.02%)</title><rect x="308.9" y="435.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="311.9" y="446.0"></text>
</g>
<g>
<title>void std::vector&lt;char*, std::allocator&lt;char*&gt; &gt;::_M_realloc_insert&lt;decltype(nullptr)&gt;(__gnu_cxx::__normal_iterator&lt;char**, std::vector&lt;char*, std::allocator&lt;char*&gt; &gt; &gt;, decltype(nullptr)&amp;&amp;) (1 samples, 0.02%)</title><rect x="308.9" y="419.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="311.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (1 samples, 0.02%)</title><rect x="309.2" y="515.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="312.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Init(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (1 samples, 0.02%)</title><rect x="309.2" y="499.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="312.2" y="510.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="309.5" y="563.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="312.5" y="574.0"></text>
</g>
<g>
<title>_int_malloc (6 samples, 0.15%)</title><rect x="309.8" y="563.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="312.8" y="574.0"></text>
</g>
<g>
<title>malloc_consolidate (2 samples, 0.05%)</title><rect x="311.6" y="563.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="314.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::DB::NewIterator(rocksdb::ReadOptions const&amp;) (2 samples, 0.05%)</title><rect x="312.1" y="563.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="315.1" y="574.0"></text>
</g>
<g>
<title>rocksdb_iterator_helper(rocksdb::DB*, rocksdb::ReadOptions, rocksdb::ColumnFamilyHandle*) (1 samples, 0.02%)</title><rect x="312.7" y="563.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="315.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (3 samples, 0.07%)</title><rect x="313.0" y="595.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="316.0" y="606.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="313.3" y="579.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="316.3" y="590.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (1 samples, 0.02%)</title><rect x="313.6" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="316.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.stream (696 samples, 17.20%)</title><rect x="313.9" y="627.0" width="203.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="316.9" y="638.0">ru/mail/polis/service/salo..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (27 samples, 0.67%)</title><rect x="314.2" y="611.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.02%)</title><rect x="314.2" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="317.2" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.02%)</title><rect x="314.2" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="317.2" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="314.2" y="563.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="317.2" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="314.2" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="317.2" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (26 samples, 0.64%)</title><rect x="314.5" y="595.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="317.5" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (26 samples, 0.64%)</title><rect x="314.5" y="579.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="317.5" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (25 samples, 0.62%)</title><rect x="314.8" y="563.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="317.8" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (25 samples, 0.62%)</title><rect x="314.8" y="547.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="317.8" y="558.0"></text>
</g>
<g>
<title>__send (25 samples, 0.62%)</title><rect x="314.8" y="531.0" width="7.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="317.8" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.62%)</title><rect x="314.8" y="515.0" width="7.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="317.8" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.62%)</title><rect x="314.8" y="499.0" width="7.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="317.8" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (24 samples, 0.59%)</title><rect x="315.1" y="483.0" width="7.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="318.1" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (24 samples, 0.59%)</title><rect x="315.1" y="467.0" width="7.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="318.1" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (23 samples, 0.57%)</title><rect x="315.1" y="451.0" width="6.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="318.1" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (23 samples, 0.57%)</title><rect x="315.1" y="435.0" width="6.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="318.1" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (23 samples, 0.57%)</title><rect x="315.1" y="419.0" width="6.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="318.1" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (17 samples, 0.42%)</title><rect x="315.1" y="403.0" width="4.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="318.1" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (17 samples, 0.42%)</title><rect x="315.1" y="387.0" width="4.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="318.1" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (17 samples, 0.42%)</title><rect x="315.1" y="371.0" width="4.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="318.1" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (16 samples, 0.40%)</title><rect x="315.4" y="355.0" width="4.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="318.4" y="366.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.02%)</title><rect x="315.6" y="339.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="318.6" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="315.6" y="323.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="318.6" y="334.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.02%)</title><rect x="315.6" y="307.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="318.6" y="318.0"></text>
</g>
<g>
<title>ip_output (14 samples, 0.35%)</title><rect x="315.9" y="339.0" width="4.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="318.9" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (14 samples, 0.35%)</title><rect x="315.9" y="323.0" width="4.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="318.9" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="316.2" y="307.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="319.2" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="316.2" y="291.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="319.2" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="316.2" y="275.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="319.2" y="286.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.02%)</title><rect x="316.2" y="259.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="319.2" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="316.2" y="243.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="319.2" y="254.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (12 samples, 0.30%)</title><rect x="316.5" y="307.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="319.5" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (12 samples, 0.30%)</title><rect x="316.5" y="291.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="319.5" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (11 samples, 0.27%)</title><rect x="316.8" y="275.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="319.8" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (11 samples, 0.27%)</title><rect x="316.8" y="259.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="319.8" y="270.0"></text>
</g>
<g>
<title>net_rx_action (11 samples, 0.27%)</title><rect x="316.8" y="243.0" width="3.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="319.8" y="254.0"></text>
</g>
<g>
<title>process_backlog (11 samples, 0.27%)</title><rect x="316.8" y="227.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="319.8" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (10 samples, 0.25%)</title><rect x="317.1" y="211.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="320.1" y="222.0"></text>
</g>
<g>
<title>ip_rcv (10 samples, 0.25%)</title><rect x="317.1" y="195.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="320.1" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (10 samples, 0.25%)</title><rect x="317.1" y="179.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="320.1" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (9 samples, 0.22%)</title><rect x="317.4" y="163.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="320.4" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (9 samples, 0.22%)</title><rect x="317.4" y="147.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="320.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (9 samples, 0.22%)</title><rect x="317.4" y="131.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="320.4" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="317.4" y="115.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="320.4" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="317.7" y="115.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="320.7" y="126.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="317.7" y="99.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="320.7" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (7 samples, 0.17%)</title><rect x="318.0" y="115.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="321.0" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (7 samples, 0.17%)</title><rect x="318.0" y="99.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="321.0" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.07%)</title><rect x="318.0" y="83.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="321.0" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.07%)</title><rect x="318.0" y="67.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="321.0" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="318.0" y="51.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="321.0" y="62.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.10%)</title><rect x="318.9" y="83.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="321.9" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.05%)</title><rect x="318.9" y="67.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="321.9" y="78.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="318.9" y="51.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="321.9" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="319.4" y="67.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="322.4" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="319.4" y="51.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="322.4" y="62.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.02%)</title><rect x="319.7" y="67.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="322.7" y="78.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="320.0" y="403.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="323.0" y="414.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.02%)</title><rect x="320.0" y="387.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="323.0" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="320.0" y="371.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="323.0" y="382.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.02%)</title><rect x="320.3" y="403.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="323.3" y="414.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.02%)</title><rect x="320.3" y="387.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="323.3" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.05%)</title><rect x="320.6" y="403.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="323.6" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="320.9" y="387.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="323.9" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.02%)</title><rect x="320.9" y="371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="323.9" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="320.9" y="355.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="323.9" y="366.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="321.2" y="403.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="324.2" y="414.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.02%)</title><rect x="321.5" y="403.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="324.5" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="321.8" y="451.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="324.8" y="462.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="321.8" y="435.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="324.8" y="446.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="321.8" y="419.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="324.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.next (668 samples, 16.51%)</title><rect x="322.1" y="611.0" width="194.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="325.1" y="622.0">ru/mail/polis/service/sal..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.hasNext (10 samples, 0.25%)</title><rect x="322.4" y="595.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="325.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.compareTo (10 samples, 0.25%)</title><rect x="322.4" y="579.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="325.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.compareTo (10 samples, 0.25%)</title><rect x="322.4" y="563.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="325.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.25%)</title><rect x="322.4" y="547.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="325.4" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.25%)</title><rect x="322.4" y="531.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="325.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (144 samples, 3.56%)</title><rect x="325.3" y="595.0" width="42.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="328.3" y="606.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.hasNext (3 samples, 0.07%)</title><rect x="325.6" y="579.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (140 samples, 3.46%)</title><rect x="326.4" y="579.0" width="40.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="329.4" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.hasNext (3 samples, 0.07%)</title><rect x="326.4" y="563.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="329.4" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.isValid (3 samples, 0.07%)</title><rect x="326.4" y="547.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="329.4" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.isValid0 (1 samples, 0.02%)</title><rect x="327.0" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="330.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.next (137 samples, 3.39%)</title><rect x="327.3" y="563.0" width="40.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="330.3" y="574.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.next (137 samples, 3.39%)</title><rect x="327.3" y="547.0" width="40.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="330.3" y="558.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (78 samples, 1.93%)</title><rect x="327.3" y="531.0" width="22.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="330.3" y="542.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (78 samples, 1.93%)</title><rect x="327.3" y="515.0" width="22.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="330.3" y="526.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_next0 (1 samples, 0.02%)</title><rect x="328.2" y="499.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="331.2" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.05%)</title><rect x="328.5" y="499.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="331.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="329.1" y="499.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="332.1" y="510.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.02%)</title><rect x="329.1" y="483.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="332.1" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="329.4" y="499.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="332.4" y="510.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="329.9" y="499.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="332.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Next() (68 samples, 1.68%)</title><rect x="330.2" y="499.0" width="19.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="333.2" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.05%)</title><rect x="330.8" y="483.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="333.8" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="331.4" y="483.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="334.4" y="494.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="332.3" y="483.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="335.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (1 samples, 0.02%)</title><rect x="332.6" y="483.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="335.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, bool) (26 samples, 0.64%)</title><rect x="332.9" y="483.0" width="7.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="335.9" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.10%)</title><rect x="334.6" y="467.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="337.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (16 samples, 0.40%)</title><rect x="335.8" y="467.0" width="4.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="338.8" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (11 samples, 0.27%)</title><rect x="336.6" y="451.0" width="3.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="339.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (10 samples, 0.25%)</title><rect x="336.9" y="435.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="339.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::FindBlockForward() (7 samples, 0.17%)</title><rect x="336.9" y="419.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="339.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (7 samples, 0.17%)</title><rect x="336.9" y="403.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="339.9" y="414.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (7 samples, 0.17%)</title><rect x="336.9" y="387.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="339.9" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (7 samples, 0.17%)</title><rect x="336.9" y="371.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="339.9" y="382.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (7 samples, 0.17%)</title><rect x="336.9" y="355.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="339.9" y="366.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="336.9" y="339.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="339.9" y="350.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (6 samples, 0.15%)</title><rect x="337.2" y="339.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="340.2" y="350.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (6 samples, 0.15%)</title><rect x="337.2" y="323.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="340.2" y="334.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (6 samples, 0.15%)</title><rect x="337.2" y="307.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="340.2" y="318.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (6 samples, 0.15%)</title><rect x="337.2" y="291.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="340.2" y="302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (6 samples, 0.15%)</title><rect x="337.2" y="275.0" width="1.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="340.2" y="286.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (6 samples, 0.15%)</title><rect x="337.2" y="259.0" width="1.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="340.2" y="270.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (6 samples, 0.15%)</title><rect x="337.2" y="243.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="340.2" y="254.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="338.1" y="227.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="341.1" y="238.0"></text>
</g>
<g>
<title>snappy::LittleEndian::Load32(void const*) (1 samples, 0.02%)</title><rect x="338.4" y="227.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="341.4" y="238.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::TryFastAppend(char const*, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="338.7" y="227.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="341.7" y="238.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="338.7" y="211.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="341.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Next() (3 samples, 0.07%)</title><rect x="339.0" y="419.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="342.0" y="430.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="339.0" y="403.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="342.0" y="414.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (2 samples, 0.05%)</title><rect x="339.3" y="403.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="342.3" y="414.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="339.9" y="451.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="342.9" y="462.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="340.1" y="451.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="343.1" y="462.0"></text>
</g>
<g>
<title>rocksdb::DBIter::TooManyInternalKeysSkipped(bool) (1 samples, 0.02%)</title><rect x="340.4" y="483.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="343.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (31 samples, 0.77%)</title><rect x="340.7" y="483.0" width="9.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="343.7" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (13 samples, 0.32%)</title><rect x="341.9" y="467.0" width="3.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="344.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Next() (2 samples, 0.05%)</title><rect x="342.2" y="451.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="345.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (10 samples, 0.25%)</title><rect x="342.8" y="451.0" width="2.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="345.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::FindBlockForward() (4 samples, 0.10%)</title><rect x="343.4" y="435.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="346.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (4 samples, 0.10%)</title><rect x="343.4" y="419.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="346.4" y="430.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (4 samples, 0.10%)</title><rect x="343.4" y="403.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="346.4" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (4 samples, 0.10%)</title><rect x="343.4" y="387.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="346.4" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::PutDataBlockToCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockContents*, rocksdb::CompressionType, unsigned int, rocksdb::UncompressionDict const&amp;, unsigned long, unsigned long, rocksdb::MemoryAllocator*, bool, rocksdb::Cache::Priority, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="343.4" y="371.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="346.4" y="382.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (1 samples, 0.02%)</title><rect x="343.4" y="355.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="346.4" y="366.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Insert(rocksdb::Slice const&amp;, unsigned int, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (1 samples, 0.02%)</title><rect x="343.4" y="339.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="346.4" y="350.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.02%)</title><rect x="343.4" y="323.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="346.4" y="334.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (3 samples, 0.07%)</title><rect x="343.6" y="371.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="346.6" y="382.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (3 samples, 0.07%)</title><rect x="343.6" y="355.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="346.6" y="366.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (3 samples, 0.07%)</title><rect x="343.6" y="339.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="346.6" y="350.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (3 samples, 0.07%)</title><rect x="343.6" y="323.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="346.6" y="334.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (3 samples, 0.07%)</title><rect x="343.6" y="307.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="346.6" y="318.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (3 samples, 0.07%)</title><rect x="343.6" y="291.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="346.6" y="302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (3 samples, 0.07%)</title><rect x="343.6" y="275.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="346.6" y="286.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (3 samples, 0.07%)</title><rect x="343.6" y="259.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="346.6" y="270.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (2 samples, 0.05%)</title><rect x="343.6" y="243.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="346.6" y="254.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="343.9" y="227.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="346.9" y="238.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="343.9" y="211.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="346.9" y="222.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::TryFastAppend(char const*, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="344.2" y="243.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="347.2" y="254.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Next() (4 samples, 0.10%)</title><rect x="344.5" y="435.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="347.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (4 samples, 0.10%)</title><rect x="344.5" y="419.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="347.5" y="430.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.05%)</title><rect x="345.7" y="467.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="348.7" y="478.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="346.3" y="467.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="349.3" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="346.6" y="467.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="349.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (10 samples, 0.25%)</title><rect x="346.9" y="467.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="349.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::FindBlockForward() (7 samples, 0.17%)</title><rect x="346.9" y="451.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="349.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (7 samples, 0.17%)</title><rect x="346.9" y="435.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="349.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (7 samples, 0.17%)</title><rect x="346.9" y="419.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="349.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (7 samples, 0.17%)</title><rect x="346.9" y="403.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="349.9" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (7 samples, 0.17%)</title><rect x="346.9" y="387.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="349.9" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (2 samples, 0.05%)</title><rect x="346.9" y="371.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="349.9" y="382.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (5 samples, 0.12%)</title><rect x="347.4" y="371.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="350.4" y="382.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (5 samples, 0.12%)</title><rect x="347.4" y="355.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="350.4" y="366.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (5 samples, 0.12%)</title><rect x="347.4" y="339.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="350.4" y="350.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (5 samples, 0.12%)</title><rect x="347.4" y="323.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="350.4" y="334.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (5 samples, 0.12%)</title><rect x="347.4" y="307.0" width="1.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="350.4" y="318.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (5 samples, 0.12%)</title><rect x="347.4" y="291.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="350.4" y="302.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (5 samples, 0.12%)</title><rect x="347.4" y="275.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="350.4" y="286.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (2 samples, 0.05%)</title><rect x="347.7" y="259.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="350.7" y="270.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="348.0" y="243.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="351.0" y="254.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="348.0" y="227.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="351.0" y="238.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::TryFastAppend(char const*, unsigned long, unsigned long) (2 samples, 0.05%)</title><rect x="348.3" y="259.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="351.3" y="270.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="348.6" y="243.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="351.6" y="254.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Next() (3 samples, 0.07%)</title><rect x="348.9" y="451.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="351.9" y="462.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="348.9" y="435.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="351.9" y="446.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="349.2" y="435.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="352.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.02%)</title><rect x="349.5" y="435.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="352.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Valid() const (1 samples, 0.02%)</title><rect x="349.8" y="483.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="352.8" y="494.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (26 samples, 0.64%)</title><rect x="350.1" y="531.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="353.1" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (24 samples, 0.59%)</title><rect x="350.6" y="515.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="353.6" y="526.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_key0 (20 samples, 0.49%)</title><rect x="350.9" y="499.0" width="5.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="353.9" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.05%)</title><rect x="350.9" y="483.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="353.9" y="494.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="351.5" y="483.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="354.5" y="494.0"></text>
</g>
<g>
<title>jni_NewByteArray (16 samples, 0.40%)</title><rect x="351.8" y="483.0" width="4.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="354.8" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.07%)</title><rect x="351.8" y="467.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="354.8" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.05%)</title><rect x="352.7" y="467.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="355.7" y="478.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (11 samples, 0.27%)</title><rect x="353.3" y="467.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="356.3" y="478.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (10 samples, 0.25%)</title><rect x="353.6" y="451.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="356.6" y="462.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.17%)</title><rect x="353.6" y="435.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="356.6" y="446.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.07%)</title><rect x="354.4" y="419.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="357.4" y="430.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="355.3" y="419.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="358.3" y="430.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.05%)</title><rect x="355.6" y="435.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="358.6" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="356.2" y="435.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="359.2" y="446.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.02%)</title><rect x="356.5" y="483.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="359.5" y="494.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.05%)</title><rect x="356.8" y="499.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="359.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::key() const (1 samples, 0.02%)</title><rect x="357.4" y="499.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="360.4" y="510.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value (18 samples, 0.44%)</title><rect x="357.6" y="531.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="360.6" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (2 samples, 0.05%)</title><rect x="357.6" y="515.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="360.6" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value0 (16 samples, 0.40%)</title><rect x="358.2" y="515.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="361.2" y="526.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_value0 (15 samples, 0.37%)</title><rect x="358.5" y="499.0" width="4.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="361.5" y="510.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="358.8" y="483.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="361.8" y="494.0"></text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 0.12%)</title><rect x="359.1" y="483.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="362.1" y="494.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.12%)</title><rect x="359.1" y="467.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="362.1" y="478.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.10%)</title><rect x="359.4" y="451.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="362.4" y="462.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.07%)</title><rect x="359.7" y="435.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="362.7" y="446.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.02%)</title><rect x="360.0" y="419.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="363.0" y="430.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="360.3" y="419.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="363.3" y="430.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.10%)</title><rect x="360.6" y="483.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="363.6" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="361.1" y="467.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="364.1" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="361.4" y="467.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="364.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::value() const (3 samples, 0.07%)</title><rect x="361.7" y="483.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="364.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::value() const (1 samples, 0.02%)</title><rect x="362.3" y="467.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="365.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::value() const (1 samples, 0.02%)</title><rect x="362.6" y="483.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="365.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.fromArray (4 samples, 0.10%)</title><rect x="362.9" y="531.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="365.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.10%)</title><rect x="362.9" y="515.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="365.9" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.10%)</title><rect x="362.9" y="499.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="365.9" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.10%)</title><rect x="362.9" y="483.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="365.9" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.10%)</title><rect x="362.9" y="467.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="365.9" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.10%)</title><rect x="362.9" y="451.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="365.9" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.10%)</title><rect x="362.9" y="435.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="365.9" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.10%)</title><rect x="362.9" y="419.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="365.9" y="430.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.05%)</title><rect x="363.5" y="403.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="366.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.fromArrayShifted (8 samples, 0.20%)</title><rect x="364.1" y="531.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="367.1" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.10%)</title><rect x="364.1" y="515.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="367.1" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.10%)</title><rect x="364.1" y="499.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="367.1" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.10%)</title><rect x="364.1" y="483.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="367.1" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.10%)</title><rect x="364.1" y="467.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="367.1" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.10%)</title><rect x="364.1" y="451.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="367.1" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.10%)</title><rect x="364.1" y="435.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="367.1" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.10%)</title><rect x="364.1" y="419.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="367.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="365.2" y="515.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="368.2" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (1 samples, 0.02%)</title><rect x="365.2" y="499.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="368.2" y="510.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="365.5" y="515.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="368.5" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value0 (1 samples, 0.02%)</title><rect x="366.1" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="369.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.hasNext (3 samples, 0.07%)</title><rect x="366.4" y="531.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="369.4" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.isValid (3 samples, 0.07%)</title><rect x="366.4" y="515.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="369.4" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.isValid0 (3 samples, 0.07%)</title><rect x="366.4" y="499.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="369.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.handleStreamEnding (10 samples, 0.25%)</title><rect x="367.3" y="595.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="370.3" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.25%)</title><rect x="367.3" y="579.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="370.3" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.25%)</title><rect x="367.3" y="563.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="370.3" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (10 samples, 0.25%)</title><rect x="367.3" y="547.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="370.3" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (10 samples, 0.25%)</title><rect x="367.3" y="531.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="370.3" y="542.0"></text>
</g>
<g>
<title>__send (10 samples, 0.25%)</title><rect x="367.3" y="515.0" width="2.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="370.3" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.25%)</title><rect x="367.3" y="499.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="370.3" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.25%)</title><rect x="367.3" y="483.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="370.3" y="494.0"></text>
</g>
<g>
<title>__x64_sys_sendto (10 samples, 0.25%)</title><rect x="367.3" y="467.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="370.3" y="478.0"></text>
</g>
<g>
<title>__sys_sendto (10 samples, 0.25%)</title><rect x="367.3" y="451.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="370.3" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (8 samples, 0.20%)</title><rect x="367.6" y="435.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="370.6" y="446.0"></text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.02%)</title><rect x="367.6" y="419.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="370.6" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (7 samples, 0.17%)</title><rect x="367.8" y="419.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="370.8" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (7 samples, 0.17%)</title><rect x="367.8" y="403.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="370.8" y="414.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (6 samples, 0.15%)</title><rect x="367.8" y="387.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="370.8" y="398.0"></text>
</g>
<g>
<title>tcp_write_xmit (6 samples, 0.15%)</title><rect x="367.8" y="371.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="370.8" y="382.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (6 samples, 0.15%)</title><rect x="367.8" y="355.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="370.8" y="366.0"></text>
</g>
<g>
<title>__ip_queue_xmit (6 samples, 0.15%)</title><rect x="367.8" y="339.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="370.8" y="350.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="367.8" y="323.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="370.8" y="334.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="367.8" y="307.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="370.8" y="318.0"></text>
</g>
<g>
<title>ip_output (5 samples, 0.12%)</title><rect x="368.1" y="323.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="371.1" y="334.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 0.12%)</title><rect x="368.1" y="307.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="371.1" y="318.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (5 samples, 0.12%)</title><rect x="368.1" y="291.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="371.1" y="302.0"></text>
</g>
<g>
<title>do_softirq.part.0 (5 samples, 0.12%)</title><rect x="368.1" y="275.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="371.1" y="286.0"></text>
</g>
<g>
<title>do_softirq_own_stack (5 samples, 0.12%)</title><rect x="368.1" y="259.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="371.1" y="270.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 0.12%)</title><rect x="368.1" y="243.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="371.1" y="254.0"></text>
</g>
<g>
<title>net_rx_action (5 samples, 0.12%)</title><rect x="368.1" y="227.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="371.1" y="238.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 0.12%)</title><rect x="368.1" y="211.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="371.1" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 0.10%)</title><rect x="368.4" y="195.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="371.4" y="206.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.07%)</title><rect x="368.7" y="179.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="371.7" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.05%)</title><rect x="368.7" y="163.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="371.7" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.05%)</title><rect x="368.7" y="147.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="371.7" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.05%)</title><rect x="368.7" y="131.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="371.7" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.05%)</title><rect x="368.7" y="115.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="371.7" y="126.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="368.7" y="99.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="371.7" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="369.0" y="99.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="372.0" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="369.0" y="83.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="372.0" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="369.0" y="67.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="372.0" y="78.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.02%)</title><rect x="369.3" y="163.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="372.3" y="174.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="369.6" y="387.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="372.6" y="398.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.02%)</title><rect x="369.6" y="371.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="372.6" y="382.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="369.6" y="355.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="372.6" y="366.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="369.9" y="435.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="372.9" y="446.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="369.9" y="419.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="372.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.writeRecord (503 samples, 12.43%)</title><rect x="370.2" y="595.0" width="146.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="373.2" y="606.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/lang/Integer.toHexString (5 samples, 0.12%)</title><rect x="370.5" y="579.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="373.5" y="590.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (5 samples, 0.12%)</title><rect x="370.5" y="563.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="373.5" y="574.0"></text>
</g>
<g>
<title>java/lang/Integer.formatUnsignedInt (5 samples, 0.12%)</title><rect x="370.5" y="547.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="373.5" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="371.3" y="531.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="374.3" y="542.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="371.3" y="515.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="374.3" y="526.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="371.6" y="499.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="374.6" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (497 samples, 12.28%)</title><rect x="371.9" y="579.0" width="145.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="374.9" y="590.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session.write (497 samples, 12.28%)</title><rect x="371.9" y="563.0" width="145.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="374.9" y="574.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (491 samples, 12.14%)</title><rect x="373.7" y="547.0" width="143.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="376.7" y="558.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.12%)</title><rect x="378.6" y="531.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="381.6" y="542.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="380.1" y="531.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="383.1" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (468 samples, 11.57%)</title><rect x="380.4" y="531.0" width="136.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="383.4" y="542.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.02%)</title><rect x="381.6" y="515.0" width="0.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="384.6" y="526.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.22%)</title><rect x="381.8" y="515.0" width="2.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="384.8" y="526.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.22%)</title><rect x="381.8" y="499.0" width="2.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="384.8" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.17%)</title><rect x="381.8" y="483.0" width="2.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="384.8" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.15%)</title><rect x="382.1" y="467.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="385.1" y="478.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.05%)</title><rect x="382.7" y="451.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="385.7" y="462.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="383.3" y="451.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="386.3" y="462.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="383.6" y="451.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="386.6" y="462.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.05%)</title><rect x="383.9" y="483.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="386.9" y="494.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.05%)</title><rect x="384.5" y="515.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="387.5" y="526.0"></text>
</g>
<g>
<title>__send (452 samples, 11.17%)</title><rect x="385.1" y="515.0" width="131.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="388.1" y="526.0">__send</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="388.8" y="499.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="391.8" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (437 samples, 10.80%)</title><rect x="389.4" y="499.0" width="127.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="392.4" y="510.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>do_syscall_64 (437 samples, 10.80%)</title><rect x="389.4" y="483.0" width="127.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="392.4" y="494.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (417 samples, 10.31%)</title><rect x="392.3" y="467.0" width="121.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="395.3" y="478.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (415 samples, 10.26%)</title><rect x="392.9" y="451.0" width="121.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="395.9" y="462.0">__sys_sendto</text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="394.1" y="435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="397.1" y="446.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="394.4" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="397.4" y="446.0"></text>
</g>
<g>
<title>sock_sendmsg (399 samples, 9.86%)</title><rect x="394.7" y="435.0" width="116.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="397.7" y="446.0">sock_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (399 samples, 9.86%)</title><rect x="394.7" y="419.0" width="116.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="397.7" y="430.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.10%)</title><rect x="394.7" y="403.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="397.7" y="414.0"></text>
</g>
<g>
<title>preempt_count_sub (3 samples, 0.07%)</title><rect x="395.0" y="387.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="398.0" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="395.8" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="398.8" y="414.0"></text>
</g>
<g>
<title>lock_sock_nested (9 samples, 0.22%)</title><rect x="396.1" y="403.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="399.1" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (9 samples, 0.22%)</title><rect x="396.1" y="387.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="399.1" y="398.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (8 samples, 0.20%)</title><rect x="396.4" y="371.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="399.4" y="382.0"></text>
</g>
<g>
<title>release_sock (34 samples, 0.84%)</title><rect x="398.8" y="403.0" width="9.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="401.8" y="414.0"></text>
</g>
<g>
<title>__release_sock (30 samples, 0.74%)</title><rect x="399.1" y="387.0" width="8.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="402.1" y="398.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (29 samples, 0.72%)</title><rect x="399.3" y="371.0" width="8.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="402.3" y="382.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="399.3" y="355.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="402.3" y="366.0"></text>
</g>
<g>
<title>tcp_rcv_established (28 samples, 0.69%)</title><rect x="399.6" y="355.0" width="8.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="402.6" y="366.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.10%)</title><rect x="399.9" y="339.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="402.9" y="350.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="399.9" y="323.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="402.9" y="334.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.05%)</title><rect x="400.2" y="323.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="403.2" y="334.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="400.8" y="323.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="403.8" y="334.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.05%)</title><rect x="401.1" y="339.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="404.1" y="350.0"></text>
</g>
<g>
<title>tcp_ack (21 samples, 0.52%)</title><rect x="401.7" y="339.0" width="6.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="404.7" y="350.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.10%)</title><rect x="403.1" y="323.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="406.1" y="334.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="403.1" y="307.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="406.1" y="318.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.07%)</title><rect x="403.4" y="307.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="406.4" y="318.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.02%)</title><rect x="404.3" y="323.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="407.3" y="334.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="404.6" y="323.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="407.6" y="334.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="404.9" y="323.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="407.9" y="334.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.05%)</title><rect x="405.2" y="323.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="408.2" y="334.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.02%)</title><rect x="405.8" y="323.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="408.8" y="334.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.05%)</title><rect x="406.1" y="323.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="409.1" y="334.0"></text>
</g>
<g>
<title>minmax_running_min (1 samples, 0.02%)</title><rect x="406.3" y="307.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="409.3" y="318.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="406.6" y="323.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="409.6" y="334.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.07%)</title><rect x="406.9" y="323.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="409.9" y="334.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.05%)</title><rect x="407.2" y="307.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="410.2" y="318.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.05%)</title><rect x="407.8" y="387.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="410.8" y="398.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.02%)</title><rect x="408.1" y="371.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="411.1" y="382.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="408.4" y="387.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="411.4" y="398.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (351 samples, 8.68%)</title><rect x="408.7" y="403.0" width="102.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="411.7" y="414.0">tcp_sendmsg_..</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.10%)</title><rect x="413.3" y="387.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="416.3" y="398.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.10%)</title><rect x="413.3" y="371.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="416.3" y="382.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (291 samples, 7.19%)</title><rect x="414.5" y="387.0" width="84.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="417.5" y="398.0">__tcp_push..</text>
</g>
<g>
<title>tcp_write_xmit (289 samples, 7.14%)</title><rect x="415.1" y="371.0" width="84.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="418.1" y="382.0">tcp_write_..</text>
</g>
<g>
<title>__tcp_transmit_skb (246 samples, 6.08%)</title><rect x="418.0" y="355.0" width="71.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="421.0" y="366.0">__tcp_tr..</text>
</g>
<g>
<title>__ip_queue_xmit (222 samples, 5.49%)</title><rect x="420.9" y="339.0" width="64.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="423.9" y="350.0">__ip_qu..</text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="422.4" y="323.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="425.4" y="334.0"></text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.10%)</title><rect x="422.7" y="323.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="425.7" y="334.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.07%)</title><rect x="423.0" y="307.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="426.0" y="318.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 0.10%)</title><rect x="423.8" y="323.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="426.8" y="334.0"></text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.10%)</title><rect x="423.8" y="307.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="426.8" y="318.0"></text>
</g>
<g>
<title>ip_output (208 samples, 5.14%)</title><rect x="425.0" y="323.0" width="60.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="428.0" y="334.0">ip_out..</text>
</g>
<g>
<title>ip_finish_output2 (195 samples, 4.82%)</title><rect x="427.1" y="307.0" width="56.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="430.1" y="318.0">ip_fin..</text>
</g>
<g>
<title>__dev_queue_xmit (39 samples, 0.96%)</title><rect x="428.8" y="291.0" width="11.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="431.8" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="430.0" y="275.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="433.0" y="286.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (27 samples, 0.67%)</title><rect x="430.3" y="275.0" width="7.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="433.3" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (26 samples, 0.64%)</title><rect x="430.6" y="259.0" width="7.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="433.6" y="270.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="431.7" y="243.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="434.7" y="254.0"></text>
</g>
<g>
<title>netif_rx (12 samples, 0.30%)</title><rect x="432.0" y="243.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="435.0" y="254.0"></text>
</g>
<g>
<title>netif_rx_internal (12 samples, 0.30%)</title><rect x="432.0" y="227.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="435.0" y="238.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.12%)</title><rect x="432.0" y="211.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="435.0" y="222.0"></text>
</g>
<g>
<title>ktime_get_with_offset (6 samples, 0.15%)</title><rect x="433.5" y="211.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="436.5" y="222.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.07%)</title><rect x="434.3" y="195.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="437.3" y="206.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="435.2" y="211.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="438.2" y="222.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.02%)</title><rect x="435.5" y="243.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="438.5" y="254.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (3 samples, 0.07%)</title><rect x="435.8" y="243.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="438.8" y="254.0"></text>
</g>
<g>
<title>tcp_wfree (5 samples, 0.12%)</title><rect x="436.7" y="243.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="439.7" y="254.0"></text>
</g>
<g>
<title>validate_xmit_skb (6 samples, 0.15%)</title><rect x="438.1" y="275.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="441.1" y="286.0"></text>
</g>
<g>
<title>netif_skb_features (4 samples, 0.10%)</title><rect x="438.7" y="259.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="441.7" y="270.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="439.9" y="275.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="442.9" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (149 samples, 3.68%)</title><rect x="440.2" y="291.0" width="43.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="443.2" y="302.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.0 (146 samples, 3.61%)</title><rect x="440.8" y="275.0" width="42.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="443.8" y="286.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (141 samples, 3.48%)</title><rect x="442.2" y="259.0" width="41.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="445.2" y="270.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (141 samples, 3.48%)</title><rect x="442.2" y="243.0" width="41.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="445.2" y="254.0">__s..</text>
</g>
<g>
<title>net_rx_action (132 samples, 3.26%)</title><rect x="444.8" y="227.0" width="38.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="447.8" y="238.0">net..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="445.7" y="211.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="448.7" y="222.0"></text>
</g>
<g>
<title>process_backlog (128 samples, 3.16%)</title><rect x="446.0" y="211.0" width="37.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="449.0" y="222.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (122 samples, 3.02%)</title><rect x="447.8" y="195.0" width="35.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="450.8" y="206.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (6 samples, 0.15%)</title><rect x="448.3" y="179.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="451.3" y="190.0"></text>
</g>
<g>
<title>ip_rcv (114 samples, 2.82%)</title><rect x="450.1" y="179.0" width="33.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="453.1" y="190.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (101 samples, 2.50%)</title><rect x="451.3" y="163.0" width="29.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="454.3" y="174.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (97 samples, 2.40%)</title><rect x="452.4" y="147.0" width="28.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="455.4" y="158.0">ip..</text>
</g>
<g>
<title>__rcu_read_unlock (2 samples, 0.05%)</title><rect x="452.4" y="131.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="455.4" y="142.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (95 samples, 2.35%)</title><rect x="453.0" y="131.0" width="27.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="456.0" y="142.0">i..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.05%)</title><rect x="453.3" y="115.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="456.3" y="126.0"></text>
</g>
<g>
<title>tcp_v4_rcv (92 samples, 2.27%)</title><rect x="453.9" y="115.0" width="26.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="456.9" y="126.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.17%)</title><rect x="456.2" y="99.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="459.2" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock (4 samples, 0.10%)</title><rect x="458.3" y="99.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="461.3" y="110.0"></text>
</g>
<g>
<title>preempt_count_add (2 samples, 0.05%)</title><rect x="458.8" y="83.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="461.8" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock (2 samples, 0.05%)</title><rect x="459.4" y="99.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="462.4" y="110.0"></text>
</g>
<g>
<title>preempt_count_sub (2 samples, 0.05%)</title><rect x="459.4" y="83.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="462.4" y="94.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (9 samples, 0.22%)</title><rect x="460.0" y="99.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="463.0" y="110.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.10%)</title><rect x="460.6" y="83.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="463.6" y="94.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="461.5" y="67.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="464.5" y="78.0"></text>
</g>
<g>
<title>__rcu_read_unlock (2 samples, 0.05%)</title><rect x="461.8" y="83.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="464.8" y="94.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="462.3" y="83.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="465.3" y="94.0"></text>
</g>
<g>
<title>tcp_add_backlog (1 samples, 0.02%)</title><rect x="462.6" y="99.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="465.6" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (59 samples, 1.46%)</title><rect x="462.9" y="99.0" width="17.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="465.9" y="110.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="463.2" y="83.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="466.2" y="94.0"></text>
</g>
<g>
<title>tcp_rcv_established (57 samples, 1.41%)</title><rect x="463.5" y="83.0" width="16.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="466.5" y="94.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="463.8" y="67.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="466.8" y="78.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="464.1" y="67.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="467.1" y="78.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="464.1" y="51.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="467.1" y="62.0"></text>
</g>
<g>
<title>sock_def_readable (40 samples, 0.99%)</title><rect x="464.7" y="67.0" width="11.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="467.7" y="78.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="465.6" y="51.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="468.6" y="62.0"></text>
</g>
<g>
<title>__wake_up_common_lock (36 samples, 0.89%)</title><rect x="465.8" y="51.0" width="10.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="468.8" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (36 samples, 0.89%)</title><rect x="465.8" y="35.0" width="10.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="468.8" y="46.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.12%)</title><rect x="476.3" y="67.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="479.3" y="78.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.12%)</title><rect x="476.3" y="51.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="479.3" y="62.0"></text>
</g>
<g>
<title>tcp_queue_rcv (8 samples, 0.20%)</title><rect x="477.8" y="67.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="480.8" y="78.0"></text>
</g>
<g>
<title>tcp_try_coalesce (2 samples, 0.05%)</title><rect x="479.6" y="51.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="482.6" y="62.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb.isra.0 (2 samples, 0.05%)</title><rect x="480.1" y="99.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="483.1" y="110.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (5 samples, 0.12%)</title><rect x="480.7" y="163.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="483.7" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.10%)</title><rect x="482.2" y="163.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="485.2" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (3 samples, 0.07%)</title><rect x="482.5" y="147.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="485.5" y="158.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="483.3" y="275.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="486.3" y="286.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.02%)</title><rect x="483.6" y="291.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="486.6" y="302.0"></text>
</g>
<g>
<title>ip_finish_output (6 samples, 0.15%)</title><rect x="483.9" y="307.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="486.9" y="318.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (6 samples, 0.15%)</title><rect x="483.9" y="291.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="486.9" y="302.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="485.4" y="275.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="488.4" y="286.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.12%)</title><rect x="485.7" y="339.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="488.7" y="350.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.05%)</title><rect x="486.5" y="323.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="489.5" y="334.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.05%)</title><rect x="487.1" y="339.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="490.1" y="350.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.02%)</title><rect x="487.7" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="490.7" y="350.0"></text>
</g>
<g>
<title>tcp_options_write (3 samples, 0.07%)</title><rect x="488.0" y="339.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="491.0" y="350.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.05%)</title><rect x="488.9" y="339.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="491.9" y="350.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="489.5" y="339.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="492.5" y="350.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.12%)</title><rect x="489.8" y="355.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="492.8" y="366.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.10%)</title><rect x="490.0" y="339.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="493.0" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (16 samples, 0.40%)</title><rect x="491.2" y="355.0" width="4.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="494.2" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.10%)</title><rect x="491.8" y="339.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="494.8" y="350.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.10%)</title><rect x="491.8" y="323.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="494.8" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="491.8" y="307.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="494.8" y="318.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="492.7" y="307.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="495.7" y="318.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.05%)</title><rect x="493.0" y="339.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="496.0" y="350.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.0 (6 samples, 0.15%)</title><rect x="493.5" y="339.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="496.5" y="350.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="494.4" y="323.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="497.4" y="334.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.02%)</title><rect x="494.7" y="323.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="497.7" y="334.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="495.0" y="323.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="498.0" y="334.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.05%)</title><rect x="495.3" y="339.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="498.3" y="350.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (11 samples, 0.27%)</title><rect x="495.9" y="355.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="498.9" y="366.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="497.0" y="339.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="500.0" y="350.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.15%)</title><rect x="497.3" y="339.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="500.3" y="350.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.15%)</title><rect x="497.3" y="323.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="500.3" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.10%)</title><rect x="497.6" y="307.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="500.6" y="318.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="498.8" y="307.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="501.8" y="318.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.02%)</title><rect x="499.1" y="355.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="502.1" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="499.4" y="387.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="502.4" y="398.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.05%)</title><rect x="499.7" y="387.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="502.7" y="398.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.02%)</title><rect x="500.0" y="371.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="503.0" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (20 samples, 0.49%)</title><rect x="500.3" y="387.0" width="5.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="503.3" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (19 samples, 0.47%)</title><rect x="500.5" y="371.0" width="5.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="503.5" y="382.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (7 samples, 0.17%)</title><rect x="502.3" y="355.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="505.3" y="366.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (7 samples, 0.17%)</title><rect x="502.3" y="339.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="505.3" y="350.0"></text>
</g>
<g>
<title>__slab_alloc.isra.0 (1 samples, 0.02%)</title><rect x="503.5" y="323.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="506.5" y="334.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.05%)</title><rect x="503.8" y="323.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="506.8" y="334.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.07%)</title><rect x="504.3" y="355.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="507.3" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.07%)</title><rect x="505.2" y="355.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="508.2" y="366.0"></text>
</g>
<g>
<title>skb_entail (7 samples, 0.17%)</title><rect x="506.1" y="387.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="509.1" y="398.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.07%)</title><rect x="508.1" y="387.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="511.1" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (7 samples, 0.17%)</title><rect x="509.0" y="387.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="512.0" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.15%)</title><rect x="509.3" y="371.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="512.3" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.07%)</title><rect x="510.2" y="355.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="513.2" y="366.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10 samples, 0.25%)</title><rect x="511.0" y="435.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="514.0" y="446.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.22%)</title><rect x="511.3" y="419.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="514.3" y="430.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.17%)</title><rect x="511.9" y="403.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="514.9" y="414.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="513.7" y="387.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="516.7" y="398.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (5 samples, 0.12%)</title><rect x="514.0" y="467.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="517.0" y="478.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.05%)</title><rect x="514.8" y="451.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="517.8" y="462.0"></text>
</g>
<g>
<title>syscall_trace_enter (5 samples, 0.12%)</title><rect x="515.4" y="467.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="518.4" y="478.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (4 samples, 0.10%)</title><rect x="515.7" y="451.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="518.7" y="462.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (1 samples, 0.02%)</title><rect x="516.9" y="723.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="519.9" y="734.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="516.9" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.9" y="718.0"></text>
</g>
<g>
<title>[NIO Worker #51 tid=1105019] (768 samples, 18.98%)</title><rect x="517.2" y="739.0" width="224.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="520.2" y="750.0">[NIO Worker #51 tid=1105019]</text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (4 samples, 0.10%)</title><rect x="517.2" y="723.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="520.2" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (4 samples, 0.10%)</title><rect x="517.2" y="707.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="520.2" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::method_with_idnum(int) (1 samples, 0.02%)</title><rect x="517.5" y="691.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="520.5" y="702.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.05%)</title><rect x="517.8" y="691.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="520.8" y="702.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.02%)</title><rect x="517.8" y="675.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="520.8" y="686.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="518.0" y="675.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="521.0" y="686.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.05%)</title><rect x="518.3" y="723.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="521.3" y="734.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.05%)</title><rect x="518.3" y="707.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="521.3" y="718.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="518.3" y="691.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="521.3" y="702.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="518.6" y="691.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="521.6" y="702.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.02%)</title><rect x="518.9" y="723.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="521.9" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (760 samples, 18.78%)</title><rect x="519.2" y="723.0" width="221.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="522.2" y="734.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (760 samples, 18.78%)</title><rect x="519.2" y="707.0" width="221.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="522.2" y="718.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (760 samples, 18.78%)</title><rect x="519.2" y="691.0" width="221.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="522.2" y="702.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.22%)</title><rect x="519.2" y="675.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (8 samples, 0.20%)</title><rect x="519.5" y="659.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (8 samples, 0.20%)</title><rect x="519.5" y="643.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (8 samples, 0.20%)</title><rect x="519.5" y="627.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="522.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (8 samples, 0.20%)</title><rect x="519.5" y="611.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="522.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.20%)</title><rect x="519.5" y="595.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="522.5" y="606.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="520.1" y="579.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="523.1" y="590.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="520.4" y="579.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="523.4" y="590.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.05%)</title><rect x="520.7" y="579.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="523.7" y="590.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="520.7" y="563.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="523.7" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="520.7" y="547.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="523.7" y="558.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="521.0" y="563.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="524.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="521.3" y="579.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="524.3" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.02%)</title><rect x="521.3" y="563.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="524.3" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="521.3" y="547.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="524.3" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="521.3" y="531.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="524.3" y="542.0"></text>
</g>
<g>
<title>__se_sys_futex (1 samples, 0.02%)</title><rect x="521.3" y="515.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="524.3" y="526.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="521.3" y="499.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="524.3" y="510.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="521.3" y="483.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="524.3" y="494.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="521.3" y="467.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="524.3" y="478.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="521.3" y="451.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="524.3" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="521.3" y="435.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="524.3" y="446.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="521.5" y="579.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="524.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$53/1493674228.run (751 samples, 18.56%)</title><rect x="521.8" y="675.0" width="219.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="524.8" y="686.0">ru/mail/polis/service/saloed/..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entities$1 (750 samples, 18.54%)</title><rect x="522.1" y="659.0" width="218.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="525.1" y="670.0">ru/mail/polis/service/saloed/..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.retrieveEntities (750 samples, 18.54%)</title><rect x="522.1" y="643.0" width="218.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="525.1" y="654.0">ru/mail/polis/service/saloed/..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (80 samples, 1.98%)</title><rect x="522.1" y="627.0" width="23.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="525.1" y="638.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (5 samples, 0.12%)</title><rect x="522.4" y="611.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="525.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (5 samples, 0.12%)</title><rect x="522.4" y="595.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="525.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.next (5 samples, 0.12%)</title><rect x="522.4" y="579.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="525.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.next (5 samples, 0.12%)</title><rect x="522.4" y="563.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="525.4" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (3 samples, 0.07%)</title><rect x="522.4" y="547.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="525.4" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (3 samples, 0.07%)</title><rect x="522.4" y="531.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="525.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Next() (3 samples, 0.07%)</title><rect x="522.4" y="515.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="525.4" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="522.4" y="499.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="525.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, bool) (2 samples, 0.05%)</title><rect x="522.7" y="499.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="525.7" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="522.7" y="483.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="525.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (1 samples, 0.02%)</title><rect x="523.0" y="483.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="526.0" y="494.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (1 samples, 0.02%)</title><rect x="523.3" y="547.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="526.3" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (1 samples, 0.02%)</title><rect x="523.3" y="531.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="526.3" y="542.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_key0 (1 samples, 0.02%)</title><rect x="523.3" y="515.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="526.3" y="526.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.02%)</title><rect x="523.3" y="499.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="526.3" y="510.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.02%)</title><rect x="523.3" y="483.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="526.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.hasNext (1 samples, 0.02%)</title><rect x="523.6" y="547.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="526.6" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.isValid (1 samples, 0.02%)</title><rect x="523.6" y="531.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="526.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.iterator (74 samples, 1.83%)</title><rect x="523.9" y="611.0" width="21.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.9" y="622.0">r..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (42 samples, 1.04%)</title><rect x="523.9" y="595.0" width="12.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="526.9" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (42 samples, 1.04%)</title><rect x="523.9" y="579.0" width="12.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="526.9" y="590.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (41 samples, 1.01%)</title><rect x="523.9" y="563.0" width="11.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="526.9" y="574.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="524.2" y="547.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="527.2" y="558.0"></text>
</g>
<g>
<title>jni_ReleaseByteArrayElements (1 samples, 0.02%)</title><rect x="524.5" y="547.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="527.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (38 samples, 0.94%)</title><rect x="524.8" y="547.0" width="11.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="527.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Seek(rocksdb::Slice const&amp;) (36 samples, 0.89%)</title><rect x="525.3" y="531.0" width="10.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="528.3" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (16 samples, 0.40%)</title><rect x="525.3" y="515.0" width="4.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="528.3" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="525.6" y="499.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="528.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int, rocksdb::InternalKey const*, rocksdb::InternalKey const*) (1 samples, 0.02%)</title><rect x="525.6" y="483.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="528.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::SliceTransform const*, rocksdb::Arena*, bool, bool) (1 samples, 0.02%)</title><rect x="525.6" y="467.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="528.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions(rocksdb::ReadOptions const&amp;) (1 samples, 0.02%)</title><rect x="525.6" y="451.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="528.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Seek(rocksdb::Slice const&amp;) (13 samples, 0.32%)</title><rect x="525.9" y="499.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="528.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (8 samples, 0.20%)</title><rect x="525.9" y="483.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="528.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (8 samples, 0.20%)</title><rect x="525.9" y="467.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="528.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (8 samples, 0.20%)</title><rect x="525.9" y="451.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="528.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, unsigned long, bool, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="525.9" y="435.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="528.9" y="446.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="525.9" y="419.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="528.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="525.9" y="403.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="528.9" y="414.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="525.9" y="387.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="528.9" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::PutDataBlockToCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockContents*, rocksdb::CompressionType, unsigned int, rocksdb::UncompressionDict const&amp;, unsigned long, unsigned long, rocksdb::MemoryAllocator*, bool, rocksdb::Cache::Priority, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="526.2" y="435.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="529.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (1 samples, 0.02%)</title><rect x="526.2" y="419.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="529.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Insert(rocksdb::Slice const&amp;, unsigned int, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (1 samples, 0.02%)</title><rect x="526.2" y="403.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="529.2" y="414.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (1 samples, 0.02%)</title><rect x="526.2" y="387.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="529.2" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (6 samples, 0.15%)</title><rect x="526.5" y="435.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="529.5" y="446.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="526.5" y="419.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="529.5" y="430.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (5 samples, 0.12%)</title><rect x="526.8" y="419.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="529.8" y="430.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (5 samples, 0.12%)</title><rect x="526.8" y="403.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="529.8" y="414.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (5 samples, 0.12%)</title><rect x="526.8" y="387.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="529.8" y="398.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (5 samples, 0.12%)</title><rect x="526.8" y="371.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="529.8" y="382.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (5 samples, 0.12%)</title><rect x="526.8" y="355.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="529.8" y="366.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (5 samples, 0.12%)</title><rect x="526.8" y="339.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="529.8" y="350.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (5 samples, 0.12%)</title><rect x="526.8" y="323.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="529.8" y="334.0"></text>
</g>
<g>
<title>snappy::LittleEndian::Load32(void const*) (1 samples, 0.02%)</title><rect x="527.1" y="307.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="530.1" y="318.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (3 samples, 0.07%)</title><rect x="527.4" y="307.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="530.4" y="318.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (3 samples, 0.07%)</title><rect x="527.4" y="291.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="530.4" y="302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (2 samples, 0.05%)</title><rect x="527.7" y="275.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="530.7" y="286.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (2 samples, 0.05%)</title><rect x="528.3" y="483.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="531.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.02%)</title><rect x="528.5" y="467.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="531.5" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="528.5" y="451.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="531.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (3 samples, 0.07%)</title><rect x="528.8" y="483.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="531.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.02%)</title><rect x="529.4" y="467.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="532.4" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="529.4" y="451.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="532.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int, rocksdb::InternalKey const*, rocksdb::InternalKey const*) (1 samples, 0.02%)</title><rect x="529.7" y="499.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="532.7" y="510.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="530.0" y="515.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="533.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Seek(rocksdb::Slice const&amp;) (17 samples, 0.42%)</title><rect x="530.3" y="515.0" width="5.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="533.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (5 samples, 0.12%)</title><rect x="530.3" y="499.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="533.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="530.3" y="483.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="533.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (4 samples, 0.10%)</title><rect x="530.6" y="483.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="533.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (4 samples, 0.10%)</title><rect x="530.6" y="467.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="533.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (4 samples, 0.10%)</title><rect x="530.6" y="451.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="533.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(unsigned long, unsigned long, rocksdb::Slice*, char*) const (1 samples, 0.02%)</title><rect x="530.6" y="435.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="533.6" y="446.0"></text>
</g>
<g>
<title>__libc_pread64 (1 samples, 0.02%)</title><rect x="530.6" y="419.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="533.6" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="530.6" y="403.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="533.6" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="530.6" y="387.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="533.6" y="398.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.02%)</title><rect x="530.6" y="371.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="533.6" y="382.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.02%)</title><rect x="530.6" y="355.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="533.6" y="366.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.02%)</title><rect x="530.6" y="339.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="533.6" y="350.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (3 samples, 0.07%)</title><rect x="530.9" y="435.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="533.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::ShouldReportDetailedTime(rocksdb::Env*, rocksdb::Statistics*) (1 samples, 0.02%)</title><rect x="530.9" y="419.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="533.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (2 samples, 0.05%)</title><rect x="531.2" y="419.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="534.2" y="430.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (2 samples, 0.05%)</title><rect x="531.2" y="403.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="534.2" y="414.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (2 samples, 0.05%)</title><rect x="531.2" y="387.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="534.2" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (2 samples, 0.05%)</title><rect x="531.2" y="371.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="534.2" y="382.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (2 samples, 0.05%)</title><rect x="531.2" y="355.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="534.2" y="366.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (2 samples, 0.05%)</title><rect x="531.2" y="339.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="534.2" y="350.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::TryFastAppend(char const*, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="531.5" y="323.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="534.5" y="334.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (9 samples, 0.22%)</title><rect x="531.8" y="499.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="534.8" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="532.9" y="483.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="535.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.10%)</title><rect x="533.2" y="483.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="536.2" y="494.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.05%)</title><rect x="533.5" y="467.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="536.5" y="478.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="534.1" y="467.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="537.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (3 samples, 0.07%)</title><rect x="534.4" y="499.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="537.4" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="535.0" y="483.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="538.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Valid() const (1 samples, 0.02%)</title><rect x="535.3" y="515.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="538.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="535.5" y="515.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="538.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::EncodeKey(std::string*, rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="535.5" y="499.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="538.5" y="510.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="535.8" y="563.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="538.8" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (30 samples, 0.74%)</title><rect x="536.1" y="595.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="539.1" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (29 samples, 0.72%)</title><rect x="536.1" y="579.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="539.1" y="590.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_iterator__J (20 samples, 0.49%)</title><rect x="536.1" y="563.0" width="5.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="539.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.02%)</title><rect x="536.1" y="547.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="539.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (19 samples, 0.47%)</title><rect x="536.4" y="547.0" width="5.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="539.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (19 samples, 0.47%)</title><rect x="536.4" y="531.0" width="5.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="539.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.02%)</title><rect x="536.4" y="515.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="539.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewInternalIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*, rocksdb::Arena*, rocksdb::RangeDelAggregator*, unsigned long) (16 samples, 0.40%)</title><rect x="536.7" y="515.0" width="4.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="539.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::Arena*) (1 samples, 0.02%)</title><rect x="536.7" y="499.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="539.7" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="536.7" y="483.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="539.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIterators(rocksdb::ReadOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::MergeIteratorBuilder*, rocksdb::RangeDelAggregator*) (15 samples, 0.37%)</title><rect x="537.0" y="499.0" width="4.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="540.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::PackFileNumberAndPathId(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="537.0" y="483.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="540.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIteratorsForLevel(rocksdb::ReadOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::MergeIteratorBuilder*, int, rocksdb::RangeDelAggregator*) (13 samples, 0.32%)</title><rect x="537.3" y="483.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="540.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::SliceTransform const*, rocksdb::Arena*, bool, bool) (1 samples, 0.02%)</title><rect x="537.3" y="467.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="540.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (1 samples, 0.02%)</title><rect x="537.6" y="467.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="540.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Valid() const (1 samples, 0.02%)</title><rect x="537.9" y="467.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="540.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::AddIterator(rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*) (4 samples, 0.10%)</title><rect x="538.2" y="467.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="541.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::BlockHandle&gt;::status() const (1 samples, 0.02%)</title><rect x="539.0" y="451.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="542.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int, rocksdb::InternalKey const*, rocksdb::InternalKey const*) (5 samples, 0.12%)</title><rect x="539.3" y="467.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="542.3" y="478.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="539.6" y="451.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="542.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::BlockBasedTable::IndexReader&gt;*, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="539.9" y="451.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="542.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::SliceTransform const*, rocksdb::Arena*, bool, bool) (2 samples, 0.05%)</title><rect x="540.2" y="451.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="543.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::BlockBasedTable::IndexReader&gt;*, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="540.5" y="435.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="543.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::IndexBlockIter*, bool, bool) (1 samples, 0.02%)</title><rect x="540.5" y="419.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="543.5" y="430.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter* rocksdb::Block::NewIterator&lt;rocksdb::IndexBlockIter&gt;(rocksdb::Comparator const*, rocksdb::Comparator const*, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.02%)</title><rect x="540.5" y="403.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="543.5" y="414.0"></text>
</g>
<g>
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="540.8" y="467.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="543.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::Version::IsFilterSkipped(int, bool) (1 samples, 0.02%)</title><rect x="541.1" y="483.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="544.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (2 samples, 0.05%)</title><rect x="541.4" y="515.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="544.4" y="526.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.05%)</title><rect x="542.0" y="563.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="545.0" y="574.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="542.5" y="563.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="545.5" y="574.0"></text>
</g>
<g>
<title>_int_malloc (4 samples, 0.10%)</title><rect x="542.8" y="563.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="545.8" y="574.0"></text>
</g>
<g>
<title>malloc_consolidate (1 samples, 0.02%)</title><rect x="544.0" y="563.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="547.0" y="574.0"></text>
</g>
<g>
<title>sysmalloc (1 samples, 0.02%)</title><rect x="544.3" y="563.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="547.3" y="574.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="544.3" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="547.3" y="558.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="544.3" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="547.3" y="542.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="544.3" y="515.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="547.3" y="526.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="544.3" y="499.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="547.3" y="510.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="544.3" y="483.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="547.3" y="494.0"></text>
</g>
<g>
<title>mem_cgroup_commit_charge (1 samples, 0.02%)</title><rect x="544.3" y="467.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="547.3" y="478.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="544.6" y="579.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="547.6" y="590.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="544.6" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="547.6" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/RocksObject.&lt;init&gt; (1 samples, 0.02%)</title><rect x="544.6" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="547.6" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="544.6" y="531.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="547.6" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="544.6" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="547.6" y="526.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="544.6" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="547.6" y="510.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (1 samples, 0.02%)</title><rect x="544.6" y="483.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="547.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (2 samples, 0.05%)</title><rect x="544.9" y="595.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="547.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.stream (670 samples, 16.56%)</title><rect x="545.5" y="627.0" width="195.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.5" y="638.0">ru/mail/polis/service/sal..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (26 samples, 0.64%)</title><rect x="545.8" y="611.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="548.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.02%)</title><rect x="545.8" y="595.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="548.8" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (25 samples, 0.62%)</title><rect x="546.0" y="595.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="549.0" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (25 samples, 0.62%)</title><rect x="546.0" y="579.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="549.0" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (25 samples, 0.62%)</title><rect x="546.0" y="563.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="549.0" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (25 samples, 0.62%)</title><rect x="546.0" y="547.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="549.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="546.3" y="531.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="549.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="546.3" y="515.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="549.3" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.02%)</title><rect x="546.3" y="499.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="549.3" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.02%)</title><rect x="546.3" y="483.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="549.3" y="494.0"></text>
</g>
<g>
<title>__send (23 samples, 0.57%)</title><rect x="546.6" y="531.0" width="6.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="549.6" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.54%)</title><rect x="546.9" y="515.0" width="6.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="549.9" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.54%)</title><rect x="546.9" y="499.0" width="6.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="549.9" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (20 samples, 0.49%)</title><rect x="546.9" y="483.0" width="5.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="549.9" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (20 samples, 0.49%)</title><rect x="546.9" y="467.0" width="5.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="549.9" y="478.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.05%)</title><rect x="546.9" y="451.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="549.9" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (18 samples, 0.44%)</title><rect x="547.5" y="451.0" width="5.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="550.5" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (17 samples, 0.42%)</title><rect x="547.8" y="435.0" width="5.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="550.8" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (17 samples, 0.42%)</title><rect x="547.8" y="419.0" width="5.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="550.8" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (13 samples, 0.32%)</title><rect x="548.1" y="403.0" width="3.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="551.1" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (13 samples, 0.32%)</title><rect x="548.1" y="387.0" width="3.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="551.1" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (11 samples, 0.27%)</title><rect x="548.1" y="371.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="551.1" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (7 samples, 0.17%)</title><rect x="548.7" y="355.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="551.7" y="366.0"></text>
</g>
<g>
<title>ip_output (7 samples, 0.17%)</title><rect x="548.7" y="339.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="551.7" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (7 samples, 0.17%)</title><rect x="548.7" y="323.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="551.7" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 0.15%)</title><rect x="549.0" y="307.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="552.0" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (6 samples, 0.15%)</title><rect x="549.0" y="291.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="552.0" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (6 samples, 0.15%)</title><rect x="549.0" y="275.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="552.0" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (6 samples, 0.15%)</title><rect x="549.0" y="259.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="552.0" y="270.0"></text>
</g>
<g>
<title>net_rx_action (6 samples, 0.15%)</title><rect x="549.0" y="243.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="552.0" y="254.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="549.0" y="227.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="552.0" y="238.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 0.12%)</title><rect x="549.3" y="227.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="552.3" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (5 samples, 0.12%)</title><rect x="549.3" y="211.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="552.3" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="549.3" y="195.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="552.3" y="206.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.10%)</title><rect x="549.5" y="195.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="552.5" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.10%)</title><rect x="549.5" y="179.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="552.5" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 0.10%)</title><rect x="549.5" y="163.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="552.5" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (4 samples, 0.10%)</title><rect x="549.5" y="147.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="552.5" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.07%)</title><rect x="549.8" y="131.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="552.8" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.07%)</title><rect x="549.8" y="115.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="552.8" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.07%)</title><rect x="549.8" y="99.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="552.8" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="549.8" y="83.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="552.8" y="94.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="549.8" y="67.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="552.8" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="549.8" y="51.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="552.8" y="62.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.05%)</title><rect x="550.1" y="83.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="553.1" y="94.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="550.7" y="355.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="553.7" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.02%)</title><rect x="551.0" y="355.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="554.0" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.05%)</title><rect x="551.3" y="371.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="554.3" y="382.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="551.6" y="355.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="554.6" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="551.9" y="403.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="554.9" y="414.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.02%)</title><rect x="551.9" y="387.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="554.9" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="551.9" y="371.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="554.9" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.05%)</title><rect x="552.2" y="403.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="555.2" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.05%)</title><rect x="552.2" y="387.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="555.2" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.02%)</title><rect x="552.2" y="371.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="555.2" y="382.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="552.5" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="555.5" y="382.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.02%)</title><rect x="552.8" y="483.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="555.8" y="494.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.02%)</title><rect x="552.8" y="467.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="555.8" y="478.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.02%)</title><rect x="553.0" y="483.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="556.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.next (643 samples, 15.89%)</title><rect x="553.3" y="611.0" width="187.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="556.3" y="622.0">ru/mail/polis/service/sa..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.hasNext (2 samples, 0.05%)</title><rect x="553.6" y="595.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="556.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.compareTo (2 samples, 0.05%)</title><rect x="553.6" y="579.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="556.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.compareTo (2 samples, 0.05%)</title><rect x="553.6" y="563.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="556.6" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.05%)</title><rect x="553.6" y="547.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="556.6" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.05%)</title><rect x="553.6" y="531.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="556.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (124 samples, 3.06%)</title><rect x="554.2" y="595.0" width="36.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="557.2" y="606.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.hasNext (1 samples, 0.02%)</title><rect x="554.5" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="557.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (122 samples, 3.02%)</title><rect x="554.8" y="579.0" width="35.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="557.8" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.hasNext (3 samples, 0.07%)</title><rect x="554.8" y="563.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.8" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.isValid (3 samples, 0.07%)</title><rect x="554.8" y="547.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="557.8" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.isValid0 (2 samples, 0.05%)</title><rect x="555.1" y="531.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.1" y="542.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_isValid0 (1 samples, 0.02%)</title><rect x="555.4" y="515.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="558.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.next (119 samples, 2.94%)</title><rect x="555.7" y="563.0" width="34.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="558.7" y="574.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.next (119 samples, 2.94%)</title><rect x="555.7" y="547.0" width="34.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.7" y="558.0">ru..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (65 samples, 1.61%)</title><rect x="555.7" y="531.0" width="18.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="558.7" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (64 samples, 1.58%)</title><rect x="556.0" y="515.0" width="18.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="559.0" y="526.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="556.0" y="499.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="559.0" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="556.3" y="499.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="559.3" y="510.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="556.8" y="499.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="559.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Next() (59 samples, 1.46%)</title><rect x="557.1" y="499.0" width="17.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="560.1" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (4 samples, 0.10%)</title><rect x="557.7" y="483.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="560.7" y="494.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="558.9" y="483.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="561.9" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="559.2" y="483.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="562.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (1 samples, 0.02%)</title><rect x="559.5" y="483.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="562.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, bool) (23 samples, 0.57%)</title><rect x="559.8" y="483.0" width="6.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="562.8" y="494.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="561.8" y="467.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="564.8" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="562.1" y="467.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="565.1" y="478.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="562.4" y="467.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="565.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (13 samples, 0.32%)</title><rect x="562.7" y="467.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="565.7" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (7 samples, 0.17%)</title><rect x="563.5" y="451.0" width="2.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="566.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (6 samples, 0.15%)</title><rect x="563.8" y="435.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="566.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::FindBlockForward() (5 samples, 0.12%)</title><rect x="564.1" y="419.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="567.1" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (5 samples, 0.12%)</title><rect x="564.1" y="403.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="567.1" y="414.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (5 samples, 0.12%)</title><rect x="564.1" y="387.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="567.1" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (5 samples, 0.12%)</title><rect x="564.1" y="371.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="567.1" y="382.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (5 samples, 0.12%)</title><rect x="564.1" y="355.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="567.1" y="366.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (5 samples, 0.12%)</title><rect x="564.1" y="339.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="567.1" y="350.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (5 samples, 0.12%)</title><rect x="564.1" y="323.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="567.1" y="334.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (5 samples, 0.12%)</title><rect x="564.1" y="307.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="567.1" y="318.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (5 samples, 0.12%)</title><rect x="564.1" y="291.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="567.1" y="302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (5 samples, 0.12%)</title><rect x="564.1" y="275.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="567.1" y="286.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (5 samples, 0.12%)</title><rect x="564.1" y="259.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="567.1" y="270.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (5 samples, 0.12%)</title><rect x="564.1" y="243.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="567.1" y="254.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (2 samples, 0.05%)</title><rect x="564.4" y="227.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="567.4" y="238.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="564.4" y="211.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="567.4" y="222.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="564.4" y="195.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="567.4" y="206.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::Produced() const (1 samples, 0.02%)</title><rect x="564.7" y="211.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="567.7" y="222.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::TryFastAppend(char const*, unsigned long, unsigned long) (2 samples, 0.05%)</title><rect x="565.0" y="227.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="568.0" y="238.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="565.3" y="211.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="568.3" y="222.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="565.6" y="451.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="568.6" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="565.9" y="451.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="568.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (1 samples, 0.02%)</title><rect x="566.2" y="451.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="569.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::DBIter::TooManyInternalKeysSkipped(bool) (2 samples, 0.05%)</title><rect x="566.5" y="483.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="569.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (25 samples, 0.62%)</title><rect x="567.0" y="483.0" width="7.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="570.0" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (9 samples, 0.22%)</title><rect x="569.4" y="467.0" width="2.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="572.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (8 samples, 0.20%)</title><rect x="569.7" y="451.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="572.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::FindBlockForward() (5 samples, 0.12%)</title><rect x="569.7" y="435.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="572.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (5 samples, 0.12%)</title><rect x="569.7" y="419.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="572.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (5 samples, 0.12%)</title><rect x="569.7" y="403.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="572.7" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (5 samples, 0.12%)</title><rect x="569.7" y="387.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="572.7" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (5 samples, 0.12%)</title><rect x="569.7" y="371.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="572.7" y="382.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(unsigned long, unsigned long, rocksdb::Slice*, char*) const (1 samples, 0.02%)</title><rect x="569.7" y="355.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="572.7" y="366.0"></text>
</g>
<g>
<title>__libc_pread64 (1 samples, 0.02%)</title><rect x="569.7" y="339.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="572.7" y="350.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="569.7" y="323.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="572.7" y="334.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="569.7" y="307.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="572.7" y="318.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.02%)</title><rect x="569.7" y="291.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="572.7" y="302.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.02%)</title><rect x="569.7" y="275.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="572.7" y="286.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.02%)</title><rect x="569.7" y="259.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="572.7" y="270.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.02%)</title><rect x="569.7" y="243.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="572.7" y="254.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="569.7" y="227.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="572.7" y="238.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.02%)</title><rect x="569.7" y="211.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="572.7" y="222.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="569.7" y="195.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="572.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (4 samples, 0.10%)</title><rect x="570.0" y="355.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="573.0" y="366.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (4 samples, 0.10%)</title><rect x="570.0" y="339.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="573.0" y="350.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="570.0" y="323.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="573.0" y="334.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (3 samples, 0.07%)</title><rect x="570.3" y="323.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="573.3" y="334.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (3 samples, 0.07%)</title><rect x="570.3" y="307.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="573.3" y="318.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (3 samples, 0.07%)</title><rect x="570.3" y="291.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="573.3" y="302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (3 samples, 0.07%)</title><rect x="570.3" y="275.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="573.3" y="286.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (3 samples, 0.07%)</title><rect x="570.3" y="259.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="573.3" y="270.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (2 samples, 0.05%)</title><rect x="570.5" y="243.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="573.5" y="254.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (2 samples, 0.05%)</title><rect x="570.5" y="227.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="573.5" y="238.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Next() (3 samples, 0.07%)</title><rect x="571.1" y="435.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="574.1" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (3 samples, 0.07%)</title><rect x="571.1" y="419.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="574.1" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (8 samples, 0.20%)</title><rect x="572.0" y="467.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="575.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::FindBlockForward() (3 samples, 0.07%)</title><rect x="572.9" y="451.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="575.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (3 samples, 0.07%)</title><rect x="572.9" y="435.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="575.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (3 samples, 0.07%)</title><rect x="572.9" y="419.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="575.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (3 samples, 0.07%)</title><rect x="572.9" y="403.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="575.9" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, unsigned long, bool, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="572.9" y="387.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="575.9" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="572.9" y="371.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="575.9" y="382.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="572.9" y="355.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="575.9" y="366.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="572.9" y="339.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="575.9" y="350.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="572.9" y="323.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="575.9" y="334.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (2 samples, 0.05%)</title><rect x="573.2" y="387.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="576.2" y="398.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (2 samples, 0.05%)</title><rect x="573.2" y="371.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="576.2" y="382.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (2 samples, 0.05%)</title><rect x="573.2" y="355.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="576.2" y="366.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (2 samples, 0.05%)</title><rect x="573.2" y="339.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="576.2" y="350.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (2 samples, 0.05%)</title><rect x="573.2" y="323.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="576.2" y="334.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (2 samples, 0.05%)</title><rect x="573.2" y="307.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="576.2" y="318.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (2 samples, 0.05%)</title><rect x="573.2" y="291.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="576.2" y="302.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (2 samples, 0.05%)</title><rect x="573.2" y="275.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="576.2" y="286.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Next() (2 samples, 0.05%)</title><rect x="573.8" y="451.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="576.8" y="462.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.02%)</title><rect x="573.8" y="435.0" width="0.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="576.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.02%)</title><rect x="574.0" y="435.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="577.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (1 samples, 0.02%)</title><rect x="574.3" y="499.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="577.3" y="510.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (27 samples, 0.67%)</title><rect x="574.6" y="531.0" width="7.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="577.6" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.isValid0 (1 samples, 0.02%)</title><rect x="574.6" y="515.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="577.6" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (26 samples, 0.64%)</title><rect x="574.9" y="515.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="577.9" y="526.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_key0 (24 samples, 0.59%)</title><rect x="575.2" y="499.0" width="7.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="578.2" y="510.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.02%)</title><rect x="575.8" y="483.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="578.8" y="494.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="576.1" y="483.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="579.1" y="494.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="576.4" y="483.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="579.4" y="494.0"></text>
</g>
<g>
<title>jni_NewByteArray (12 samples, 0.30%)</title><rect x="576.7" y="483.0" width="3.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="579.7" y="494.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="577.3" y="467.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="580.3" y="478.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.02%)</title><rect x="577.5" y="467.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="580.5" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (3 samples, 0.07%)</title><rect x="577.8" y="467.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="580.8" y="478.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.12%)</title><rect x="578.7" y="467.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="581.7" y="478.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.12%)</title><rect x="578.7" y="451.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="581.7" y="462.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.10%)</title><rect x="578.7" y="435.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="581.7" y="446.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (2 samples, 0.05%)</title><rect x="579.0" y="419.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="582.0" y="430.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="579.6" y="419.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="582.6" y="430.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="579.9" y="435.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="582.9" y="446.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.15%)</title><rect x="580.2" y="483.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="583.2" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.07%)</title><rect x="580.5" y="467.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="583.5" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.05%)</title><rect x="581.3" y="467.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="584.3" y="478.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.02%)</title><rect x="581.9" y="483.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="584.9" y="494.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.02%)</title><rect x="582.2" y="499.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="585.2" y="510.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value (17 samples, 0.42%)</title><rect x="582.5" y="531.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="585.5" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value0 (17 samples, 0.42%)</title><rect x="582.5" y="515.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="585.5" y="526.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_value0 (17 samples, 0.42%)</title><rect x="582.5" y="499.0" width="5.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="585.5" y="510.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="582.5" y="483.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="585.5" y="494.0"></text>
</g>
<g>
<title>jni_NewByteArray (8 samples, 0.20%)</title><rect x="583.1" y="483.0" width="2.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="586.1" y="494.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.02%)</title><rect x="583.4" y="467.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="586.4" y="478.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="583.7" y="467.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="586.7" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="584.0" y="467.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="587.0" y="478.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.10%)</title><rect x="584.3" y="467.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="587.3" y="478.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.10%)</title><rect x="584.3" y="451.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="587.3" y="462.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.10%)</title><rect x="584.3" y="435.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="587.3" y="446.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (3 samples, 0.07%)</title><rect x="584.3" y="419.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="587.3" y="430.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="585.1" y="419.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="588.1" y="430.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.12%)</title><rect x="585.4" y="483.0" width="1.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="588.4" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="586.3" y="467.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="589.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::value() const (1 samples, 0.02%)</title><rect x="586.9" y="483.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="589.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::value() const (1 samples, 0.02%)</title><rect x="586.9" y="467.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="589.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::value() const (1 samples, 0.02%)</title><rect x="587.2" y="483.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="590.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.fromArray (5 samples, 0.12%)</title><rect x="587.5" y="531.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="590.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.12%)</title><rect x="587.5" y="515.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="590.5" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.12%)</title><rect x="587.5" y="499.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="590.5" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.12%)</title><rect x="587.5" y="483.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="590.5" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.12%)</title><rect x="587.5" y="467.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="590.5" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.12%)</title><rect x="587.5" y="451.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="590.5" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.10%)</title><rect x="587.5" y="435.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="590.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.10%)</title><rect x="587.5" y="419.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="590.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="588.6" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="591.6" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="588.6" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="591.6" y="430.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="588.6" y="403.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="591.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.fromArrayShifted (3 samples, 0.07%)</title><rect x="588.9" y="531.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="591.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="588.9" y="515.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="591.9" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (2 samples, 0.05%)</title><rect x="588.9" y="499.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="591.9" y="510.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="589.5" y="515.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="592.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.hasNext (2 samples, 0.05%)</title><rect x="589.8" y="531.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="592.8" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.isValid (2 samples, 0.05%)</title><rect x="589.8" y="515.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="592.8" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.isValid0 (2 samples, 0.05%)</title><rect x="589.8" y="499.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="592.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.handleStreamEnding (13 samples, 0.32%)</title><rect x="590.4" y="595.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.4" y="606.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="590.4" y="579.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="593.4" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 0.27%)</title><rect x="590.7" y="579.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="593.7" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 0.27%)</title><rect x="590.7" y="563.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="593.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (10 samples, 0.25%)</title><rect x="591.0" y="547.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="594.0" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (10 samples, 0.25%)</title><rect x="591.0" y="531.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="594.0" y="542.0"></text>
</g>
<g>
<title>__send (10 samples, 0.25%)</title><rect x="591.0" y="515.0" width="2.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="594.0" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.22%)</title><rect x="591.3" y="499.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="594.3" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.22%)</title><rect x="591.3" y="483.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="594.3" y="494.0"></text>
</g>
<g>
<title>__x64_sys_sendto (9 samples, 0.22%)</title><rect x="591.3" y="467.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="594.3" y="478.0"></text>
</g>
<g>
<title>__sys_sendto (9 samples, 0.22%)</title><rect x="591.3" y="451.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="594.3" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (9 samples, 0.22%)</title><rect x="591.3" y="435.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="594.3" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg (9 samples, 0.22%)</title><rect x="591.3" y="419.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="594.3" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (9 samples, 0.22%)</title><rect x="591.3" y="403.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="594.3" y="414.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (7 samples, 0.17%)</title><rect x="591.3" y="387.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="594.3" y="398.0"></text>
</g>
<g>
<title>tcp_write_xmit (7 samples, 0.17%)</title><rect x="591.3" y="371.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="594.3" y="382.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (6 samples, 0.15%)</title><rect x="591.3" y="355.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="594.3" y="366.0"></text>
</g>
<g>
<title>__ip_queue_xmit (5 samples, 0.12%)</title><rect x="591.3" y="339.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="594.3" y="350.0"></text>
</g>
<g>
<title>ip_output (5 samples, 0.12%)</title><rect x="591.3" y="323.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="594.3" y="334.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.02%)</title><rect x="591.3" y="307.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="594.3" y="318.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 0.10%)</title><rect x="591.5" y="307.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="594.5" y="318.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.07%)</title><rect x="591.5" y="291.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="594.5" y="302.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.02%)</title><rect x="591.5" y="275.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="594.5" y="286.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="591.8" y="275.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="594.8" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="591.8" y="259.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="594.8" y="270.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="591.8" y="243.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="594.8" y="254.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="592.1" y="275.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="595.1" y="286.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.02%)</title><rect x="592.1" y="259.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="595.1" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="592.4" y="291.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="595.4" y="302.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.02%)</title><rect x="592.4" y="275.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="595.4" y="286.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="592.4" y="259.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="595.4" y="270.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="592.4" y="243.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="595.4" y="254.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="592.4" y="227.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="595.4" y="238.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="592.4" y="211.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="595.4" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="592.4" y="195.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="595.4" y="206.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="592.4" y="179.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="595.4" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="592.4" y="163.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="595.4" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="592.4" y="147.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="595.4" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="592.4" y="131.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="595.4" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="592.4" y="115.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="595.4" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="592.4" y="99.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="595.4" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="592.4" y="83.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="595.4" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="592.4" y="67.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="595.4" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="592.4" y="51.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="595.4" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="592.4" y="35.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="595.4" y="46.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.02%)</title><rect x="592.7" y="339.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="595.7" y="350.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="592.7" y="323.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="595.7" y="334.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.02%)</title><rect x="593.0" y="355.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="596.0" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="593.0" y="339.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="596.0" y="350.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="593.0" y="323.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="596.0" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="593.0" y="307.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="596.0" y="318.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.05%)</title><rect x="593.3" y="387.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="596.3" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.05%)</title><rect x="593.3" y="371.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="596.3" y="382.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="593.6" y="355.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="596.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.keepAlive (1 samples, 0.02%)</title><rect x="593.9" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="596.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="593.9" y="563.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="596.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.writeRecord (503 samples, 12.43%)</title><rect x="594.2" y="595.0" width="146.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="597.2" y="606.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/lang/Integer.toHexString (9 samples, 0.22%)</title><rect x="594.2" y="579.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="597.2" y="590.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (9 samples, 0.22%)</title><rect x="594.2" y="563.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.2" y="574.0"></text>
</g>
<g>
<title>java/lang/Integer.formatUnsignedInt (9 samples, 0.22%)</title><rect x="594.2" y="547.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="597.2" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.15%)</title><rect x="595.0" y="531.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="598.0" y="542.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="595.0" y="515.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="598.0" y="526.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.12%)</title><rect x="595.3" y="515.0" width="1.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="598.3" y="526.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.12%)</title><rect x="595.3" y="499.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="598.3" y="510.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="596.8" y="579.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="599.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.02%)</title><rect x="596.8" y="563.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="599.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.02%)</title><rect x="596.8" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="599.8" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (493 samples, 12.18%)</title><rect x="597.1" y="579.0" width="143.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="600.1" y="590.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session.write (493 samples, 12.18%)</title><rect x="597.1" y="563.0" width="143.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="600.1" y="574.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.02%)</title><rect x="598.3" y="547.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="601.3" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (488 samples, 12.06%)</title><rect x="598.5" y="547.0" width="142.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="601.5" y="558.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="602.9" y="531.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="605.9" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.10%)</title><rect x="603.2" y="531.0" width="1.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="606.2" y="542.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="604.4" y="531.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="607.4" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (467 samples, 11.54%)</title><rect x="604.7" y="531.0" width="136.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.7" y="542.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.07%)</title><rect x="606.1" y="515.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="609.1" y="526.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.27%)</title><rect x="607.0" y="515.0" width="3.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="610.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.27%)</title><rect x="607.0" y="499.0" width="3.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="610.0" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (11 samples, 0.27%)</title><rect x="607.0" y="483.0" width="3.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="610.0" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.17%)</title><rect x="607.9" y="467.0" width="2.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="610.9" y="478.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.07%)</title><rect x="608.2" y="451.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="611.2" y="462.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="609.0" y="451.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="612.0" y="462.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.05%)</title><rect x="609.3" y="451.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="612.3" y="462.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.02%)</title><rect x="609.9" y="467.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="612.9" y="478.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.05%)</title><rect x="610.2" y="515.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="613.2" y="526.0"></text>
</g>
<g>
<title>__send (446 samples, 11.02%)</title><rect x="610.8" y="515.0" width="130.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="613.8" y="526.0">__send</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.12%)</title><rect x="614.6" y="499.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="617.6" y="510.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="616.0" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="619.0" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (427 samples, 10.55%)</title><rect x="616.3" y="499.0" width="124.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="619.3" y="510.0">entry_SYSCALL_6..</text>
</g>
<g>
<title>do_syscall_64 (427 samples, 10.55%)</title><rect x="616.3" y="483.0" width="124.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="619.3" y="494.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (394 samples, 9.74%)</title><rect x="622.7" y="467.0" width="115.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="625.7" y="478.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (390 samples, 9.64%)</title><rect x="623.9" y="451.0" width="113.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="626.9" y="462.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (2 samples, 0.05%)</title><rect x="626.0" y="435.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="629.0" y="446.0"></text>
</g>
<g>
<title>sock_sendmsg (376 samples, 9.29%)</title><rect x="626.5" y="435.0" width="109.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="629.5" y="446.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (2 samples, 0.05%)</title><rect x="628.0" y="419.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="631.0" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (369 samples, 9.12%)</title><rect x="628.6" y="419.0" width="107.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="631.6" y="430.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.07%)</title><rect x="628.9" y="403.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="631.9" y="414.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="629.5" y="387.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="632.5" y="398.0"></text>
</g>
<g>
<title>lock_sock_nested (11 samples, 0.27%)</title><rect x="629.7" y="403.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="632.7" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (9 samples, 0.22%)</title><rect x="630.0" y="387.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="633.0" y="398.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (5 samples, 0.12%)</title><rect x="630.6" y="371.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="633.6" y="382.0"></text>
</g>
<g>
<title>preempt_count_add (2 samples, 0.05%)</title><rect x="632.1" y="371.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="635.1" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.02%)</title><rect x="632.7" y="387.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="635.7" y="398.0"></text>
</g>
<g>
<title>release_sock (42 samples, 1.04%)</title><rect x="633.0" y="403.0" width="12.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="636.0" y="414.0"></text>
</g>
<g>
<title>__release_sock (34 samples, 0.84%)</title><rect x="633.2" y="387.0" width="10.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="636.2" y="398.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (31 samples, 0.77%)</title><rect x="634.1" y="371.0" width="9.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="637.1" y="382.0"></text>
</g>
<g>
<title>tcp_rcv_established (31 samples, 0.77%)</title><rect x="634.1" y="355.0" width="9.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="637.1" y="366.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.10%)</title><rect x="634.7" y="339.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="637.7" y="350.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.05%)</title><rect x="634.7" y="323.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="637.7" y="334.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="635.3" y="323.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="638.3" y="334.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="635.6" y="323.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="638.6" y="334.0"></text>
</g>
<g>
<title>tcp_ack (24 samples, 0.59%)</title><rect x="635.9" y="339.0" width="7.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="638.9" y="350.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.12%)</title><rect x="637.0" y="323.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="640.0" y="334.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="637.0" y="307.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="640.0" y="318.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.02%)</title><rect x="637.3" y="307.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="640.3" y="318.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.07%)</title><rect x="637.6" y="307.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="640.6" y="318.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.02%)</title><rect x="638.5" y="323.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="641.5" y="334.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="638.8" y="323.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="641.8" y="334.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="639.1" y="323.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="642.1" y="334.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.05%)</title><rect x="639.4" y="323.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="642.4" y="334.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (10 samples, 0.25%)</title><rect x="640.0" y="323.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="643.0" y="334.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.02%)</title><rect x="640.8" y="307.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="643.8" y="318.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.15%)</title><rect x="641.1" y="307.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="644.1" y="318.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.15%)</title><rect x="641.1" y="291.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="644.1" y="302.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.15%)</title><rect x="641.1" y="275.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="644.1" y="286.0"></text>
</g>
<g>
<title>preempt_count_sub (2 samples, 0.05%)</title><rect x="642.3" y="259.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="645.3" y="270.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="642.9" y="339.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="645.9" y="350.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.12%)</title><rect x="643.2" y="387.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="646.2" y="398.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.05%)</title><rect x="644.6" y="387.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="647.6" y="398.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (312 samples, 7.71%)</title><rect x="645.2" y="403.0" width="91.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="648.2" y="414.0">tcp_sendms..</text>
</g>
<g>
<title>__check_object_size (5 samples, 0.12%)</title><rect x="649.0" y="387.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="652.0" y="398.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.07%)</title><rect x="649.0" y="371.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="652.0" y="382.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.05%)</title><rect x="649.9" y="371.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="652.9" y="382.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (257 samples, 6.35%)</title><rect x="650.5" y="387.0" width="74.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="653.5" y="398.0">__tcp_pu..</text>
</g>
<g>
<title>tcp_write_xmit (257 samples, 6.35%)</title><rect x="650.5" y="371.0" width="74.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="653.5" y="382.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_transmit_skb (229 samples, 5.66%)</title><rect x="651.9" y="355.0" width="66.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="654.9" y="366.0">__tcp_t..</text>
</g>
<g>
<title>__ip_queue_xmit (213 samples, 5.26%)</title><rect x="653.7" y="339.0" width="62.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="656.7" y="350.0">__ip_q..</text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="654.2" y="323.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="657.2" y="334.0"></text>
</g>
<g>
<title>__rcu_read_unlock (3 samples, 0.07%)</title><rect x="654.5" y="323.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="657.5" y="334.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.05%)</title><rect x="655.4" y="323.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="658.4" y="334.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="655.4" y="307.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="658.4" y="318.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="656.0" y="323.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="659.0" y="334.0"></text>
</g>
<g>
<title>ip_local_out (6 samples, 0.15%)</title><rect x="656.3" y="323.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="659.3" y="334.0"></text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.10%)</title><rect x="656.9" y="307.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="659.9" y="318.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.02%)</title><rect x="657.7" y="291.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="660.7" y="302.0"></text>
</g>
<g>
<title>ip_output (198 samples, 4.89%)</title><rect x="658.0" y="323.0" width="57.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="661.0" y="334.0">ip_out..</text>
</g>
<g>
<title>__ip_finish_output (4 samples, 0.10%)</title><rect x="659.8" y="307.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="662.8" y="318.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.05%)</title><rect x="660.4" y="291.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="663.4" y="302.0"></text>
</g>
<g>
<title>ip_finish_output2 (180 samples, 4.45%)</title><rect x="661.0" y="307.0" width="52.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="664.0" y="318.0">ip_fi..</text>
</g>
<g>
<title>__dev_queue_xmit (41 samples, 1.01%)</title><rect x="662.4" y="291.0" width="12.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="665.4" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.05%)</title><rect x="665.3" y="275.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="668.3" y="286.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="665.6" y="259.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="668.6" y="270.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.02%)</title><rect x="665.9" y="275.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="668.9" y="286.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (21 samples, 0.52%)</title><rect x="666.2" y="275.0" width="6.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="669.2" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (21 samples, 0.52%)</title><rect x="666.2" y="259.0" width="6.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="669.2" y="270.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="667.1" y="243.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="670.1" y="254.0"></text>
</g>
<g>
<title>netif_rx (13 samples, 0.32%)</title><rect x="667.4" y="243.0" width="3.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="670.4" y="254.0"></text>
</g>
<g>
<title>netif_rx_internal (13 samples, 0.32%)</title><rect x="667.4" y="227.0" width="3.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="670.4" y="238.0"></text>
</g>
<g>
<title>enqueue_to_backlog (7 samples, 0.17%)</title><rect x="668.0" y="211.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="671.0" y="222.0"></text>
</g>
<g>
<title>ktime_get_with_offset (2 samples, 0.05%)</title><rect x="670.0" y="211.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="673.0" y="222.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="670.3" y="195.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="673.3" y="206.0"></text>
</g>
<g>
<title>preempt_count_add (2 samples, 0.05%)</title><rect x="670.6" y="211.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="673.6" y="222.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.02%)</title><rect x="671.2" y="243.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="674.2" y="254.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.07%)</title><rect x="671.5" y="243.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="674.5" y="254.0"></text>
</g>
<g>
<title>preempt_count_add (2 samples, 0.05%)</title><rect x="672.3" y="275.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="675.3" y="286.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.10%)</title><rect x="672.9" y="275.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="675.9" y="286.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.02%)</title><rect x="673.8" y="259.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="676.8" y="270.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="674.1" y="275.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="677.1" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (134 samples, 3.31%)</title><rect x="674.4" y="291.0" width="39.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="677.4" y="302.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (130 samples, 3.21%)</title><rect x="675.2" y="275.0" width="38.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="678.2" y="286.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (121 samples, 2.99%)</title><rect x="677.9" y="259.0" width="35.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="680.9" y="270.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (121 samples, 2.99%)</title><rect x="677.9" y="243.0" width="35.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="680.9" y="254.0">__s..</text>
</g>
<g>
<title>net_rx_action (112 samples, 2.77%)</title><rect x="680.5" y="227.0" width="32.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="683.5" y="238.0">ne..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="680.5" y="211.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="683.5" y="222.0"></text>
</g>
<g>
<title>process_backlog (111 samples, 2.74%)</title><rect x="680.8" y="211.0" width="32.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="683.8" y="222.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (105 samples, 2.60%)</title><rect x="682.2" y="195.0" width="30.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="685.2" y="206.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.12%)</title><rect x="682.8" y="179.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="685.8" y="190.0"></text>
</g>
<g>
<title>ip_rcv (98 samples, 2.42%)</title><rect x="684.3" y="179.0" width="28.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="687.3" y="190.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (87 samples, 2.15%)</title><rect x="685.5" y="163.0" width="25.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="688.5" y="174.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (86 samples, 2.13%)</title><rect x="685.7" y="147.0" width="25.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="688.7" y="158.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (84 samples, 2.08%)</title><rect x="686.3" y="131.0" width="24.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="689.3" y="142.0">i..</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="686.9" y="115.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="689.9" y="126.0"></text>
</g>
<g>
<title>tcp_v4_rcv (81 samples, 2.00%)</title><rect x="687.2" y="115.0" width="23.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="690.2" y="126.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.25%)</title><rect x="689.2" y="99.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="692.2" y="110.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="691.9" y="83.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="694.9" y="94.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="692.2" y="99.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="695.2" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.02%)</title><rect x="692.5" y="99.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="695.5" y="110.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="692.5" y="83.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="695.5" y="94.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (6 samples, 0.15%)</title><rect x="692.7" y="99.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="695.7" y="110.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.10%)</title><rect x="692.7" y="83.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="695.7" y="94.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.05%)</title><rect x="693.9" y="83.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="696.9" y="94.0"></text>
</g>
<g>
<title>tcp_add_backlog (2 samples, 0.05%)</title><rect x="694.5" y="99.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="697.5" y="110.0"></text>
</g>
<g>
<title>skb_condense (1 samples, 0.02%)</title><rect x="694.8" y="83.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="697.8" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (50 samples, 1.24%)</title><rect x="695.1" y="99.0" width="14.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="698.1" y="110.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="695.1" y="83.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="698.1" y="94.0"></text>
</g>
<g>
<title>tcp_rcv_established (49 samples, 1.21%)</title><rect x="695.4" y="83.0" width="14.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="698.4" y="94.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="696.8" y="67.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="699.8" y="78.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="697.1" y="67.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="700.1" y="78.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="697.1" y="51.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="700.1" y="62.0"></text>
</g>
<g>
<title>sock_def_readable (29 samples, 0.72%)</title><rect x="697.7" y="67.0" width="8.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="700.7" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (28 samples, 0.69%)</title><rect x="698.0" y="51.0" width="8.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="701.0" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (28 samples, 0.69%)</title><rect x="698.0" y="35.0" width="8.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="701.0" y="46.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.10%)</title><rect x="706.2" y="67.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="709.2" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.10%)</title><rect x="707.3" y="67.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="710.3" y="78.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.10%)</title><rect x="707.3" y="51.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="710.3" y="62.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="708.2" y="35.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="711.2" y="46.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.07%)</title><rect x="708.5" y="67.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="711.5" y="78.0"></text>
</g>
<g>
<title>tcp_try_coalesce (1 samples, 0.02%)</title><rect x="709.1" y="51.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="712.1" y="62.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="709.4" y="67.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="712.4" y="78.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb.isra.0 (3 samples, 0.07%)</title><rect x="709.7" y="99.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="712.7" y="110.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.02%)</title><rect x="710.5" y="99.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="713.5" y="110.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (4 samples, 0.10%)</title><rect x="710.8" y="163.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="713.8" y="174.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.02%)</title><rect x="711.7" y="147.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="714.7" y="158.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.07%)</title><rect x="712.0" y="163.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="715.0" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (3 samples, 0.07%)</title><rect x="712.0" y="147.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="715.0" y="158.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="712.9" y="195.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="715.9" y="206.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="713.2" y="275.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="716.2" y="286.0"></text>
</g>
<g>
<title>ip_finish_output (8 samples, 0.20%)</title><rect x="713.5" y="307.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="716.5" y="318.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (7 samples, 0.17%)</title><rect x="713.7" y="291.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="716.7" y="302.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.02%)</title><rect x="715.2" y="275.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="718.2" y="286.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="715.5" y="275.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="718.5" y="286.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.10%)</title><rect x="715.8" y="339.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="718.8" y="350.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="716.7" y="323.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="719.7" y="334.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.05%)</title><rect x="717.0" y="339.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="720.0" y="350.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="717.5" y="339.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="720.5" y="350.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.05%)</title><rect x="717.8" y="339.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="720.8" y="350.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="718.4" y="339.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="721.4" y="350.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.07%)</title><rect x="718.7" y="355.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="721.7" y="366.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="719.0" y="339.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="722.0" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (11 samples, 0.27%)</title><rect x="719.6" y="355.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="722.6" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.12%)</title><rect x="720.2" y="339.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="723.2" y="350.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.12%)</title><rect x="720.2" y="323.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="723.2" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.10%)</title><rect x="720.2" y="307.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="723.2" y="318.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="721.3" y="307.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="724.3" y="318.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.05%)</title><rect x="721.6" y="339.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="724.6" y="350.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.0 (2 samples, 0.05%)</title><rect x="722.2" y="339.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="725.2" y="350.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="722.5" y="323.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="725.5" y="334.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (9 samples, 0.22%)</title><rect x="722.8" y="355.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="725.8" y="366.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.05%)</title><rect x="723.4" y="339.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="726.4" y="350.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.12%)</title><rect x="723.9" y="339.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="726.9" y="350.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.12%)</title><rect x="723.9" y="323.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="726.9" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.10%)</title><rect x="723.9" y="307.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="726.9" y="318.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="725.1" y="307.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="728.1" y="318.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.12%)</title><rect x="725.4" y="387.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="728.4" y="398.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.05%)</title><rect x="725.7" y="371.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="728.7" y="382.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.05%)</title><rect x="725.7" y="355.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="728.7" y="366.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.05%)</title><rect x="726.3" y="371.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="729.3" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (17 samples, 0.42%)</title><rect x="726.9" y="387.0" width="4.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="729.9" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (17 samples, 0.42%)</title><rect x="726.9" y="371.0" width="4.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="729.9" y="382.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (5 samples, 0.12%)</title><rect x="728.3" y="355.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="731.3" y="366.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.12%)</title><rect x="728.3" y="339.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="731.3" y="350.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="729.5" y="323.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="732.5" y="334.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="729.5" y="307.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="732.5" y="318.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="729.5" y="291.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="732.5" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="729.5" y="275.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="732.5" y="286.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="729.5" y="259.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="732.5" y="270.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="729.5" y="243.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="732.5" y="254.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.05%)</title><rect x="729.8" y="355.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="732.8" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.12%)</title><rect x="730.4" y="355.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="733.4" y="366.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="731.8" y="387.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="734.8" y="398.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.02%)</title><rect x="732.1" y="387.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="735.1" y="398.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.05%)</title><rect x="732.4" y="387.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="735.4" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (8 samples, 0.20%)</title><rect x="733.0" y="387.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="736.0" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.15%)</title><rect x="733.6" y="371.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="736.6" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.07%)</title><rect x="734.2" y="355.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="737.2" y="366.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="735.0" y="355.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="738.0" y="366.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.05%)</title><rect x="735.3" y="387.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="738.3" y="398.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="735.9" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="738.9" y="398.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.12%)</title><rect x="736.2" y="435.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="739.2" y="446.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.12%)</title><rect x="736.2" y="419.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="739.2" y="430.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.12%)</title><rect x="736.2" y="403.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="739.2" y="414.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="737.4" y="387.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="740.4" y="398.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (8 samples, 0.20%)</title><rect x="737.7" y="467.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="740.7" y="478.0"></text>
</g>
<g>
<title>__audit_syscall_exit (8 samples, 0.20%)</title><rect x="737.7" y="451.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="740.7" y="462.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.07%)</title><rect x="738.2" y="435.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="741.2" y="446.0"></text>
</g>
<g>
<title>mntput (2 samples, 0.05%)</title><rect x="739.1" y="435.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="742.1" y="446.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.02%)</title><rect x="739.7" y="435.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="742.7" y="446.0"></text>
</g>
<g>
<title>dput (1 samples, 0.02%)</title><rect x="739.7" y="419.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="742.7" y="430.0"></text>
</g>
<g>
<title>syscall_trace_enter (3 samples, 0.07%)</title><rect x="740.0" y="467.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="743.0" y="478.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (1 samples, 0.02%)</title><rect x="740.9" y="723.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="743.9" y="734.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="740.9" y="707.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="743.9" y="718.0"></text>
</g>
<g>
<title>[NIO Worker #56 tid=1105054] (764 samples, 18.88%)</title><rect x="741.2" y="739.0" width="222.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="744.2" y="750.0">[NIO Worker #56 tid=1105054]</text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (1 samples, 0.02%)</title><rect x="741.2" y="723.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="744.2" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (3 samples, 0.07%)</title><rect x="741.4" y="723.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="744.4" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (3 samples, 0.07%)</title><rect x="741.4" y="707.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="744.4" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::method_with_idnum(int) (1 samples, 0.02%)</title><rect x="741.4" y="691.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="744.4" y="702.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.05%)</title><rect x="741.7" y="691.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="744.7" y="702.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.02%)</title><rect x="741.7" y="675.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="744.7" y="686.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.02%)</title><rect x="742.0" y="675.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="745.0" y="686.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.02%)</title><rect x="742.3" y="723.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="745.3" y="734.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="742.3" y="707.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="745.3" y="718.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="742.3" y="691.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="745.3" y="702.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="742.3" y="675.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="745.3" y="686.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.07%)</title><rect x="742.6" y="723.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="745.6" y="734.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="743.2" y="707.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="746.2" y="718.0"></text>
</g>
<g>
<title>java/lang/Thread.run (756 samples, 18.69%)</title><rect x="743.5" y="723.0" width="220.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="746.5" y="734.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (756 samples, 18.69%)</title><rect x="743.5" y="707.0" width="220.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="746.5" y="718.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (756 samples, 18.69%)</title><rect x="743.5" y="691.0" width="220.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="746.5" y="702.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (10 samples, 0.25%)</title><rect x="743.5" y="675.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="746.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (10 samples, 0.25%)</title><rect x="743.5" y="659.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (10 samples, 0.25%)</title><rect x="743.5" y="643.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="746.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (10 samples, 0.25%)</title><rect x="743.5" y="627.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.02%)</title><rect x="743.5" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (9 samples, 0.22%)</title><rect x="743.8" y="611.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="746.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.20%)</title><rect x="744.1" y="595.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="747.1" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="744.1" y="579.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="747.1" y="590.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.10%)</title><rect x="744.4" y="579.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="747.4" y="590.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="744.7" y="563.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="747.7" y="574.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="744.9" y="563.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="747.9" y="574.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="745.2" y="563.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="748.2" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="745.2" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="748.2" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="745.2" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="748.2" y="542.0"></text>
</g>
<g>
<title>__se_sys_futex (1 samples, 0.02%)</title><rect x="745.2" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="748.2" y="526.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="745.2" y="499.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="748.2" y="510.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="745.2" y="483.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="748.2" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="745.2" y="467.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="748.2" y="478.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.02%)</title><rect x="745.2" y="451.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="748.2" y="462.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="745.5" y="579.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="748.5" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.05%)</title><rect x="745.5" y="563.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="748.5" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="745.5" y="547.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="748.5" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="745.5" y="531.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="748.5" y="542.0"></text>
</g>
<g>
<title>__se_sys_futex (1 samples, 0.02%)</title><rect x="745.5" y="515.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="748.5" y="526.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="745.5" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="748.5" y="510.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="745.5" y="483.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="748.5" y="494.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="745.5" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="748.5" y="478.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="745.8" y="515.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="748.8" y="526.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="746.1" y="579.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="749.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$53/1493674228.run (746 samples, 18.44%)</title><rect x="746.4" y="675.0" width="217.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="749.4" y="686.0">ru/mail/polis/service/saloed/..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entities$1 (746 samples, 18.44%)</title><rect x="746.4" y="659.0" width="217.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="749.4" y="670.0">ru/mail/polis/service/saloed/..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.retrieveEntities (746 samples, 18.44%)</title><rect x="746.4" y="643.0" width="217.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.4" y="654.0">ru/mail/polis/service/saloed/..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (76 samples, 1.88%)</title><rect x="746.4" y="627.0" width="22.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="749.4" y="638.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (7 samples, 0.17%)</title><rect x="747.3" y="611.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (7 samples, 0.17%)</title><rect x="747.3" y="595.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="750.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.hasNext (1 samples, 0.02%)</title><rect x="747.3" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.3" y="590.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.isValid (1 samples, 0.02%)</title><rect x="747.3" y="563.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="750.3" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.isValid0 (1 samples, 0.02%)</title><rect x="747.3" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Valid() const (1 samples, 0.02%)</title><rect x="747.3" y="531.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="750.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.next (6 samples, 0.15%)</title><rect x="747.6" y="579.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="750.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.next (6 samples, 0.15%)</title><rect x="747.6" y="563.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.6" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (6 samples, 0.15%)</title><rect x="747.6" y="547.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="750.6" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (6 samples, 0.15%)</title><rect x="747.6" y="531.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="750.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Next() (6 samples, 0.15%)</title><rect x="747.6" y="515.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="750.6" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="747.6" y="499.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="750.6" y="510.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="747.9" y="499.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="750.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, bool) (4 samples, 0.10%)</title><rect x="748.2" y="499.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="751.2" y="510.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="748.4" y="483.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="751.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (2 samples, 0.05%)</title><rect x="748.7" y="483.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="751.7" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="748.7" y="467.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="751.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (1 samples, 0.02%)</title><rect x="748.7" y="451.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="751.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::FindBlockForward() (1 samples, 0.02%)</title><rect x="748.7" y="435.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="751.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (1 samples, 0.02%)</title><rect x="748.7" y="419.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="751.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (1 samples, 0.02%)</title><rect x="748.7" y="403.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="751.7" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="748.7" y="387.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="751.7" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (1 samples, 0.02%)</title><rect x="748.7" y="371.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="751.7" y="382.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (1 samples, 0.02%)</title><rect x="748.7" y="355.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="751.7" y="366.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (1 samples, 0.02%)</title><rect x="748.7" y="339.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="751.7" y="350.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (1 samples, 0.02%)</title><rect x="748.7" y="323.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="751.7" y="334.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (1 samples, 0.02%)</title><rect x="748.7" y="307.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="751.7" y="318.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="748.7" y="291.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="751.7" y="302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="748.7" y="275.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="751.7" y="286.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (1 samples, 0.02%)</title><rect x="748.7" y="259.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="751.7" y="270.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="749.0" y="467.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="752.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.iterator (66 samples, 1.63%)</title><rect x="749.3" y="611.0" width="19.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="752.3" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (40 samples, 0.99%)</title><rect x="749.3" y="595.0" width="11.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.3" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (40 samples, 0.99%)</title><rect x="749.3" y="579.0" width="11.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="752.3" y="590.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (40 samples, 0.99%)</title><rect x="749.3" y="563.0" width="11.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="752.3" y="574.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.07%)</title><rect x="749.3" y="547.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="752.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (37 samples, 0.91%)</title><rect x="750.2" y="547.0" width="10.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="753.2" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="750.8" y="531.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="753.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, bool) (2 samples, 0.05%)</title><rect x="751.1" y="531.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="754.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Seek(rocksdb::Slice const&amp;) (32 samples, 0.79%)</title><rect x="751.7" y="531.0" width="9.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="754.7" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (12 samples, 0.30%)</title><rect x="751.9" y="515.0" width="3.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="754.9" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (2 samples, 0.05%)</title><rect x="751.9" y="499.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="754.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int, rocksdb::InternalKey const*, rocksdb::InternalKey const*) (2 samples, 0.05%)</title><rect x="751.9" y="483.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="754.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::SliceTransform const*, rocksdb::Arena*, bool, bool) (2 samples, 0.05%)</title><rect x="751.9" y="467.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="754.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::BlockBasedTable::IndexReader&gt;*, rocksdb::GetContext*) (2 samples, 0.05%)</title><rect x="751.9" y="451.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="754.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::IndexBlockIter*, bool, bool) (1 samples, 0.02%)</title><rect x="752.2" y="435.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="755.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter* rocksdb::Block::NewIterator&lt;rocksdb::IndexBlockIter&gt;(rocksdb::Comparator const*, rocksdb::Comparator const*, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.02%)</title><rect x="752.2" y="419.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="755.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Seek(rocksdb::Slice const&amp;) (10 samples, 0.25%)</title><rect x="752.5" y="499.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="755.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (9 samples, 0.22%)</title><rect x="752.5" y="483.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="755.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (9 samples, 0.22%)</title><rect x="752.5" y="467.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="755.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (9 samples, 0.22%)</title><rect x="752.5" y="451.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="755.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::PutDataBlockToCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockContents*, rocksdb::CompressionType, unsigned int, rocksdb::UncompressionDict const&amp;, unsigned long, unsigned long, rocksdb::MemoryAllocator*, bool, rocksdb::Cache::Priority, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="752.5" y="435.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="755.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (1 samples, 0.02%)</title><rect x="752.5" y="419.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="755.5" y="430.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Insert(rocksdb::Slice const&amp;, unsigned int, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (1 samples, 0.02%)</title><rect x="752.5" y="403.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="755.5" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (8 samples, 0.20%)</title><rect x="752.8" y="435.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="755.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (8 samples, 0.20%)</title><rect x="752.8" y="419.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="755.8" y="430.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (8 samples, 0.20%)</title><rect x="752.8" y="403.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="755.8" y="414.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (8 samples, 0.20%)</title><rect x="752.8" y="387.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="755.8" y="398.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (8 samples, 0.20%)</title><rect x="752.8" y="371.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="755.8" y="382.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (8 samples, 0.20%)</title><rect x="752.8" y="355.0" width="2.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="755.8" y="366.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (8 samples, 0.20%)</title><rect x="752.8" y="339.0" width="2.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="755.8" y="350.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (8 samples, 0.20%)</title><rect x="752.8" y="323.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="755.8" y="334.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (4 samples, 0.10%)</title><rect x="754.0" y="307.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="757.0" y="318.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (4 samples, 0.10%)</title><rect x="754.0" y="291.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="757.0" y="302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (4 samples, 0.10%)</title><rect x="754.0" y="275.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="757.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="755.2" y="483.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="758.2" y="494.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="755.4" y="515.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="758.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Seek(rocksdb::Slice const&amp;) (18 samples, 0.44%)</title><rect x="755.7" y="515.0" width="5.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="758.7" y="526.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="756.0" y="499.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="759.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (4 samples, 0.10%)</title><rect x="756.3" y="499.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="759.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (3 samples, 0.07%)</title><rect x="756.3" y="483.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="759.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="756.6" y="467.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="759.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (1 samples, 0.02%)</title><rect x="756.6" y="451.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="759.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (1 samples, 0.02%)</title><rect x="756.6" y="435.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="759.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (1 samples, 0.02%)</title><rect x="756.6" y="419.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="759.6" y="430.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (1 samples, 0.02%)</title><rect x="756.6" y="403.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="759.6" y="414.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (1 samples, 0.02%)</title><rect x="756.6" y="387.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="759.6" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="756.6" y="371.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="759.6" y="382.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="756.6" y="355.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="759.6" y="366.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (1 samples, 0.02%)</title><rect x="756.6" y="339.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="759.6" y="350.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="756.6" y="323.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="759.6" y="334.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="756.6" y="307.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="759.6" y="318.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="756.6" y="291.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="759.6" y="302.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.02%)</title><rect x="756.9" y="467.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="759.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::value() const (1 samples, 0.02%)</title><rect x="757.2" y="483.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="760.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (1 samples, 0.02%)</title><rect x="757.2" y="467.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="760.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (9 samples, 0.22%)</title><rect x="757.5" y="499.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="760.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.10%)</title><rect x="758.9" y="483.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="761.9" y="494.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="759.5" y="467.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="762.5" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="759.8" y="467.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="762.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (3 samples, 0.07%)</title><rect x="760.1" y="499.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="763.1" y="510.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (26 samples, 0.64%)</title><rect x="761.0" y="595.0" width="7.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="764.0" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (26 samples, 0.64%)</title><rect x="761.0" y="579.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="764.0" y="590.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_iterator__J (21 samples, 0.52%)</title><rect x="761.0" y="563.0" width="6.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="764.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::DB::NewIterator(rocksdb::ReadOptions const&amp;) (1 samples, 0.02%)</title><rect x="761.3" y="547.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="764.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (18 samples, 0.44%)</title><rect x="761.6" y="547.0" width="5.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="764.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::SetIterUnderDBIter(rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*) (2 samples, 0.05%)</title><rect x="761.6" y="531.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="764.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (16 samples, 0.40%)</title><rect x="762.2" y="531.0" width="4.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="765.2" y="542.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="762.2" y="515.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="765.2" y="526.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="762.4" y="515.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="765.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetReferencedSuperVersion(rocksdb::InstrumentedMutex*) (2 samples, 0.05%)</title><rect x="762.7" y="515.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="765.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.02%)</title><rect x="763.0" y="499.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="766.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.02%)</title><rect x="763.0" y="483.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="766.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewInternalIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*, rocksdb::Arena*, rocksdb::RangeDelAggregator*, unsigned long) (9 samples, 0.22%)</title><rect x="763.3" y="515.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="766.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIterators(rocksdb::ReadOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::MergeIteratorBuilder*, rocksdb::RangeDelAggregator*) (9 samples, 0.22%)</title><rect x="763.3" y="499.0" width="2.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="766.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIteratorsForLevel(rocksdb::ReadOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::MergeIteratorBuilder*, int, rocksdb::RangeDelAggregator*) (9 samples, 0.22%)</title><rect x="763.3" y="483.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="766.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::AddIterator(rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*) (2 samples, 0.05%)</title><rect x="763.3" y="467.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="766.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::status() const (1 samples, 0.02%)</title><rect x="763.6" y="451.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="766.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int, rocksdb::InternalKey const*, rocksdb::InternalKey const*) (7 samples, 0.17%)</title><rect x="763.9" y="467.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="766.9" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="764.2" y="451.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="767.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::BlockBasedTable::IndexReader&gt;*, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="764.5" y="451.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="767.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::SliceTransform const*, rocksdb::Arena*, bool, bool) (4 samples, 0.10%)</title><rect x="764.8" y="451.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="767.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::IndexBlockIter*, bool, bool) (1 samples, 0.02%)</title><rect x="764.8" y="435.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="767.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::BlockBasedTable::IndexReader&gt;*, rocksdb::GetContext*) (3 samples, 0.07%)</title><rect x="765.1" y="435.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="768.1" y="446.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::IndexBlockIter*, bool, bool) (2 samples, 0.05%)</title><rect x="765.1" y="419.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="768.1" y="430.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter* rocksdb::Block::NewIterator&lt;rocksdb::IndexBlockIter&gt;(rocksdb::Comparator const*, rocksdb::Comparator const*, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (2 samples, 0.05%)</title><rect x="765.1" y="403.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="768.1" y="414.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter* rocksdb::Block::NewIterator&lt;rocksdb::IndexBlockIter&gt;(rocksdb::Comparator const*, rocksdb::Comparator const*, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.02%)</title><rect x="765.7" y="419.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="768.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::MergeIteratorBuilder(rocksdb::InternalKeyComparator const*, rocksdb::Arena*, bool) (1 samples, 0.02%)</title><rect x="765.9" y="515.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="768.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (2 samples, 0.05%)</title><rect x="766.2" y="515.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="769.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::OptimizeBlockSize(unsigned long) (1 samples, 0.02%)</title><rect x="766.2" y="499.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="769.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::ReverseRangeDelIterator::ReverseRangeDelIterator(rocksdb::InternalKeyComparator const*) (1 samples, 0.02%)</title><rect x="766.5" y="499.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="769.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (1 samples, 0.02%)</title><rect x="766.8" y="547.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="769.8" y="558.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="767.1" y="563.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="770.1" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="767.1" y="547.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="770.1" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="767.1" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="770.1" y="542.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.02%)</title><rect x="767.4" y="563.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="770.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.05%)</title><rect x="767.7" y="563.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="770.7" y="574.0"></text>
</g>
<g>
<title>unlink_chunk.isra.0 (1 samples, 0.02%)</title><rect x="768.3" y="563.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="771.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.stream (670 samples, 16.56%)</title><rect x="768.6" y="627.0" width="195.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="771.6" y="638.0">ru/mail/polis/service/sal..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (18 samples, 0.44%)</title><rect x="768.6" y="611.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="771.6" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (18 samples, 0.44%)</title><rect x="768.6" y="595.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="771.6" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (18 samples, 0.44%)</title><rect x="768.6" y="579.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="771.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (18 samples, 0.44%)</title><rect x="768.6" y="563.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="771.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (18 samples, 0.44%)</title><rect x="768.6" y="547.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="771.6" y="558.0"></text>
</g>
<g>
<title>__send (18 samples, 0.44%)</title><rect x="768.6" y="531.0" width="5.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="771.6" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.44%)</title><rect x="768.6" y="515.0" width="5.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="771.6" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.44%)</title><rect x="768.6" y="499.0" width="5.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="771.6" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (18 samples, 0.44%)</title><rect x="768.6" y="483.0" width="5.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="771.6" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (18 samples, 0.44%)</title><rect x="768.6" y="467.0" width="5.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="771.6" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (17 samples, 0.42%)</title><rect x="768.9" y="451.0" width="4.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="771.9" y="462.0"></text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.02%)</title><rect x="768.9" y="435.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="771.9" y="446.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.02%)</title><rect x="768.9" y="419.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="771.9" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (16 samples, 0.40%)</title><rect x="769.2" y="435.0" width="4.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="772.2" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (16 samples, 0.40%)</title><rect x="769.2" y="419.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="772.2" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (15 samples, 0.37%)</title><rect x="769.2" y="403.0" width="4.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="772.2" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (15 samples, 0.37%)</title><rect x="769.2" y="387.0" width="4.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="772.2" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (13 samples, 0.32%)</title><rect x="769.4" y="371.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="772.4" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (11 samples, 0.27%)</title><rect x="769.4" y="355.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="772.4" y="366.0"></text>
</g>
<g>
<title>ip_output (11 samples, 0.27%)</title><rect x="769.4" y="339.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="772.4" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (10 samples, 0.25%)</title><rect x="769.4" y="323.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="772.4" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.05%)</title><rect x="769.4" y="307.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="772.4" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="769.4" y="291.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="772.4" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="769.4" y="275.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="772.4" y="286.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="769.4" y="259.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="772.4" y="270.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="769.7" y="291.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="772.7" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (8 samples, 0.20%)</title><rect x="770.0" y="307.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="773.0" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (7 samples, 0.17%)</title><rect x="770.3" y="291.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="773.3" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (7 samples, 0.17%)</title><rect x="770.3" y="275.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="773.3" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (7 samples, 0.17%)</title><rect x="770.3" y="259.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="773.3" y="270.0"></text>
</g>
<g>
<title>net_rx_action (7 samples, 0.17%)</title><rect x="770.3" y="243.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="773.3" y="254.0"></text>
</g>
<g>
<title>process_backlog (6 samples, 0.15%)</title><rect x="770.6" y="227.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="773.6" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (6 samples, 0.15%)</title><rect x="770.6" y="211.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="773.6" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="770.6" y="195.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="773.6" y="206.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 0.12%)</title><rect x="770.9" y="195.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="773.9" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (5 samples, 0.12%)</title><rect x="770.9" y="179.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="773.9" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (5 samples, 0.12%)</title><rect x="770.9" y="163.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="773.9" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (5 samples, 0.12%)</title><rect x="770.9" y="147.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="773.9" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 0.12%)</title><rect x="770.9" y="131.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="773.9" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 0.12%)</title><rect x="770.9" y="115.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="773.9" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 0.12%)</title><rect x="770.9" y="99.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="773.9" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.05%)</title><rect x="770.9" y="83.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="773.9" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.05%)</title><rect x="770.9" y="67.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="773.9" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="770.9" y="51.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="773.9" y="62.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.07%)</title><rect x="771.5" y="83.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="774.5" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="772.1" y="67.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="775.1" y="78.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="772.4" y="323.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="775.4" y="334.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="772.4" y="307.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="775.4" y="318.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="772.7" y="355.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="775.7" y="366.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="772.9" y="355.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="775.9" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.02%)</title><rect x="773.2" y="371.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="776.2" y="382.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="773.5" y="403.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="776.5" y="414.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.02%)</title><rect x="773.5" y="387.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="776.5" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="773.5" y="371.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="776.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (1 samples, 0.02%)</title><rect x="773.8" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="776.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.next (651 samples, 16.09%)</title><rect x="774.1" y="611.0" width="189.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="777.1" y="622.0">ru/mail/polis/service/sal..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.hasNext (7 samples, 0.17%)</title><rect x="774.4" y="595.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="777.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.compareTo (7 samples, 0.17%)</title><rect x="774.4" y="579.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="777.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.compareTo (7 samples, 0.17%)</title><rect x="774.4" y="563.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="777.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.17%)</title><rect x="774.4" y="547.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="777.4" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.17%)</title><rect x="774.4" y="531.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="777.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (136 samples, 3.36%)</title><rect x="776.4" y="595.0" width="39.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="779.4" y="606.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.hasNext (2 samples, 0.05%)</title><rect x="776.7" y="579.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="779.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (133 samples, 3.29%)</title><rect x="777.3" y="579.0" width="38.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="780.3" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.hasNext (6 samples, 0.15%)</title><rect x="777.3" y="563.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.3" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.isValid (6 samples, 0.15%)</title><rect x="777.3" y="547.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.3" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.isValid0 (5 samples, 0.12%)</title><rect x="777.6" y="531.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="780.6" y="542.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_isValid0 (1 samples, 0.02%)</title><rect x="778.8" y="515.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="781.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.next (127 samples, 3.14%)</title><rect x="779.1" y="563.0" width="37.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="782.1" y="574.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.next (127 samples, 3.14%)</title><rect x="779.1" y="547.0" width="37.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.1" y="558.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (65 samples, 1.61%)</title><rect x="779.1" y="531.0" width="18.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="782.1" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (65 samples, 1.61%)</title><rect x="779.1" y="515.0" width="18.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.1" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="780.2" y="499.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="783.2" y="510.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.02%)</title><rect x="780.2" y="483.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="783.2" y="494.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="780.5" y="499.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="783.5" y="510.0"></text>
</g>
<g>
<title>_int_malloc (2 samples, 0.05%)</title><rect x="780.8" y="499.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="783.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Next() (57 samples, 1.41%)</title><rect x="781.4" y="499.0" width="16.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="784.4" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.05%)</title><rect x="782.6" y="483.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="785.6" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="783.2" y="483.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="786.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (1 samples, 0.02%)</title><rect x="783.7" y="483.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="786.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, bool) (25 samples, 0.62%)</title><rect x="784.0" y="483.0" width="7.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="787.0" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (2 samples, 0.05%)</title><rect x="785.5" y="467.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="788.5" y="478.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.07%)</title><rect x="786.1" y="467.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="789.1" y="478.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="786.9" y="467.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="789.9" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.10%)</title><rect x="787.2" y="467.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="790.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (10 samples, 0.25%)</title><rect x="788.4" y="467.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="791.4" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (6 samples, 0.15%)</title><rect x="789.3" y="451.0" width="1.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="792.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (5 samples, 0.12%)</title><rect x="789.6" y="435.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="792.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::FindBlockForward() (4 samples, 0.10%)</title><rect x="789.6" y="419.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="792.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (4 samples, 0.10%)</title><rect x="789.6" y="403.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="792.6" y="414.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (4 samples, 0.10%)</title><rect x="789.6" y="387.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="792.6" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (4 samples, 0.10%)</title><rect x="789.6" y="371.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="792.6" y="382.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::PutDataBlockToCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockContents*, rocksdb::CompressionType, unsigned int, rocksdb::UncompressionDict const&amp;, unsigned long, unsigned long, rocksdb::MemoryAllocator*, bool, rocksdb::Cache::Priority, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="789.6" y="355.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="792.6" y="366.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (1 samples, 0.02%)</title><rect x="789.6" y="339.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="792.6" y="350.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Insert(rocksdb::Slice const&amp;, unsigned int, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (1 samples, 0.02%)</title><rect x="789.6" y="323.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="792.6" y="334.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Insert(rocksdb::LRUHandle*) (1 samples, 0.02%)</title><rect x="789.6" y="307.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="792.6" y="318.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (3 samples, 0.07%)</title><rect x="789.9" y="355.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="792.9" y="366.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(unsigned long, unsigned long, rocksdb::Slice*, char*) const (1 samples, 0.02%)</title><rect x="789.9" y="339.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="792.9" y="350.0"></text>
</g>
<g>
<title>__libc_pread64 (1 samples, 0.02%)</title><rect x="789.9" y="323.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="792.9" y="334.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="789.9" y="307.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="792.9" y="318.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="789.9" y="291.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="792.9" y="302.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.02%)</title><rect x="789.9" y="275.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="792.9" y="286.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (2 samples, 0.05%)</title><rect x="790.2" y="339.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="793.2" y="350.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (2 samples, 0.05%)</title><rect x="790.2" y="323.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="793.2" y="334.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (2 samples, 0.05%)</title><rect x="790.2" y="307.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="793.2" y="318.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (2 samples, 0.05%)</title><rect x="790.2" y="291.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="793.2" y="302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (2 samples, 0.05%)</title><rect x="790.2" y="275.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="793.2" y="286.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (2 samples, 0.05%)</title><rect x="790.2" y="259.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="793.2" y="270.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (2 samples, 0.05%)</title><rect x="790.2" y="243.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="793.2" y="254.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Next() (1 samples, 0.02%)</title><rect x="790.7" y="419.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="793.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.02%)</title><rect x="790.7" y="403.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="793.7" y="414.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="791.0" y="451.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="794.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::DBIter::TooManyInternalKeysSkipped(bool) (1 samples, 0.02%)</title><rect x="791.3" y="483.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="794.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (22 samples, 0.54%)</title><rect x="791.6" y="483.0" width="6.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="794.6" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (8 samples, 0.20%)</title><rect x="793.4" y="467.0" width="2.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="796.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Next() (1 samples, 0.02%)</title><rect x="793.4" y="451.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="796.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (7 samples, 0.17%)</title><rect x="793.7" y="451.0" width="2.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="796.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::FindBlockForward() (6 samples, 0.15%)</title><rect x="793.7" y="435.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="796.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (6 samples, 0.15%)</title><rect x="793.7" y="419.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="796.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (6 samples, 0.15%)</title><rect x="793.7" y="403.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="796.7" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (6 samples, 0.15%)</title><rect x="793.7" y="387.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="796.7" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, unsigned long, bool, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="793.7" y="371.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="796.7" y="382.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="793.7" y="355.0" width="0.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="796.7" y="366.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="793.7" y="339.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="796.7" y="350.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="793.7" y="323.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="796.7" y="334.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (5 samples, 0.12%)</title><rect x="793.9" y="371.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="796.9" y="382.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::CheckBlockChecksum() (1 samples, 0.02%)</title><rect x="793.9" y="355.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="796.9" y="366.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(unsigned long, unsigned long, rocksdb::Slice*, char*) const (1 samples, 0.02%)</title><rect x="794.2" y="355.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="797.2" y="366.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (3 samples, 0.07%)</title><rect x="794.5" y="355.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="797.5" y="366.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (3 samples, 0.07%)</title><rect x="794.5" y="339.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="797.5" y="350.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (3 samples, 0.07%)</title><rect x="794.5" y="323.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="797.5" y="334.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (3 samples, 0.07%)</title><rect x="794.5" y="307.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="797.5" y="318.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (3 samples, 0.07%)</title><rect x="794.5" y="291.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="797.5" y="302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (3 samples, 0.07%)</title><rect x="794.5" y="275.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="797.5" y="286.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (3 samples, 0.07%)</title><rect x="794.5" y="259.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="797.5" y="270.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (2 samples, 0.05%)</title><rect x="794.8" y="243.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="797.8" y="254.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="795.1" y="227.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="798.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Next() (1 samples, 0.02%)</title><rect x="795.4" y="435.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="798.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.02%)</title><rect x="795.4" y="419.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="798.4" y="430.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="795.7" y="467.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="798.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (7 samples, 0.17%)</title><rect x="796.0" y="467.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="799.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::FindBlockForward() (3 samples, 0.07%)</title><rect x="796.3" y="451.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="799.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (3 samples, 0.07%)</title><rect x="796.3" y="435.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="799.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (3 samples, 0.07%)</title><rect x="796.3" y="419.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="799.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (3 samples, 0.07%)</title><rect x="796.3" y="403.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="799.3" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (3 samples, 0.07%)</title><rect x="796.3" y="387.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="799.3" y="398.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (3 samples, 0.07%)</title><rect x="796.3" y="371.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="799.3" y="382.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (3 samples, 0.07%)</title><rect x="796.3" y="355.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="799.3" y="366.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (3 samples, 0.07%)</title><rect x="796.3" y="339.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="799.3" y="350.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (3 samples, 0.07%)</title><rect x="796.3" y="323.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="799.3" y="334.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (3 samples, 0.07%)</title><rect x="796.3" y="307.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="799.3" y="318.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (3 samples, 0.07%)</title><rect x="796.3" y="291.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="799.3" y="302.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (3 samples, 0.07%)</title><rect x="796.3" y="275.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="799.3" y="286.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="796.9" y="259.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="799.9" y="270.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="796.9" y="243.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="799.9" y="254.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="796.9" y="227.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="799.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Next() (3 samples, 0.07%)</title><rect x="797.2" y="451.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="800.2" y="462.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="797.2" y="435.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="800.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (2 samples, 0.05%)</title><rect x="797.4" y="435.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="800.4" y="446.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (27 samples, 0.67%)</title><rect x="798.0" y="531.0" width="7.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="801.0" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (26 samples, 0.64%)</title><rect x="798.3" y="515.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="801.3" y="526.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_key0 (24 samples, 0.59%)</title><rect x="798.9" y="499.0" width="7.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="801.9" y="510.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="798.9" y="483.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="801.9" y="494.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.02%)</title><rect x="799.5" y="483.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="802.5" y="494.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (4 samples, 0.10%)</title><rect x="799.8" y="483.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="802.8" y="494.0"></text>
</g>
<g>
<title>jni_NewByteArray (14 samples, 0.35%)</title><rect x="800.9" y="483.0" width="4.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="803.9" y="494.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.02%)</title><rect x="801.2" y="467.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="804.2" y="478.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="801.5" y="467.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="804.5" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="801.8" y="467.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="804.8" y="478.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (10 samples, 0.25%)</title><rect x="802.1" y="467.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="805.1" y="478.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (9 samples, 0.22%)</title><rect x="802.4" y="451.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="805.4" y="462.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.17%)</title><rect x="802.7" y="435.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="805.7" y="446.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (4 samples, 0.10%)</title><rect x="803.3" y="419.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="806.3" y="430.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.02%)</title><rect x="804.4" y="419.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="807.4" y="430.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="804.7" y="435.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="807.7" y="446.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.07%)</title><rect x="805.0" y="483.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="808.0" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="805.3" y="467.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="808.3" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="805.6" y="467.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="808.6" y="478.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value (25 samples, 0.62%)</title><rect x="805.9" y="531.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.9" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (2 samples, 0.05%)</title><rect x="805.9" y="515.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="808.9" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value0 (23 samples, 0.57%)</title><rect x="806.5" y="515.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="809.5" y="526.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_value0 (21 samples, 0.52%)</title><rect x="806.8" y="499.0" width="6.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="809.8" y="510.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="807.4" y="483.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="810.4" y="494.0"></text>
</g>
<g>
<title>jni_NewByteArray (9 samples, 0.22%)</title><rect x="807.9" y="483.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="810.9" y="494.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.02%)</title><rect x="808.2" y="467.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="811.2" y="478.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="808.5" y="467.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="811.5" y="478.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.15%)</title><rect x="808.8" y="467.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="811.8" y="478.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.12%)</title><rect x="809.1" y="451.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="812.1" y="462.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.12%)</title><rect x="809.1" y="435.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="812.1" y="446.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.02%)</title><rect x="809.7" y="419.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="812.7" y="430.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.05%)</title><rect x="810.0" y="419.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="813.0" y="430.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.07%)</title><rect x="810.6" y="483.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="813.6" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="810.9" y="467.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="813.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::value() const (3 samples, 0.07%)</title><rect x="811.4" y="483.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="814.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::value() const (2 samples, 0.05%)</title><rect x="811.7" y="467.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="814.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::value() const (2 samples, 0.05%)</title><rect x="812.3" y="483.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="815.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::value() const (1 samples, 0.02%)</title><rect x="812.9" y="499.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="815.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.fromArray (2 samples, 0.05%)</title><rect x="813.2" y="531.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="816.2" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="813.2" y="515.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="816.2" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="813.2" y="499.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="816.2" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="813.2" y="483.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="816.2" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="813.2" y="467.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="816.2" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="813.2" y="451.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.2" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.05%)</title><rect x="813.2" y="435.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="816.2" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.05%)</title><rect x="813.2" y="419.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="816.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.fromArrayShifted (7 samples, 0.17%)</title><rect x="813.8" y="531.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="816.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.07%)</title><rect x="814.7" y="515.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="817.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.07%)</title><rect x="814.7" y="499.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="817.7" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="814.7" y="483.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="817.7" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="814.7" y="467.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="817.7" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="814.7" y="451.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="817.7" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.07%)</title><rect x="814.7" y="435.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="817.7" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.07%)</title><rect x="814.7" y="419.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="817.7" y="430.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="815.5" y="515.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="818.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.hasNext (1 samples, 0.02%)</title><rect x="815.8" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="818.8" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.isValid (1 samples, 0.02%)</title><rect x="815.8" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="818.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.handleStreamEnding (6 samples, 0.15%)</title><rect x="816.1" y="595.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="819.1" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.12%)</title><rect x="816.1" y="579.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="819.1" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.12%)</title><rect x="816.1" y="563.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.12%)</title><rect x="816.1" y="547.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="819.1" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 0.12%)</title><rect x="816.1" y="531.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="819.1" y="542.0"></text>
</g>
<g>
<title>__send (5 samples, 0.12%)</title><rect x="816.1" y="515.0" width="1.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="819.1" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="816.4" y="499.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="819.4" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.10%)</title><rect x="816.4" y="483.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="819.4" y="494.0"></text>
</g>
<g>
<title>__x64_sys_sendto (4 samples, 0.10%)</title><rect x="816.4" y="467.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="819.4" y="478.0"></text>
</g>
<g>
<title>__sys_sendto (4 samples, 0.10%)</title><rect x="816.4" y="451.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="819.4" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (4 samples, 0.10%)</title><rect x="816.4" y="435.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="819.4" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg (4 samples, 0.10%)</title><rect x="816.4" y="419.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="819.4" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (4 samples, 0.10%)</title><rect x="816.4" y="403.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="819.4" y="414.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (3 samples, 0.07%)</title><rect x="816.4" y="387.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="819.4" y="398.0"></text>
</g>
<g>
<title>tcp_write_xmit (3 samples, 0.07%)</title><rect x="816.4" y="371.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="819.4" y="382.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.07%)</title><rect x="816.4" y="355.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="819.4" y="366.0"></text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.05%)</title><rect x="816.4" y="339.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="819.4" y="350.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.05%)</title><rect x="816.4" y="323.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="819.4" y="334.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.05%)</title><rect x="816.4" y="307.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="819.4" y="318.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.05%)</title><rect x="816.4" y="291.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="819.4" y="302.0"></text>
</g>
<g>
<title>do_softirq.part.0 (2 samples, 0.05%)</title><rect x="816.4" y="275.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="819.4" y="286.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.05%)</title><rect x="816.4" y="259.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="819.4" y="270.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.05%)</title><rect x="816.4" y="243.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="819.4" y="254.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.02%)</title><rect x="817.0" y="339.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="820.0" y="350.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="817.0" y="323.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="820.0" y="334.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="817.3" y="387.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="820.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.keepAlive (1 samples, 0.02%)</title><rect x="817.6" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="817.6" y="563.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="820.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.writeRecord (501 samples, 12.38%)</title><rect x="817.9" y="595.0" width="146.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="820.9" y="606.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/lang/Integer.toHexString (8 samples, 0.20%)</title><rect x="818.4" y="579.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="821.4" y="590.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (8 samples, 0.20%)</title><rect x="818.4" y="563.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="821.4" y="574.0"></text>
</g>
<g>
<title>java/lang/Integer.formatUnsignedInt (8 samples, 0.20%)</title><rect x="818.4" y="547.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="821.4" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="818.7" y="531.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="821.7" y="542.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="818.7" y="515.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="821.7" y="526.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="819.0" y="531.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="822.0" y="542.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.12%)</title><rect x="819.3" y="531.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="822.3" y="542.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="819.3" y="515.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="822.3" y="526.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.10%)</title><rect x="819.6" y="515.0" width="1.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="822.6" y="526.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.07%)</title><rect x="819.9" y="499.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="822.9" y="510.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.05%)</title><rect x="820.8" y="579.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="823.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.05%)</title><rect x="820.8" y="563.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.05%)</title><rect x="820.8" y="547.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="823.8" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (489 samples, 12.09%)</title><rect x="821.4" y="579.0" width="142.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="824.4" y="590.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session.write (489 samples, 12.09%)</title><rect x="821.4" y="563.0" width="142.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.4" y="574.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (487 samples, 12.04%)</title><rect x="821.9" y="547.0" width="142.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="824.9" y="558.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.07%)</title><rect x="826.6" y="531.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="829.6" y="542.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="827.5" y="531.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="830.5" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (466 samples, 11.52%)</title><rect x="828.1" y="531.0" width="135.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="831.1" y="542.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>[unknown] (11 samples, 0.27%)</title><rect x="828.9" y="515.0" width="3.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="831.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.27%)</title><rect x="828.9" y="499.0" width="3.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="831.9" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (8 samples, 0.20%)</title><rect x="828.9" y="483.0" width="2.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="831.9" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.12%)</title><rect x="829.8" y="467.0" width="1.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="832.8" y="478.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="829.8" y="451.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="832.8" y="462.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (4 samples, 0.10%)</title><rect x="830.1" y="451.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="833.1" y="462.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="831.3" y="483.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="834.3" y="494.0"></text>
</g>
<g>
<title>__send (1 samples, 0.02%)</title><rect x="831.6" y="483.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="834.6" y="494.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="831.9" y="483.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="834.9" y="494.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.07%)</title><rect x="832.2" y="515.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="835.2" y="526.0"></text>
</g>
<g>
<title>__send (449 samples, 11.10%)</title><rect x="833.0" y="515.0" width="131.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="836.0" y="526.0">__send</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="837.1" y="499.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="840.1" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (433 samples, 10.70%)</title><rect x="837.7" y="499.0" width="126.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="840.7" y="510.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>do_syscall_64 (433 samples, 10.70%)</title><rect x="837.7" y="483.0" width="126.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="840.7" y="494.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (412 samples, 10.18%)</title><rect x="842.4" y="467.0" width="120.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="845.4" y="478.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (410 samples, 10.13%)</title><rect x="842.9" y="451.0" width="119.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="845.9" y="462.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="844.4" y="435.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="847.4" y="446.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="844.7" y="435.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="847.7" y="446.0"></text>
</g>
<g>
<title>sock_sendmsg (400 samples, 9.89%)</title><rect x="845.0" y="435.0" width="116.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="848.0" y="446.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (3 samples, 0.07%)</title><rect x="845.9" y="419.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="848.9" y="430.0"></text>
</g>
<g>
<title>inet_send_prepare (2 samples, 0.05%)</title><rect x="846.1" y="403.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="849.1" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (394 samples, 9.74%)</title><rect x="846.7" y="419.0" width="114.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="849.7" y="430.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.10%)</title><rect x="846.7" y="403.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="849.7" y="414.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="847.6" y="387.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="850.6" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="847.9" y="403.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="850.9" y="414.0"></text>
</g>
<g>
<title>lock_sock_nested (16 samples, 0.40%)</title><rect x="848.2" y="403.0" width="4.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="851.2" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (13 samples, 0.32%)</title><rect x="849.1" y="387.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="852.1" y="398.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (11 samples, 0.27%)</title><rect x="849.6" y="371.0" width="3.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="852.6" y="382.0"></text>
</g>
<g>
<title>release_sock (33 samples, 0.82%)</title><rect x="852.9" y="403.0" width="9.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="855.9" y="414.0"></text>
</g>
<g>
<title>__release_sock (28 samples, 0.69%)</title><rect x="853.7" y="387.0" width="8.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="856.7" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="854.0" y="371.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="857.0" y="382.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.07%)</title><rect x="854.3" y="371.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="857.3" y="382.0"></text>
</g>
<g>
<title>preempt_count_add (2 samples, 0.05%)</title><rect x="854.6" y="355.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="857.6" y="366.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.02%)</title><rect x="854.9" y="339.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="857.9" y="350.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (23 samples, 0.57%)</title><rect x="855.2" y="371.0" width="6.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="858.2" y="382.0"></text>
</g>
<g>
<title>tcp_rcv_established (23 samples, 0.57%)</title><rect x="855.2" y="355.0" width="6.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="858.2" y="366.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="855.2" y="339.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="858.2" y="350.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="855.2" y="323.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="858.2" y="334.0"></text>
</g>
<g>
<title>tcp_ack (21 samples, 0.52%)</title><rect x="855.5" y="339.0" width="6.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="858.5" y="350.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.12%)</title><rect x="857.5" y="323.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="860.5" y="334.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.05%)</title><rect x="857.5" y="307.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="860.5" y="318.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.07%)</title><rect x="858.1" y="307.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="861.1" y="318.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="859.0" y="323.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="862.0" y="334.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="859.3" y="323.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="862.3" y="334.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.05%)</title><rect x="859.6" y="323.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="862.6" y="334.0"></text>
</g>
<g>
<title>minmax_running_min (1 samples, 0.02%)</title><rect x="859.9" y="307.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="862.9" y="318.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.02%)</title><rect x="860.1" y="323.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="863.1" y="334.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="860.4" y="323.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="863.4" y="334.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.07%)</title><rect x="860.7" y="323.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="863.7" y="334.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.07%)</title><rect x="860.7" y="307.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="863.7" y="318.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.07%)</title><rect x="860.7" y="291.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="863.7" y="302.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="860.7" y="275.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="863.7" y="286.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="861.6" y="339.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="864.6" y="350.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="861.6" y="323.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="864.6" y="334.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="861.6" y="307.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="864.6" y="318.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="861.9" y="387.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="864.9" y="398.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="862.2" y="387.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="865.2" y="398.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (340 samples, 8.40%)</title><rect x="862.5" y="403.0" width="99.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="865.5" y="414.0">tcp_sendmsg_..</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.10%)</title><rect x="865.7" y="387.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="868.7" y="398.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.07%)</title><rect x="865.7" y="371.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="868.7" y="382.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.02%)</title><rect x="866.6" y="371.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="869.6" y="382.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (287 samples, 7.09%)</title><rect x="866.9" y="387.0" width="83.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="869.9" y="398.0">__tcp_pus..</text>
</g>
<g>
<title>tcp_write_xmit (287 samples, 7.09%)</title><rect x="866.9" y="371.0" width="83.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="869.9" y="382.0">tcp_write..</text>
</g>
<g>
<title>__tcp_transmit_skb (248 samples, 6.13%)</title><rect x="868.0" y="355.0" width="72.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="871.0" y="366.0">__tcp_tr..</text>
</g>
<g>
<title>__ip_queue_xmit (230 samples, 5.68%)</title><rect x="870.1" y="339.0" width="67.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="873.1" y="350.0">__ip_qu..</text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="873.3" y="323.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="876.3" y="334.0"></text>
</g>
<g>
<title>__sk_dst_check (5 samples, 0.12%)</title><rect x="873.6" y="323.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="876.6" y="334.0"></text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 0.12%)</title><rect x="873.6" y="307.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="876.6" y="318.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 0.12%)</title><rect x="875.0" y="323.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="878.0" y="334.0"></text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.10%)</title><rect x="875.3" y="307.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="878.3" y="318.0"></text>
</g>
<g>
<title>ip_output (208 samples, 5.14%)</title><rect x="876.5" y="323.0" width="60.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="879.5" y="334.0">ip_out..</text>
</g>
<g>
<title>__ip_finish_output (7 samples, 0.17%)</title><rect x="877.9" y="307.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="880.9" y="318.0"></text>
</g>
<g>
<title>ipv4_mtu (6 samples, 0.15%)</title><rect x="878.2" y="291.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="881.2" y="302.0"></text>
</g>
<g>
<title>ip_finish_output2 (188 samples, 4.65%)</title><rect x="880.0" y="307.0" width="54.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="883.0" y="318.0">ip_fi..</text>
</g>
<g>
<title>__dev_queue_xmit (36 samples, 0.89%)</title><rect x="880.9" y="291.0" width="10.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="883.9" y="302.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.02%)</title><rect x="882.3" y="275.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="885.3" y="286.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (24 samples, 0.59%)</title><rect x="882.6" y="275.0" width="7.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="885.6" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (23 samples, 0.57%)</title><rect x="882.9" y="259.0" width="6.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="885.9" y="270.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.10%)</title><rect x="882.9" y="243.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="885.9" y="254.0"></text>
</g>
<g>
<title>netif_rx (14 samples, 0.35%)</title><rect x="884.1" y="243.0" width="4.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="887.1" y="254.0"></text>
</g>
<g>
<title>netif_rx_internal (14 samples, 0.35%)</title><rect x="884.1" y="227.0" width="4.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="887.1" y="238.0"></text>
</g>
<g>
<title>enqueue_to_backlog (9 samples, 0.22%)</title><rect x="884.1" y="211.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="887.1" y="222.0"></text>
</g>
<g>
<title>ktime_get_with_offset (2 samples, 0.05%)</title><rect x="886.7" y="211.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="889.7" y="222.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="886.7" y="195.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="889.7" y="206.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.02%)</title><rect x="887.3" y="211.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="890.3" y="222.0"></text>
</g>
<g>
<title>preempt_count_sub (2 samples, 0.05%)</title><rect x="887.6" y="211.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="890.6" y="222.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.02%)</title><rect x="888.1" y="243.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="891.1" y="254.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.02%)</title><rect x="888.4" y="243.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="891.4" y="254.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.07%)</title><rect x="888.7" y="243.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="891.7" y="254.0"></text>
</g>
<g>
<title>validate_xmit_skb (6 samples, 0.15%)</title><rect x="889.6" y="275.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="892.6" y="286.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.05%)</title><rect x="890.2" y="259.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="893.2" y="270.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (2 samples, 0.05%)</title><rect x="890.8" y="259.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="893.8" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (149 samples, 3.68%)</title><rect x="891.4" y="291.0" width="43.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="894.4" y="302.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.0 (148 samples, 3.66%)</title><rect x="891.6" y="275.0" width="43.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="894.6" y="286.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (141 samples, 3.48%)</title><rect x="893.7" y="259.0" width="41.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="896.7" y="270.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (141 samples, 3.48%)</title><rect x="893.7" y="243.0" width="41.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="896.7" y="254.0">__s..</text>
</g>
<g>
<title>net_rx_action (132 samples, 3.26%)</title><rect x="896.3" y="227.0" width="38.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="899.3" y="238.0">net..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.05%)</title><rect x="897.5" y="211.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="900.5" y="222.0"></text>
</g>
<g>
<title>process_backlog (126 samples, 3.11%)</title><rect x="898.1" y="211.0" width="36.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="901.1" y="222.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="900.7" y="195.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="903.7" y="206.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (115 samples, 2.84%)</title><rect x="901.0" y="195.0" width="33.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="904.0" y="206.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.07%)</title><rect x="901.0" y="179.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="904.0" y="190.0"></text>
</g>
<g>
<title>ip_rcv (112 samples, 2.77%)</title><rect x="901.9" y="179.0" width="32.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="904.9" y="190.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (103 samples, 2.55%)</title><rect x="902.4" y="163.0" width="30.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="905.4" y="174.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (97 samples, 2.40%)</title><rect x="904.2" y="147.0" width="28.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="907.2" y="158.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (96 samples, 2.37%)</title><rect x="904.5" y="131.0" width="28.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="907.5" y="142.0">i..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.05%)</title><rect x="905.1" y="115.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="908.1" y="126.0"></text>
</g>
<g>
<title>tcp_v4_rcv (92 samples, 2.27%)</title><rect x="905.6" y="115.0" width="26.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="908.6" y="126.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.25%)</title><rect x="909.1" y="99.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="912.1" y="110.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.07%)</title><rect x="911.2" y="83.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="914.2" y="94.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.02%)</title><rect x="912.1" y="99.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="915.1" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="912.4" y="99.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="915.4" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock (5 samples, 0.12%)</title><rect x="912.6" y="99.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="915.6" y="110.0"></text>
</g>
<g>
<title>preempt_count_sub (3 samples, 0.07%)</title><rect x="913.2" y="83.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="916.2" y="94.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.10%)</title><rect x="914.1" y="99.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="917.1" y="110.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="914.4" y="83.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="917.4" y="94.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="914.4" y="67.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="917.4" y="78.0"></text>
</g>
<g>
<title>__rcu_read_unlock (2 samples, 0.05%)</title><rect x="914.7" y="83.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="917.7" y="94.0"></text>
</g>
<g>
<title>tcp_add_backlog (3 samples, 0.07%)</title><rect x="915.3" y="99.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="918.3" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (55 samples, 1.36%)</title><rect x="916.1" y="99.0" width="16.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="919.1" y="110.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.10%)</title><rect x="916.1" y="83.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="919.1" y="94.0"></text>
</g>
<g>
<title>tcp_rcv_established (51 samples, 1.26%)</title><rect x="917.3" y="83.0" width="14.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="920.3" y="94.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="917.6" y="67.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="920.6" y="78.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.05%)</title><rect x="917.9" y="67.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="920.9" y="78.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="918.5" y="67.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="921.5" y="78.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="918.5" y="51.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="921.5" y="62.0"></text>
</g>
<g>
<title>sock_def_readable (38 samples, 0.94%)</title><rect x="919.1" y="67.0" width="11.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="922.1" y="78.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="919.9" y="51.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="922.9" y="62.0"></text>
</g>
<g>
<title>__wake_up_common_lock (34 samples, 0.84%)</title><rect x="920.2" y="51.0" width="9.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="923.2" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (33 samples, 0.82%)</title><rect x="920.5" y="35.0" width="9.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="923.5" y="46.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.05%)</title><rect x="930.1" y="67.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="933.1" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.07%)</title><rect x="930.7" y="67.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="933.7" y="78.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.07%)</title><rect x="930.7" y="51.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="933.7" y="62.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="931.3" y="35.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="934.3" y="46.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="931.6" y="67.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="934.6" y="78.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="931.9" y="67.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="934.9" y="78.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb.isra.0 (1 samples, 0.02%)</title><rect x="932.2" y="99.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="935.2" y="110.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (4 samples, 0.10%)</title><rect x="932.5" y="163.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="935.5" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.07%)</title><rect x="933.6" y="163.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="936.6" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.02%)</title><rect x="934.2" y="147.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="937.2" y="158.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="934.5" y="195.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="937.5" y="206.0"></text>
</g>
<g>
<title>ip_finish_output (8 samples, 0.20%)</title><rect x="934.8" y="307.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="937.8" y="318.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (8 samples, 0.20%)</title><rect x="934.8" y="291.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="937.8" y="302.0"></text>
</g>
<g>
<title>preempt_count_add (2 samples, 0.05%)</title><rect x="936.6" y="275.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="939.6" y="286.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.05%)</title><rect x="937.1" y="339.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="940.1" y="350.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="937.4" y="323.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="940.4" y="334.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.05%)</title><rect x="937.7" y="339.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="940.7" y="350.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.05%)</title><rect x="938.3" y="339.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="941.3" y="350.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="938.9" y="339.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="941.9" y="350.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.05%)</title><rect x="939.2" y="339.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="942.2" y="350.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.05%)</title><rect x="939.8" y="339.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="942.8" y="350.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.07%)</title><rect x="940.4" y="355.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="943.4" y="366.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="940.6" y="339.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="943.6" y="350.0"></text>
</g>
<g>
<title>tcp_chrono_stop (2 samples, 0.05%)</title><rect x="941.2" y="355.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="944.2" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (17 samples, 0.42%)</title><rect x="941.8" y="355.0" width="5.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="944.8" y="366.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.02%)</title><rect x="943.0" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="946.0" y="350.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.15%)</title><rect x="943.3" y="339.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="946.3" y="350.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.15%)</title><rect x="943.3" y="323.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="946.3" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="943.9" y="307.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="946.9" y="318.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="944.7" y="307.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="947.7" y="318.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.05%)</title><rect x="945.0" y="339.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="948.0" y="350.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.0 (4 samples, 0.10%)</title><rect x="945.6" y="339.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="948.6" y="350.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.02%)</title><rect x="946.2" y="323.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="949.2" y="334.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="946.5" y="323.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="949.5" y="334.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (12 samples, 0.30%)</title><rect x="946.8" y="355.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="949.8" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (11 samples, 0.27%)</title><rect x="947.1" y="339.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="950.1" y="350.0"></text>
</g>
<g>
<title>mod_timer (11 samples, 0.27%)</title><rect x="947.1" y="323.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="950.1" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.17%)</title><rect x="947.4" y="307.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="950.4" y="318.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="949.1" y="291.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="952.1" y="302.0"></text>
</g>
<g>
<title>lock_timer_base (3 samples, 0.07%)</title><rect x="949.4" y="307.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="952.4" y="318.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.02%)</title><rect x="950.3" y="355.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="953.3" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (6 samples, 0.15%)</title><rect x="950.6" y="387.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="953.6" y="398.0"></text>
</g>
<g>
<title>copyin (3 samples, 0.07%)</title><rect x="951.1" y="371.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="954.1" y="382.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="951.7" y="355.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="954.7" y="366.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="952.0" y="371.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="955.0" y="382.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.05%)</title><rect x="952.3" y="387.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="955.3" y="398.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.05%)</title><rect x="952.3" y="371.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="955.3" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (16 samples, 0.40%)</title><rect x="952.9" y="387.0" width="4.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="955.9" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (13 samples, 0.32%)</title><rect x="953.8" y="371.0" width="3.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="956.8" y="382.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (6 samples, 0.15%)</title><rect x="954.9" y="355.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="957.9" y="366.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.15%)</title><rect x="954.9" y="339.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="957.9" y="350.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.05%)</title><rect x="956.1" y="323.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="959.1" y="334.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.02%)</title><rect x="956.7" y="355.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="959.7" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.05%)</title><rect x="957.0" y="355.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="960.0" y="366.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="957.3" y="339.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="960.3" y="350.0"></text>
</g>
<g>
<title>skb_entail (7 samples, 0.17%)</title><rect x="957.6" y="387.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="960.6" y="398.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.05%)</title><rect x="959.6" y="387.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="962.6" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.05%)</title><rect x="960.2" y="387.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="963.2" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.05%)</title><rect x="960.2" y="371.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="963.2" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.05%)</title><rect x="960.2" y="355.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="963.2" y="366.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.05%)</title><rect x="960.8" y="387.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="963.8" y="398.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="961.3" y="387.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="964.3" y="398.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.07%)</title><rect x="961.6" y="435.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="964.6" y="446.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="961.6" y="419.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="964.6" y="430.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="961.6" y="403.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="964.6" y="414.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="962.2" y="387.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="965.2" y="398.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.05%)</title><rect x="962.5" y="467.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="965.5" y="478.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.05%)</title><rect x="962.5" y="451.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="965.5" y="462.0"></text>
</g>
<g>
<title>mntput (1 samples, 0.02%)</title><rect x="962.8" y="435.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="965.8" y="446.0"></text>
</g>
<g>
<title>syscall_trace_enter (3 samples, 0.07%)</title><rect x="963.1" y="467.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="966.1" y="478.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.02%)</title><rect x="963.4" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="966.4" y="462.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.02%)</title><rect x="963.7" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="966.7" y="462.0"></text>
</g>
<g>
<title>[NIO Worker #57 tid=1105055] (750 samples, 18.54%)</title><rect x="964.0" y="739.0" width="218.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="967.0" y="750.0">[NIO Worker #57 tid=1105055]</text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (2 samples, 0.05%)</title><rect x="964.0" y="723.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="967.0" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (2 samples, 0.05%)</title><rect x="964.0" y="707.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="967.0" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::method_with_idnum(int) (2 samples, 0.05%)</title><rect x="964.0" y="691.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="967.0" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.run (747 samples, 18.46%)</title><rect x="964.6" y="723.0" width="217.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="967.6" y="734.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (747 samples, 18.46%)</title><rect x="964.6" y="707.0" width="217.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="967.6" y="718.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (747 samples, 18.46%)</title><rect x="964.6" y="691.0" width="217.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="967.6" y="702.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (11 samples, 0.27%)</title><rect x="964.6" y="675.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="967.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (11 samples, 0.27%)</title><rect x="964.6" y="659.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="967.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (11 samples, 0.27%)</title><rect x="964.6" y="643.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="967.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (10 samples, 0.25%)</title><rect x="964.8" y="627.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="967.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (10 samples, 0.25%)</title><rect x="964.8" y="611.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="967.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.20%)</title><rect x="965.1" y="595.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="968.1" y="606.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.05%)</title><rect x="965.1" y="579.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="968.1" y="590.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="965.1" y="563.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="968.1" y="574.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="965.1" y="547.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="968.1" y="558.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.02%)</title><rect x="965.4" y="563.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="968.4" y="574.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.15%)</title><rect x="965.7" y="579.0" width="1.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="968.7" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (6 samples, 0.15%)</title><rect x="965.7" y="563.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="968.7" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.15%)</title><rect x="965.7" y="547.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="968.7" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.15%)</title><rect x="965.7" y="531.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="968.7" y="542.0"></text>
</g>
<g>
<title>__se_sys_futex (5 samples, 0.12%)</title><rect x="965.7" y="515.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="968.7" y="526.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.12%)</title><rect x="965.7" y="499.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="968.7" y="510.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.10%)</title><rect x="966.0" y="483.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="969.0" y="494.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.07%)</title><rect x="966.0" y="467.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="969.0" y="478.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.05%)</title><rect x="966.0" y="451.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="969.0" y="462.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="966.6" y="451.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="969.6" y="462.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="966.6" y="435.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="969.6" y="446.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.02%)</title><rect x="966.9" y="467.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="969.9" y="478.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.02%)</title><rect x="967.2" y="515.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="970.2" y="526.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.02%)</title><rect x="967.2" y="499.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="970.2" y="510.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.02%)</title><rect x="967.5" y="595.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="970.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$53/1493674228.run (736 samples, 18.19%)</title><rect x="967.8" y="675.0" width="214.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="970.8" y="686.0">ru/mail/polis/service/saloed..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entities$1 (736 samples, 18.19%)</title><rect x="967.8" y="659.0" width="214.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="970.8" y="670.0">ru/mail/polis/service/saloed..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.retrieveEntities (736 samples, 18.19%)</title><rect x="967.8" y="643.0" width="214.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="970.8" y="654.0">ru/mail/polis/service/saloed..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (69 samples, 1.71%)</title><rect x="967.8" y="627.0" width="20.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="970.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (4 samples, 0.10%)</title><rect x="968.1" y="611.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="971.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (4 samples, 0.10%)</title><rect x="968.1" y="595.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="971.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.next (4 samples, 0.10%)</title><rect x="968.1" y="579.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="971.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.next (4 samples, 0.10%)</title><rect x="968.1" y="563.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="971.1" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (3 samples, 0.07%)</title><rect x="968.1" y="547.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="971.1" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (3 samples, 0.07%)</title><rect x="968.1" y="531.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="971.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Next() (3 samples, 0.07%)</title><rect x="968.1" y="515.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="971.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, bool) (3 samples, 0.07%)</title><rect x="968.1" y="499.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="971.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (3 samples, 0.07%)</title><rect x="968.1" y="483.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="971.1" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (2 samples, 0.05%)</title><rect x="968.3" y="467.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="971.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (2 samples, 0.05%)</title><rect x="968.3" y="451.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="971.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::FindBlockForward() (1 samples, 0.02%)</title><rect x="968.3" y="435.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="971.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (1 samples, 0.02%)</title><rect x="968.3" y="419.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="971.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (1 samples, 0.02%)</title><rect x="968.3" y="403.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="971.3" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="968.3" y="387.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="971.3" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (1 samples, 0.02%)</title><rect x="968.3" y="371.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="971.3" y="382.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(unsigned long, unsigned long, rocksdb::Slice*, char*) const (1 samples, 0.02%)</title><rect x="968.3" y="355.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="971.3" y="366.0"></text>
</g>
<g>
<title>__libc_pread64 (1 samples, 0.02%)</title><rect x="968.3" y="339.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="971.3" y="350.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="968.3" y="323.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="971.3" y="334.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="968.3" y="307.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="971.3" y="318.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.02%)</title><rect x="968.3" y="291.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="971.3" y="302.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.02%)</title><rect x="968.3" y="275.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="971.3" y="286.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.02%)</title><rect x="968.3" y="259.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="971.3" y="270.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.02%)</title><rect x="968.3" y="243.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="971.3" y="254.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Next() (1 samples, 0.02%)</title><rect x="968.6" y="435.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="971.6" y="446.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (1 samples, 0.02%)</title><rect x="968.9" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="971.9" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (1 samples, 0.02%)</title><rect x="968.9" y="531.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="971.9" y="542.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_key0 (1 samples, 0.02%)</title><rect x="968.9" y="515.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="971.9" y="526.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.02%)</title><rect x="968.9" y="499.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="971.9" y="510.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="968.9" y="483.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="971.9" y="494.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="968.9" y="467.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="971.9" y="478.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="968.9" y="451.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="971.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.iterator (64 samples, 1.58%)</title><rect x="969.2" y="611.0" width="18.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="972.2" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (42 samples, 1.04%)</title><rect x="969.2" y="595.0" width="12.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="972.2" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (42 samples, 1.04%)</title><rect x="969.2" y="579.0" width="12.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="972.2" y="590.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (40 samples, 0.99%)</title><rect x="969.2" y="563.0" width="11.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="972.2" y="574.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="969.2" y="547.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="972.2" y="558.0"></text>
</g>
<g>
<title>jni_GetByteArrayElements (1 samples, 0.02%)</title><rect x="969.5" y="547.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="972.5" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="969.5" y="531.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="972.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (38 samples, 0.94%)</title><rect x="969.8" y="547.0" width="11.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="972.8" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="969.8" y="531.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="972.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::TraceIteratorSeek(unsigned int const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="970.1" y="531.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="973.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Seek(rocksdb::Slice const&amp;) (35 samples, 0.87%)</title><rect x="970.4" y="531.0" width="10.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="973.4" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (10 samples, 0.25%)</title><rect x="971.0" y="515.0" width="2.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="974.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Seek(rocksdb::Slice const&amp;) (10 samples, 0.25%)</title><rect x="971.0" y="499.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="974.0" y="510.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="971.0" y="483.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="974.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (4 samples, 0.10%)</title><rect x="971.3" y="483.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="974.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (4 samples, 0.10%)</title><rect x="971.3" y="467.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="974.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (4 samples, 0.10%)</title><rect x="971.3" y="451.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="974.3" y="462.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="971.3" y="435.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="974.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::PutDataBlockToCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockContents*, rocksdb::CompressionType, unsigned int, rocksdb::UncompressionDict const&amp;, unsigned long, unsigned long, rocksdb::MemoryAllocator*, bool, rocksdb::Cache::Priority, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="971.6" y="435.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="974.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (1 samples, 0.02%)</title><rect x="971.6" y="419.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="974.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Insert(rocksdb::Slice const&amp;, unsigned int, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (1 samples, 0.02%)</title><rect x="971.6" y="403.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="974.6" y="414.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (1 samples, 0.02%)</title><rect x="971.6" y="387.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="974.6" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (2 samples, 0.05%)</title><rect x="971.8" y="435.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="974.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(unsigned long, unsigned long, rocksdb::Slice*, char*) const (1 samples, 0.02%)</title><rect x="971.8" y="419.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="974.8" y="430.0"></text>
</g>
<g>
<title>__libc_pread64 (1 samples, 0.02%)</title><rect x="971.8" y="403.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="974.8" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="971.8" y="387.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="974.8" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="971.8" y="371.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="974.8" y="382.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (1 samples, 0.02%)</title><rect x="972.1" y="419.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="975.1" y="430.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (1 samples, 0.02%)</title><rect x="972.1" y="403.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="975.1" y="414.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (1 samples, 0.02%)</title><rect x="972.1" y="387.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="975.1" y="398.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (1 samples, 0.02%)</title><rect x="972.1" y="371.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="975.1" y="382.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="972.1" y="355.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="975.1" y="366.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="972.1" y="339.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="975.1" y="350.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (1 samples, 0.02%)</title><rect x="972.1" y="323.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="975.1" y="334.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="972.1" y="307.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="975.1" y="318.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="972.1" y="291.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="975.1" y="302.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (2 samples, 0.05%)</title><rect x="972.4" y="483.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="975.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.02%)</title><rect x="972.7" y="467.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="975.7" y="478.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="972.7" y="451.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="975.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (3 samples, 0.07%)</title><rect x="973.0" y="483.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="976.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Seek(rocksdb::Slice const&amp;) (21 samples, 0.52%)</title><rect x="973.9" y="515.0" width="6.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="976.9" y="526.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.02%)</title><rect x="973.9" y="499.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="976.9" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="973.9" y="483.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="976.9" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="973.9" y="467.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="976.9" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="973.9" y="451.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="976.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (10 samples, 0.25%)</title><rect x="974.2" y="499.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="977.2" y="510.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="974.2" y="483.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="977.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (9 samples, 0.22%)</title><rect x="974.5" y="483.0" width="2.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="977.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetCacheKey(char const*, unsigned long, rocksdb::BlockHandle const&amp;, char*) (1 samples, 0.02%)</title><rect x="975.1" y="467.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="978.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (6 samples, 0.15%)</title><rect x="975.3" y="467.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="978.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, unsigned long, bool, rocksdb::GetContext*) (4 samples, 0.10%)</title><rect x="975.3" y="451.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="978.3" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (3 samples, 0.07%)</title><rect x="975.3" y="435.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="978.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetShard(int) const (1 samples, 0.02%)</title><rect x="975.3" y="419.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="978.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="975.6" y="419.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="978.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="975.6" y="403.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="978.6" y="414.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="975.6" y="387.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="978.6" y="398.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.02%)</title><rect x="975.9" y="419.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="978.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (1 samples, 0.02%)</title><rect x="976.2" y="435.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="979.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (2 samples, 0.05%)</title><rect x="976.5" y="451.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="979.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (2 samples, 0.05%)</title><rect x="976.5" y="435.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="979.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (2 samples, 0.05%)</title><rect x="976.5" y="419.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="979.5" y="430.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (2 samples, 0.05%)</title><rect x="976.5" y="403.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="979.5" y="414.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (2 samples, 0.05%)</title><rect x="976.5" y="387.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="979.5" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (2 samples, 0.05%)</title><rect x="976.5" y="371.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="979.5" y="382.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (2 samples, 0.05%)</title><rect x="976.5" y="355.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="979.5" y="366.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (2 samples, 0.05%)</title><rect x="976.5" y="339.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="979.5" y="350.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="976.8" y="323.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="979.8" y="334.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="976.8" y="307.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="979.8" y="318.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="976.8" y="291.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="979.8" y="302.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (4 samples, 0.10%)</title><rect x="977.1" y="499.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="980.1" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="977.4" y="483.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="980.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.05%)</title><rect x="977.7" y="483.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="980.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (5 samples, 0.12%)</title><rect x="978.3" y="499.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="981.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.02%)</title><rect x="979.4" y="483.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="982.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.02%)</title><rect x="979.7" y="499.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="982.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="980.0" y="515.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="983.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="980.3" y="515.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="983.3" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="980.3" y="499.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="983.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::EncodeKey(std::string*, rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="980.3" y="483.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="983.3" y="494.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::TruncatedRangeDelIterator*, rocksdb::TruncatedRangeDelIterator*, std::_Identity&lt;rocksdb::TruncatedRangeDelIterator*&gt;, rocksdb::SeqMaxComparator, std::allocator&lt;rocksdb::TruncatedRangeDelIterator*&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;rocksdb::TruncatedRangeDelIterator*&gt;*) (1 samples, 0.02%)</title><rect x="980.6" y="531.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="983.6" y="542.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.05%)</title><rect x="980.9" y="563.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="983.9" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (20 samples, 0.49%)</title><rect x="981.5" y="595.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="984.5" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (20 samples, 0.49%)</title><rect x="981.5" y="579.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="984.5" y="590.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_iterator__J (15 samples, 0.37%)</title><rect x="981.5" y="563.0" width="4.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="984.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (15 samples, 0.37%)</title><rect x="981.5" y="547.0" width="4.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="984.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (15 samples, 0.37%)</title><rect x="981.5" y="531.0" width="4.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="984.5" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="981.5" y="515.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="984.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::Arena::Arena(unsigned long, rocksdb::AllocTracker*, unsigned long) (1 samples, 0.02%)</title><rect x="981.8" y="515.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="984.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewInternalIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*, rocksdb::Arena*, rocksdb::RangeDelAggregator*, unsigned long) (9 samples, 0.22%)</title><rect x="982.1" y="515.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="985.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.02%)</title><rect x="982.1" y="499.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="985.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIterators(rocksdb::ReadOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::MergeIteratorBuilder*, rocksdb::RangeDelAggregator*) (6 samples, 0.15%)</title><rect x="982.3" y="499.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="985.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::PackFileNumberAndPathId(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="982.3" y="483.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="985.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIteratorsForLevel(rocksdb::ReadOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::MergeIteratorBuilder*, int, rocksdb::RangeDelAggregator*) (5 samples, 0.12%)</title><rect x="982.6" y="483.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="985.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int, rocksdb::InternalKey const*, rocksdb::InternalKey const*) (4 samples, 0.10%)</title><rect x="982.9" y="467.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="985.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateFallback(unsigned long, bool) (1 samples, 0.02%)</title><rect x="983.5" y="451.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="986.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::SliceTransform const*, rocksdb::Arena*, bool, bool) (1 samples, 0.02%)</title><rect x="983.8" y="451.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="986.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.02%)</title><rect x="983.8" y="435.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="986.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIteratorsForLevel(rocksdb::ReadOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::MergeIteratorBuilder*, int, rocksdb::RangeDelAggregator*) (2 samples, 0.05%)</title><rect x="984.1" y="499.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="987.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::AddIterators(rocksdb::ReadOptions const&amp;, rocksdb::MergeIteratorBuilder*) (1 samples, 0.02%)</title><rect x="984.7" y="515.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="987.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::SetPinnedItersMgr(rocksdb::PinnedIteratorsManager*) (1 samples, 0.02%)</title><rect x="985.0" y="515.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="988.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (2 samples, 0.05%)</title><rect x="985.3" y="515.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="988.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Init(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (2 samples, 0.05%)</title><rect x="985.3" y="499.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="988.3" y="510.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="985.8" y="563.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="988.8" y="574.0"></text>
</g>
<g>
<title>_int_malloc (4 samples, 0.10%)</title><rect x="986.1" y="563.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="989.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (2 samples, 0.05%)</title><rect x="987.3" y="595.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="990.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.stream (667 samples, 16.49%)</title><rect x="987.9" y="627.0" width="194.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="990.9" y="638.0">ru/mail/polis/service/sal..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (17 samples, 0.42%)</title><rect x="987.9" y="611.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="990.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.02%)</title><rect x="987.9" y="595.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="990.9" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.02%)</title><rect x="987.9" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="990.9" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="987.9" y="563.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="990.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="987.9" y="547.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="990.9" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (16 samples, 0.40%)</title><rect x="988.2" y="595.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="991.2" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (16 samples, 0.40%)</title><rect x="988.2" y="579.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="991.2" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (15 samples, 0.37%)</title><rect x="988.2" y="563.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="991.2" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (15 samples, 0.37%)</title><rect x="988.2" y="547.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="991.2" y="558.0"></text>
</g>
<g>
<title>__send (15 samples, 0.37%)</title><rect x="988.2" y="531.0" width="4.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="991.2" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.37%)</title><rect x="988.2" y="515.0" width="4.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="991.2" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.37%)</title><rect x="988.2" y="499.0" width="4.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="991.2" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (15 samples, 0.37%)</title><rect x="988.2" y="483.0" width="4.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="991.2" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (15 samples, 0.37%)</title><rect x="988.2" y="467.0" width="4.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="991.2" y="478.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="988.2" y="451.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="991.2" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (14 samples, 0.35%)</title><rect x="988.5" y="451.0" width="4.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="991.5" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (14 samples, 0.35%)</title><rect x="988.5" y="435.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="991.5" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (14 samples, 0.35%)</title><rect x="988.5" y="419.0" width="4.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="991.5" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (14 samples, 0.35%)</title><rect x="988.5" y="403.0" width="4.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="991.5" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (14 samples, 0.35%)</title><rect x="988.5" y="387.0" width="4.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="991.5" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (14 samples, 0.35%)</title><rect x="988.5" y="371.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="991.5" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (14 samples, 0.35%)</title><rect x="988.5" y="355.0" width="4.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="991.5" y="366.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="988.5" y="339.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="991.5" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="988.5" y="323.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="991.5" y="334.0"></text>
</g>
<g>
<title>ip_output (13 samples, 0.32%)</title><rect x="988.8" y="339.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="991.8" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (13 samples, 0.32%)</title><rect x="988.8" y="323.0" width="3.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="991.8" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.05%)</title><rect x="989.1" y="307.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="992.1" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.05%)</title><rect x="989.1" y="291.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="992.1" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.05%)</title><rect x="989.1" y="275.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="992.1" y="286.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.02%)</title><rect x="989.3" y="259.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="992.3" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="989.3" y="243.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="992.3" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="989.3" y="227.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="992.3" y="238.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (10 samples, 0.25%)</title><rect x="989.6" y="307.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="992.6" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (10 samples, 0.25%)</title><rect x="989.6" y="291.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="992.6" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (10 samples, 0.25%)</title><rect x="989.6" y="275.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="992.6" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (10 samples, 0.25%)</title><rect x="989.6" y="259.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="992.6" y="270.0"></text>
</g>
<g>
<title>net_rx_action (9 samples, 0.22%)</title><rect x="989.9" y="243.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="992.9" y="254.0"></text>
</g>
<g>
<title>process_backlog (9 samples, 0.22%)</title><rect x="989.9" y="227.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="992.9" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (9 samples, 0.22%)</title><rect x="989.9" y="211.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="992.9" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.05%)</title><rect x="989.9" y="195.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="992.9" y="206.0"></text>
</g>
<g>
<title>ip_rcv (7 samples, 0.17%)</title><rect x="990.5" y="195.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="993.5" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (5 samples, 0.12%)</title><rect x="990.8" y="179.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="993.8" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (5 samples, 0.12%)</title><rect x="990.8" y="163.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="993.8" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (5 samples, 0.12%)</title><rect x="990.8" y="147.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="993.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 0.12%)</title><rect x="990.8" y="131.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="993.8" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="990.8" y="115.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="993.8" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="990.8" y="99.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="993.8" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.10%)</title><rect x="991.1" y="115.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="994.1" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 0.10%)</title><rect x="991.1" y="99.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="994.1" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="991.1" y="83.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="994.1" y="94.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="991.1" y="67.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="994.1" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.05%)</title><rect x="991.4" y="83.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="994.4" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.05%)</title><rect x="991.4" y="67.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="994.4" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="991.4" y="51.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="994.4" y="62.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.02%)</title><rect x="992.0" y="83.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="995.0" y="94.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.02%)</title><rect x="992.0" y="67.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="995.0" y="78.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="992.3" y="179.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="995.3" y="190.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="992.6" y="563.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="995.6" y="574.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="992.6" y="547.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="995.6" y="558.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="992.6" y="531.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="995.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (1 samples, 0.02%)</title><rect x="992.8" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="995.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.next (649 samples, 16.04%)</title><rect x="993.1" y="611.0" width="189.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="996.1" y="622.0">ru/mail/polis/service/sal..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.hasNext (5 samples, 0.12%)</title><rect x="993.7" y="595.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="996.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.compareTo (5 samples, 0.12%)</title><rect x="993.7" y="579.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="996.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.compareTo (5 samples, 0.12%)</title><rect x="993.7" y="563.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="996.7" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.12%)</title><rect x="993.7" y="547.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="996.7" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.12%)</title><rect x="993.7" y="531.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="996.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (149 samples, 3.68%)</title><rect x="995.2" y="595.0" width="43.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="998.2" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.hasNext (1 samples, 0.02%)</title><rect x="995.8" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="998.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (146 samples, 3.61%)</title><rect x="996.1" y="579.0" width="42.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="999.1" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.hasNext (1 samples, 0.02%)</title><rect x="996.1" y="563.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="999.1" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.isValid (1 samples, 0.02%)</title><rect x="996.1" y="547.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="999.1" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.isValid0 (1 samples, 0.02%)</title><rect x="996.1" y="531.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="999.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.next (145 samples, 3.58%)</title><rect x="996.3" y="563.0" width="42.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="999.3" y="574.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.next (145 samples, 3.58%)</title><rect x="996.3" y="547.0" width="42.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="999.3" y="558.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (76 samples, 1.88%)</title><rect x="996.3" y="531.0" width="22.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="999.3" y="542.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (76 samples, 1.88%)</title><rect x="996.3" y="515.0" width="22.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="999.3" y="526.0">o..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="997.2" y="499.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1000.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Next() (68 samples, 1.68%)</title><rect x="997.8" y="499.0" width="19.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1000.8" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (2 samples, 0.05%)</title><rect x="998.4" y="483.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1001.4" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="999.0" y="483.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1002.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, bool) (27 samples, 0.67%)</title><rect x="999.6" y="483.0" width="7.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1002.6" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (4 samples, 0.10%)</title><rect x="1001.6" y="467.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1004.6" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1002.8" y="467.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1005.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (15 samples, 0.37%)</title><rect x="1003.1" y="467.0" width="4.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1006.1" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (10 samples, 0.25%)</title><rect x="1003.9" y="451.0" width="2.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1006.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (9 samples, 0.22%)</title><rect x="1004.2" y="435.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1007.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::FindBlockForward() (8 samples, 0.20%)</title><rect x="1004.2" y="419.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1007.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (8 samples, 0.20%)</title><rect x="1004.2" y="403.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1007.2" y="414.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (8 samples, 0.20%)</title><rect x="1004.2" y="387.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1007.2" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (8 samples, 0.20%)</title><rect x="1004.2" y="371.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1007.2" y="382.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, unsigned long, bool, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="1004.2" y="355.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1007.2" y="366.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="1004.2" y="339.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1007.2" y="350.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="1004.2" y="323.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1007.2" y="334.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="1004.2" y="307.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1007.2" y="318.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="1004.2" y="291.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1007.2" y="302.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (7 samples, 0.17%)</title><rect x="1004.5" y="355.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1007.5" y="366.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (7 samples, 0.17%)</title><rect x="1004.5" y="339.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1007.5" y="350.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (7 samples, 0.17%)</title><rect x="1004.5" y="323.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1007.5" y="334.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (7 samples, 0.17%)</title><rect x="1004.5" y="307.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1007.5" y="318.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (7 samples, 0.17%)</title><rect x="1004.5" y="291.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1007.5" y="302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (7 samples, 0.17%)</title><rect x="1004.5" y="275.0" width="2.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1007.5" y="286.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (7 samples, 0.17%)</title><rect x="1004.5" y="259.0" width="2.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1007.5" y="270.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (7 samples, 0.17%)</title><rect x="1004.5" y="243.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1007.5" y="254.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (3 samples, 0.07%)</title><rect x="1004.8" y="227.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1007.8" y="238.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (3 samples, 0.07%)</title><rect x="1004.8" y="211.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1007.8" y="222.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="1005.4" y="195.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1008.4" y="206.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::TryFastAppend(char const*, unsigned long, unsigned long) (3 samples, 0.07%)</title><rect x="1005.7" y="227.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1008.7" y="238.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="1006.3" y="211.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1009.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Next() (1 samples, 0.02%)</title><rect x="1006.6" y="419.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1009.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.02%)</title><rect x="1006.6" y="403.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1009.6" y="414.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="1006.8" y="451.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1009.8" y="462.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="1007.1" y="451.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1010.1" y="462.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (35 samples, 0.87%)</title><rect x="1007.4" y="483.0" width="10.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1010.4" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (10 samples, 0.25%)</title><rect x="1008.3" y="467.0" width="2.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1011.3" y="478.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="1008.6" y="451.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1011.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Next() (1 samples, 0.02%)</title><rect x="1008.9" y="451.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1011.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (7 samples, 0.17%)</title><rect x="1009.2" y="451.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1012.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::FindBlockForward() (3 samples, 0.07%)</title><rect x="1009.5" y="435.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1012.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (2 samples, 0.05%)</title><rect x="1009.5" y="419.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1012.5" y="430.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (1 samples, 0.02%)</title><rect x="1009.5" y="403.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1012.5" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (1 samples, 0.02%)</title><rect x="1009.5" y="387.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1012.5" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (1 samples, 0.02%)</title><rect x="1009.5" y="371.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1012.5" y="382.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (1 samples, 0.02%)</title><rect x="1009.5" y="355.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1012.5" y="366.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (1 samples, 0.02%)</title><rect x="1009.5" y="339.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1012.5" y="350.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (1 samples, 0.02%)</title><rect x="1009.5" y="323.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1012.5" y="334.0"></text>
</g>
<g>
<title>snappy::Source::~Source() (1 samples, 0.02%)</title><rect x="1009.5" y="307.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1012.5" y="318.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::value() const (1 samples, 0.02%)</title><rect x="1009.8" y="403.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1012.8" y="414.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (1 samples, 0.02%)</title><rect x="1009.8" y="387.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1012.8" y="398.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (1 samples, 0.02%)</title><rect x="1010.1" y="419.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1013.1" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Next() (3 samples, 0.07%)</title><rect x="1010.3" y="435.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1013.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (3 samples, 0.07%)</title><rect x="1010.3" y="419.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1013.3" y="430.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="1011.2" y="467.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1014.2" y="478.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.05%)</title><rect x="1011.5" y="467.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1014.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Next() (1 samples, 0.02%)</title><rect x="1012.1" y="467.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1015.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::NextAndGetResult(rocksdb::Slice*) (18 samples, 0.44%)</title><rect x="1012.4" y="467.0" width="5.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1015.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::FindBlockForward() (10 samples, 0.25%)</title><rect x="1013.0" y="451.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1016.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::InitDataBlock() (10 samples, 0.25%)</title><rect x="1013.0" y="435.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1016.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (10 samples, 0.25%)</title><rect x="1013.0" y="419.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1016.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (10 samples, 0.25%)</title><rect x="1013.0" y="403.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1016.0" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (10 samples, 0.25%)</title><rect x="1013.0" y="387.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1016.0" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (1 samples, 0.02%)</title><rect x="1013.0" y="371.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1016.0" y="382.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (9 samples, 0.22%)</title><rect x="1013.3" y="371.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1016.3" y="382.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (9 samples, 0.22%)</title><rect x="1013.3" y="355.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1016.3" y="366.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (9 samples, 0.22%)</title><rect x="1013.3" y="339.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1016.3" y="350.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (9 samples, 0.22%)</title><rect x="1013.3" y="323.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1016.3" y="334.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (9 samples, 0.22%)</title><rect x="1013.3" y="307.0" width="2.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1016.3" y="318.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (9 samples, 0.22%)</title><rect x="1013.3" y="291.0" width="2.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1016.3" y="302.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (9 samples, 0.22%)</title><rect x="1013.3" y="275.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1016.3" y="286.0"></text>
</g>
<g>
<title>snappy::LittleEndian::ToHost32(unsigned int) (1 samples, 0.02%)</title><rect x="1014.4" y="259.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1017.4" y="270.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (3 samples, 0.07%)</title><rect x="1014.7" y="259.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1017.7" y="270.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17276177162769939433.so (3 samples, 0.07%)</title><rect x="1014.7" y="243.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1017.7" y="254.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::Produced() const (1 samples, 0.02%)</title><rect x="1015.6" y="259.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1018.6" y="270.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator&lt;rocksdb::DataBlockIter, rocksdb::Slice&gt;::Next() (6 samples, 0.15%)</title><rect x="1015.9" y="451.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1018.9" y="462.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.05%)</title><rect x="1015.9" y="435.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1018.9" y="446.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (2 samples, 0.05%)</title><rect x="1016.5" y="435.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1019.5" y="446.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1016.8" y="419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1019.8" y="430.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1016.8" y="403.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1019.8" y="414.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1016.8" y="387.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1019.8" y="398.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1016.8" y="371.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1019.8" y="382.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="1016.8" y="355.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1019.8" y="366.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="1016.8" y="339.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1019.8" y="350.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="1017.1" y="435.0" width="0.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1020.1" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.02%)</title><rect x="1017.3" y="435.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1020.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, bool) (1 samples, 0.02%)</title><rect x="1017.6" y="499.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1020.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Valid() const (1 samples, 0.02%)</title><rect x="1017.9" y="499.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1020.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::key() const (1 samples, 0.02%)</title><rect x="1018.2" y="499.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1021.2" y="510.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (29 samples, 0.72%)</title><rect x="1018.5" y="531.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1021.5" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (28 samples, 0.69%)</title><rect x="1018.8" y="515.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1021.8" y="526.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_key0 (25 samples, 0.62%)</title><rect x="1019.4" y="499.0" width="7.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1022.4" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="1019.4" y="483.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1022.4" y="494.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (3 samples, 0.07%)</title><rect x="1019.7" y="483.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1022.7" y="494.0"></text>
</g>
<g>
<title>jni_NewByteArray (13 samples, 0.32%)</title><rect x="1020.6" y="483.0" width="3.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1023.6" y="494.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.02%)</title><rect x="1020.8" y="467.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1023.8" y="478.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="1021.1" y="467.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1024.1" y="478.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (9 samples, 0.22%)</title><rect x="1021.7" y="467.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1024.7" y="478.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (8 samples, 0.20%)</title><rect x="1022.0" y="451.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1025.0" y="462.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.15%)</title><rect x="1022.0" y="435.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1025.0" y="446.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (2 samples, 0.05%)</title><rect x="1022.6" y="419.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1025.6" y="430.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.05%)</title><rect x="1023.2" y="419.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1026.2" y="430.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="1023.8" y="435.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1026.8" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1024.1" y="435.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1027.1" y="446.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.20%)</title><rect x="1024.3" y="483.0" width="2.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1027.3" y="494.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="1024.3" y="467.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1027.3" y="478.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="1024.6" y="467.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1027.6" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (5 samples, 0.12%)</title><rect x="1025.2" y="467.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1028.2" y="478.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.02%)</title><rect x="1026.7" y="499.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1029.7" y="510.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value (31 samples, 0.77%)</title><rect x="1027.0" y="531.0" width="9.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1030.0" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value0 (30 samples, 0.74%)</title><rect x="1027.3" y="515.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1030.3" y="526.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_value0 (27 samples, 0.67%)</title><rect x="1028.1" y="499.0" width="7.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1031.1" y="510.0"></text>
</g>
<g>
<title>jni_NewByteArray (16 samples, 0.40%)</title><rect x="1028.4" y="483.0" width="4.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1031.4" y="494.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1029.0" y="467.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1032.0" y="478.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.05%)</title><rect x="1029.3" y="467.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1032.3" y="478.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.07%)</title><rect x="1029.9" y="467.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1032.9" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.05%)</title><rect x="1030.8" y="467.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1033.8" y="478.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.15%)</title><rect x="1031.3" y="467.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1034.3" y="478.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.15%)</title><rect x="1031.3" y="451.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1034.3" y="462.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.12%)</title><rect x="1031.3" y="435.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1034.3" y="446.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.02%)</title><rect x="1032.2" y="419.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1035.2" y="430.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="1032.5" y="419.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1035.5" y="430.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1032.8" y="435.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1035.8" y="446.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.15%)</title><rect x="1033.1" y="483.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1036.1" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="1033.7" y="467.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1036.7" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (3 samples, 0.07%)</title><rect x="1034.0" y="467.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1037.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::value() const (3 samples, 0.07%)</title><rect x="1034.8" y="483.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1037.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::value() const (3 samples, 0.07%)</title><rect x="1034.8" y="467.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1037.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::value() const (1 samples, 0.02%)</title><rect x="1035.7" y="483.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1038.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.fromArrayShifted (6 samples, 0.15%)</title><rect x="1036.0" y="531.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1039.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.10%)</title><rect x="1036.6" y="515.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1039.6" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.10%)</title><rect x="1036.6" y="499.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1039.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.10%)</title><rect x="1036.6" y="483.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1039.6" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.10%)</title><rect x="1036.6" y="467.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1039.6" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.10%)</title><rect x="1036.6" y="451.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1039.6" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.10%)</title><rect x="1036.6" y="435.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1039.6" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.10%)</title><rect x="1036.6" y="419.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1039.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl$RocksRecordIterator.hasNext (3 samples, 0.07%)</title><rect x="1037.8" y="531.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1040.8" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.isValid (3 samples, 0.07%)</title><rect x="1037.8" y="515.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1040.8" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.isValid0 (2 samples, 0.05%)</title><rect x="1038.1" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1041.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.handleStreamEnding (8 samples, 0.20%)</title><rect x="1038.6" y="595.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1041.6" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.20%)</title><rect x="1038.6" y="579.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1041.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.20%)</title><rect x="1038.6" y="563.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1041.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (8 samples, 0.20%)</title><rect x="1038.6" y="547.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1041.6" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (8 samples, 0.20%)</title><rect x="1038.6" y="531.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1041.6" y="542.0"></text>
</g>
<g>
<title>__send (8 samples, 0.20%)</title><rect x="1038.6" y="515.0" width="2.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1041.6" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.20%)</title><rect x="1038.6" y="499.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1041.6" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.20%)</title><rect x="1038.6" y="483.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1041.6" y="494.0"></text>
</g>
<g>
<title>__x64_sys_sendto (7 samples, 0.17%)</title><rect x="1038.9" y="467.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1041.9" y="478.0"></text>
</g>
<g>
<title>__sys_sendto (7 samples, 0.17%)</title><rect x="1038.9" y="451.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1041.9" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (7 samples, 0.17%)</title><rect x="1038.9" y="435.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1041.9" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg (7 samples, 0.17%)</title><rect x="1038.9" y="419.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1041.9" y="430.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="1038.9" y="403.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1041.9" y="414.0"></text>
</g>
<g>
<title>__release_sock (1 samples, 0.02%)</title><rect x="1038.9" y="387.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1041.9" y="398.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (6 samples, 0.15%)</title><rect x="1039.2" y="403.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1042.2" y="414.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="1039.2" y="387.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1042.2" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (3 samples, 0.07%)</title><rect x="1039.5" y="387.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1042.5" y="398.0"></text>
</g>
<g>
<title>tcp_write_xmit (3 samples, 0.07%)</title><rect x="1039.5" y="371.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1042.5" y="382.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.05%)</title><rect x="1039.5" y="355.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1042.5" y="366.0"></text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.05%)</title><rect x="1039.5" y="339.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1042.5" y="350.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.05%)</title><rect x="1039.5" y="323.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1042.5" y="334.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="1039.8" y="307.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1042.8" y="318.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1039.8" y="291.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1042.8" y="302.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.02%)</title><rect x="1039.8" y="275.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1042.8" y="286.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="1039.8" y="259.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1042.8" y="270.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1039.8" y="243.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1042.8" y="254.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1039.8" y="227.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1042.8" y="238.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="1039.8" y="211.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1042.8" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="1039.8" y="195.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1042.8" y="206.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1039.8" y="179.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1042.8" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1039.8" y="163.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1042.8" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1039.8" y="147.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1042.8" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="1039.8" y="131.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1042.8" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1039.8" y="115.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1042.8" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="1039.8" y="99.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1042.8" y="110.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="1039.8" y="83.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1042.8" y="94.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="1040.1" y="355.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1043.1" y="366.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="1040.1" y="339.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1043.1" y="350.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.02%)</title><rect x="1040.4" y="387.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1043.4" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="1040.4" y="371.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1043.4" y="382.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.02%)</title><rect x="1040.4" y="355.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1043.4" y="366.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.02%)</title><rect x="1040.7" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1043.7" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.02%)</title><rect x="1040.7" y="371.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1043.7" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="1040.7" y="355.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1043.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/RecordStreamHttpSession.writeRecord (485 samples, 11.99%)</title><rect x="1041.0" y="595.0" width="141.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.0" y="606.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/lang/Integer.toHexString (9 samples, 0.22%)</title><rect x="1041.0" y="579.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1044.0" y="590.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (9 samples, 0.22%)</title><rect x="1041.0" y="563.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1044.0" y="574.0"></text>
</g>
<g>
<title>java/lang/Integer.formatUnsignedInt (9 samples, 0.22%)</title><rect x="1041.0" y="547.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1044.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1041.8" y="531.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1044.8" y="542.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="1041.8" y="515.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1044.8" y="526.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="1042.1" y="531.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1045.1" y="542.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.10%)</title><rect x="1042.4" y="531.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1045.4" y="542.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.07%)</title><rect x="1042.7" y="515.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1045.7" y="526.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="1043.3" y="499.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1046.3" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (476 samples, 11.76%)</title><rect x="1043.6" y="579.0" width="138.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1046.6" y="590.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/Session.write (476 samples, 11.76%)</title><rect x="1043.6" y="563.0" width="138.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1046.6" y="574.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (475 samples, 11.74%)</title><rect x="1043.9" y="547.0" width="138.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1046.9" y="558.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="1047.1" y="531.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1050.1" y="542.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="1047.4" y="531.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1050.4" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (461 samples, 11.39%)</title><rect x="1048.0" y="531.0" width="134.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1051.0" y="542.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>[unknown] (11 samples, 0.27%)</title><rect x="1049.7" y="515.0" width="3.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1052.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.27%)</title><rect x="1049.7" y="499.0" width="3.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1052.7" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (10 samples, 0.25%)</title><rect x="1049.7" y="483.0" width="2.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1052.7" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.17%)</title><rect x="1050.6" y="467.0" width="2.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1053.6" y="478.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="1050.9" y="451.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1053.9" y="462.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="1051.2" y="451.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1054.2" y="462.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (3 samples, 0.07%)</title><rect x="1051.8" y="451.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1054.8" y="462.0"></text>
</g>
<g>
<title>__send (1 samples, 0.02%)</title><rect x="1052.6" y="483.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1055.6" y="494.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.05%)</title><rect x="1052.9" y="515.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1055.9" y="526.0"></text>
</g>
<g>
<title>__send (442 samples, 10.92%)</title><rect x="1053.5" y="515.0" width="128.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1056.5" y="526.0">__send</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1058.5" y="499.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1061.5" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (424 samples, 10.48%)</title><rect x="1058.8" y="499.0" width="123.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1061.8" y="510.0">entry_SYSCALL_6..</text>
</g>
<g>
<title>do_syscall_64 (424 samples, 10.48%)</title><rect x="1058.8" y="483.0" width="123.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1061.8" y="494.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (409 samples, 10.11%)</title><rect x="1061.1" y="467.0" width="119.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1064.1" y="478.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (407 samples, 10.06%)</title><rect x="1061.7" y="451.0" width="118.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1064.7" y="462.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (2 samples, 0.05%)</title><rect x="1062.8" y="435.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1065.8" y="446.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="1063.4" y="435.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1066.4" y="446.0"></text>
</g>
<g>
<title>sock_sendmsg (398 samples, 9.84%)</title><rect x="1063.7" y="435.0" width="116.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1066.7" y="446.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (2 samples, 0.05%)</title><rect x="1064.9" y="419.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1067.9" y="430.0"></text>
</g>
<g>
<title>inet_send_prepare (2 samples, 0.05%)</title><rect x="1064.9" y="403.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1067.9" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (392 samples, 9.69%)</title><rect x="1065.5" y="419.0" width="114.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1068.5" y="430.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.07%)</title><rect x="1066.1" y="403.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1069.1" y="414.0"></text>
</g>
<g>
<title>preempt_count_sub (3 samples, 0.07%)</title><rect x="1066.1" y="387.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1069.1" y="398.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.15%)</title><rect x="1066.9" y="403.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1069.9" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.15%)</title><rect x="1066.9" y="387.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1069.9" y="398.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (4 samples, 0.10%)</title><rect x="1067.2" y="371.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1070.2" y="382.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.02%)</title><rect x="1068.4" y="371.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1071.4" y="382.0"></text>
</g>
<g>
<title>release_sock (48 samples, 1.19%)</title><rect x="1068.7" y="403.0" width="14.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1071.7" y="414.0"></text>
</g>
<g>
<title>__release_sock (40 samples, 0.99%)</title><rect x="1068.7" y="387.0" width="11.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1071.7" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.07%)</title><rect x="1069.0" y="371.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1072.0" y="382.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.02%)</title><rect x="1069.3" y="355.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1072.3" y="366.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="1069.6" y="355.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1072.6" y="366.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.05%)</title><rect x="1069.8" y="371.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1072.8" y="382.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (34 samples, 0.84%)</title><rect x="1070.4" y="371.0" width="9.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1073.4" y="382.0"></text>
</g>
<g>
<title>tcp_rcv_established (34 samples, 0.84%)</title><rect x="1070.4" y="355.0" width="9.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1073.4" y="366.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.07%)</title><rect x="1070.7" y="339.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1073.7" y="350.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="1070.7" y="323.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1073.7" y="334.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="1071.0" y="323.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1074.0" y="334.0"></text>
</g>
<g>
<title>tcp_ack (28 samples, 0.69%)</title><rect x="1071.6" y="339.0" width="8.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1074.6" y="350.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.10%)</title><rect x="1074.2" y="323.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1077.2" y="334.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.10%)</title><rect x="1074.2" y="307.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1077.2" y="318.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.05%)</title><rect x="1075.4" y="323.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1078.4" y="334.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1076.0" y="323.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1079.0" y="334.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.02%)</title><rect x="1076.3" y="323.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1079.3" y="334.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.02%)</title><rect x="1076.5" y="323.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1079.5" y="334.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (4 samples, 0.10%)</title><rect x="1076.8" y="323.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1079.8" y="334.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="1078.0" y="323.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1081.0" y="334.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.07%)</title><rect x="1078.3" y="323.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1081.3" y="334.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="1078.6" y="307.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1081.6" y="318.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="1078.6" y="291.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1081.6" y="302.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1078.9" y="275.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1081.9" y="286.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="1078.9" y="259.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1081.9" y="270.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.05%)</title><rect x="1079.2" y="323.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1082.2" y="334.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="1079.8" y="339.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1082.8" y="350.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.05%)</title><rect x="1079.8" y="323.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1082.8" y="334.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="1079.8" y="307.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1082.8" y="318.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.12%)</title><rect x="1080.3" y="387.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1083.3" y="398.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="1080.6" y="371.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1083.6" y="382.0"></text>
</g>
<g>
<title>preempt_count_add (3 samples, 0.07%)</title><rect x="1080.9" y="371.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1083.9" y="382.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.02%)</title><rect x="1081.5" y="355.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1084.5" y="366.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.07%)</title><rect x="1081.8" y="387.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1084.8" y="398.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (333 samples, 8.23%)</title><rect x="1082.7" y="403.0" width="97.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1085.7" y="414.0">tcp_sendmsg..</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.10%)</title><rect x="1085.6" y="387.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1088.6" y="398.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.05%)</title><rect x="1086.2" y="371.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1089.2" y="382.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (269 samples, 6.65%)</title><rect x="1086.8" y="387.0" width="78.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1089.8" y="398.0">__tcp_pus..</text>
</g>
<g>
<title>tcp_write_xmit (268 samples, 6.62%)</title><rect x="1087.0" y="371.0" width="78.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1090.0" y="382.0">tcp_write..</text>
</g>
<g>
<title>__tcp_transmit_skb (232 samples, 5.73%)</title><rect x="1088.8" y="355.0" width="67.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1091.8" y="366.0">__tcp_t..</text>
</g>
<g>
<title>__ip_queue_xmit (206 samples, 5.09%)</title><rect x="1092.0" y="339.0" width="60.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1095.0" y="350.0">__ip_q..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.05%)</title><rect x="1092.9" y="323.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1095.9" y="334.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="1092.9" y="307.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1095.9" y="318.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="1093.5" y="323.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1096.5" y="334.0"></text>
</g>
<g>
<title>ip_local_out (7 samples, 0.17%)</title><rect x="1093.8" y="323.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1096.8" y="334.0"></text>
</g>
<g>
<title>__ip_local_out (7 samples, 0.17%)</title><rect x="1093.8" y="307.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1096.8" y="318.0"></text>
</g>
<g>
<title>ip_send_check (3 samples, 0.07%)</title><rect x="1094.9" y="291.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1097.9" y="302.0"></text>
</g>
<g>
<title>ip_output (193 samples, 4.77%)</title><rect x="1095.8" y="323.0" width="56.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1098.8" y="334.0">ip_out..</text>
</g>
<g>
<title>__ip_finish_output (4 samples, 0.10%)</title><rect x="1097.0" y="307.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1100.0" y="318.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="1097.8" y="291.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1100.8" y="302.0"></text>
</g>
<g>
<title>ip_finish_output2 (179 samples, 4.42%)</title><rect x="1098.1" y="307.0" width="52.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1101.1" y="318.0">ip_fi..</text>
</g>
<g>
<title>__dev_queue_xmit (43 samples, 1.06%)</title><rect x="1100.5" y="291.0" width="12.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1103.5" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.10%)</title><rect x="1101.9" y="275.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1104.9" y="286.0"></text>
</g>
<g>
<title>preempt_count_sub (3 samples, 0.07%)</title><rect x="1102.2" y="259.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1105.2" y="270.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (28 samples, 0.69%)</title><rect x="1103.1" y="275.0" width="8.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1106.1" y="286.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.02%)</title><rect x="1103.1" y="259.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1106.1" y="270.0"></text>
</g>
<g>
<title>loopback_xmit (27 samples, 0.67%)</title><rect x="1103.4" y="259.0" width="7.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1106.4" y="270.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.05%)</title><rect x="1104.3" y="243.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1107.3" y="254.0"></text>
</g>
<g>
<title>netif_rx (14 samples, 0.35%)</title><rect x="1104.8" y="243.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1107.8" y="254.0"></text>
</g>
<g>
<title>netif_rx_internal (14 samples, 0.35%)</title><rect x="1104.8" y="227.0" width="4.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1107.8" y="238.0"></text>
</g>
<g>
<title>enqueue_to_backlog (8 samples, 0.20%)</title><rect x="1104.8" y="211.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1107.8" y="222.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="1107.2" y="211.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1110.2" y="222.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="1107.2" y="195.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1110.2" y="206.0"></text>
</g>
<g>
<title>preempt_count_add (3 samples, 0.07%)</title><rect x="1107.5" y="211.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1110.5" y="222.0"></text>
</g>
<g>
<title>preempt_count_sub (2 samples, 0.05%)</title><rect x="1108.3" y="211.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1111.3" y="222.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.05%)</title><rect x="1108.9" y="243.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1111.9" y="254.0"></text>
</g>
<g>
<title>tcp_wfree (6 samples, 0.15%)</title><rect x="1109.5" y="243.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1112.5" y="254.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.12%)</title><rect x="1111.3" y="275.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1114.3" y="286.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.07%)</title><rect x="1111.8" y="259.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1114.8" y="270.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="1112.4" y="243.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1115.4" y="254.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="1112.7" y="275.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1115.7" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (128 samples, 3.16%)</title><rect x="1113.0" y="291.0" width="37.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1116.0" y="302.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (126 samples, 3.11%)</title><rect x="1113.3" y="275.0" width="36.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1116.3" y="286.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (122 samples, 3.02%)</title><rect x="1114.5" y="259.0" width="35.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1117.5" y="270.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (122 samples, 3.02%)</title><rect x="1114.5" y="243.0" width="35.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1117.5" y="254.0">__s..</text>
</g>
<g>
<title>net_rx_action (110 samples, 2.72%)</title><rect x="1118.0" y="227.0" width="32.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1121.0" y="238.0">ne..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="1119.4" y="211.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1122.4" y="222.0"></text>
</g>
<g>
<title>process_backlog (104 samples, 2.57%)</title><rect x="1119.7" y="211.0" width="30.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1122.7" y="222.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (95 samples, 2.35%)</title><rect x="1122.3" y="195.0" width="27.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1125.3" y="206.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.12%)</title><rect x="1122.3" y="179.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1125.3" y="190.0"></text>
</g>
<g>
<title>ip_rcv (90 samples, 2.22%)</title><rect x="1123.8" y="179.0" width="26.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1126.8" y="190.0">i..</text>
</g>
<g>
<title>ip_local_deliver (77 samples, 1.90%)</title><rect x="1125.5" y="163.0" width="22.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1128.5" y="174.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (75 samples, 1.85%)</title><rect x="1126.1" y="147.0" width="21.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1129.1" y="158.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (75 samples, 1.85%)</title><rect x="1126.1" y="131.0" width="21.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1129.1" y="142.0">i..</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="1127.3" y="115.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1130.3" y="126.0"></text>
</g>
<g>
<title>tcp_v4_rcv (70 samples, 1.73%)</title><rect x="1127.6" y="115.0" width="20.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1130.6" y="126.0"></text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.17%)</title><rect x="1129.6" y="99.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1132.6" y="110.0"></text>
</g>
<g>
<title>inet_ehashfn (4 samples, 0.10%)</title><rect x="1130.5" y="83.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1133.5" y="94.0"></text>
</g>
<g>
<title>_raw_spin_lock (3 samples, 0.07%)</title><rect x="1131.7" y="99.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1134.7" y="110.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.02%)</title><rect x="1132.3" y="83.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1135.3" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.02%)</title><rect x="1132.5" y="99.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1135.5" y="110.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="1132.5" y="83.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1135.5" y="94.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.12%)</title><rect x="1132.8" y="99.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1135.8" y="110.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.07%)</title><rect x="1133.1" y="83.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1136.1" y="94.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="1133.7" y="67.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1136.7" y="78.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="1134.0" y="83.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1137.0" y="94.0"></text>
</g>
<g>
<title>tcp_add_backlog (1 samples, 0.02%)</title><rect x="1134.3" y="99.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1137.3" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (45 samples, 1.11%)</title><rect x="1134.6" y="99.0" width="13.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1137.6" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (44 samples, 1.09%)</title><rect x="1134.9" y="83.0" width="12.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1137.9" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="1135.5" y="67.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1138.5" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (29 samples, 0.72%)</title><rect x="1135.8" y="67.0" width="8.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1138.8" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (29 samples, 0.72%)</title><rect x="1135.8" y="51.0" width="8.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1138.8" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (29 samples, 0.72%)</title><rect x="1135.8" y="35.0" width="8.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1138.8" y="46.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="1144.2" y="67.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1147.2" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.15%)</title><rect x="1144.5" y="67.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1147.5" y="78.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.07%)</title><rect x="1145.4" y="51.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1148.4" y="62.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.07%)</title><rect x="1146.3" y="67.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1149.3" y="78.0"></text>
</g>
<g>
<title>tcp_try_coalesce (1 samples, 0.02%)</title><rect x="1146.8" y="51.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1149.8" y="62.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.05%)</title><rect x="1147.1" y="67.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1150.1" y="78.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb.isra.0 (1 samples, 0.02%)</title><rect x="1147.7" y="99.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1150.7" y="110.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (5 samples, 0.12%)</title><rect x="1148.0" y="163.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1151.0" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.05%)</title><rect x="1149.5" y="163.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1152.5" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.05%)</title><rect x="1149.5" y="147.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1152.5" y="158.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="1150.0" y="275.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1153.0" y="286.0"></text>
</g>
<g>
<title>ip_finish_output (6 samples, 0.15%)</title><rect x="1150.3" y="307.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1153.3" y="318.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.12%)</title><rect x="1150.6" y="291.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1153.6" y="302.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="1151.8" y="275.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1154.8" y="286.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.07%)</title><rect x="1152.1" y="339.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1155.1" y="350.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="1152.7" y="323.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1155.7" y="334.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.05%)</title><rect x="1153.0" y="339.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1156.0" y="350.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.05%)</title><rect x="1153.5" y="339.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1156.5" y="350.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="1154.1" y="339.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1157.1" y="350.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (4 samples, 0.10%)</title><rect x="1154.4" y="339.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1157.4" y="350.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.05%)</title><rect x="1155.6" y="339.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1158.6" y="350.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="1156.2" y="339.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1159.2" y="350.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="1156.5" y="355.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1159.5" y="366.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="1156.5" y="339.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1159.5" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (15 samples, 0.37%)</title><rect x="1156.8" y="355.0" width="4.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1159.8" y="366.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.02%)</title><rect x="1157.0" y="339.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1160.0" y="350.0"></text>
</g>
<g>
<title>sk_reset_timer (9 samples, 0.22%)</title><rect x="1157.3" y="339.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1160.3" y="350.0"></text>
</g>
<g>
<title>mod_timer (9 samples, 0.22%)</title><rect x="1157.3" y="323.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1160.3" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.10%)</title><rect x="1158.2" y="307.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1161.2" y="318.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="1159.1" y="291.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1162.1" y="302.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.05%)</title><rect x="1159.4" y="307.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1162.4" y="318.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.02%)</title><rect x="1160.0" y="339.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1163.0" y="350.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.0 (3 samples, 0.07%)</title><rect x="1160.3" y="339.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1163.3" y="350.0"></text>
</g>
<g>
<title>rb_first (3 samples, 0.07%)</title><rect x="1160.3" y="323.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1163.3" y="334.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (13 samples, 0.32%)</title><rect x="1161.1" y="355.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1164.1" y="366.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="1161.7" y="339.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1164.7" y="350.0"></text>
</g>
<g>
<title>sk_reset_timer (10 samples, 0.25%)</title><rect x="1162.0" y="339.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1165.0" y="350.0"></text>
</g>
<g>
<title>mod_timer (10 samples, 0.25%)</title><rect x="1162.0" y="323.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1165.0" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.17%)</title><rect x="1162.3" y="307.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1165.3" y="318.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.02%)</title><rect x="1164.0" y="291.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1167.0" y="302.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.05%)</title><rect x="1164.3" y="307.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1167.3" y="318.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1164.6" y="291.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1167.6" y="302.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.02%)</title><rect x="1164.9" y="355.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1167.9" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.07%)</title><rect x="1165.2" y="387.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1168.2" y="398.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="1165.8" y="371.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1168.8" y="382.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.02%)</title><rect x="1166.1" y="387.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1169.1" y="398.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.02%)</title><rect x="1166.1" y="371.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1169.1" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (28 samples, 0.69%)</title><rect x="1166.4" y="387.0" width="8.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1169.4" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (28 samples, 0.69%)</title><rect x="1166.4" y="371.0" width="8.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1169.4" y="382.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (7 samples, 0.17%)</title><rect x="1168.1" y="355.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1171.1" y="366.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.15%)</title><rect x="1168.4" y="339.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1171.4" y="350.0"></text>
</g>
<g>
<title>__slab_alloc.isra.0 (1 samples, 0.02%)</title><rect x="1169.3" y="323.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1172.3" y="334.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.05%)</title><rect x="1169.6" y="323.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1172.6" y="334.0"></text>
</g>
<g>
<title>__ksize (5 samples, 0.12%)</title><rect x="1170.2" y="355.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1173.2" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (10 samples, 0.25%)</title><rect x="1171.6" y="355.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1174.6" y="366.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (2 samples, 0.05%)</title><rect x="1173.7" y="339.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1176.7" y="350.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.02%)</title><rect x="1174.3" y="339.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1177.3" y="350.0"></text>
</g>
<g>
<title>skb_entail (7 samples, 0.17%)</title><rect x="1174.5" y="387.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1177.5" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (11 samples, 0.27%)</title><rect x="1176.6" y="387.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1179.6" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (10 samples, 0.25%)</title><rect x="1176.9" y="371.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1179.9" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.07%)</title><rect x="1178.6" y="355.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1181.6" y="366.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="1179.5" y="355.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1182.5" y="366.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.05%)</title><rect x="1179.8" y="435.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1182.8" y="446.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="1179.8" y="419.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1182.8" y="430.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.05%)</title><rect x="1179.8" y="403.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1182.8" y="414.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (3 samples, 0.07%)</title><rect x="1180.4" y="467.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1183.4" y="478.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.07%)</title><rect x="1180.4" y="451.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1183.4" y="462.0"></text>
</g>
<g>
<title>syscall_trace_enter (4 samples, 0.10%)</title><rect x="1181.3" y="467.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1184.3" y="478.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.02%)</title><rect x="1181.8" y="451.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1184.8" y="462.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.02%)</title><rect x="1182.1" y="451.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1185.1" y="462.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (1 samples, 0.02%)</title><rect x="1182.4" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1185.4" y="734.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1182.4" y="707.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1185.4" y="718.0"></text>
</g>
<g>
<title>[Reference Handler tid=1103540] (3 samples, 0.07%)</title><rect x="1182.7" y="739.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1185.7" y="750.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.05%)</title><rect x="1182.7" y="723.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1185.7" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.05%)</title><rect x="1182.7" y="707.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1185.7" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="1182.7" y="691.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1185.7" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="1182.7" y="675.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1185.7" y="686.0"></text>
</g>
<g>
<title>__se_sys_futex (1 samples, 0.02%)</title><rect x="1183.0" y="659.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1186.0" y="670.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1183.0" y="643.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1186.0" y="654.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="1183.0" y="627.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1186.0" y="638.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="1183.0" y="611.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1186.0" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1183.0" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1186.0" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1183.0" y="579.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1186.0" y="590.0"></text>
</g>
<g>
<title>java/lang/ref/Reference$ReferenceHandler.run (1 samples, 0.02%)</title><rect x="1183.3" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1186.3" y="734.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.processPendingReferences (1 samples, 0.02%)</title><rect x="1183.3" y="707.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1186.3" y="718.0"></text>
</g>
<g>
<title>[tid=1103534] (4 samples, 0.10%)</title><rect x="1183.6" y="739.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1186.6" y="750.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.10%)</title><rect x="1183.6" y="723.0" width="1.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1186.6" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.10%)</title><rect x="1183.6" y="707.0" width="1.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1186.6" y="718.0"></text>
</g>
<g>
<title>GangWorker::loop() (4 samples, 0.10%)</title><rect x="1183.6" y="691.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.6" y="702.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1183.6" y="675.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.6" y="686.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="1183.6" y="659.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.6" y="670.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.02%)</title><rect x="1183.6" y="643.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.6" y="654.0"></text>
</g>
<g>
<title>G1STWRefProcTaskProxy::work(unsigned int) (3 samples, 0.07%)</title><rect x="1183.9" y="675.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.9" y="686.0"></text>
</g>
<g>
<title>RefProcPhase3Task::work(unsigned int, BoolObjectClosure&amp;, OopClosure&amp;, VoidClosure&amp;) (3 samples, 0.07%)</title><rect x="1183.9" y="659.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.9" y="670.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_final_keep_alive_work(DiscoveredList&amp;, OopClosure*, VoidClosure*) (3 samples, 0.07%)</title><rect x="1183.9" y="643.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.9" y="654.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.07%)</title><rect x="1183.9" y="627.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.9" y="638.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.05%)</title><rect x="1183.9" y="611.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.9" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.05%)</title><rect x="1183.9" y="595.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.9" y="606.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.05%)</title><rect x="1183.9" y="579.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.9" y="590.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="1184.5" y="611.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1187.5" y="622.0"></text>
</g>
<g>
<title>[tid=1103639] (3 samples, 0.07%)</title><rect x="1184.8" y="739.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1187.8" y="750.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.07%)</title><rect x="1184.8" y="723.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1187.8" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.07%)</title><rect x="1184.8" y="707.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1187.8" y="718.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.07%)</title><rect x="1184.8" y="691.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.8" y="702.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1184.8" y="675.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.8" y="686.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="1184.8" y="659.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.8" y="670.0"></text>
</g>
<g>
<title>G1STWRefProcTaskProxy::work(unsigned int) (2 samples, 0.05%)</title><rect x="1185.0" y="675.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.0" y="686.0"></text>
</g>
<g>
<title>RefProcPhase2Task::work(unsigned int, BoolObjectClosure&amp;, OopClosure&amp;, VoidClosure&amp;) (1 samples, 0.02%)</title><rect x="1185.0" y="659.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.0" y="670.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="1185.0" y="643.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.0" y="654.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.02%)</title><rect x="1185.0" y="627.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.0" y="638.0"></text>
</g>
<g>
<title>RefProcPhase3Task::work(unsigned int, BoolObjectClosure&amp;, OopClosure&amp;, VoidClosure&amp;) (1 samples, 0.02%)</title><rect x="1185.3" y="659.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.3" y="670.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_final_keep_alive_work(DiscoveredList&amp;, OopClosure*, VoidClosure*) (1 samples, 0.02%)</title><rect x="1185.3" y="643.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.3" y="654.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="1185.3" y="627.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.3" y="638.0"></text>
</g>
<g>
<title>[tid=1103640] (2 samples, 0.05%)</title><rect x="1185.6" y="739.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1188.6" y="750.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.05%)</title><rect x="1185.6" y="723.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1188.6" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.05%)</title><rect x="1185.6" y="707.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1188.6" y="718.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.05%)</title><rect x="1185.6" y="691.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.6" y="702.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1185.6" y="675.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.6" y="686.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="1185.6" y="659.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.6" y="670.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="1185.6" y="643.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1188.6" y="654.0"></text>
</g>
<g>
<title>G1STWRefProcTaskProxy::work(unsigned int) (1 samples, 0.02%)</title><rect x="1185.9" y="675.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.9" y="686.0"></text>
</g>
<g>
<title>RefProcPhase3Task::work(unsigned int, BoolObjectClosure&amp;, OopClosure&amp;, VoidClosure&amp;) (1 samples, 0.02%)</title><rect x="1185.9" y="659.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.9" y="670.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_final_keep_alive_work(DiscoveredList&amp;, OopClosure*, VoidClosure*) (1 samples, 0.02%)</title><rect x="1185.9" y="643.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.9" y="654.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="1185.9" y="627.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.9" y="638.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="1185.9" y="611.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1188.9" y="622.0"></text>
</g>
<g>
<title>[tid=1103641] (3 samples, 0.07%)</title><rect x="1186.2" y="739.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1189.2" y="750.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.07%)</title><rect x="1186.2" y="723.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1189.2" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.07%)</title><rect x="1186.2" y="707.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1189.2" y="718.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.07%)</title><rect x="1186.2" y="691.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.2" y="702.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1186.2" y="675.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.2" y="686.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.02%)</title><rect x="1186.2" y="659.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.2" y="670.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::G1SerialFreeCollectionSetClosure::do_heap_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="1186.2" y="643.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.2" y="654.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1186.5" y="675.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.5" y="686.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="1186.5" y="659.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.5" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.02%)</title><rect x="1186.5" y="643.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.5" y="654.0"></text>
</g>
<g>
<title>G1STWRefProcTaskProxy::work(unsigned int) (1 samples, 0.02%)</title><rect x="1186.8" y="675.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.8" y="686.0"></text>
</g>
<g>
<title>RefProcPhase3Task::work(unsigned int, BoolObjectClosure&amp;, OopClosure&amp;, VoidClosure&amp;) (1 samples, 0.02%)</title><rect x="1186.8" y="659.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.8" y="670.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_final_keep_alive_work(DiscoveredList&amp;, OopClosure*, VoidClosure*) (1 samples, 0.02%)</title><rect x="1186.8" y="643.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.8" y="654.0"></text>
</g>
<g>
<title>G1CopyingKeepAliveClosure::do_oop(unsigned int*) (1 samples, 0.02%)</title><rect x="1186.8" y="627.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.8" y="638.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="1186.8" y="611.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1189.8" y="622.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="1186.8" y="595.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1189.8" y="606.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="1186.8" y="579.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1189.8" y="590.0"></text>
</g>
<g>
<title>[tid=1103642] (2 samples, 0.05%)</title><rect x="1187.1" y="739.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1190.1" y="750.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.05%)</title><rect x="1187.1" y="723.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1190.1" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.05%)</title><rect x="1187.1" y="707.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1190.1" y="718.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.05%)</title><rect x="1187.1" y="691.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.1" y="702.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.05%)</title><rect x="1187.1" y="675.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.1" y="686.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.05%)</title><rect x="1187.1" y="659.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.1" y="670.0"></text>
</g>
<g>
<title>[tid=1103643] (2 samples, 0.05%)</title><rect x="1187.7" y="739.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1190.7" y="750.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.05%)</title><rect x="1187.7" y="723.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1190.7" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.05%)</title><rect x="1187.7" y="707.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1190.7" y="718.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.05%)</title><rect x="1187.7" y="691.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.7" y="702.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1187.7" y="675.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.7" y="686.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="1187.7" y="659.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.7" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.02%)</title><rect x="1187.7" y="643.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.7" y="654.0"></text>
</g>
<g>
<title>G1STWRefProcTaskProxy::work(unsigned int) (1 samples, 0.02%)</title><rect x="1188.0" y="675.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.0" y="686.0"></text>
</g>
<g>
<title>RefProcPhase3Task::work(unsigned int, BoolObjectClosure&amp;, OopClosure&amp;, VoidClosure&amp;) (1 samples, 0.02%)</title><rect x="1188.0" y="659.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.0" y="670.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_final_keep_alive_work(DiscoveredList&amp;, OopClosure*, VoidClosure*) (1 samples, 0.02%)</title><rect x="1188.0" y="643.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.0" y="654.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="1188.0" y="627.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.0" y="638.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.02%)</title><rect x="1188.0" y="611.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.0" y="622.0"></text>
</g>
<g>
<title>[tid=1103644] (3 samples, 0.07%)</title><rect x="1188.3" y="739.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1191.3" y="750.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.07%)</title><rect x="1188.3" y="723.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1191.3" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.07%)</title><rect x="1188.3" y="707.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1191.3" y="718.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.07%)</title><rect x="1188.3" y="691.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.3" y="702.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.05%)</title><rect x="1188.3" y="675.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.3" y="686.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.05%)</title><rect x="1188.3" y="659.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.3" y="670.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.02%)</title><rect x="1188.3" y="643.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.3" y="654.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="1188.5" y="643.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1191.5" y="654.0"></text>
</g>
<g>
<title>G1STWRefProcTaskProxy::work(unsigned int) (1 samples, 0.02%)</title><rect x="1188.8" y="675.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.8" y="686.0"></text>
</g>
<g>
<title>RefProcPhase3Task::work(unsigned int, BoolObjectClosure&amp;, OopClosure&amp;, VoidClosure&amp;) (1 samples, 0.02%)</title><rect x="1188.8" y="659.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.8" y="670.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_final_keep_alive_work(DiscoveredList&amp;, OopClosure*, VoidClosure*) (1 samples, 0.02%)</title><rect x="1188.8" y="643.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.8" y="654.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="1188.8" y="627.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.8" y="638.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.02%)</title><rect x="1188.8" y="611.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.8" y="622.0"></text>
</g>
<g>
<title>[tid=1103645] (3 samples, 0.07%)</title><rect x="1189.1" y="739.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1192.1" y="750.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.07%)</title><rect x="1189.1" y="723.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1192.1" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.07%)</title><rect x="1189.1" y="707.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1192.1" y="718.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.07%)</title><rect x="1189.1" y="691.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.1" y="702.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (3 samples, 0.07%)</title><rect x="1189.1" y="675.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.1" y="686.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.07%)</title><rect x="1189.1" y="659.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.1" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.02%)</title><rect x="1189.4" y="643.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.4" y="654.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.02%)</title><rect x="1189.4" y="627.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.4" y="638.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceRefKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1189.4" y="611.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.4" y="622.0"></text>
</g>
<g>
<title>ReferenceProcessor::discover_reference(oopDesc*, ReferenceType) (1 samples, 0.02%)</title><rect x="1189.4" y="595.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.4" y="606.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="1189.7" y="643.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1192.7" y="654.0"></text>
</g>
</g>
</svg>
