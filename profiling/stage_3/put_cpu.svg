<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="805"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="805"> </text>
<g id="frames">
<g>
<title>all (2,715 samples, 100.00%)</title><rect x="10.0" y="771.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="782.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=1082258] (207 samples, 7.62%)</title><rect x="10.0" y="755.0" width="90.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="766.0">[NIO Selec..</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.07%)</title><rect x="10.0" y="739.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.07%)</title><rect x="10.0" y="723.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (205 samples, 7.55%)</title><rect x="10.9" y="739.0" width="89.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.9" y="750.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (16 samples, 0.59%)</title><rect x="11.3" y="723.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (16 samples, 0.59%)</title><rect x="11.3" y="707.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.3" y="718.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.04%)</title><rect x="11.7" y="691.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="14.7" y="702.0"></text>
</g>
<g>
<title>epoll_wait (14 samples, 0.52%)</title><rect x="12.2" y="691.0" width="6.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="15.2" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.52%)</title><rect x="12.2" y="675.0" width="6.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="15.2" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.52%)</title><rect x="12.2" y="659.0" width="6.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="15.2" y="670.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (12 samples, 0.44%)</title><rect x="13.0" y="643.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="16.0" y="654.0"></text>
</g>
<g>
<title>do_epoll_wait (12 samples, 0.44%)</title><rect x="13.0" y="627.0" width="5.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="16.0" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="13.0" y="611.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="16.0" y="622.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="13.0" y="595.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="16.0" y="606.0"></text>
</g>
<g>
<title>ep_poll (11 samples, 0.41%)</title><rect x="13.5" y="611.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="16.5" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_irq (1 samples, 0.04%)</title><rect x="13.9" y="595.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="16.9" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (6 samples, 0.22%)</title><rect x="14.3" y="595.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="17.3" y="606.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (1 samples, 0.04%)</title><rect x="14.8" y="579.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="17.8" y="590.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.04%)</title><rect x="14.8" y="563.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="17.8" y="574.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.15%)</title><rect x="15.2" y="579.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="18.2" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (3 samples, 0.11%)</title><rect x="15.7" y="563.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="18.7" y="574.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.07%)</title><rect x="16.1" y="547.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="19.1" y="558.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.07%)</title><rect x="16.1" y="531.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="19.1" y="542.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.11%)</title><rect x="17.0" y="595.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="20.0" y="606.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.11%)</title><rect x="17.0" y="579.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="20.0" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (187 samples, 6.89%)</title><rect x="18.3" y="723.0" width="81.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.3" y="734.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (187 samples, 6.89%)</title><rect x="18.3" y="707.0" width="81.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.3" y="718.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (116 samples, 4.27%)</title><rect x="18.3" y="691.0" width="50.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.3" y="702.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (85 samples, 3.13%)</title><rect x="19.6" y="675.0" width="36.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.6" y="686.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (82 samples, 3.02%)</title><rect x="20.9" y="659.0" width="35.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.9" y="670.0">one..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (81 samples, 2.98%)</title><rect x="20.9" y="643.0" width="35.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="23.9" y="654.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.22%)</title><rect x="20.9" y="627.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="22.2" y="611.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="22.2" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="25.2" y="606.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.07%)</title><rect x="22.6" y="611.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="22.6" y="595.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="22.6" y="579.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.07%)</title><rect x="22.6" y="563.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.entity (75 samples, 2.76%)</title><rect x="23.5" y="627.0" width="32.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.5" y="638.0">ru..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (75 samples, 2.76%)</title><rect x="23.5" y="611.0" width="32.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.5" y="622.0">on..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (73 samples, 2.69%)</title><rect x="23.9" y="595.0" width="31.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.9" y="606.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (1 samples, 0.04%)</title><rect x="23.9" y="579.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="26.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (1 samples, 0.04%)</title><rect x="23.9" y="563.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="26.9" y="574.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (72 samples, 2.65%)</title><rect x="24.3" y="579.0" width="31.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.3" y="590.0">on..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (72 samples, 2.65%)</title><rect x="24.3" y="563.0" width="31.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.3" y="574.0">on..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (72 samples, 2.65%)</title><rect x="24.3" y="547.0" width="31.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.3" y="558.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (72 samples, 2.65%)</title><rect x="24.3" y="531.0" width="31.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.3" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (72 samples, 2.65%)</title><rect x="24.3" y="515.0" width="31.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.3" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (72 samples, 2.65%)</title><rect x="24.3" y="499.0" width="31.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="27.3" y="510.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (69 samples, 2.54%)</title><rect x="25.6" y="483.0" width="30.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.6" y="494.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark (12 samples, 0.44%)</title><rect x="25.6" y="467.0" width="5.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="28.6" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.04%)</title><rect x="26.1" y="451.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="29.1" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.07%)</title><rect x="26.5" y="451.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="29.5" y="462.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.04%)</title><rect x="27.0" y="435.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="30.0" y="446.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.07%)</title><rect x="27.4" y="451.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="30.4" y="462.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (4 samples, 0.15%)</title><rect x="28.3" y="451.0" width="1.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="31.3" y="462.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.07%)</title><rect x="30.0" y="451.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="33.0" y="462.0"></text>
</g>
<g>
<title>__pthread_cond_signal (55 samples, 2.03%)</title><rect x="30.9" y="467.0" width="23.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="33.9" y="478.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (49 samples, 1.80%)</title><rect x="33.5" y="451.0" width="21.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="36.5" y="462.0">e..</text>
</g>
<g>
<title>do_syscall_64 (49 samples, 1.80%)</title><rect x="33.5" y="435.0" width="21.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="36.5" y="446.0">d..</text>
</g>
<g>
<title>__se_sys_futex (40 samples, 1.47%)</title><rect x="35.6" y="419.0" width="17.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="38.6" y="430.0"></text>
</g>
<g>
<title>do_futex (38 samples, 1.40%)</title><rect x="36.5" y="403.0" width="16.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="39.5" y="414.0"></text>
</g>
<g>
<title>futex_wake (38 samples, 1.40%)</title><rect x="36.5" y="387.0" width="16.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="39.5" y="398.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="36.9" y="371.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="39.9" y="382.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.07%)</title><rect x="37.4" y="371.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="40.4" y="382.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.04%)</title><rect x="37.8" y="355.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="40.8" y="366.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.07%)</title><rect x="38.3" y="371.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="41.3" y="382.0"></text>
</g>
<g>
<title>wake_up_q (32 samples, 1.18%)</title><rect x="39.1" y="371.0" width="13.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="42.1" y="382.0"></text>
</g>
<g>
<title>try_to_wake_up (32 samples, 1.18%)</title><rect x="39.1" y="355.0" width="13.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="42.1" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (32 samples, 1.18%)</title><rect x="39.1" y="339.0" width="13.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="42.1" y="350.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="53.0" y="419.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="56.0" y="430.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (3 samples, 0.11%)</title><rect x="53.5" y="419.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="56.5" y="430.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="54.3" y="403.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="57.3" y="414.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.04%)</title><rect x="54.3" y="387.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="57.3" y="398.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="54.8" y="467.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="57.8" y="478.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="55.6" y="595.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="56.1" y="643.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="59.1" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="56.1" y="627.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="59.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="56.1" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="59.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (22 samples, 0.81%)</title><rect x="56.5" y="675.0" width="9.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="59.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (8 samples, 0.29%)</title><rect x="60.4" y="659.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="63.4" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.29%)</title><rect x="60.4" y="643.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.29%)</title><rect x="60.4" y="627.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.4" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.29%)</title><rect x="60.4" y="611.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.4" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (5 samples, 0.18%)</title><rect x="63.9" y="659.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="66.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (6 samples, 0.22%)</title><rect x="66.1" y="675.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.1" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (6 samples, 0.22%)</title><rect x="66.1" y="659.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.1" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.07%)</title><rect x="67.4" y="643.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.4" y="654.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="68.2" y="643.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="71.2" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.04%)</title><rect x="68.7" y="691.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="71.7" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (70 samples, 2.58%)</title><rect x="69.1" y="691.0" width="30.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="72.1" y="702.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (63 samples, 2.32%)</title><rect x="70.0" y="675.0" width="27.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.0" y="686.0">o..</text>
</g>
<g>
<title>[unknown] (7 samples, 0.26%)</title><rect x="71.3" y="659.0" width="3.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="74.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.26%)</title><rect x="71.3" y="643.0" width="3.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="74.3" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.26%)</title><rect x="71.3" y="627.0" width="3.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="74.3" y="638.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.07%)</title><rect x="71.3" y="611.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="74.3" y="622.0"></text>
</g>
<g>
<title>_init (2 samples, 0.07%)</title><rect x="72.2" y="611.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="75.2" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.11%)</title><rect x="73.0" y="611.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="76.0" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="73.5" y="595.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="76.5" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="73.9" y="595.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="76.9" y="606.0"></text>
</g>
<g>
<title>recv (53 samples, 1.95%)</title><rect x="74.3" y="659.0" width="23.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="77.3" y="670.0">r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (49 samples, 1.80%)</title><rect x="76.1" y="643.0" width="21.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="79.1" y="654.0">e..</text>
</g>
<g>
<title>do_syscall_64 (49 samples, 1.80%)</title><rect x="76.1" y="627.0" width="21.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="79.1" y="638.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (43 samples, 1.58%)</title><rect x="77.4" y="611.0" width="18.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="80.4" y="622.0"></text>
</g>
<g>
<title>__sys_recvfrom (42 samples, 1.55%)</title><rect x="77.8" y="595.0" width="18.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="80.8" y="606.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="78.2" y="579.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="81.2" y="590.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="78.7" y="579.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="81.7" y="590.0"></text>
</g>
<g>
<title>inet6_recvmsg (37 samples, 1.36%)</title><rect x="79.1" y="579.0" width="16.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="82.1" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (37 samples, 1.36%)</title><rect x="79.1" y="563.0" width="16.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="82.1" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (11 samples, 0.41%)</title><rect x="80.4" y="547.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="83.4" y="558.0"></text>
</g>
<g>
<title>skb_release_all (9 samples, 0.33%)</title><rect x="80.4" y="531.0" width="3.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="83.4" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (9 samples, 0.33%)</title><rect x="80.4" y="515.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="83.4" y="526.0"></text>
</g>
<g>
<title>dst_release (7 samples, 0.26%)</title><rect x="80.8" y="499.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="83.8" y="510.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.04%)</title><rect x="83.9" y="499.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="86.9" y="510.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.07%)</title><rect x="84.3" y="531.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="87.3" y="542.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="85.2" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="88.2" y="558.0"></text>
</g>
<g>
<title>ns_to_timespec64 (1 samples, 0.04%)</title><rect x="85.6" y="547.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="88.6" y="558.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="86.1" y="547.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="89.1" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="86.1" y="531.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="89.1" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.26%)</title><rect x="86.5" y="547.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="89.5" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (7 samples, 0.26%)</title><rect x="86.5" y="531.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="89.5" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.07%)</title><rect x="88.7" y="515.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="91.7" y="526.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.04%)</title><rect x="89.1" y="499.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="92.1" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="89.1" y="483.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="92.1" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (6 samples, 0.22%)</title><rect x="89.5" y="547.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="92.5" y="558.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.07%)</title><rect x="91.3" y="531.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="94.3" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (5 samples, 0.18%)</title><rect x="92.1" y="547.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="95.1" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.07%)</title><rect x="93.4" y="531.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="96.4" y="542.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.07%)</title><rect x="93.4" y="515.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="96.4" y="526.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="93.9" y="499.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="96.9" y="510.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (2 samples, 0.07%)</title><rect x="94.3" y="547.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="97.3" y="558.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.04%)</title><rect x="95.2" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="98.2" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="95.2" y="563.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="98.2" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="95.6" y="579.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="98.6" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="95.6" y="563.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="98.6" y="574.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.07%)</title><rect x="96.1" y="611.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="99.1" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.07%)</title><rect x="96.1" y="595.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="99.1" y="606.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.04%)</title><rect x="96.5" y="579.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="99.5" y="590.0"></text>
</g>
<g>
<title>dput (1 samples, 0.04%)</title><rect x="96.5" y="563.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="99.5" y="574.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="96.9" y="611.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="99.9" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (5 samples, 0.18%)</title><rect x="97.4" y="675.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="100.4" y="686.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="99.5" y="723.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="102.5" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=1082259] (111 samples, 4.09%)</title><rect x="100.0" y="755.0" width="48.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="103.0" y="766.0">[NIO..</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.07%)</title><rect x="100.0" y="739.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="103.0" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="100.4" y="723.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="103.4" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (109 samples, 4.01%)</title><rect x="100.8" y="739.0" width="47.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="103.8" y="750.0">one/..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.07%)</title><rect x="100.8" y="723.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="103.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (12 samples, 0.44%)</title><rect x="101.7" y="723.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="104.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (12 samples, 0.44%)</title><rect x="101.7" y="707.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.7" y="718.0"></text>
</g>
<g>
<title>epoll_wait (12 samples, 0.44%)</title><rect x="101.7" y="691.0" width="5.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="104.7" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.44%)</title><rect x="101.7" y="675.0" width="5.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="104.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.44%)</title><rect x="101.7" y="659.0" width="5.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="104.7" y="670.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (10 samples, 0.37%)</title><rect x="102.6" y="643.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="105.6" y="654.0"></text>
</g>
<g>
<title>do_epoll_wait (10 samples, 0.37%)</title><rect x="102.6" y="627.0" width="4.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="105.6" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="102.6" y="611.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="105.6" y="622.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="102.6" y="595.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="105.6" y="606.0"></text>
</g>
<g>
<title>ep_poll (9 samples, 0.33%)</title><rect x="103.0" y="611.0" width="3.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="106.0" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.04%)</title><rect x="103.9" y="595.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="106.9" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (3 samples, 0.11%)</title><rect x="104.3" y="595.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="107.3" y="606.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (2 samples, 0.07%)</title><rect x="104.3" y="579.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="107.3" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.04%)</title><rect x="105.2" y="579.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="108.2" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (1 samples, 0.04%)</title><rect x="105.2" y="563.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="108.2" y="574.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="105.2" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="108.2" y="558.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="105.2" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="108.2" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="105.2" y="515.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="108.2" y="526.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.11%)</title><rect x="105.6" y="595.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="108.6" y="606.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.07%)</title><rect x="106.1" y="579.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="109.1" y="590.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="106.5" y="563.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="109.5" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (95 samples, 3.50%)</title><rect x="106.9" y="723.0" width="41.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="109.9" y="734.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (94 samples, 3.46%)</title><rect x="107.4" y="707.0" width="40.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.4" y="718.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (51 samples, 1.88%)</title><rect x="107.4" y="691.0" width="22.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.4" y="702.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (33 samples, 1.22%)</title><rect x="107.8" y="675.0" width="14.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="110.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (33 samples, 1.22%)</title><rect x="107.8" y="659.0" width="14.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.8" y="670.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (33 samples, 1.22%)</title><rect x="107.8" y="643.0" width="14.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="110.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="107.8" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.entity (32 samples, 1.18%)</title><rect x="108.2" y="627.0" width="13.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.2" y="638.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (32 samples, 1.18%)</title><rect x="108.2" y="611.0" width="13.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="111.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (32 samples, 1.18%)</title><rect x="108.2" y="595.0" width="13.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="111.2" y="606.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (32 samples, 1.18%)</title><rect x="108.2" y="579.0" width="13.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="111.2" y="590.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (32 samples, 1.18%)</title><rect x="108.2" y="563.0" width="13.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="111.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (32 samples, 1.18%)</title><rect x="108.2" y="547.0" width="13.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="111.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (31 samples, 1.14%)</title><rect x="108.7" y="531.0" width="13.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (30 samples, 1.10%)</title><rect x="108.7" y="515.0" width="13.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (30 samples, 1.10%)</title><rect x="108.7" y="499.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (28 samples, 1.03%)</title><rect x="109.5" y="483.0" width="12.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.5" y="494.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.29%)</title><rect x="109.5" y="467.0" width="3.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="112.5" y="478.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="109.5" y="451.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="112.5" y="462.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.04%)</title><rect x="110.0" y="451.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="113.0" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="110.4" y="451.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="113.4" y="462.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.04%)</title><rect x="110.8" y="451.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="113.8" y="462.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.07%)</title><rect x="111.3" y="451.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="114.3" y="462.0"></text>
</g>
<g>
<title>_init (2 samples, 0.07%)</title><rect x="112.1" y="451.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="115.1" y="462.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 0.74%)</title><rect x="113.0" y="467.0" width="8.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="116.0" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.55%)</title><rect x="115.2" y="451.0" width="6.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="118.2" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.55%)</title><rect x="115.2" y="435.0" width="6.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="118.2" y="446.0"></text>
</g>
<g>
<title>__se_sys_futex (15 samples, 0.55%)</title><rect x="115.2" y="419.0" width="6.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="118.2" y="430.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.55%)</title><rect x="115.2" y="403.0" width="6.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="118.2" y="414.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.52%)</title><rect x="115.6" y="387.0" width="6.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="118.6" y="398.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="115.6" y="371.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="118.6" y="382.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.04%)</title><rect x="115.6" y="355.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="118.6" y="366.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.04%)</title><rect x="116.0" y="371.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="119.0" y="382.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.44%)</title><rect x="116.5" y="371.0" width="5.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="119.5" y="382.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.44%)</title><rect x="116.5" y="355.0" width="5.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="119.5" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.44%)</title><rect x="116.5" y="339.0" width="5.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="119.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (1 samples, 0.04%)</title><rect x="121.7" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="124.7" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (16 samples, 0.59%)</title><rect x="122.1" y="675.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.07%)</title><rect x="126.5" y="659.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="129.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="126.5" y="643.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.5" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="126.5" y="627.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="129.5" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.07%)</title><rect x="126.5" y="611.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.5" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.15%)</title><rect x="127.3" y="659.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.04%)</title><rect x="129.1" y="675.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="132.1" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="129.1" y="659.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.1" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (43 samples, 1.58%)</title><rect x="129.5" y="691.0" width="18.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.5" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (42 samples, 1.55%)</title><rect x="130.0" y="675.0" width="18.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.0" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.04%)</title><rect x="130.0" y="659.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="133.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.18%)</title><rect x="130.4" y="659.0" width="2.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="133.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.18%)</title><rect x="130.4" y="643.0" width="2.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="133.4" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.18%)</title><rect x="130.4" y="627.0" width="2.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="133.4" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="130.8" y="611.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="133.8" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.07%)</title><rect x="131.3" y="611.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="134.3" y="622.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="131.7" y="595.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="134.7" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="131.7" y="579.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="134.7" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="131.7" y="563.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="134.7" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="131.7" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="134.7" y="558.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="132.1" y="611.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="135.1" y="622.0"></text>
</g>
<g>
<title>recv (36 samples, 1.33%)</title><rect x="132.6" y="659.0" width="15.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="135.6" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 1.33%)</title><rect x="132.6" y="643.0" width="15.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="135.6" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 1.33%)</title><rect x="132.6" y="627.0" width="15.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="135.6" y="638.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (32 samples, 1.18%)</title><rect x="133.4" y="611.0" width="13.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="136.4" y="622.0"></text>
</g>
<g>
<title>__sys_recvfrom (32 samples, 1.18%)</title><rect x="133.4" y="595.0" width="13.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="136.4" y="606.0"></text>
</g>
<g>
<title>inet6_recvmsg (29 samples, 1.07%)</title><rect x="134.3" y="579.0" width="12.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="137.3" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (29 samples, 1.07%)</title><rect x="134.3" y="563.0" width="12.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="137.3" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.15%)</title><rect x="137.3" y="547.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="140.3" y="558.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.15%)</title><rect x="137.3" y="531.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="140.3" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.15%)</title><rect x="137.3" y="515.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="140.3" y="526.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.11%)</title><rect x="137.3" y="499.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="140.3" y="510.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.04%)</title><rect x="138.6" y="499.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="141.6" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="139.1" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="142.1" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="139.5" y="547.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="142.5" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="139.5" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="142.5" y="542.0"></text>
</g>
<g>
<title>ns_to_timespec64 (1 samples, 0.04%)</title><rect x="140.0" y="547.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="143.0" y="558.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="140.4" y="547.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="143.4" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="140.4" y="531.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="143.4" y="542.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="140.4" y="515.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="143.4" y="526.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (10 samples, 0.37%)</title><rect x="140.8" y="547.0" width="4.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="143.8" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (10 samples, 0.37%)</title><rect x="140.8" y="531.0" width="4.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="143.8" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.11%)</title><rect x="142.1" y="515.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="145.1" y="526.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.07%)</title><rect x="142.6" y="499.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="145.6" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.07%)</title><rect x="142.6" y="483.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="145.6" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.15%)</title><rect x="143.4" y="515.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="146.4" y="526.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.15%)</title><rect x="143.4" y="499.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="146.4" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.11%)</title><rect x="143.9" y="483.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="146.9" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.04%)</title><rect x="145.2" y="547.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="148.2" y="558.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="145.2" y="531.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="148.2" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="145.6" y="547.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="148.6" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="145.6" y="531.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="148.6" y="542.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="145.6" y="515.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="148.6" y="526.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (2 samples, 0.07%)</title><rect x="146.0" y="547.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="149.0" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="146.9" y="579.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="149.9" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="146.9" y="563.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="149.9" y="574.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="146.9" y="547.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="149.9" y="558.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="147.3" y="611.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="150.3" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="147.3" y="595.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="150.3" y="606.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.04%)</title><rect x="147.3" y="579.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="150.3" y="590.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="147.8" y="611.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="150.8" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="147.8" y="595.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="150.8" y="606.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=1082262] (204 samples, 7.51%)</title><rect x="148.2" y="755.0" width="88.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="151.2" y="766.0">[NIO Selec..</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.07%)</title><rect x="148.2" y="739.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="151.2" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (202 samples, 7.44%)</title><rect x="149.1" y="739.0" width="87.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="152.1" y="750.0">one/nio/se..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="149.1" y="723.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="152.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.07%)</title><rect x="149.5" y="723.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (16 samples, 0.59%)</title><rect x="150.4" y="723.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="153.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (16 samples, 0.59%)</title><rect x="150.4" y="707.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.4" y="718.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.04%)</title><rect x="150.4" y="691.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="153.4" y="702.0"></text>
</g>
<g>
<title>epoll_wait (15 samples, 0.55%)</title><rect x="150.8" y="691.0" width="6.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="153.8" y="702.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="150.8" y="675.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="153.8" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.52%)</title><rect x="151.3" y="675.0" width="6.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="154.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.52%)</title><rect x="151.3" y="659.0" width="6.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="154.3" y="670.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (12 samples, 0.44%)</title><rect x="152.1" y="643.0" width="5.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="155.1" y="654.0"></text>
</g>
<g>
<title>do_epoll_wait (12 samples, 0.44%)</title><rect x="152.1" y="627.0" width="5.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="155.1" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="152.6" y="611.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="155.6" y="622.0"></text>
</g>
<g>
<title>ep_poll (10 samples, 0.37%)</title><rect x="153.0" y="611.0" width="4.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="156.0" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (7 samples, 0.26%)</title><rect x="153.0" y="595.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="156.0" y="606.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (2 samples, 0.07%)</title><rect x="153.0" y="579.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="156.0" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.18%)</title><rect x="153.9" y="579.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="156.9" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (4 samples, 0.15%)</title><rect x="154.3" y="563.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="157.3" y="574.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.11%)</title><rect x="154.7" y="547.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="157.7" y="558.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.07%)</title><rect x="155.2" y="531.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="158.2" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="155.6" y="515.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="158.6" y="526.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.11%)</title><rect x="156.0" y="595.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="159.0" y="606.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.11%)</title><rect x="156.0" y="579.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="159.0" y="590.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="156.9" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="159.9" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="156.9" y="547.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="159.9" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.04%)</title><rect x="156.9" y="531.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="159.9" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (181 samples, 6.67%)</title><rect x="157.3" y="723.0" width="78.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="160.3" y="734.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (181 samples, 6.67%)</title><rect x="157.3" y="707.0" width="78.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="160.3" y="718.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (123 samples, 4.53%)</title><rect x="157.3" y="691.0" width="53.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.3" y="702.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (95 samples, 3.50%)</title><rect x="157.8" y="675.0" width="41.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="160.8" y="686.0">one..</text>
</g>
<g>
<title>java/util/LinkedList.addLast (1 samples, 0.04%)</title><rect x="159.5" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.5" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="159.5" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="162.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (90 samples, 3.31%)</title><rect x="159.9" y="659.0" width="39.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="162.9" y="670.0">one..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (89 samples, 3.28%)</title><rect x="159.9" y="643.0" width="38.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="162.9" y="654.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="159.9" y="627.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="159.9" y="611.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="159.9" y="595.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.entity (88 samples, 3.24%)</title><rect x="160.4" y="627.0" width="38.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="163.4" y="638.0">ru/..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (88 samples, 3.24%)</title><rect x="160.4" y="611.0" width="38.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="163.4" y="622.0">one..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (87 samples, 3.20%)</title><rect x="160.4" y="595.0" width="37.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.4" y="606.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (1 samples, 0.04%)</title><rect x="160.4" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (1 samples, 0.04%)</title><rect x="160.4" y="563.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="163.4" y="574.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (86 samples, 3.17%)</title><rect x="160.8" y="579.0" width="37.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.8" y="590.0">one..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (86 samples, 3.17%)</title><rect x="160.8" y="563.0" width="37.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="163.8" y="574.0">one..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (86 samples, 3.17%)</title><rect x="160.8" y="547.0" width="37.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.8" y="558.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (85 samples, 3.13%)</title><rect x="161.2" y="531.0" width="37.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="164.2" y="542.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (84 samples, 3.09%)</title><rect x="161.2" y="515.0" width="36.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="164.2" y="526.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (84 samples, 3.09%)</title><rect x="161.2" y="499.0" width="36.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="164.2" y="510.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (83 samples, 3.06%)</title><rect x="161.7" y="483.0" width="36.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="164.7" y="494.0">jdk..</text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.18%)</title><rect x="161.7" y="467.0" width="2.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="164.7" y="478.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.07%)</title><rect x="162.1" y="451.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="165.1" y="462.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.07%)</title><rect x="163.0" y="451.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="166.0" y="462.0"></text>
</g>
<g>
<title>__pthread_cond_signal (76 samples, 2.80%)</title><rect x="163.9" y="467.0" width="33.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="166.9" y="478.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (68 samples, 2.50%)</title><rect x="167.3" y="451.0" width="29.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="170.3" y="462.0">en..</text>
</g>
<g>
<title>do_syscall_64 (68 samples, 2.50%)</title><rect x="167.3" y="435.0" width="29.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="170.3" y="446.0">do..</text>
</g>
<g>
<title>__se_sys_futex (61 samples, 2.25%)</title><rect x="169.1" y="419.0" width="26.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="172.1" y="430.0">_..</text>
</g>
<g>
<title>do_futex (61 samples, 2.25%)</title><rect x="169.1" y="403.0" width="26.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="172.1" y="414.0">d..</text>
</g>
<g>
<title>futex_wake (60 samples, 2.21%)</title><rect x="169.5" y="387.0" width="26.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="172.5" y="398.0">f..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="170.8" y="371.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="173.8" y="382.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.04%)</title><rect x="171.2" y="371.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="174.2" y="382.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.04%)</title><rect x="171.7" y="371.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="174.7" y="382.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.04%)</title><rect x="172.1" y="371.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="175.1" y="382.0"></text>
</g>
<g>
<title>wake_up_q (53 samples, 1.95%)</title><rect x="172.5" y="371.0" width="23.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="175.5" y="382.0">w..</text>
</g>
<g>
<title>try_to_wake_up (52 samples, 1.92%)</title><rect x="173.0" y="355.0" width="22.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="176.0" y="366.0">t..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (51 samples, 1.88%)</title><rect x="173.0" y="339.0" width="22.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="176.0" y="350.0">_..</text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.04%)</title><rect x="195.1" y="339.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="198.1" y="350.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="195.6" y="419.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="198.6" y="430.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="195.6" y="403.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="198.6" y="414.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.07%)</title><rect x="196.0" y="419.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="199.0" y="430.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="196.5" y="403.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="199.5" y="414.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="196.9" y="467.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="199.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (1 samples, 0.04%)</title><rect x="197.8" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="200.8" y="526.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="198.2" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="201.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="198.6" y="643.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.6" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="198.6" y="627.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="201.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="198.6" y="611.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.04%)</title><rect x="198.6" y="595.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="201.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.04%)</title><rect x="198.6" y="579.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="201.6" y="590.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="198.6" y="563.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="201.6" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (23 samples, 0.85%)</title><rect x="199.1" y="675.0" width="10.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="202.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (8 samples, 0.29%)</title><rect x="203.8" y="659.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="206.8" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.29%)</title><rect x="203.8" y="643.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="206.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.29%)</title><rect x="203.8" y="627.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.29%)</title><rect x="203.8" y="611.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="206.8" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.15%)</title><rect x="207.3" y="659.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="210.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.15%)</title><rect x="209.1" y="675.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="212.1" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.15%)</title><rect x="209.1" y="659.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="212.1" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="209.9" y="643.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="212.9" y="654.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="210.4" y="643.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="213.4" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (58 samples, 2.14%)</title><rect x="210.8" y="691.0" width="25.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="213.8" y="702.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (57 samples, 2.10%)</title><rect x="211.2" y="675.0" width="24.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="214.2" y="686.0">o..</text>
</g>
<g>
<title>[unknown] (7 samples, 0.26%)</title><rect x="211.7" y="659.0" width="3.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="214.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.26%)</title><rect x="211.7" y="643.0" width="3.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="214.7" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.18%)</title><rect x="211.7" y="627.0" width="2.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="214.7" y="638.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="211.7" y="611.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="214.7" y="622.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="212.1" y="611.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="215.1" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.11%)</title><rect x="212.5" y="611.0" width="1.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="215.5" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="212.5" y="595.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="215.5" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.07%)</title><rect x="213.0" y="595.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="216.0" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="213.8" y="627.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="216.8" y="638.0"></text>
</g>
<g>
<title>recv (1 samples, 0.04%)</title><rect x="214.3" y="627.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="217.3" y="638.0"></text>
</g>
<g>
<title>recv (49 samples, 1.80%)</title><rect x="214.7" y="659.0" width="21.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="217.7" y="670.0">r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (46 samples, 1.69%)</title><rect x="216.0" y="643.0" width="20.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="219.0" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (46 samples, 1.69%)</title><rect x="216.0" y="627.0" width="20.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="219.0" y="638.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (36 samples, 1.33%)</title><rect x="219.5" y="611.0" width="15.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="222.5" y="622.0"></text>
</g>
<g>
<title>__sys_recvfrom (36 samples, 1.33%)</title><rect x="219.5" y="595.0" width="15.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="222.5" y="606.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="219.9" y="579.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="222.9" y="590.0"></text>
</g>
<g>
<title>inet6_recvmsg (31 samples, 1.14%)</title><rect x="220.4" y="579.0" width="13.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="223.4" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (31 samples, 1.14%)</title><rect x="220.4" y="563.0" width="13.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="223.4" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.22%)</title><rect x="223.4" y="547.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="226.4" y="558.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.18%)</title><rect x="223.4" y="531.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="226.4" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (5 samples, 0.18%)</title><rect x="223.4" y="515.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="226.4" y="526.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.11%)</title><rect x="223.4" y="499.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="226.4" y="510.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.07%)</title><rect x="224.7" y="499.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="227.7" y="510.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="225.6" y="531.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="228.6" y="542.0"></text>
</g>
<g>
<title>ns_to_timespec64 (1 samples, 0.04%)</title><rect x="226.0" y="547.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="229.0" y="558.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.11%)</title><rect x="226.4" y="547.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="229.4" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="227.3" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="230.3" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.26%)</title><rect x="227.7" y="547.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="230.7" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (7 samples, 0.26%)</title><rect x="227.7" y="531.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="230.7" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.07%)</title><rect x="229.5" y="515.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="232.5" y="526.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.04%)</title><rect x="229.9" y="499.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="232.9" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="229.9" y="483.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="232.9" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.04%)</title><rect x="230.4" y="515.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="233.4" y="526.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="230.4" y="499.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="233.4" y="510.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.04%)</title><rect x="230.8" y="547.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="233.8" y="558.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="230.8" y="531.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="233.8" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.15%)</title><rect x="231.2" y="547.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="234.2" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.11%)</title><rect x="231.7" y="531.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="234.7" y="542.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.11%)</title><rect x="231.7" y="515.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="234.7" y="526.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.07%)</title><rect x="232.1" y="499.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="235.1" y="510.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (2 samples, 0.07%)</title><rect x="233.0" y="547.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="236.0" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.11%)</title><rect x="233.8" y="579.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="236.8" y="590.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.11%)</title><rect x="233.8" y="563.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="236.8" y="574.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.11%)</title><rect x="233.8" y="547.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="236.8" y="558.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.07%)</title><rect x="235.1" y="611.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="238.1" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.07%)</title><rect x="235.1" y="595.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="238.1" y="606.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.07%)</title><rect x="236.0" y="723.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="239.0" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="236.0" y="707.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="239.0" y="718.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="236.4" y="707.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="239.4" y="718.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="236.4" y="691.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="239.4" y="702.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=1082263] (110 samples, 4.05%)</title><rect x="236.9" y="755.0" width="47.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="239.9" y="766.0">[NIO..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.04%)</title><rect x="236.9" y="739.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="239.9" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (109 samples, 4.01%)</title><rect x="237.3" y="739.0" width="47.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="240.3" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.04%)</title><rect x="237.3" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 0.18%)</title><rect x="237.7" y="723.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 0.18%)</title><rect x="237.7" y="707.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="240.7" y="718.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.18%)</title><rect x="237.7" y="691.0" width="2.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="240.7" y="702.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rbx (1 samples, 0.04%)</title><rect x="238.2" y="675.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="241.2" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.11%)</title><rect x="238.6" y="675.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="241.6" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.11%)</title><rect x="238.6" y="659.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="241.6" y="670.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.07%)</title><rect x="239.0" y="643.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="242.0" y="654.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.07%)</title><rect x="239.0" y="627.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="242.0" y="638.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.07%)</title><rect x="239.0" y="611.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="242.0" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.04%)</title><rect x="239.0" y="595.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="242.0" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (1 samples, 0.04%)</title><rect x="239.5" y="595.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="242.5" y="606.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="239.5" y="579.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="242.5" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (102 samples, 3.76%)</title><rect x="239.9" y="723.0" width="44.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="242.9" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (102 samples, 3.76%)</title><rect x="239.9" y="707.0" width="44.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="242.9" y="718.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (61 samples, 2.25%)</title><rect x="239.9" y="691.0" width="26.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="242.9" y="702.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (44 samples, 1.62%)</title><rect x="240.3" y="675.0" width="19.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (43 samples, 1.58%)</title><rect x="240.8" y="659.0" width="18.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="243.8" y="670.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (41 samples, 1.51%)</title><rect x="240.8" y="643.0" width="17.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="243.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="240.8" y="627.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="243.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.entity (40 samples, 1.47%)</title><rect x="241.2" y="627.0" width="17.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="244.2" y="638.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (40 samples, 1.47%)</title><rect x="241.2" y="611.0" width="17.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="244.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (40 samples, 1.47%)</title><rect x="241.2" y="595.0" width="17.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="244.2" y="606.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (40 samples, 1.47%)</title><rect x="241.2" y="579.0" width="17.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="244.2" y="590.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (40 samples, 1.47%)</title><rect x="241.2" y="563.0" width="17.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="244.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (40 samples, 1.47%)</title><rect x="241.2" y="547.0" width="17.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="244.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (38 samples, 1.40%)</title><rect x="242.1" y="531.0" width="16.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="245.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (38 samples, 1.40%)</title><rect x="242.1" y="515.0" width="16.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (38 samples, 1.40%)</title><rect x="242.1" y="499.0" width="16.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="245.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (34 samples, 1.25%)</title><rect x="243.8" y="483.0" width="14.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="246.8" y="494.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.33%)</title><rect x="243.8" y="467.0" width="3.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="246.8" y="478.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="243.8" y="451.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="246.8" y="462.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.04%)</title><rect x="244.3" y="451.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="247.3" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="244.7" y="451.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="247.7" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (3 samples, 0.11%)</title><rect x="245.1" y="451.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="248.1" y="462.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (3 samples, 0.11%)</title><rect x="246.4" y="451.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="249.4" y="462.0"></text>
</g>
<g>
<title>__pthread_cond_signal (25 samples, 0.92%)</title><rect x="247.7" y="467.0" width="10.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="250.7" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.85%)</title><rect x="248.6" y="451.0" width="10.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="251.6" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.85%)</title><rect x="248.6" y="435.0" width="10.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="251.6" y="446.0"></text>
</g>
<g>
<title>__se_sys_futex (21 samples, 0.77%)</title><rect x="249.0" y="419.0" width="9.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="252.0" y="430.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.77%)</title><rect x="249.0" y="403.0" width="9.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="252.0" y="414.0"></text>
</g>
<g>
<title>futex_wake (21 samples, 0.77%)</title><rect x="249.0" y="387.0" width="9.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="252.0" y="398.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="249.0" y="371.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="252.0" y="382.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.04%)</title><rect x="249.5" y="371.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="252.5" y="382.0"></text>
</g>
<g>
<title>wake_up_q (19 samples, 0.70%)</title><rect x="249.9" y="371.0" width="8.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="252.9" y="382.0"></text>
</g>
<g>
<title>try_to_wake_up (19 samples, 0.70%)</title><rect x="249.9" y="355.0" width="8.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="252.9" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (19 samples, 0.70%)</title><rect x="249.9" y="339.0" width="8.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="252.9" y="350.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="258.2" y="419.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="261.2" y="430.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="258.2" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="261.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.07%)</title><rect x="258.6" y="643.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="261.6" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.07%)</title><rect x="258.6" y="627.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="261.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.07%)</title><rect x="258.6" y="611.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="261.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.07%)</title><rect x="258.6" y="595.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="261.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.07%)</title><rect x="258.6" y="579.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="261.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13 samples, 0.48%)</title><rect x="259.5" y="675.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="262.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.07%)</title><rect x="264.3" y="659.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="267.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="264.3" y="643.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="267.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="264.3" y="627.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="267.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.07%)</title><rect x="264.3" y="611.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.11%)</title><rect x="265.1" y="675.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="268.1" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.11%)</title><rect x="265.1" y="659.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="268.1" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (41 samples, 1.51%)</title><rect x="266.4" y="691.0" width="17.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="269.4" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (41 samples, 1.51%)</title><rect x="266.4" y="675.0" width="17.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="269.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.22%)</title><rect x="266.4" y="659.0" width="2.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="269.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.22%)</title><rect x="266.4" y="643.0" width="2.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="269.4" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.18%)</title><rect x="266.4" y="627.0" width="2.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="269.4" y="638.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.07%)</title><rect x="266.4" y="611.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="269.4" y="622.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="267.3" y="611.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="270.3" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.07%)</title><rect x="267.7" y="611.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="270.7" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="267.7" y="595.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="270.7" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="268.2" y="595.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="271.2" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="268.6" y="627.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="271.6" y="638.0"></text>
</g>
<g>
<title>recv (35 samples, 1.29%)</title><rect x="269.0" y="659.0" width="15.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="272.0" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 1.18%)</title><rect x="270.3" y="643.0" width="13.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="273.3" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 1.18%)</title><rect x="270.3" y="627.0" width="13.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="273.3" y="638.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (28 samples, 1.03%)</title><rect x="270.8" y="611.0" width="12.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="273.8" y="622.0"></text>
</g>
<g>
<title>__sys_recvfrom (28 samples, 1.03%)</title><rect x="270.8" y="595.0" width="12.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="273.8" y="606.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.07%)</title><rect x="271.2" y="579.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="274.2" y="590.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="272.1" y="579.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="275.1" y="590.0"></text>
</g>
<g>
<title>inet6_recvmsg (20 samples, 0.74%)</title><rect x="272.5" y="579.0" width="8.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="275.5" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (20 samples, 0.74%)</title><rect x="272.5" y="563.0" width="8.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="275.5" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.07%)</title><rect x="274.3" y="547.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="277.3" y="558.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.07%)</title><rect x="274.3" y="531.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="277.3" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.07%)</title><rect x="274.3" y="515.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="277.3" y="526.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.04%)</title><rect x="274.3" y="499.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="277.3" y="510.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.04%)</title><rect x="274.7" y="499.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="277.7" y="510.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.11%)</title><rect x="275.1" y="547.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="278.1" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.11%)</title><rect x="275.1" y="531.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="278.1" y="542.0"></text>
</g>
<g>
<title>preempt_count_add (2 samples, 0.07%)</title><rect x="275.6" y="515.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="278.6" y="526.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.15%)</title><rect x="276.4" y="547.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="279.4" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.15%)</title><rect x="276.4" y="531.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="279.4" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.04%)</title><rect x="277.3" y="515.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="280.3" y="526.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.04%)</title><rect x="277.3" y="499.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="280.3" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="277.3" y="483.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="280.3" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.04%)</title><rect x="277.7" y="515.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="280.7" y="526.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="277.7" y="499.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="280.7" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="277.7" y="483.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="280.7" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.04%)</title><rect x="278.2" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="281.2" y="558.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="278.2" y="531.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="281.2" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (5 samples, 0.18%)</title><rect x="278.6" y="547.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="281.6" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.11%)</title><rect x="279.5" y="531.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="282.5" y="542.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.07%)</title><rect x="279.9" y="515.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="282.9" y="526.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="280.3" y="499.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="283.3" y="510.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (1 samples, 0.04%)</title><rect x="280.8" y="547.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="283.8" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.15%)</title><rect x="281.2" y="579.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="284.2" y="590.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.11%)</title><rect x="281.6" y="563.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="284.6" y="574.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.07%)</title><rect x="282.1" y="547.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="285.1" y="558.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.07%)</title><rect x="282.9" y="611.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="285.9" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.07%)</title><rect x="282.9" y="595.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="285.9" y="606.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.04%)</title><rect x="283.4" y="579.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="286.4" y="590.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="283.8" y="611.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="286.8" y="622.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="284.2" y="723.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="287.2" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=1082264] (105 samples, 3.87%)</title><rect x="284.7" y="755.0" width="45.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="287.7" y="766.0">[NIO..</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.07%)</title><rect x="284.7" y="739.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="287.7" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="285.1" y="723.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="288.1" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (103 samples, 3.79%)</title><rect x="285.6" y="739.0" width="44.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.6" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (8 samples, 0.29%)</title><rect x="285.6" y="723.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="288.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (8 samples, 0.29%)</title><rect x="285.6" y="707.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.6" y="718.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.04%)</title><rect x="285.6" y="691.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="288.6" y="702.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 0.26%)</title><rect x="286.0" y="691.0" width="3.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="289.0" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.26%)</title><rect x="286.0" y="675.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="289.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.26%)</title><rect x="286.0" y="659.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="289.0" y="670.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (4 samples, 0.15%)</title><rect x="286.9" y="643.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="289.9" y="654.0"></text>
</g>
<g>
<title>do_epoll_wait (4 samples, 0.15%)</title><rect x="286.9" y="627.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="289.9" y="638.0"></text>
</g>
<g>
<title>ep_poll (3 samples, 0.11%)</title><rect x="287.3" y="611.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="290.3" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (2 samples, 0.07%)</title><rect x="287.3" y="595.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="290.3" y="606.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.04%)</title><rect x="287.3" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="290.3" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (1 samples, 0.04%)</title><rect x="287.3" y="563.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="290.3" y="574.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="287.3" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="290.3" y="558.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="287.3" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="290.3" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="287.3" y="515.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="290.3" y="526.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="287.7" y="579.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="290.7" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.04%)</title><rect x="288.2" y="595.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="291.2" y="606.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="288.2" y="579.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="291.2" y="590.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="288.2" y="563.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="291.2" y="574.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="288.6" y="643.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="291.6" y="654.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="288.6" y="627.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="291.6" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (95 samples, 3.50%)</title><rect x="289.0" y="723.0" width="41.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="292.0" y="734.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (95 samples, 3.50%)</title><rect x="289.0" y="707.0" width="41.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="292.0" y="718.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (65 samples, 2.39%)</title><rect x="289.0" y="691.0" width="28.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="292.0" y="702.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (54 samples, 1.99%)</title><rect x="289.0" y="675.0" width="23.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="292.0" y="686.0">o..</text>
</g>
<g>
<title>java/util/LinkedList.addLast (2 samples, 0.07%)</title><rect x="289.5" y="659.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.5" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="289.9" y="643.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="292.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (51 samples, 1.88%)</title><rect x="290.3" y="659.0" width="22.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="293.3" y="670.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (49 samples, 1.80%)</title><rect x="290.3" y="643.0" width="21.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.3" y="654.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="290.3" y="627.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="293.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.entity (48 samples, 1.77%)</title><rect x="290.8" y="627.0" width="20.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="293.8" y="638.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (48 samples, 1.77%)</title><rect x="290.8" y="611.0" width="20.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="293.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (45 samples, 1.66%)</title><rect x="292.1" y="595.0" width="19.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="295.1" y="606.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (45 samples, 1.66%)</title><rect x="292.1" y="579.0" width="19.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="295.1" y="590.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (45 samples, 1.66%)</title><rect x="292.1" y="563.0" width="19.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (45 samples, 1.66%)</title><rect x="292.1" y="547.0" width="19.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (45 samples, 1.66%)</title><rect x="292.1" y="531.0" width="19.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (45 samples, 1.66%)</title><rect x="292.1" y="515.0" width="19.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="295.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (45 samples, 1.66%)</title><rect x="292.1" y="499.0" width="19.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="295.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (43 samples, 1.58%)</title><rect x="292.9" y="483.0" width="18.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="295.9" y="494.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.33%)</title><rect x="292.9" y="467.0" width="4.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="295.9" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.04%)</title><rect x="292.9" y="451.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="295.9" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="293.4" y="451.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="296.4" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.11%)</title><rect x="293.8" y="451.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="296.8" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.04%)</title><rect x="295.1" y="451.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="298.1" y="462.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.04%)</title><rect x="295.5" y="451.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="298.5" y="462.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.07%)</title><rect x="296.0" y="451.0" width="0.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="299.0" y="462.0"></text>
</g>
<g>
<title>__pthread_cond_signal (32 samples, 1.18%)</title><rect x="296.9" y="467.0" width="13.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="299.9" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 1.03%)</title><rect x="298.6" y="451.0" width="12.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="301.6" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 1.03%)</title><rect x="298.6" y="435.0" width="12.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="301.6" y="446.0"></text>
</g>
<g>
<title>__se_sys_futex (27 samples, 0.99%)</title><rect x="298.6" y="419.0" width="11.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="301.6" y="430.0"></text>
</g>
<g>
<title>do_futex (26 samples, 0.96%)</title><rect x="299.0" y="403.0" width="11.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="302.0" y="414.0"></text>
</g>
<g>
<title>futex_wake (26 samples, 0.96%)</title><rect x="299.0" y="387.0" width="11.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="302.0" y="398.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.0 (1 samples, 0.04%)</title><rect x="299.9" y="371.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="302.9" y="382.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="300.3" y="371.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="303.3" y="382.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.04%)</title><rect x="300.8" y="371.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="303.8" y="382.0"></text>
</g>
<g>
<title>wake_up_q (21 samples, 0.77%)</title><rect x="301.2" y="371.0" width="9.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="304.2" y="382.0"></text>
</g>
<g>
<title>try_to_wake_up (21 samples, 0.77%)</title><rect x="301.2" y="355.0" width="9.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="304.2" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.74%)</title><rect x="301.6" y="339.0" width="8.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="304.6" y="350.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="310.3" y="419.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="313.3" y="430.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="310.3" y="403.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="313.3" y="414.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="310.8" y="467.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="313.8" y="478.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="311.2" y="467.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="314.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="311.6" y="643.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="314.6" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="311.6" y="627.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="314.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="311.6" y="611.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="314.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.04%)</title><rect x="311.6" y="595.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="314.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.04%)</title><rect x="311.6" y="579.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="314.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.04%)</title><rect x="312.1" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="315.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="312.1" y="627.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="315.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="312.1" y="611.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="315.1" y="622.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1 samples, 0.04%)</title><rect x="312.1" y="595.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="315.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.26%)</title><rect x="312.5" y="675.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="315.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.07%)</title><rect x="313.4" y="659.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="316.4" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="313.4" y="643.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="316.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="313.4" y="627.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="316.4" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.07%)</title><rect x="313.4" y="611.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="316.4" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.11%)</title><rect x="314.2" y="659.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="317.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.15%)</title><rect x="315.5" y="675.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="318.5" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.15%)</title><rect x="315.5" y="659.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="318.5" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="316.4" y="643.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="319.4" y="654.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="316.8" y="643.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="319.8" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (30 samples, 1.10%)</title><rect x="317.3" y="691.0" width="13.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="320.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (30 samples, 1.10%)</title><rect x="317.3" y="675.0" width="13.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="320.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="317.7" y="659.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="320.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="317.7" y="643.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="320.7" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.07%)</title><rect x="317.7" y="627.0" width="0.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="320.7" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.07%)</title><rect x="317.7" y="611.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="320.7" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="318.1" y="595.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="321.1" y="606.0"></text>
</g>
<g>
<title>recv (27 samples, 0.99%)</title><rect x="318.6" y="659.0" width="11.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="321.6" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.92%)</title><rect x="319.5" y="643.0" width="10.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="322.5" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.92%)</title><rect x="319.5" y="627.0" width="10.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="322.5" y="638.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (23 samples, 0.85%)</title><rect x="319.9" y="611.0" width="10.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="322.9" y="622.0"></text>
</g>
<g>
<title>__sys_recvfrom (22 samples, 0.81%)</title><rect x="320.3" y="595.0" width="9.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="323.3" y="606.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="320.3" y="579.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="323.3" y="590.0"></text>
</g>
<g>
<title>inet6_recvmsg (20 samples, 0.74%)</title><rect x="320.8" y="579.0" width="8.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="323.8" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (20 samples, 0.74%)</title><rect x="320.8" y="563.0" width="8.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="323.8" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.18%)</title><rect x="322.1" y="547.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="325.1" y="558.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.15%)</title><rect x="322.5" y="531.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="325.5" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.15%)</title><rect x="322.5" y="515.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="325.5" y="526.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.11%)</title><rect x="322.5" y="499.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="325.5" y="510.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.04%)</title><rect x="323.8" y="499.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="326.8" y="510.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="324.2" y="547.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="327.2" y="558.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="324.7" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="327.7" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="324.7" y="531.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="327.7" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.15%)</title><rect x="325.1" y="547.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="328.1" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.15%)</title><rect x="325.1" y="531.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="328.1" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.04%)</title><rect x="325.1" y="515.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="328.1" y="526.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.04%)</title><rect x="325.1" y="499.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="328.1" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="325.1" y="483.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="328.1" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.11%)</title><rect x="325.5" y="515.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="328.5" y="526.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.11%)</title><rect x="325.5" y="499.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="328.5" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="326.4" y="483.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="329.4" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.11%)</title><rect x="326.8" y="547.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="329.8" y="558.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="327.7" y="531.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="330.7" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.07%)</title><rect x="328.1" y="547.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="331.1" y="558.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (1 samples, 0.04%)</title><rect x="329.0" y="547.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="332.0" y="558.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.04%)</title><rect x="329.4" y="579.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="332.4" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="329.4" y="563.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="332.4" y="574.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="329.9" y="611.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="332.9" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="329.9" y="595.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="332.9" y="606.0"></text>
</g>
<g>
<title>[NIO Worker #10 tid=1082466] (276 samples, 10.17%)</title><rect x="330.3" y="755.0" width="120.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="333.3" y="766.0">[NIO Worker #10..</text>
</g>
<g>
<title>[not_walkable_Java] (8 samples, 0.29%)</title><rect x="330.3" y="739.0" width="3.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="333.3" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (8 samples, 0.29%)</title><rect x="330.3" y="723.0" width="3.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="333.3" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="330.3" y="707.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="333.3" y="718.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.26%)</title><rect x="330.8" y="707.0" width="3.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="333.8" y="718.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.22%)</title><rect x="331.2" y="691.0" width="2.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="334.2" y="702.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.04%)</title><rect x="333.8" y="739.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="336.8" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="333.8" y="723.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="336.8" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (267 samples, 9.83%)</title><rect x="334.2" y="739.0" width="116.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="337.2" y="750.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (267 samples, 9.83%)</title><rect x="334.2" y="723.0" width="116.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="337.2" y="734.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (267 samples, 9.83%)</title><rect x="334.2" y="707.0" width="116.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="337.2" y="718.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (27 samples, 0.99%)</title><rect x="334.7" y="691.0" width="11.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="337.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (27 samples, 0.99%)</title><rect x="334.7" y="675.0" width="11.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="337.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (27 samples, 0.99%)</title><rect x="334.7" y="659.0" width="11.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="337.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (1 samples, 0.04%)</title><rect x="334.7" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="337.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.04%)</title><rect x="334.7" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="337.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (26 samples, 0.96%)</title><rect x="335.1" y="643.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (25 samples, 0.92%)</title><rect x="335.5" y="627.0" width="10.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="338.5" y="638.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.07%)</title><rect x="338.1" y="611.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="341.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (17 samples, 0.63%)</title><rect x="339.0" y="611.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="342.0" y="622.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.11%)</title><rect x="339.0" y="595.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="342.0" y="606.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.15%)</title><rect x="340.3" y="595.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="343.3" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.07%)</title><rect x="340.7" y="579.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="343.7" y="590.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.04%)</title><rect x="341.6" y="579.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="344.6" y="590.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.37%)</title><rect x="342.1" y="595.0" width="4.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="345.1" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (10 samples, 0.37%)</title><rect x="342.1" y="579.0" width="4.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="345.1" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.37%)</title><rect x="342.1" y="563.0" width="4.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="345.1" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.37%)</title><rect x="342.1" y="547.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="345.1" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (9 samples, 0.33%)</title><rect x="342.5" y="531.0" width="3.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="345.5" y="542.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.29%)</title><rect x="342.5" y="515.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="345.5" y="526.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.29%)</title><rect x="342.5" y="499.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="345.5" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.07%)</title><rect x="344.2" y="483.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="347.2" y="494.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.04%)</title><rect x="344.2" y="467.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="347.2" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="344.2" y="451.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="347.2" y="462.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="344.7" y="467.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="347.7" y="478.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="344.7" y="451.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="347.7" y="462.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.07%)</title><rect x="345.1" y="483.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="348.1" y="494.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.04%)</title><rect x="345.1" y="467.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="348.1" y="478.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.04%)</title><rect x="345.5" y="467.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="348.5" y="478.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.04%)</title><rect x="346.0" y="515.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="349.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$54/953807481.run (239 samples, 8.80%)</title><rect x="346.4" y="691.0" width="103.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="349.4" y="702.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (239 samples, 8.80%)</title><rect x="346.4" y="675.0" width="103.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="349.4" y="686.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.putEntity (239 samples, 8.80%)</title><rect x="346.4" y="659.0" width="103.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="349.4" y="670.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.upsert (145 samples, 5.34%)</title><rect x="346.4" y="643.0" width="63.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="349.4" y="654.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (144 samples, 5.30%)</title><rect x="346.4" y="627.0" width="62.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="349.4" y="638.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (144 samples, 5.30%)</title><rect x="346.4" y="611.0" width="62.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="349.4" y="622.0">org/ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (130 samples, 4.79%)</title><rect x="346.8" y="595.0" width="56.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="349.8" y="606.0">Java_o..</text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.07%)</title><rect x="347.3" y="579.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="350.3" y="590.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.04%)</title><rect x="348.1" y="579.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="351.1" y="590.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (126 samples, 4.64%)</title><rect x="348.6" y="579.0" width="54.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="351.6" y="590.0">rocks..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="348.6" y="563.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="351.6" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="349.0" y="563.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="352.0" y="574.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.07%)</title><rect x="349.4" y="563.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="352.4" y="574.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="349.9" y="547.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="352.9" y="558.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.18%)</title><rect x="350.3" y="563.0" width="2.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="353.3" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.07%)</title><rect x="351.6" y="547.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="354.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (117 samples, 4.31%)</title><rect x="352.5" y="563.0" width="50.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="355.5" y="574.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (117 samples, 4.31%)</title><rect x="352.5" y="547.0" width="50.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="355.5" y="558.0">rocks..</text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="352.5" y="531.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="355.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (114 samples, 4.20%)</title><rect x="352.9" y="531.0" width="49.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="355.9" y="542.0">rocks..</text>
</g>
<g>
<title>__libc_free (2 samples, 0.07%)</title><rect x="352.9" y="515.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="355.9" y="526.0"></text>
</g>
<g>
<title>_init (2 samples, 0.07%)</title><rect x="353.8" y="515.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="356.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (96 samples, 3.54%)</title><rect x="354.7" y="515.0" width="41.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="357.7" y="526.0">roc..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="354.7" y="499.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="357.7" y="510.0"></text>
</g>
<g>
<title>_init (2 samples, 0.07%)</title><rect x="355.1" y="499.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="358.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (90 samples, 3.31%)</title><rect x="356.0" y="499.0" width="39.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="359.0" y="510.0">roc..</text>
</g>
<g>
<title>__GI___sched_yield (5 samples, 0.18%)</title><rect x="359.0" y="483.0" width="2.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="362.0" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.15%)</title><rect x="359.4" y="467.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="362.4" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.15%)</title><rect x="359.4" y="451.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="362.4" y="462.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.04%)</title><rect x="360.7" y="435.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="363.7" y="446.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="360.7" y="419.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="363.7" y="430.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="360.7" y="403.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="363.7" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.04%)</title><rect x="360.7" y="387.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="363.7" y="398.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="361.2" y="483.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="364.2" y="494.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="361.6" y="483.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="364.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (30 samples, 1.10%)</title><rect x="362.0" y="483.0" width="13.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="365.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (30 samples, 1.10%)</title><rect x="362.0" y="467.0" width="13.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="365.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (27 samples, 0.99%)</title><rect x="363.3" y="451.0" width="11.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="366.3" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (3 samples, 0.11%)</title><rect x="363.3" y="435.0" width="1.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="366.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (24 samples, 0.88%)</title><rect x="364.7" y="435.0" width="10.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="367.7" y="446.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="364.7" y="419.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="367.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.04%)</title><rect x="365.1" y="419.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="368.1" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="365.5" y="419.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="368.5" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="366.0" y="419.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="369.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (2 samples, 0.07%)</title><rect x="366.0" y="403.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="369.0" y="414.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (18 samples, 0.66%)</title><rect x="366.8" y="419.0" width="7.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="369.8" y="430.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="367.3" y="403.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="370.3" y="414.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize() (1 samples, 0.04%)</title><rect x="367.7" y="403.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="370.7" y="414.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (15 samples, 0.55%)</title><rect x="368.1" y="403.0" width="6.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="371.1" y="414.0"></text>
</g>
<g>
<title>__write (15 samples, 0.55%)</title><rect x="368.1" y="387.0" width="6.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="371.1" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.52%)</title><rect x="368.6" y="371.0" width="6.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="371.6" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.52%)</title><rect x="368.6" y="355.0" width="6.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="371.6" y="366.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.04%)</title><rect x="369.0" y="339.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="372.0" y="350.0"></text>
</g>
<g>
<title>ksys_write (10 samples, 0.37%)</title><rect x="369.4" y="339.0" width="4.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="372.4" y="350.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.07%)</title><rect x="369.9" y="323.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="372.9" y="334.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="369.9" y="307.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="372.9" y="318.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="370.3" y="291.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="373.3" y="302.0"></text>
</g>
<g>
<title>vfs_write (7 samples, 0.26%)</title><rect x="370.7" y="323.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="373.7" y="334.0"></text>
</g>
<g>
<title>__sb_end_write (1 samples, 0.04%)</title><rect x="370.7" y="307.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="373.7" y="318.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="370.7" y="291.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="373.7" y="302.0"></text>
</g>
<g>
<title>new_sync_write (6 samples, 0.22%)</title><rect x="371.2" y="307.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="374.2" y="318.0"></text>
</g>
<g>
<title>generic_file_write_iter (5 samples, 0.18%)</title><rect x="371.6" y="291.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="374.6" y="302.0"></text>
</g>
<g>
<title>__generic_file_write_iter (5 samples, 0.18%)</title><rect x="371.6" y="275.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="374.6" y="286.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.04%)</title><rect x="371.6" y="259.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="374.6" y="270.0"></text>
</g>
<g>
<title>generic_perform_write (4 samples, 0.15%)</title><rect x="372.0" y="259.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="375.0" y="270.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.04%)</title><rect x="372.0" y="243.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="375.0" y="254.0"></text>
</g>
<g>
<title>shmem_getpage_gfp.isra.0 (3 samples, 0.11%)</title><rect x="372.5" y="243.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="375.5" y="254.0"></text>
</g>
<g>
<title>find_lock_entry (2 samples, 0.07%)</title><rect x="372.5" y="227.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="375.5" y="238.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.07%)</title><rect x="372.5" y="211.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="375.5" y="222.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.04%)</title><rect x="372.9" y="195.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="375.9" y="206.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.04%)</title><rect x="372.9" y="179.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="375.9" y="190.0"></text>
</g>
<g>
<title>shmem_add_to_page_cache (1 samples, 0.04%)</title><rect x="373.3" y="227.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="376.3" y="238.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.04%)</title><rect x="373.3" y="211.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="376.3" y="222.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.07%)</title><rect x="373.8" y="339.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="376.8" y="350.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.07%)</title><rect x="373.8" y="323.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="376.8" y="334.0"></text>
</g>
<g>
<title>mntput (1 samples, 0.04%)</title><rect x="374.2" y="307.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="377.2" y="318.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="374.6" y="419.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="377.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (1 samples, 0.04%)</title><rect x="375.1" y="483.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="378.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.04%)</title><rect x="375.5" y="483.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="378.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (29 samples, 1.07%)</title><rect x="376.0" y="483.0" width="12.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="379.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (28 samples, 1.03%)</title><rect x="376.4" y="467.0" width="12.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="379.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (28 samples, 1.03%)</title><rect x="376.4" y="451.0" width="12.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="379.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.04%)</title><rect x="376.8" y="435.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="379.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (26 samples, 0.96%)</title><rect x="377.3" y="435.0" width="11.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="380.3" y="446.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.04%)</title><rect x="377.3" y="419.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="380.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.07%)</title><rect x="377.7" y="419.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="380.7" y="430.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.04%)</title><rect x="378.1" y="403.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="381.1" y="414.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.04%)</title><rect x="378.1" y="387.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="381.1" y="398.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="378.1" y="371.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="381.1" y="382.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="378.1" y="355.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="381.1" y="366.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="378.1" y="339.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="381.1" y="350.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge_delay (1 samples, 0.04%)</title><rect x="378.1" y="323.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="381.1" y="334.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (1 samples, 0.04%)</title><rect x="378.1" y="307.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="381.1" y="318.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="378.1" y="291.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="381.1" y="302.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (23 samples, 0.85%)</title><rect x="378.6" y="419.0" width="10.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="381.6" y="430.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="379.4" y="403.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="382.4" y="414.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.04%)</title><rect x="379.4" y="387.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="382.4" y="398.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (19 samples, 0.70%)</title><rect x="379.9" y="403.0" width="8.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="382.9" y="414.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (17 samples, 0.63%)</title><rect x="380.7" y="387.0" width="7.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="383.7" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (6 samples, 0.22%)</title><rect x="384.6" y="371.0" width="2.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="387.6" y="382.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.22%)</title><rect x="384.6" y="355.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="387.6" y="366.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="385.5" y="339.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="388.5" y="350.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="385.9" y="339.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="388.9" y="350.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.07%)</title><rect x="386.4" y="339.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="389.4" y="350.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.07%)</title><rect x="387.3" y="371.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="390.3" y="382.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="387.3" y="355.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="390.3" y="366.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="387.7" y="355.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="390.7" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.04%)</title><rect x="388.1" y="403.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="391.1" y="414.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="388.1" y="387.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="391.1" y="398.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (3 samples, 0.11%)</title><rect x="388.6" y="483.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="391.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.11%)</title><rect x="388.6" y="467.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="391.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.11%)</title><rect x="388.6" y="451.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="391.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.11%)</title><rect x="388.6" y="435.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="391.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (3 samples, 0.11%)</title><rect x="388.6" y="419.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="391.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (3 samples, 0.11%)</title><rect x="388.6" y="403.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="391.6" y="414.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.11%)</title><rect x="388.6" y="387.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="391.6" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (3 samples, 0.11%)</title><rect x="388.6" y="371.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="391.6" y="382.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (2 samples, 0.07%)</title><rect x="389.0" y="355.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="392.0" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="389.4" y="339.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="392.4" y="350.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="389.4" y="323.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="392.4" y="334.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.11%)</title><rect x="389.9" y="483.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="392.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.04%)</title><rect x="391.2" y="483.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="394.2" y="494.0"></text>
</g>
<g>
<title>__GI___sched_yield (1 samples, 0.04%)</title><rect x="391.2" y="467.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="394.2" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="391.2" y="451.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="394.2" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="391.2" y="435.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="394.2" y="446.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.04%)</title><rect x="391.2" y="419.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="394.2" y="430.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="391.2" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="394.2" y="414.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="391.2" y="387.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="394.2" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.04%)</title><rect x="391.2" y="371.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="394.2" y="382.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.04%)</title><rect x="391.6" y="483.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="394.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.04%)</title><rect x="392.0" y="483.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="395.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.04%)</title><rect x="392.5" y="483.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="395.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.04%)</title><rect x="392.5" y="467.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="395.5" y="478.0"></text>
</g>
<g>
<title>syscall (5 samples, 0.18%)</title><rect x="392.9" y="483.0" width="2.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="395.9" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.18%)</title><rect x="392.9" y="467.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="395.9" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.18%)</title><rect x="392.9" y="451.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="395.9" y="462.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="394.6" y="435.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="397.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (2 samples, 0.07%)</title><rect x="395.1" y="499.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="398.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.04%)</title><rect x="395.9" y="499.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="398.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 0.26%)</title><rect x="396.4" y="515.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="399.4" y="526.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="396.4" y="499.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="399.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.04%)</title><rect x="396.8" y="499.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="399.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (1 samples, 0.04%)</title><rect x="397.2" y="499.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="400.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.04%)</title><rect x="397.7" y="499.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="400.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="398.1" y="499.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="401.1" y="510.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="399.0" y="499.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="402.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="399.4" y="515.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="402.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="399.9" y="515.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="402.9" y="526.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (2 samples, 0.07%)</title><rect x="400.3" y="515.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="403.3" y="526.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.04%)</title><rect x="401.2" y="515.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="404.2" y="526.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (2 samples, 0.07%)</title><rect x="401.6" y="515.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="404.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (2 samples, 0.07%)</title><rect x="402.5" y="531.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="405.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.22%)</title><rect x="403.3" y="595.0" width="2.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="406.3" y="606.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="403.3" y="579.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="406.3" y="590.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.04%)</title><rect x="403.8" y="579.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="406.8" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="403.8" y="563.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="406.8" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="403.8" y="547.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="406.8" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (1 samples, 0.04%)</title><rect x="403.8" y="531.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="406.8" y="542.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="403.8" y="515.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="406.8" y="526.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="403.8" y="499.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="406.8" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="403.8" y="483.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="406.8" y="494.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="403.8" y="467.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="406.8" y="478.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="403.8" y="451.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="406.8" y="462.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.04%)</title><rect x="404.2" y="579.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="407.2" y="590.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.04%)</title><rect x="404.6" y="579.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="407.6" y="590.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="405.1" y="579.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="408.1" y="590.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.04%)</title><rect x="405.5" y="579.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="408.5" y="590.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="405.5" y="563.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="408.5" y="574.0"></text>
</g>
<g>
<title>__GI___libc_malloc (5 samples, 0.18%)</title><rect x="405.9" y="595.0" width="2.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="408.9" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.04%)</title><rect x="408.1" y="595.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="411.1" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="408.1" y="579.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="411.1" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="408.1" y="563.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="411.1" y="574.0"></text>
</g>
<g>
<title>__se_sys_futex (1 samples, 0.04%)</title><rect x="408.1" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="411.1" y="558.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="408.1" y="531.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="411.1" y="542.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="408.1" y="515.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="411.1" y="526.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="408.1" y="499.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="411.1" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="408.1" y="483.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="411.1" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="408.1" y="467.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="411.1" y="478.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="408.5" y="595.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="411.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (1 samples, 0.04%)</title><rect x="409.0" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="412.0" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="409.0" y="611.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="412.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (94 samples, 3.46%)</title><rect x="409.4" y="643.0" width="40.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="412.4" y="654.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (94 samples, 3.46%)</title><rect x="409.4" y="627.0" width="40.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="412.4" y="638.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (94 samples, 3.46%)</title><rect x="409.4" y="611.0" width="40.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="412.4" y="622.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.07%)</title><rect x="409.9" y="595.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="412.9" y="606.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="409.9" y="579.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="412.9" y="590.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="410.3" y="579.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="413.3" y="590.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="410.3" y="563.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="413.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (89 samples, 3.28%)</title><rect x="410.7" y="595.0" width="38.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="413.7" y="606.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.07%)</title><rect x="410.7" y="579.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="413.7" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.07%)</title><rect x="410.7" y="563.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.7" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="410.7" y="547.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="413.7" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="411.2" y="547.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="414.2" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="411.2" y="531.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="414.2" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (87 samples, 3.20%)</title><rect x="411.6" y="579.0" width="37.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="414.6" y="590.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (87 samples, 3.20%)</title><rect x="411.6" y="563.0" width="37.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="414.6" y="574.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (86 samples, 3.17%)</title><rect x="412.0" y="547.0" width="37.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.0" y="558.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (86 samples, 3.17%)</title><rect x="412.0" y="531.0" width="37.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="415.0" y="542.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="412.0" y="515.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="415.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="412.5" y="515.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="415.5" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="412.5" y="499.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="415.5" y="510.0"></text>
</g>
<g>
<title>__send (1 samples, 0.04%)</title><rect x="412.5" y="483.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="415.5" y="494.0"></text>
</g>
<g>
<title>__send (84 samples, 3.09%)</title><rect x="412.9" y="515.0" width="36.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="415.9" y="526.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (82 samples, 3.02%)</title><rect x="413.8" y="499.0" width="35.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="416.8" y="510.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (82 samples, 3.02%)</title><rect x="413.8" y="483.0" width="35.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="416.8" y="494.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (78 samples, 2.87%)</title><rect x="414.2" y="467.0" width="33.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="417.2" y="478.0">__..</text>
</g>
<g>
<title>__sys_sendto (78 samples, 2.87%)</title><rect x="414.2" y="451.0" width="33.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="417.2" y="462.0">__..</text>
</g>
<g>
<title>sock_sendmsg (75 samples, 2.76%)</title><rect x="415.1" y="435.0" width="32.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="418.1" y="446.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.04%)</title><rect x="415.9" y="419.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="418.9" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (72 samples, 2.65%)</title><rect x="416.4" y="419.0" width="31.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="419.4" y="430.0">tc..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="416.4" y="403.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="419.4" y="414.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.04%)</title><rect x="416.4" y="387.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="419.4" y="398.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.07%)</title><rect x="416.8" y="403.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="419.8" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="417.2" y="387.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="420.2" y="398.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (69 samples, 2.54%)</title><rect x="417.7" y="403.0" width="30.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="420.7" y="414.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (54 samples, 1.99%)</title><rect x="419.4" y="387.0" width="23.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="422.4" y="398.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (54 samples, 1.99%)</title><rect x="419.4" y="371.0" width="23.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="422.4" y="382.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (51 samples, 1.88%)</title><rect x="420.3" y="355.0" width="22.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="423.3" y="366.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (48 samples, 1.77%)</title><rect x="420.7" y="339.0" width="20.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="423.7" y="350.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.07%)</title><rect x="421.2" y="323.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="424.2" y="334.0"></text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.07%)</title><rect x="421.2" y="307.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="424.2" y="318.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.04%)</title><rect x="421.6" y="291.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="424.6" y="302.0"></text>
</g>
<g>
<title>ip_output (45 samples, 1.66%)</title><rect x="422.0" y="323.0" width="19.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="425.0" y="334.0"></text>
</g>
<g>
<title>ip_finish_output2 (44 samples, 1.62%)</title><rect x="422.0" y="307.0" width="19.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="425.0" y="318.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.29%)</title><rect x="422.0" y="291.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="425.0" y="302.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.04%)</title><rect x="422.0" y="275.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="425.0" y="286.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.18%)</title><rect x="422.5" y="275.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="425.5" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.18%)</title><rect x="422.5" y="259.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="425.5" y="270.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.07%)</title><rect x="422.9" y="243.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="425.9" y="254.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="423.8" y="243.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="426.8" y="254.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="423.8" y="227.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="426.8" y="238.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="424.2" y="243.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="427.2" y="254.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.04%)</title><rect x="424.6" y="275.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="427.6" y="286.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.04%)</title><rect x="425.1" y="275.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="428.1" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (36 samples, 1.33%)</title><rect x="425.5" y="291.0" width="15.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="428.5" y="302.0"></text>
</g>
<g>
<title>do_softirq.part.0 (36 samples, 1.33%)</title><rect x="425.5" y="275.0" width="15.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="428.5" y="286.0"></text>
</g>
<g>
<title>do_softirq_own_stack (33 samples, 1.22%)</title><rect x="426.8" y="259.0" width="14.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="429.8" y="270.0"></text>
</g>
<g>
<title>__softirqentry_text_start (33 samples, 1.22%)</title><rect x="426.8" y="243.0" width="14.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="429.8" y="254.0"></text>
</g>
<g>
<title>net_rx_action (29 samples, 1.07%)</title><rect x="428.5" y="227.0" width="12.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="431.5" y="238.0"></text>
</g>
<g>
<title>process_backlog (27 samples, 0.99%)</title><rect x="429.4" y="211.0" width="11.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="432.4" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (26 samples, 0.96%)</title><rect x="429.8" y="195.0" width="11.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="432.8" y="206.0"></text>
</g>
<g>
<title>ip_rcv (26 samples, 0.96%)</title><rect x="429.8" y="179.0" width="11.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="432.8" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (25 samples, 0.92%)</title><rect x="429.8" y="163.0" width="10.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="432.8" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (25 samples, 0.92%)</title><rect x="429.8" y="147.0" width="10.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="432.8" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (25 samples, 0.92%)</title><rect x="429.8" y="131.0" width="10.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="432.8" y="142.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.04%)</title><rect x="429.8" y="115.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="432.8" y="126.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="430.3" y="115.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="433.3" y="126.0"></text>
</g>
<g>
<title>tcp_v4_rcv (23 samples, 0.85%)</title><rect x="430.7" y="115.0" width="10.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="433.7" y="126.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.07%)</title><rect x="430.7" y="99.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="433.7" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.04%)</title><rect x="431.6" y="99.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="434.6" y="110.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.11%)</title><rect x="432.0" y="99.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="435.0" y="110.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.11%)</title><rect x="432.0" y="83.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="435.0" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (17 samples, 0.63%)</title><rect x="433.3" y="99.0" width="7.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="436.3" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (17 samples, 0.63%)</title><rect x="433.3" y="83.0" width="7.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="436.3" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (6 samples, 0.22%)</title><rect x="433.3" y="67.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="436.3" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.22%)</title><rect x="433.3" y="51.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="436.3" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.22%)</title><rect x="433.3" y="35.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="436.3" y="46.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.37%)</title><rect x="435.9" y="67.0" width="4.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="438.9" y="78.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.15%)</title><rect x="436.8" y="51.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="439.8" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="436.8" y="35.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="439.8" y="46.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.11%)</title><rect x="437.2" y="35.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="440.2" y="46.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.11%)</title><rect x="438.5" y="51.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="441.5" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="439.4" y="35.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="442.4" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.04%)</title><rect x="439.8" y="51.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="442.8" y="62.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.04%)</title><rect x="440.3" y="67.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="443.3" y="78.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.04%)</title><rect x="440.7" y="163.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="443.7" y="174.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.04%)</title><rect x="441.1" y="307.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="444.1" y="318.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="441.1" y="291.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="444.1" y="302.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="441.6" y="339.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="444.6" y="350.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="442.0" y="339.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="445.0" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="442.4" y="355.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="445.4" y="366.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.15%)</title><rect x="442.9" y="387.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="445.9" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.15%)</title><rect x="442.9" y="371.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="445.9" y="382.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.11%)</title><rect x="442.9" y="355.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="445.9" y="366.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.11%)</title><rect x="442.9" y="339.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="445.9" y="350.0"></text>
</g>
<g>
<title>__slab_alloc.isra.0 (2 samples, 0.07%)</title><rect x="443.3" y="323.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="446.3" y="334.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="444.2" y="355.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="447.2" y="366.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.07%)</title><rect x="444.6" y="387.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="447.6" y="398.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.04%)</title><rect x="445.5" y="387.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="448.5" y="398.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="445.9" y="387.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="448.9" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.07%)</title><rect x="446.4" y="387.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="449.4" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.07%)</title><rect x="446.4" y="371.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="449.4" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.07%)</title><rect x="446.4" y="355.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="449.4" y="366.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.04%)</title><rect x="447.2" y="387.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="450.2" y="398.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="447.7" y="435.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="450.7" y="446.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="447.7" y="419.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="450.7" y="430.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="447.7" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="450.7" y="414.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.07%)</title><rect x="448.1" y="467.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="451.1" y="478.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.07%)</title><rect x="448.1" y="451.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="451.1" y="462.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="448.1" y="435.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="451.1" y="446.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.04%)</title><rect x="448.5" y="435.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="451.5" y="446.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="449.0" y="467.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="452.0" y="478.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="449.0" y="451.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="452.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.07%)</title><rect x="449.4" y="595.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="452.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.07%)</title><rect x="449.4" y="579.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.07%)</title><rect x="449.4" y="563.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="452.4" y="574.0"></text>
</g>
<g>
<title>[NIO Worker #11 tid=1082468] (274 samples, 10.09%)</title><rect x="450.3" y="755.0" width="119.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="453.3" y="766.0">[NIO Worker #11..</text>
</g>
<g>
<title>[not_walkable_Java] (6 samples, 0.22%)</title><rect x="450.3" y="739.0" width="2.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="453.3" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (6 samples, 0.22%)</title><rect x="450.3" y="723.0" width="2.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="453.3" y="734.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.22%)</title><rect x="450.3" y="707.0" width="2.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="453.3" y="718.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.18%)</title><rect x="450.7" y="691.0" width="2.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="453.7" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.run (268 samples, 9.87%)</title><rect x="452.9" y="739.0" width="116.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="455.9" y="750.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (268 samples, 9.87%)</title><rect x="452.9" y="723.0" width="116.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="455.9" y="734.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (268 samples, 9.87%)</title><rect x="452.9" y="707.0" width="116.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="455.9" y="718.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (30 samples, 1.10%)</title><rect x="452.9" y="691.0" width="13.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="455.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (30 samples, 1.10%)</title><rect x="452.9" y="675.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="455.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (30 samples, 1.10%)</title><rect x="452.9" y="659.0" width="13.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (1 samples, 0.04%)</title><rect x="452.9" y="643.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="455.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.04%)</title><rect x="452.9" y="627.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="455.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (29 samples, 1.07%)</title><rect x="453.3" y="643.0" width="12.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="456.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (29 samples, 1.07%)</title><rect x="453.3" y="627.0" width="12.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="456.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (23 samples, 0.85%)</title><rect x="455.9" y="611.0" width="10.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="458.9" y="622.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="455.9" y="595.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="458.9" y="606.0"></text>
</g>
<g>
<title>Unsafe_Park (8 samples, 0.29%)</title><rect x="456.4" y="595.0" width="3.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="459.4" y="606.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.04%)</title><rect x="456.8" y="579.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="459.8" y="590.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.07%)</title><rect x="457.2" y="579.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="460.2" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.04%)</title><rect x="458.1" y="579.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="461.1" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="458.5" y="579.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="461.5" y="590.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="459.0" y="579.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="462.0" y="590.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.04%)</title><rect x="459.4" y="579.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="462.4" y="590.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.52%)</title><rect x="459.8" y="595.0" width="6.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="462.8" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (14 samples, 0.52%)</title><rect x="459.8" y="579.0" width="6.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="462.8" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.52%)</title><rect x="459.8" y="563.0" width="6.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="462.8" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.52%)</title><rect x="459.8" y="547.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="462.8" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (12 samples, 0.44%)</title><rect x="460.3" y="531.0" width="5.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="463.3" y="542.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.41%)</title><rect x="460.7" y="515.0" width="4.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="463.7" y="526.0"></text>
</g>
<g>
<title>futex_wait (11 samples, 0.41%)</title><rect x="460.7" y="499.0" width="4.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="463.7" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.22%)</title><rect x="461.1" y="483.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="464.1" y="494.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.07%)</title><rect x="462.0" y="467.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="465.0" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.07%)</title><rect x="462.0" y="451.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="465.0" y="462.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.04%)</title><rect x="462.9" y="467.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="465.9" y="478.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="463.3" y="467.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="466.3" y="478.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.15%)</title><rect x="463.7" y="483.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="466.7" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="463.7" y="467.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="466.7" y="478.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.07%)</title><rect x="464.2" y="467.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="467.2" y="478.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.04%)</title><rect x="464.6" y="451.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="467.6" y="462.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.04%)</title><rect x="465.0" y="467.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="468.0" y="478.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="465.5" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="468.5" y="542.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="465.5" y="515.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="468.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$54/953807481.run (237 samples, 8.73%)</title><rect x="465.9" y="691.0" width="103.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="468.9" y="702.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (237 samples, 8.73%)</title><rect x="465.9" y="675.0" width="103.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.9" y="686.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.putEntity (237 samples, 8.73%)</title><rect x="465.9" y="659.0" width="103.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="468.9" y="670.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.upsert (143 samples, 5.27%)</title><rect x="465.9" y="643.0" width="62.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="468.9" y="654.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (142 samples, 5.23%)</title><rect x="465.9" y="627.0" width="61.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="468.9" y="638.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (142 samples, 5.23%)</title><rect x="465.9" y="611.0" width="61.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="468.9" y="622.0">org/ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (137 samples, 5.05%)</title><rect x="465.9" y="595.0" width="59.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="468.9" y="606.0">Java_o..</text>
</g>
<g>
<title>__GI___libc_malloc (3 samples, 0.11%)</title><rect x="466.8" y="579.0" width="1.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="469.8" y="590.0"></text>
</g>
<g>
<title>_init (2 samples, 0.07%)</title><rect x="468.1" y="579.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="471.1" y="590.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.04%)</title><rect x="469.0" y="579.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="472.0" y="590.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.04%)</title><rect x="469.4" y="579.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="472.4" y="590.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (128 samples, 4.71%)</title><rect x="469.8" y="579.0" width="55.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="472.8" y="590.0">rocks..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="469.8" y="563.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="472.8" y="574.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="470.3" y="563.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="473.3" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="470.7" y="563.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="473.7" y="574.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="471.1" y="563.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="474.1" y="574.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.11%)</title><rect x="471.6" y="563.0" width="1.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="474.6" y="574.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="471.6" y="547.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="474.6" y="558.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="472.0" y="547.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="475.0" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="472.4" y="547.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="475.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (120 samples, 4.42%)</title><rect x="472.9" y="563.0" width="52.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="475.9" y="574.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (119 samples, 4.38%)</title><rect x="473.3" y="547.0" width="51.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="476.3" y="558.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (116 samples, 4.27%)</title><rect x="473.3" y="531.0" width="50.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="476.3" y="542.0">rocks..</text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="473.3" y="515.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="476.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (103 samples, 3.79%)</title><rect x="473.7" y="515.0" width="44.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="476.7" y="526.0">rock..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="473.7" y="499.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="476.7" y="510.0"></text>
</g>
<g>
<title>_init (2 samples, 0.07%)</title><rect x="474.2" y="499.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="477.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.04%)</title><rect x="475.0" y="499.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="478.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (97 samples, 3.57%)</title><rect x="475.5" y="499.0" width="42.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="478.5" y="510.0">rock..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="477.7" y="483.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="480.7" y="494.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="478.1" y="483.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="481.1" y="494.0"></text>
</g>
<g>
<title>__GI___sched_yield (12 samples, 0.44%)</title><rect x="478.5" y="483.0" width="5.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="481.5" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.33%)</title><rect x="479.8" y="467.0" width="3.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="482.8" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.33%)</title><rect x="479.8" y="451.0" width="3.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="482.8" y="462.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (5 samples, 0.18%)</title><rect x="480.7" y="435.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="483.7" y="446.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.18%)</title><rect x="480.7" y="419.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="483.7" y="430.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.18%)</title><rect x="480.7" y="403.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="483.7" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (5 samples, 0.18%)</title><rect x="480.7" y="387.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="483.7" y="398.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="482.9" y="435.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="485.9" y="446.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="482.9" y="419.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="485.9" y="430.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="483.3" y="435.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="486.3" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="483.7" y="483.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="486.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.04%)</title><rect x="484.2" y="483.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="487.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (34 samples, 1.25%)</title><rect x="484.6" y="483.0" width="14.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="487.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.04%)</title><rect x="485.0" y="467.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="488.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (32 samples, 1.18%)</title><rect x="485.5" y="467.0" width="13.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="488.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (31 samples, 1.14%)</title><rect x="485.9" y="451.0" width="13.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="488.9" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (2 samples, 0.07%)</title><rect x="486.3" y="435.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="489.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (28 samples, 1.03%)</title><rect x="487.2" y="435.0" width="12.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="490.2" y="446.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="487.7" y="419.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="490.7" y="430.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="488.1" y="419.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="491.1" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="488.5" y="419.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="491.5" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="489.0" y="419.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="492.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="489.0" y="403.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="492.0" y="414.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (23 samples, 0.85%)</title><rect x="489.4" y="419.0" width="10.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="492.4" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (23 samples, 0.85%)</title><rect x="489.4" y="403.0" width="10.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="492.4" y="414.0"></text>
</g>
<g>
<title>__write (21 samples, 0.77%)</title><rect x="490.3" y="387.0" width="9.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="493.3" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.70%)</title><rect x="491.1" y="371.0" width="8.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="494.1" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.70%)</title><rect x="491.1" y="355.0" width="8.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="494.1" y="366.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.04%)</title><rect x="492.4" y="339.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="495.4" y="350.0"></text>
</g>
<g>
<title>ksys_write (15 samples, 0.55%)</title><rect x="492.9" y="339.0" width="6.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="495.9" y="350.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.07%)</title><rect x="492.9" y="323.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="495.9" y="334.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="492.9" y="307.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="495.9" y="318.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="493.3" y="291.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="496.3" y="302.0"></text>
</g>
<g>
<title>vfs_write (13 samples, 0.48%)</title><rect x="493.7" y="323.0" width="5.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="496.7" y="334.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.04%)</title><rect x="493.7" y="307.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="496.7" y="318.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="493.7" y="291.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="496.7" y="302.0"></text>
</g>
<g>
<title>new_sync_write (12 samples, 0.44%)</title><rect x="494.2" y="307.0" width="5.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="497.2" y="318.0"></text>
</g>
<g>
<title>generic_file_write_iter (11 samples, 0.41%)</title><rect x="494.6" y="291.0" width="4.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="497.6" y="302.0"></text>
</g>
<g>
<title>__generic_file_write_iter (10 samples, 0.37%)</title><rect x="494.6" y="275.0" width="4.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="497.6" y="286.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.04%)</title><rect x="494.6" y="259.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="497.6" y="270.0"></text>
</g>
<g>
<title>generic_perform_write (9 samples, 0.33%)</title><rect x="495.0" y="259.0" width="4.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="498.0" y="270.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.07%)</title><rect x="495.0" y="243.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="498.0" y="254.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.04%)</title><rect x="495.5" y="227.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="498.5" y="238.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="495.5" y="211.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="498.5" y="222.0"></text>
</g>
<g>
<title>shmem_getpage_gfp.isra.0 (6 samples, 0.22%)</title><rect x="495.9" y="243.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="498.9" y="254.0"></text>
</g>
<g>
<title>__lru_cache_add (1 samples, 0.04%)</title><rect x="496.3" y="227.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="499.3" y="238.0"></text>
</g>
<g>
<title>find_lock_entry (3 samples, 0.11%)</title><rect x="496.8" y="227.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="499.8" y="238.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.07%)</title><rect x="497.2" y="211.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="500.2" y="222.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.07%)</title><rect x="497.2" y="195.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="500.2" y="206.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.04%)</title><rect x="497.6" y="179.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="500.6" y="190.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.04%)</title><rect x="498.1" y="227.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="501.1" y="238.0"></text>
</g>
<g>
<title>activate_page (1 samples, 0.04%)</title><rect x="498.1" y="211.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="501.1" y="222.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (1 samples, 0.04%)</title><rect x="498.1" y="195.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="501.1" y="206.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="498.1" y="179.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="501.1" y="190.0"></text>
</g>
<g>
<title>shmem_write_end (1 samples, 0.04%)</title><rect x="498.5" y="243.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="501.5" y="254.0"></text>
</g>
<g>
<title>down_write (1 samples, 0.04%)</title><rect x="499.0" y="275.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="502.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (25 samples, 0.92%)</title><rect x="499.4" y="483.0" width="10.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="502.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (25 samples, 0.92%)</title><rect x="499.4" y="467.0" width="10.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="502.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (20 samples, 0.74%)</title><rect x="500.3" y="451.0" width="8.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="503.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.04%)</title><rect x="500.3" y="435.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="503.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.04%)</title><rect x="500.7" y="435.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="503.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (18 samples, 0.66%)</title><rect x="501.1" y="435.0" width="7.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="504.1" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (18 samples, 0.66%)</title><rect x="501.1" y="419.0" width="7.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="504.1" y="430.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (2 samples, 0.07%)</title><rect x="501.6" y="403.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="504.6" y="414.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (15 samples, 0.55%)</title><rect x="502.4" y="403.0" width="6.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="505.4" y="414.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (10 samples, 0.37%)</title><rect x="503.3" y="387.0" width="4.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="506.3" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (4 samples, 0.15%)</title><rect x="505.5" y="371.0" width="1.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="508.5" y="382.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="505.5" y="355.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="508.5" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.11%)</title><rect x="505.9" y="355.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="508.9" y="366.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="506.3" y="339.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="509.3" y="350.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="506.8" y="339.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="509.8" y="350.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="507.2" y="371.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="510.2" y="382.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="507.2" y="355.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="510.2" y="366.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="507.6" y="387.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="510.6" y="398.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 0.07%)</title><rect x="508.1" y="387.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="511.1" y="398.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="508.5" y="371.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="511.5" y="382.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.07%)</title><rect x="508.9" y="451.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="511.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="509.8" y="451.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="512.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (3 samples, 0.11%)</title><rect x="510.3" y="483.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="513.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.11%)</title><rect x="510.3" y="467.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="513.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.11%)</title><rect x="510.3" y="451.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="513.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.11%)</title><rect x="510.3" y="435.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="513.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (3 samples, 0.11%)</title><rect x="510.3" y="419.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="513.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (3 samples, 0.11%)</title><rect x="510.3" y="403.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="513.3" y="414.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.07%)</title><rect x="510.3" y="387.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="513.3" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="510.7" y="371.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="513.7" y="382.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="510.7" y="355.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="513.7" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="510.7" y="339.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="513.7" y="350.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="510.7" y="323.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="513.7" y="334.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.04%)</title><rect x="511.1" y="387.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="514.1" y="398.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (5 samples, 0.18%)</title><rect x="511.6" y="483.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="514.6" y="494.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="513.3" y="467.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="516.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.04%)</title><rect x="513.7" y="483.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="516.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.04%)</title><rect x="513.7" y="467.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="516.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (2 samples, 0.07%)</title><rect x="514.2" y="483.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="517.2" y="494.0"></text>
</g>
<g>
<title>syscall (6 samples, 0.22%)</title><rect x="515.0" y="483.0" width="2.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="518.0" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.15%)</title><rect x="515.9" y="467.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="518.9" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.15%)</title><rect x="515.9" y="451.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="518.9" y="462.0"></text>
</g>
<g>
<title>__se_sys_clock_gettime (2 samples, 0.07%)</title><rect x="516.8" y="435.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="519.8" y="446.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (1 samples, 0.04%)</title><rect x="516.8" y="419.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="519.8" y="430.0"></text>
</g>
<g>
<title>put_timespec64 (1 samples, 0.04%)</title><rect x="517.2" y="419.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="520.2" y="430.0"></text>
</g>
<g>
<title>_copy_to_user (1 samples, 0.04%)</title><rect x="517.2" y="403.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="520.2" y="414.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.04%)</title><rect x="517.6" y="499.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="520.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="518.1" y="499.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="521.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 0.26%)</title><rect x="518.5" y="515.0" width="3.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="521.5" y="526.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="518.5" y="499.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="521.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.04%)</title><rect x="518.9" y="499.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="521.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.11%)</title><rect x="519.4" y="499.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="522.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, int) (1 samples, 0.04%)</title><rect x="520.7" y="499.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="523.7" y="510.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="521.1" y="499.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="524.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.04%)</title><rect x="521.6" y="515.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="524.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="522.0" y="515.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="525.0" y="526.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.04%)</title><rect x="522.4" y="515.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="525.4" y="526.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.07%)</title><rect x="522.9" y="515.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="525.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (3 samples, 0.11%)</title><rect x="523.7" y="531.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="526.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="525.0" y="563.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="528.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.11%)</title><rect x="525.5" y="595.0" width="1.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="528.5" y="606.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.04%)</title><rect x="525.5" y="579.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="528.5" y="590.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.04%)</title><rect x="525.9" y="579.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="528.9" y="590.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.04%)</title><rect x="526.3" y="579.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="529.3" y="590.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="526.3" y="563.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="529.3" y="574.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="526.8" y="595.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="529.8" y="606.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.04%)</title><rect x="527.2" y="595.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="530.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (1 samples, 0.04%)</title><rect x="527.6" y="627.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="530.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (94 samples, 3.46%)</title><rect x="528.1" y="643.0" width="40.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="531.1" y="654.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (94 samples, 3.46%)</title><rect x="528.1" y="627.0" width="40.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="531.1" y="638.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (94 samples, 3.46%)</title><rect x="528.1" y="611.0" width="40.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="531.1" y="622.0">one..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="529.8" y="595.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="532.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (88 samples, 3.24%)</title><rect x="530.2" y="595.0" width="38.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="533.2" y="606.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.18%)</title><rect x="530.2" y="579.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="533.2" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.15%)</title><rect x="530.7" y="563.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="533.7" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.15%)</title><rect x="530.7" y="547.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.7" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.07%)</title><rect x="531.5" y="531.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="534.5" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (83 samples, 3.06%)</title><rect x="532.4" y="579.0" width="36.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="535.4" y="590.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (83 samples, 3.06%)</title><rect x="532.4" y="563.0" width="36.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="535.4" y="574.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (83 samples, 3.06%)</title><rect x="532.4" y="547.0" width="36.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="535.4" y="558.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="532.4" y="531.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="535.4" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (82 samples, 3.02%)</title><rect x="532.9" y="531.0" width="35.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="535.9" y="542.0">one..</text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="532.9" y="515.0" width="1.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="535.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="532.9" y="499.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="535.9" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.07%)</title><rect x="532.9" y="483.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="535.9" y="494.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="532.9" y="467.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="535.9" y="478.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="533.3" y="467.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="536.3" y="478.0"></text>
</g>
<g>
<title>__send (2 samples, 0.07%)</title><rect x="533.7" y="483.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="536.7" y="494.0"></text>
</g>
<g>
<title>__send (78 samples, 2.87%)</title><rect x="534.6" y="515.0" width="33.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="537.6" y="526.0">__..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.07%)</title><rect x="535.5" y="499.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="538.5" y="510.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.04%)</title><rect x="536.3" y="499.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="539.3" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (73 samples, 2.69%)</title><rect x="536.8" y="499.0" width="31.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="539.8" y="510.0">en..</text>
</g>
<g>
<title>do_syscall_64 (73 samples, 2.69%)</title><rect x="536.8" y="483.0" width="31.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="539.8" y="494.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (69 samples, 2.54%)</title><rect x="538.1" y="467.0" width="30.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="541.1" y="478.0">__..</text>
</g>
<g>
<title>__sys_sendto (68 samples, 2.50%)</title><rect x="538.5" y="451.0" width="29.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="541.5" y="462.0">__..</text>
</g>
<g>
<title>sock_sendmsg (66 samples, 2.43%)</title><rect x="538.9" y="435.0" width="28.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="541.9" y="446.0">so..</text>
</g>
<g>
<title>tcp_sendmsg (65 samples, 2.39%)</title><rect x="539.4" y="419.0" width="28.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="542.4" y="430.0">tc..</text>
</g>
<g>
<title>release_sock (2 samples, 0.07%)</title><rect x="539.8" y="403.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="542.8" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="539.8" y="387.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="542.8" y="398.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="539.8" y="371.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="542.8" y="382.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="540.2" y="387.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="543.2" y="398.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (62 samples, 2.28%)</title><rect x="540.7" y="403.0" width="26.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="543.7" y="414.0">t..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.07%)</title><rect x="541.5" y="387.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="544.5" y="398.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.07%)</title><rect x="541.5" y="371.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="544.5" y="382.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (53 samples, 1.95%)</title><rect x="542.4" y="387.0" width="23.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="545.4" y="398.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (53 samples, 1.95%)</title><rect x="542.4" y="371.0" width="23.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="545.4" y="382.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (49 samples, 1.80%)</title><rect x="542.4" y="355.0" width="21.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="545.4" y="366.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (46 samples, 1.69%)</title><rect x="542.8" y="339.0" width="20.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="545.8" y="350.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="543.7" y="323.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="546.7" y="334.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="543.7" y="307.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="546.7" y="318.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.04%)</title><rect x="544.2" y="323.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="547.2" y="334.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.04%)</title><rect x="544.6" y="323.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="547.6" y="334.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="544.6" y="307.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="547.6" y="318.0"></text>
</g>
<g>
<title>ip_output (41 samples, 1.51%)</title><rect x="545.0" y="323.0" width="17.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="548.0" y="334.0"></text>
</g>
<g>
<title>ip_finish_output2 (40 samples, 1.47%)</title><rect x="545.0" y="307.0" width="17.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="548.0" y="318.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.22%)</title><rect x="545.5" y="291.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="548.5" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="545.5" y="275.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="548.5" y="286.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.11%)</title><rect x="545.9" y="275.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="548.9" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.11%)</title><rect x="545.9" y="259.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="548.9" y="270.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="545.9" y="243.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="548.9" y="254.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.07%)</title><rect x="546.3" y="243.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="549.3" y="254.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.07%)</title><rect x="546.3" y="227.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="549.3" y="238.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.07%)</title><rect x="546.3" y="211.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="549.3" y="222.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.07%)</title><rect x="547.2" y="275.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="550.2" y="286.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.04%)</title><rect x="547.6" y="259.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="550.6" y="270.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.04%)</title><rect x="547.6" y="243.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="550.6" y="254.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (33 samples, 1.22%)</title><rect x="548.1" y="291.0" width="14.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="551.1" y="302.0"></text>
</g>
<g>
<title>do_softirq.part.0 (32 samples, 1.18%)</title><rect x="548.1" y="275.0" width="13.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="551.1" y="286.0"></text>
</g>
<g>
<title>do_softirq_own_stack (30 samples, 1.10%)</title><rect x="548.9" y="259.0" width="13.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="551.9" y="270.0"></text>
</g>
<g>
<title>__softirqentry_text_start (30 samples, 1.10%)</title><rect x="548.9" y="243.0" width="13.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="551.9" y="254.0"></text>
</g>
<g>
<title>net_rx_action (29 samples, 1.07%)</title><rect x="549.4" y="227.0" width="12.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="552.4" y="238.0"></text>
</g>
<g>
<title>process_backlog (29 samples, 1.07%)</title><rect x="549.4" y="211.0" width="12.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="552.4" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (27 samples, 0.99%)</title><rect x="550.2" y="195.0" width="11.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="553.2" y="206.0"></text>
</g>
<g>
<title>ip_rcv (27 samples, 0.99%)</title><rect x="550.2" y="179.0" width="11.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="553.2" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (25 samples, 0.92%)</title><rect x="550.7" y="163.0" width="10.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="553.7" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (22 samples, 0.81%)</title><rect x="552.0" y="147.0" width="9.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="555.0" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (22 samples, 0.81%)</title><rect x="552.0" y="131.0" width="9.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="555.0" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (21 samples, 0.77%)</title><rect x="552.4" y="115.0" width="9.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="555.4" y="126.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="553.3" y="99.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="556.3" y="110.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="553.3" y="83.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="556.3" y="94.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="553.7" y="99.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="556.7" y="110.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="553.7" y="83.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="556.7" y="94.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.04%)</title><rect x="553.7" y="67.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="556.7" y="78.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (17 samples, 0.63%)</title><rect x="554.1" y="99.0" width="7.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="557.1" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (17 samples, 0.63%)</title><rect x="554.1" y="83.0" width="7.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="557.1" y="94.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="555.5" y="67.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="558.5" y="78.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="555.9" y="67.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="558.9" y="78.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="555.9" y="51.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="558.9" y="62.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.15%)</title><rect x="556.3" y="67.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="559.3" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.11%)</title><rect x="556.8" y="51.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="559.8" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.11%)</title><rect x="556.8" y="35.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="559.8" y="46.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.22%)</title><rect x="558.1" y="67.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="561.1" y="78.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.07%)</title><rect x="558.9" y="51.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="561.9" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="558.9" y="35.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="561.9" y="46.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="559.4" y="35.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="562.4" y="46.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="559.8" y="51.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="562.8" y="62.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.04%)</title><rect x="560.2" y="51.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="563.2" y="62.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="560.7" y="67.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="563.7" y="78.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="560.7" y="51.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="563.7" y="62.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.04%)</title><rect x="561.1" y="67.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="564.1" y="78.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.04%)</title><rect x="561.5" y="163.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="564.5" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.04%)</title><rect x="561.5" y="147.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="564.5" y="158.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.04%)</title><rect x="562.0" y="275.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="565.0" y="286.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.04%)</title><rect x="562.4" y="307.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="565.4" y="318.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="562.4" y="291.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="565.4" y="302.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.04%)</title><rect x="562.4" y="275.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="565.4" y="286.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="562.8" y="339.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="565.8" y="350.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.04%)</title><rect x="563.3" y="339.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="566.3" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.15%)</title><rect x="563.7" y="355.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="566.7" y="366.0"></text>
</g>
<g>
<title>rb_insert_color (2 samples, 0.07%)</title><rect x="563.7" y="339.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="566.7" y="350.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.0 (2 samples, 0.07%)</title><rect x="564.6" y="339.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="567.6" y="350.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.15%)</title><rect x="565.4" y="387.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="568.4" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.11%)</title><rect x="565.9" y="371.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="568.9" y="382.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.07%)</title><rect x="565.9" y="355.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="568.9" y="366.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="566.3" y="339.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="569.3" y="350.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="566.3" y="323.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="569.3" y="334.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="566.8" y="355.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="569.8" y="366.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.04%)</title><rect x="567.2" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="570.2" y="398.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="567.6" y="435.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="570.6" y="446.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="567.6" y="419.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="570.6" y="430.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="568.1" y="467.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="571.1" y="478.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="568.1" y="451.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="571.1" y="462.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.04%)</title><rect x="568.1" y="435.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="571.1" y="446.0"></text>
</g>
<g>
<title>dput (1 samples, 0.04%)</title><rect x="568.1" y="419.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="571.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="568.5" y="595.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="571.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="568.5" y="579.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="571.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="568.5" y="563.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="571.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (1 samples, 0.04%)</title><rect x="568.9" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="571.9" y="702.0"></text>
</g>
<g>
<title>[NIO Worker #12 tid=1082469] (282 samples, 10.39%)</title><rect x="569.4" y="755.0" width="122.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="572.4" y="766.0">[NIO Worker #12..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="569.4" y="739.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="572.4" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="569.4" y="723.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="572.4" y="734.0"></text>
</g>
<g>
<title>[not_walkable_Java] (8 samples, 0.29%)</title><rect x="569.8" y="739.0" width="3.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="572.8" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (8 samples, 0.29%)</title><rect x="569.8" y="723.0" width="3.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="572.8" y="734.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.29%)</title><rect x="569.8" y="707.0" width="3.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="572.8" y="718.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.22%)</title><rect x="570.7" y="691.0" width="2.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="573.7" y="702.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.04%)</title><rect x="573.3" y="739.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="576.3" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="573.3" y="723.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="576.3" y="734.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="573.3" y="707.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="576.3" y="718.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="573.3" y="691.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="576.3" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.run (272 samples, 10.02%)</title><rect x="573.7" y="739.0" width="118.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="576.7" y="750.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (272 samples, 10.02%)</title><rect x="573.7" y="723.0" width="118.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="576.7" y="734.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (272 samples, 10.02%)</title><rect x="573.7" y="707.0" width="118.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="576.7" y="718.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (22 samples, 0.81%)</title><rect x="574.1" y="691.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="577.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (22 samples, 0.81%)</title><rect x="574.1" y="675.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="577.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (22 samples, 0.81%)</title><rect x="574.1" y="659.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="577.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (22 samples, 0.81%)</title><rect x="574.1" y="643.0" width="9.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="577.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (22 samples, 0.81%)</title><rect x="574.1" y="627.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="577.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (17 samples, 0.63%)</title><rect x="575.4" y="611.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="578.4" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.15%)</title><rect x="575.4" y="595.0" width="1.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="578.4" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.07%)</title><rect x="575.4" y="579.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="578.4" y="590.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="575.9" y="563.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="578.9" y="574.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.04%)</title><rect x="576.3" y="579.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="579.3" y="590.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="576.7" y="579.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="579.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.44%)</title><rect x="577.2" y="595.0" width="5.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="580.2" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (12 samples, 0.44%)</title><rect x="577.2" y="579.0" width="5.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="580.2" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.41%)</title><rect x="577.6" y="563.0" width="4.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="580.6" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.41%)</title><rect x="577.6" y="547.0" width="4.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="580.6" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (9 samples, 0.33%)</title><rect x="578.5" y="531.0" width="3.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="581.5" y="542.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.33%)</title><rect x="578.5" y="515.0" width="3.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="581.5" y="526.0"></text>
</g>
<g>
<title>futex_wait (9 samples, 0.33%)</title><rect x="578.5" y="499.0" width="3.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="581.5" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.22%)</title><rect x="578.9" y="483.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="581.9" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.04%)</title><rect x="578.9" y="467.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="581.9" y="478.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.04%)</title><rect x="578.9" y="451.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="581.9" y="462.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (4 samples, 0.15%)</title><rect x="579.4" y="467.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="582.4" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.15%)</title><rect x="579.4" y="451.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="582.4" y="462.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.04%)</title><rect x="580.7" y="435.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="583.7" y="446.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="581.1" y="467.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="584.1" y="478.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="581.1" y="451.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="584.1" y="462.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.04%)</title><rect x="581.5" y="483.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="584.5" y="494.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (1 samples, 0.04%)</title><rect x="582.0" y="483.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="585.0" y="494.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="582.4" y="595.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="585.4" y="606.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="582.4" y="579.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="585.4" y="590.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="582.4" y="563.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="585.4" y="574.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.07%)</title><rect x="582.8" y="611.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="585.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$54/953807481.run (249 samples, 9.17%)</title><rect x="583.7" y="691.0" width="108.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="586.7" y="702.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (249 samples, 9.17%)</title><rect x="583.7" y="675.0" width="108.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="586.7" y="686.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.putEntity (249 samples, 9.17%)</title><rect x="583.7" y="659.0" width="108.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="586.7" y="670.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.upsert (158 samples, 5.82%)</title><rect x="583.7" y="643.0" width="68.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="586.7" y="654.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (155 samples, 5.71%)</title><rect x="583.7" y="627.0" width="67.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="586.7" y="638.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (155 samples, 5.71%)</title><rect x="583.7" y="611.0" width="67.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="586.7" y="622.0">org/roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (144 samples, 5.30%)</title><rect x="584.1" y="595.0" width="62.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="587.1" y="606.0">Java_o..</text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="584.6" y="579.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="587.6" y="590.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.04%)</title><rect x="585.0" y="579.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="588.0" y="590.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="585.4" y="579.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="588.4" y="590.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.04%)</title><rect x="585.9" y="579.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="588.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="586.3" y="579.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="589.3" y="590.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (138 samples, 5.08%)</title><rect x="586.7" y="579.0" width="60.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="589.7" y="590.0">rocksd..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.07%)</title><rect x="587.2" y="563.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="590.2" y="574.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="588.0" y="563.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="591.0" y="574.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="588.5" y="563.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="591.5" y="574.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.07%)</title><rect x="588.9" y="563.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="591.9" y="574.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.18%)</title><rect x="589.8" y="563.0" width="2.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="592.8" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (3 samples, 0.11%)</title><rect x="590.7" y="547.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="593.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (126 samples, 4.64%)</title><rect x="592.0" y="563.0" width="54.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="595.0" y="574.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (125 samples, 4.60%)</title><rect x="592.4" y="547.0" width="54.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="595.4" y="558.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (124 samples, 4.57%)</title><rect x="592.4" y="531.0" width="53.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="595.4" y="542.0">rocks..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.04%)</title><rect x="592.4" y="515.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="595.4" y="526.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.04%)</title><rect x="592.8" y="515.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="595.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (2 samples, 0.07%)</title><rect x="593.3" y="515.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="596.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (113 samples, 4.16%)</title><rect x="594.1" y="515.0" width="49.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="597.1" y="526.0">rocks..</text>
</g>
<g>
<title>_init (2 samples, 0.07%)</title><rect x="594.1" y="499.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="597.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (110 samples, 4.05%)</title><rect x="595.0" y="499.0" width="47.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="598.0" y="510.0">rock..</text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="598.9" y="483.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="601.9" y="494.0"></text>
</g>
<g>
<title>__GI___sched_yield (9 samples, 0.33%)</title><rect x="599.3" y="483.0" width="4.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="602.3" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.18%)</title><rect x="601.1" y="467.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="604.1" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.18%)</title><rect x="601.1" y="451.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="604.1" y="462.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (5 samples, 0.18%)</title><rect x="601.1" y="435.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="604.1" y="446.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.18%)</title><rect x="601.1" y="419.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="604.1" y="430.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.18%)</title><rect x="601.1" y="403.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="604.1" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (5 samples, 0.18%)</title><rect x="601.1" y="387.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="604.1" y="398.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="603.3" y="483.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="606.3" y="494.0"></text>
</g>
<g>
<title>_init (2 samples, 0.07%)</title><rect x="603.7" y="483.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="606.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (3 samples, 0.11%)</title><rect x="604.6" y="483.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="607.6" y="494.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.07%)</title><rect x="605.0" y="467.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="608.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (21 samples, 0.77%)</title><rect x="605.9" y="483.0" width="9.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="608.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (20 samples, 0.74%)</title><rect x="606.3" y="467.0" width="8.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="609.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (19 samples, 0.70%)</title><rect x="606.7" y="451.0" width="8.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="609.7" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (2 samples, 0.07%)</title><rect x="606.7" y="435.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="609.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (17 samples, 0.63%)</title><rect x="607.6" y="435.0" width="7.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="610.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="608.0" y="419.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="611.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (15 samples, 0.55%)</title><rect x="608.5" y="419.0" width="6.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="611.5" y="430.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="608.5" y="403.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="611.5" y="414.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="608.9" y="403.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="611.9" y="414.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (13 samples, 0.48%)</title><rect x="609.3" y="403.0" width="5.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="612.3" y="414.0"></text>
</g>
<g>
<title>__write (13 samples, 0.48%)</title><rect x="609.3" y="387.0" width="5.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="612.3" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.41%)</title><rect x="610.2" y="371.0" width="4.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="613.2" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.41%)</title><rect x="610.2" y="355.0" width="4.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="613.2" y="366.0"></text>
</g>
<g>
<title>ksys_write (9 samples, 0.33%)</title><rect x="610.2" y="339.0" width="3.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="613.2" y="350.0"></text>
</g>
<g>
<title>__f_unlock_pos (1 samples, 0.04%)</title><rect x="610.2" y="323.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="613.2" y="334.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.04%)</title><rect x="610.6" y="323.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="613.6" y="334.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="610.6" y="307.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="613.6" y="318.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="610.6" y="291.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="613.6" y="302.0"></text>
</g>
<g>
<title>vfs_write (7 samples, 0.26%)</title><rect x="611.1" y="323.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="614.1" y="334.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.04%)</title><rect x="611.1" y="307.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="614.1" y="318.0"></text>
</g>
<g>
<title>new_sync_write (6 samples, 0.22%)</title><rect x="611.5" y="307.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="614.5" y="318.0"></text>
</g>
<g>
<title>generic_file_write_iter (6 samples, 0.22%)</title><rect x="611.5" y="291.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="614.5" y="302.0"></text>
</g>
<g>
<title>__generic_file_write_iter (6 samples, 0.22%)</title><rect x="611.5" y="275.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="614.5" y="286.0"></text>
</g>
<g>
<title>generic_perform_write (6 samples, 0.22%)</title><rect x="611.5" y="259.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="614.5" y="270.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.07%)</title><rect x="611.5" y="243.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="614.5" y="254.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.07%)</title><rect x="611.5" y="227.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="614.5" y="238.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.07%)</title><rect x="611.5" y="211.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="614.5" y="222.0"></text>
</g>
<g>
<title>shmem_getpage_gfp.isra.0 (3 samples, 0.11%)</title><rect x="612.4" y="243.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="615.4" y="254.0"></text>
</g>
<g>
<title>find_lock_entry (1 samples, 0.04%)</title><rect x="612.8" y="227.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="615.8" y="238.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.04%)</title><rect x="612.8" y="211.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="615.8" y="222.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.04%)</title><rect x="612.8" y="195.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="615.8" y="206.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.04%)</title><rect x="613.3" y="227.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="616.3" y="238.0"></text>
</g>
<g>
<title>shmem_write_end (1 samples, 0.04%)</title><rect x="613.7" y="243.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="616.7" y="254.0"></text>
</g>
<g>
<title>set_page_dirty (1 samples, 0.04%)</title><rect x="613.7" y="227.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="616.7" y="238.0"></text>
</g>
<g>
<title>page_mapping (1 samples, 0.04%)</title><rect x="613.7" y="211.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="616.7" y="222.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.07%)</title><rect x="614.1" y="339.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="617.1" y="350.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="614.6" y="323.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="617.6" y="334.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (2 samples, 0.07%)</title><rect x="615.0" y="483.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="618.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (32 samples, 1.18%)</title><rect x="615.9" y="483.0" width="13.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="618.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (32 samples, 1.18%)</title><rect x="615.9" y="467.0" width="13.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="618.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (29 samples, 1.07%)</title><rect x="616.7" y="451.0" width="12.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="619.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.04%)</title><rect x="616.7" y="435.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="619.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (28 samples, 1.03%)</title><rect x="617.2" y="435.0" width="12.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="620.2" y="446.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (2 samples, 0.07%)</title><rect x="618.5" y="419.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="621.5" y="430.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="619.3" y="419.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="622.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.04%)</title><rect x="619.8" y="419.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="622.8" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (20 samples, 0.74%)</title><rect x="620.2" y="419.0" width="8.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="623.2" y="430.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (18 samples, 0.66%)</title><rect x="621.1" y="403.0" width="7.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="624.1" y="414.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (14 samples, 0.52%)</title><rect x="621.9" y="387.0" width="6.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="624.9" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (7 samples, 0.26%)</title><rect x="624.6" y="371.0" width="3.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="627.6" y="382.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.22%)</title><rect x="625.0" y="355.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="628.0" y="366.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.07%)</title><rect x="626.7" y="339.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="629.7" y="350.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="627.6" y="371.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="630.6" y="382.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="627.6" y="355.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="630.6" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 0.07%)</title><rect x="628.0" y="387.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="631.0" y="398.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (1 samples, 0.04%)</title><rect x="628.9" y="419.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="631.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="629.3" y="451.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="632.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (8 samples, 0.29%)</title><rect x="629.8" y="483.0" width="3.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="632.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.04%)</title><rect x="629.8" y="467.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="632.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (1 samples, 0.04%)</title><rect x="629.8" y="451.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="632.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (7 samples, 0.26%)</title><rect x="630.2" y="467.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="633.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.22%)</title><rect x="630.6" y="451.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="633.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (6 samples, 0.22%)</title><rect x="630.6" y="435.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="633.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (5 samples, 0.18%)</title><rect x="630.6" y="419.0" width="2.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="633.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (4 samples, 0.15%)</title><rect x="631.1" y="403.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="634.1" y="414.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (4 samples, 0.15%)</title><rect x="631.1" y="387.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="634.1" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (3 samples, 0.11%)</title><rect x="631.1" y="371.0" width="1.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="634.1" y="382.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.04%)</title><rect x="632.4" y="371.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="635.4" y="382.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="632.4" y="355.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="635.4" y="366.0"></text>
</g>
<g>
<title>std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (1 samples, 0.04%)</title><rect x="632.8" y="419.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="635.8" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.11%)</title><rect x="633.2" y="483.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="636.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (3 samples, 0.11%)</title><rect x="634.6" y="483.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="637.6" y="494.0"></text>
</g>
<g>
<title>__GI___sched_yield (3 samples, 0.11%)</title><rect x="634.6" y="467.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="637.6" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.11%)</title><rect x="634.6" y="451.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="637.6" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.11%)</title><rect x="634.6" y="435.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="637.6" y="446.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (2 samples, 0.07%)</title><rect x="635.0" y="419.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="638.0" y="430.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.07%)</title><rect x="635.0" y="403.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="638.0" y="414.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.07%)</title><rect x="635.0" y="387.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="638.0" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (2 samples, 0.07%)</title><rect x="635.0" y="371.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="638.0" y="382.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.04%)</title><rect x="635.9" y="483.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="638.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.04%)</title><rect x="635.9" y="467.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="638.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (2 samples, 0.07%)</title><rect x="636.3" y="483.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="639.3" y="494.0"></text>
</g>
<g>
<title>syscall (13 samples, 0.48%)</title><rect x="637.2" y="483.0" width="5.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="640.2" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.41%)</title><rect x="638.0" y="467.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="641.0" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.41%)</title><rect x="638.0" y="451.0" width="4.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="641.0" y="462.0"></text>
</g>
<g>
<title>__se_sys_clock_gettime (2 samples, 0.07%)</title><rect x="640.2" y="435.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="643.2" y="446.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (2 samples, 0.07%)</title><rect x="640.2" y="419.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="643.2" y="430.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.07%)</title><rect x="640.2" y="403.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="643.2" y="414.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="640.6" y="387.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="643.6" y="398.0"></text>
</g>
<g>
<title>__x64_sys_clock_gettime (1 samples, 0.04%)</title><rect x="641.1" y="435.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="644.1" y="446.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="641.5" y="435.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="644.5" y="446.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.07%)</title><rect x="641.9" y="435.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="644.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1 samples, 0.04%)</title><rect x="642.8" y="499.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="645.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.11%)</title><rect x="643.2" y="515.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="646.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="643.2" y="499.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="646.2" y="510.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.07%)</title><rect x="643.7" y="499.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="646.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (2 samples, 0.07%)</title><rect x="644.5" y="515.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="647.5" y="526.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.04%)</title><rect x="645.4" y="515.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="648.4" y="526.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (1 samples, 0.04%)</title><rect x="645.9" y="515.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="648.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="646.3" y="531.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="649.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.18%)</title><rect x="646.7" y="595.0" width="2.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="649.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="646.7" y="579.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="649.7" y="590.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.04%)</title><rect x="646.7" y="563.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="649.7" y="574.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.04%)</title><rect x="647.2" y="579.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="650.2" y="590.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (3 samples, 0.11%)</title><rect x="647.6" y="579.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="650.6" y="590.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (3 samples, 0.11%)</title><rect x="647.6" y="563.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="650.6" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.11%)</title><rect x="648.9" y="595.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="651.9" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.11%)</title><rect x="648.9" y="579.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="651.9" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.11%)</title><rect x="648.9" y="563.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="651.9" y="574.0"></text>
</g>
<g>
<title>__se_sys_futex (3 samples, 0.11%)</title><rect x="648.9" y="547.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="651.9" y="558.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.11%)</title><rect x="648.9" y="531.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="651.9" y="542.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.11%)</title><rect x="648.9" y="515.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="651.9" y="526.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="648.9" y="499.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="651.9" y="510.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.07%)</title><rect x="649.3" y="499.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="652.3" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.07%)</title><rect x="649.3" y="483.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="652.3" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.07%)</title><rect x="649.3" y="467.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="652.3" y="478.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="650.2" y="595.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="653.2" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="650.2" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="653.2" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="650.2" y="563.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="653.2" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="650.2" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="653.2" y="558.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="650.2" y="531.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="653.2" y="542.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.04%)</title><rect x="650.6" y="595.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="653.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (3 samples, 0.11%)</title><rect x="651.1" y="627.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="654.1" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.07%)</title><rect x="651.5" y="611.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="654.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (91 samples, 3.35%)</title><rect x="652.4" y="643.0" width="39.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="655.4" y="654.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (91 samples, 3.35%)</title><rect x="652.4" y="627.0" width="39.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="655.4" y="638.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (91 samples, 3.35%)</title><rect x="652.4" y="611.0" width="39.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.4" y="622.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.07%)</title><rect x="652.4" y="595.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="655.4" y="606.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="652.8" y="579.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="655.8" y="590.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="652.8" y="563.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="655.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (86 samples, 3.17%)</title><rect x="653.2" y="595.0" width="37.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.2" y="606.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="653.7" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="656.7" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="653.7" y="563.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="656.7" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="653.7" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="656.7" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (84 samples, 3.09%)</title><rect x="654.1" y="579.0" width="36.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="657.1" y="590.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (84 samples, 3.09%)</title><rect x="654.1" y="563.0" width="36.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.1" y="574.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (83 samples, 3.06%)</title><rect x="654.5" y="547.0" width="36.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="657.5" y="558.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (83 samples, 3.06%)</title><rect x="654.5" y="531.0" width="36.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.5" y="542.0">one..</text>
</g>
<g>
<title>__send (83 samples, 3.06%)</title><rect x="654.5" y="515.0" width="36.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="657.5" y="526.0">__s..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="655.4" y="499.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="658.4" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (80 samples, 2.95%)</title><rect x="655.8" y="499.0" width="34.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="658.8" y="510.0">en..</text>
</g>
<g>
<title>do_syscall_64 (80 samples, 2.95%)</title><rect x="655.8" y="483.0" width="34.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="658.8" y="494.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (76 samples, 2.80%)</title><rect x="657.2" y="467.0" width="33.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="660.2" y="478.0">__..</text>
</g>
<g>
<title>__sys_sendto (76 samples, 2.80%)</title><rect x="657.2" y="451.0" width="33.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="660.2" y="462.0">__..</text>
</g>
<g>
<title>sock_sendmsg (72 samples, 2.65%)</title><rect x="658.0" y="435.0" width="31.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="661.0" y="446.0">so..</text>
</g>
<g>
<title>tcp_sendmsg (72 samples, 2.65%)</title><rect x="658.0" y="419.0" width="31.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="661.0" y="430.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (72 samples, 2.65%)</title><rect x="658.0" y="403.0" width="31.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="661.0" y="414.0">tc..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="658.5" y="387.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="661.5" y="398.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="658.5" y="371.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="661.5" y="382.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (59 samples, 2.17%)</title><rect x="658.9" y="387.0" width="25.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="661.9" y="398.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (59 samples, 2.17%)</title><rect x="658.9" y="371.0" width="25.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="661.9" y="382.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (55 samples, 2.03%)</title><rect x="659.8" y="355.0" width="23.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="662.8" y="366.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (54 samples, 1.99%)</title><rect x="659.8" y="339.0" width="23.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="662.8" y="350.0">_..</text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.04%)</title><rect x="660.2" y="323.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="663.2" y="334.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.07%)</title><rect x="660.6" y="323.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="663.6" y="334.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="661.1" y="307.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="664.1" y="318.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.04%)</title><rect x="661.1" y="291.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="664.1" y="302.0"></text>
</g>
<g>
<title>ip_output (50 samples, 1.84%)</title><rect x="661.5" y="323.0" width="21.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="664.5" y="334.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (49 samples, 1.80%)</title><rect x="661.5" y="307.0" width="21.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="664.5" y="318.0">i..</text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.18%)</title><rect x="662.4" y="291.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="665.4" y="302.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.18%)</title><rect x="662.4" y="275.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="665.4" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.15%)</title><rect x="662.8" y="259.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="665.8" y="270.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.15%)</title><rect x="662.8" y="243.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="665.8" y="254.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.15%)</title><rect x="662.8" y="227.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="665.8" y="238.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.07%)</title><rect x="663.7" y="211.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="666.7" y="222.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (42 samples, 1.55%)</title><rect x="664.5" y="291.0" width="18.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="667.5" y="302.0"></text>
</g>
<g>
<title>do_softirq.part.0 (41 samples, 1.51%)</title><rect x="664.5" y="275.0" width="17.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="667.5" y="286.0"></text>
</g>
<g>
<title>do_softirq_own_stack (40 samples, 1.47%)</title><rect x="665.0" y="259.0" width="17.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="668.0" y="270.0"></text>
</g>
<g>
<title>__softirqentry_text_start (40 samples, 1.47%)</title><rect x="665.0" y="243.0" width="17.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="668.0" y="254.0"></text>
</g>
<g>
<title>net_rx_action (40 samples, 1.47%)</title><rect x="665.0" y="227.0" width="17.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="668.0" y="238.0"></text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.07%)</title><rect x="665.8" y="211.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="668.8" y="222.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="666.7" y="211.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="669.7" y="222.0"></text>
</g>
<g>
<title>process_backlog (35 samples, 1.29%)</title><rect x="667.1" y="211.0" width="15.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="670.1" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (32 samples, 1.18%)</title><rect x="668.0" y="195.0" width="13.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="671.0" y="206.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.04%)</title><rect x="668.0" y="179.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="671.0" y="190.0"></text>
</g>
<g>
<title>ip_rcv (31 samples, 1.14%)</title><rect x="668.5" y="179.0" width="13.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="671.5" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (27 samples, 0.99%)</title><rect x="668.5" y="163.0" width="11.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="671.5" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (26 samples, 0.96%)</title><rect x="668.9" y="147.0" width="11.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="671.9" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (26 samples, 0.96%)</title><rect x="668.9" y="131.0" width="11.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="671.9" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (26 samples, 0.96%)</title><rect x="668.9" y="115.0" width="11.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="671.9" y="126.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.07%)</title><rect x="669.8" y="99.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="672.8" y="110.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.04%)</title><rect x="670.2" y="83.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="673.2" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (21 samples, 0.77%)</title><rect x="670.6" y="99.0" width="9.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="673.6" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (21 samples, 0.77%)</title><rect x="670.6" y="83.0" width="9.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="673.6" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.07%)</title><rect x="671.1" y="67.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="674.1" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (9 samples, 0.33%)</title><rect x="671.9" y="67.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="674.9" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (9 samples, 0.33%)</title><rect x="671.9" y="51.0" width="3.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="674.9" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.33%)</title><rect x="671.9" y="35.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="674.9" y="46.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.18%)</title><rect x="675.8" y="67.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="678.8" y="78.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="676.3" y="51.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="679.3" y="62.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="676.3" y="35.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="679.3" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.04%)</title><rect x="676.7" y="51.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="679.7" y="62.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.07%)</title><rect x="677.1" y="51.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="680.1" y="62.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="678.0" y="67.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="681.0" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.11%)</title><rect x="678.4" y="67.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="681.4" y="78.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.11%)</title><rect x="678.4" y="51.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="681.4" y="62.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="678.4" y="35.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="681.4" y="46.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.07%)</title><rect x="678.9" y="35.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="681.9" y="46.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.04%)</title><rect x="679.8" y="99.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="682.8" y="110.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.07%)</title><rect x="680.2" y="163.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="683.2" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.07%)</title><rect x="681.1" y="163.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="684.1" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.07%)</title><rect x="681.1" y="147.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="684.1" y="158.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.04%)</title><rect x="681.9" y="195.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="684.9" y="206.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.04%)</title><rect x="682.4" y="275.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="685.4" y="286.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.04%)</title><rect x="682.8" y="307.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="685.8" y="318.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="682.8" y="291.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="685.8" y="302.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="683.2" y="339.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="686.2" y="350.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="683.7" y="355.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="686.7" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="684.1" y="355.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="687.1" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="684.5" y="387.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="687.5" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.18%)</title><rect x="685.0" y="387.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="688.0" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.15%)</title><rect x="685.4" y="371.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="688.4" y="382.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.11%)</title><rect x="685.8" y="355.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="688.8" y="366.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.11%)</title><rect x="685.8" y="339.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="688.8" y="350.0"></text>
</g>
<g>
<title>__slab_alloc.isra.0 (1 samples, 0.04%)</title><rect x="686.7" y="323.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="689.7" y="334.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.18%)</title><rect x="687.1" y="387.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="690.1" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.18%)</title><rect x="687.1" y="371.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="690.1" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.15%)</title><rect x="687.6" y="355.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="690.6" y="366.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.07%)</title><rect x="689.3" y="435.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="692.3" y="446.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="689.3" y="419.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="692.3" y="430.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="689.7" y="403.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="692.7" y="414.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="690.2" y="467.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="693.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.11%)</title><rect x="690.6" y="595.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="693.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.11%)</title><rect x="690.6" y="579.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="693.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.11%)</title><rect x="690.6" y="563.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="693.6" y="574.0"></text>
</g>
<g>
<title>[NIO Worker #13 tid=1082470] (299 samples, 11.01%)</title><rect x="691.9" y="755.0" width="130.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="694.9" y="766.0">[NIO Worker #13 ..</text>
</g>
<g>
<title>[not_walkable_Java] (10 samples, 0.37%)</title><rect x="691.9" y="739.0" width="4.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="694.9" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (10 samples, 0.37%)</title><rect x="691.9" y="723.0" width="4.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="694.9" y="734.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.07%)</title><rect x="691.9" y="707.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="694.9" y="718.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.29%)</title><rect x="692.8" y="707.0" width="3.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="695.8" y="718.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.18%)</title><rect x="694.1" y="691.0" width="2.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="697.1" y="702.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.04%)</title><rect x="696.3" y="739.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="699.3" y="750.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.04%)</title><rect x="696.3" y="723.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="699.3" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (288 samples, 10.61%)</title><rect x="696.7" y="739.0" width="125.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="699.7" y="750.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (288 samples, 10.61%)</title><rect x="696.7" y="723.0" width="125.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.7" y="734.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (288 samples, 10.61%)</title><rect x="696.7" y="707.0" width="125.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.7" y="718.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.04%)</title><rect x="696.7" y="691.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="696.7" y="675.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (30 samples, 1.10%)</title><rect x="697.1" y="691.0" width="13.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="700.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (30 samples, 1.10%)</title><rect x="697.1" y="675.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="700.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (30 samples, 1.10%)</title><rect x="697.1" y="659.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (1 samples, 0.04%)</title><rect x="697.1" y="643.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="700.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.04%)</title><rect x="697.1" y="627.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="700.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.04%)</title><rect x="697.1" y="611.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="700.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (29 samples, 1.07%)</title><rect x="697.6" y="643.0" width="12.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (28 samples, 1.03%)</title><rect x="698.0" y="627.0" width="12.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.0" y="638.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.07%)</title><rect x="701.5" y="611.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="704.5" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.04%)</title><rect x="702.4" y="611.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="705.4" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="702.4" y="595.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="705.4" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="702.4" y="579.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="705.4" y="590.0"></text>
</g>
<g>
<title>__se_sys_futex (1 samples, 0.04%)</title><rect x="702.4" y="563.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="705.4" y="574.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="702.4" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="705.4" y="558.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="702.4" y="531.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="705.4" y="542.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.04%)</title><rect x="702.4" y="515.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="705.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (16 samples, 0.59%)</title><rect x="702.8" y="611.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="705.8" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (2 samples, 0.07%)</title><rect x="702.8" y="595.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="705.8" y="606.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.07%)</title><rect x="703.7" y="595.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="706.7" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="703.7" y="579.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="706.7" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.04%)</title><rect x="704.1" y="579.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="707.1" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="704.1" y="563.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="707.1" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="704.1" y="547.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="707.1" y="558.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="704.1" y="531.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="707.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.44%)</title><rect x="704.5" y="595.0" width="5.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="707.5" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (11 samples, 0.41%)</title><rect x="704.5" y="579.0" width="4.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="707.5" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.41%)</title><rect x="704.5" y="563.0" width="4.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="707.5" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.41%)</title><rect x="704.5" y="547.0" width="4.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="707.5" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (8 samples, 0.29%)</title><rect x="705.0" y="531.0" width="3.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="708.0" y="542.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.22%)</title><rect x="705.0" y="515.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="708.0" y="526.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.22%)</title><rect x="705.0" y="499.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="708.0" y="510.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.15%)</title><rect x="705.8" y="483.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="708.8" y="494.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.15%)</title><rect x="705.8" y="467.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="708.8" y="478.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.04%)</title><rect x="707.1" y="451.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="710.1" y="462.0"></text>
</g>
<g>
<title>get_timespec64 (2 samples, 0.07%)</title><rect x="707.6" y="515.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="710.6" y="526.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.04%)</title><rect x="708.0" y="499.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="711.0" y="510.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="708.0" y="483.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="711.0" y="494.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.07%)</title><rect x="708.4" y="531.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="711.4" y="542.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.04%)</title><rect x="708.9" y="515.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="711.9" y="526.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.04%)</title><rect x="709.3" y="579.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="712.3" y="590.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.04%)</title><rect x="709.7" y="611.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="712.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$54/953807481.run (257 samples, 9.47%)</title><rect x="710.2" y="691.0" width="111.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.2" y="702.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (257 samples, 9.47%)</title><rect x="710.2" y="675.0" width="111.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.2" y="686.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.putEntity (257 samples, 9.47%)</title><rect x="710.2" y="659.0" width="111.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.2" y="670.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.upsert (151 samples, 5.56%)</title><rect x="710.2" y="643.0" width="65.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.2" y="654.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (150 samples, 5.52%)</title><rect x="710.2" y="627.0" width="65.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="713.2" y="638.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (150 samples, 5.52%)</title><rect x="710.2" y="611.0" width="65.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="713.2" y="622.0">org/roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (140 samples, 5.16%)</title><rect x="710.2" y="595.0" width="60.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="713.2" y="606.0">Java_o..</text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="711.5" y="579.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="714.5" y="590.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.07%)</title><rect x="711.9" y="579.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="714.9" y="590.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.04%)</title><rect x="712.8" y="579.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="715.8" y="590.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (133 samples, 4.90%)</title><rect x="713.2" y="579.0" width="57.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="716.2" y="590.0">rocksd..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="713.7" y="563.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="716.7" y="574.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.11%)</title><rect x="714.1" y="563.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="717.1" y="574.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.07%)</title><rect x="714.5" y="547.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="717.5" y="558.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.07%)</title><rect x="715.4" y="563.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="718.4" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="715.8" y="547.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="718.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (125 samples, 4.60%)</title><rect x="716.3" y="563.0" width="54.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="719.3" y="574.0">rocks..</text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="716.7" y="547.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="719.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (123 samples, 4.53%)</title><rect x="717.1" y="547.0" width="53.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="720.1" y="558.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (121 samples, 4.46%)</title><rect x="717.6" y="531.0" width="52.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="720.6" y="542.0">rocks..</text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="717.6" y="515.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="720.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.04%)</title><rect x="718.0" y="515.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="721.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (108 samples, 3.98%)</title><rect x="718.4" y="515.0" width="47.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="721.4" y="526.0">rock..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="718.4" y="499.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="721.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (104 samples, 3.83%)</title><rect x="718.9" y="499.0" width="45.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="721.9" y="510.0">rock..</text>
</g>
<g>
<title>__GI___sched_yield (7 samples, 0.26%)</title><rect x="722.8" y="483.0" width="3.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="725.8" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.26%)</title><rect x="722.8" y="467.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="725.8" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.26%)</title><rect x="722.8" y="451.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="725.8" y="462.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (3 samples, 0.11%)</title><rect x="724.1" y="435.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="727.1" y="446.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.11%)</title><rect x="724.1" y="419.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="727.1" y="430.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.11%)</title><rect x="724.1" y="403.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="727.1" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (3 samples, 0.11%)</title><rect x="724.1" y="387.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="727.1" y="398.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="725.4" y="435.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="728.4" y="446.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="725.8" y="483.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="728.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (37 samples, 1.36%)</title><rect x="726.3" y="483.0" width="16.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="729.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (34 samples, 1.25%)</title><rect x="726.3" y="467.0" width="14.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="729.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (34 samples, 1.25%)</title><rect x="726.3" y="451.0" width="14.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="729.3" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (4 samples, 0.15%)</title><rect x="727.1" y="435.0" width="1.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="730.1" y="446.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (28 samples, 1.03%)</title><rect x="728.9" y="435.0" width="12.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="731.9" y="446.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.04%)</title><rect x="729.3" y="419.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="732.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="729.7" y="419.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="732.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="729.7" y="403.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="732.7" y="414.0"></text>
</g>
<g>
<title>fallocate (1 samples, 0.04%)</title><rect x="729.7" y="387.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="732.7" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="729.7" y="371.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="732.7" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="729.7" y="355.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="732.7" y="366.0"></text>
</g>
<g>
<title>__x64_sys_fallocate (1 samples, 0.04%)</title><rect x="729.7" y="339.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="732.7" y="350.0"></text>
</g>
<g>
<title>ksys_fallocate (1 samples, 0.04%)</title><rect x="729.7" y="323.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="732.7" y="334.0"></text>
</g>
<g>
<title>vfs_fallocate (1 samples, 0.04%)</title><rect x="729.7" y="307.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="732.7" y="318.0"></text>
</g>
<g>
<title>shmem_fallocate (1 samples, 0.04%)</title><rect x="729.7" y="291.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="732.7" y="302.0"></text>
</g>
<g>
<title>shmem_getpage_gfp.isra.0 (1 samples, 0.04%)</title><rect x="729.7" y="275.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="732.7" y="286.0"></text>
</g>
<g>
<title>shmem_alloc_and_acct_page (1 samples, 0.04%)</title><rect x="729.7" y="259.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="732.7" y="270.0"></text>
</g>
<g>
<title>shmem_alloc_page (1 samples, 0.04%)</title><rect x="729.7" y="243.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="732.7" y="254.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="729.7" y="227.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="732.7" y="238.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="729.7" y="211.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="732.7" y="222.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="729.7" y="195.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="732.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (25 samples, 0.92%)</title><rect x="730.2" y="419.0" width="10.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="733.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize() (1 samples, 0.04%)</title><rect x="730.6" y="403.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="733.6" y="414.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (23 samples, 0.85%)</title><rect x="731.0" y="403.0" width="10.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="734.0" y="414.0"></text>
</g>
<g>
<title>__write (22 samples, 0.81%)</title><rect x="731.5" y="387.0" width="9.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="734.5" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.81%)</title><rect x="731.5" y="371.0" width="9.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="734.5" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.81%)</title><rect x="731.5" y="355.0" width="9.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="734.5" y="366.0"></text>
</g>
<g>
<title>ksys_write (20 samples, 0.74%)</title><rect x="731.5" y="339.0" width="8.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="734.5" y="350.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.07%)</title><rect x="731.9" y="323.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="734.9" y="334.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="731.9" y="307.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="734.9" y="318.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="732.3" y="291.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="735.3" y="302.0"></text>
</g>
<g>
<title>vfs_write (17 samples, 0.63%)</title><rect x="732.8" y="323.0" width="7.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="735.8" y="334.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.04%)</title><rect x="732.8" y="307.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="735.8" y="318.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.04%)</title><rect x="733.2" y="307.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="736.2" y="318.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.07%)</title><rect x="733.6" y="307.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="736.6" y="318.0"></text>
</g>
<g>
<title>new_sync_write (13 samples, 0.48%)</title><rect x="734.5" y="307.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="737.5" y="318.0"></text>
</g>
<g>
<title>generic_file_write_iter (11 samples, 0.41%)</title><rect x="735.4" y="291.0" width="4.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="738.4" y="302.0"></text>
</g>
<g>
<title>__generic_file_write_iter (10 samples, 0.37%)</title><rect x="735.8" y="275.0" width="4.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="738.8" y="286.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.04%)</title><rect x="735.8" y="259.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="738.8" y="270.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.04%)</title><rect x="735.8" y="243.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="738.8" y="254.0"></text>
</g>
<g>
<title>generic_perform_write (9 samples, 0.33%)</title><rect x="736.3" y="259.0" width="3.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="739.3" y="270.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (1 samples, 0.04%)</title><rect x="736.3" y="243.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="739.3" y="254.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (2 samples, 0.07%)</title><rect x="736.7" y="243.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="739.7" y="254.0"></text>
</g>
<g>
<title>shmem_getpage_gfp.isra.0 (6 samples, 0.22%)</title><rect x="737.6" y="243.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="740.6" y="254.0"></text>
</g>
<g>
<title>find_lock_entry (5 samples, 0.18%)</title><rect x="738.0" y="227.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="741.0" y="238.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.18%)</title><rect x="738.0" y="211.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="741.0" y="222.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.11%)</title><rect x="738.9" y="195.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="741.9" y="206.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.07%)</title><rect x="739.3" y="179.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="742.3" y="190.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.07%)</title><rect x="740.2" y="339.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="743.2" y="350.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.07%)</title><rect x="740.2" y="323.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="743.2" y="334.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.04%)</title><rect x="741.0" y="467.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="744.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="741.5" y="467.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="744.5" y="478.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.04%)</title><rect x="741.9" y="467.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="744.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (2 samples, 0.07%)</title><rect x="742.3" y="483.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="745.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (2 samples, 0.07%)</title><rect x="743.2" y="483.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="746.2" y="494.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="743.6" y="467.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="746.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.04%)</title><rect x="744.1" y="483.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="747.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (28 samples, 1.03%)</title><rect x="744.5" y="483.0" width="12.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="747.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (28 samples, 1.03%)</title><rect x="744.5" y="467.0" width="12.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="747.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (28 samples, 1.03%)</title><rect x="744.5" y="451.0" width="12.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="747.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (28 samples, 1.03%)</title><rect x="744.5" y="435.0" width="12.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="747.5" y="446.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.04%)</title><rect x="744.9" y="419.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="747.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.04%)</title><rect x="745.4" y="419.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="748.4" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (25 samples, 0.92%)</title><rect x="745.8" y="419.0" width="10.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="748.8" y="430.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="746.7" y="403.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="749.7" y="414.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="747.1" y="403.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="750.1" y="414.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (21 samples, 0.77%)</title><rect x="747.6" y="403.0" width="9.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="750.6" y="414.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (19 samples, 0.70%)</title><rect x="748.4" y="387.0" width="8.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="751.4" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (8 samples, 0.29%)</title><rect x="753.2" y="371.0" width="3.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="756.2" y="382.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.11%)</title><rect x="753.6" y="355.0" width="1.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="756.6" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.15%)</title><rect x="754.9" y="355.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="757.9" y="366.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="755.8" y="339.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="758.8" y="350.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="756.2" y="339.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="759.2" y="350.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (3 samples, 0.11%)</title><rect x="756.7" y="483.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="759.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.11%)</title><rect x="756.7" y="467.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="759.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.11%)</title><rect x="756.7" y="451.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="759.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.11%)</title><rect x="756.7" y="435.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="759.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (3 samples, 0.11%)</title><rect x="756.7" y="419.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="759.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (3 samples, 0.11%)</title><rect x="756.7" y="403.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="759.7" y="414.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.11%)</title><rect x="756.7" y="387.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="759.7" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (3 samples, 0.11%)</title><rect x="756.7" y="371.0" width="1.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="759.7" y="382.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (2 samples, 0.07%)</title><rect x="757.1" y="355.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="760.1" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.07%)</title><rect x="757.1" y="339.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="760.1" y="350.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="757.1" y="323.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="760.1" y="334.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="757.6" y="323.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="760.6" y="334.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.07%)</title><rect x="758.0" y="483.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="761.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.04%)</title><rect x="758.9" y="483.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="761.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.04%)</title><rect x="758.9" y="467.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="761.9" y="478.0"></text>
</g>
<g>
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;) (1 samples, 0.04%)</title><rect x="758.9" y="451.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="761.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.04%)</title><rect x="759.3" y="483.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="762.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.04%)</title><rect x="759.7" y="483.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="762.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.04%)</title><rect x="759.7" y="467.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="762.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LaunchParallelMemTableWriters(rocksdb::WriteThread::WriteGroup*) (1 samples, 0.04%)</title><rect x="760.2" y="483.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="763.2" y="494.0"></text>
</g>
<g>
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base*) [clone .localalias] (1 samples, 0.04%)</title><rect x="760.6" y="483.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="763.6" y="494.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (1 samples, 0.04%)</title><rect x="761.0" y="483.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="764.0" y="494.0"></text>
</g>
<g>
<title>syscall (6 samples, 0.22%)</title><rect x="761.5" y="483.0" width="2.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="764.5" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.18%)</title><rect x="761.9" y="467.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="764.9" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.18%)</title><rect x="761.9" y="451.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="764.9" y="462.0"></text>
</g>
<g>
<title>__se_sys_clock_gettime (4 samples, 0.15%)</title><rect x="761.9" y="435.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="764.9" y="446.0"></text>
</g>
<g>
<title>clockid_to_kclock (1 samples, 0.04%)</title><rect x="761.9" y="419.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="764.9" y="430.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (3 samples, 0.11%)</title><rect x="762.3" y="419.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="765.3" y="430.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.07%)</title><rect x="762.8" y="403.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="765.8" y="414.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.07%)</title><rect x="762.8" y="387.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="765.8" y="398.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="763.6" y="435.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="766.6" y="446.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="763.6" y="419.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="766.6" y="430.0"></text>
</g>
<g>
<title>mntput (1 samples, 0.04%)</title><rect x="763.6" y="403.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="766.6" y="414.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="764.1" y="499.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="767.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.04%)</title><rect x="764.5" y="499.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="767.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.04%)</title><rect x="764.9" y="499.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="767.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.04%)</title><rect x="765.4" y="515.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="768.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.29%)</title><rect x="765.8" y="515.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="768.8" y="526.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="765.8" y="499.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="768.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.04%)</title><rect x="766.2" y="499.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="769.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (1 samples, 0.04%)</title><rect x="766.7" y="499.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="769.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.04%)</title><rect x="767.1" y="499.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="770.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="767.5" y="499.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="770.5" y="510.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.07%)</title><rect x="768.4" y="499.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="771.4" y="510.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.07%)</title><rect x="769.3" y="515.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="772.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="770.2" y="531.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="773.2" y="542.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="770.6" y="563.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="773.6" y="574.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.18%)</title><rect x="771.0" y="595.0" width="2.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="774.0" y="606.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (3 samples, 0.11%)</title><rect x="771.0" y="579.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="774.0" y="590.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (2 samples, 0.07%)</title><rect x="772.3" y="579.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="775.3" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.15%)</title><rect x="773.2" y="595.0" width="1.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="776.2" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.15%)</title><rect x="773.2" y="579.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="776.2" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.15%)</title><rect x="773.2" y="563.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="776.2" y="574.0"></text>
</g>
<g>
<title>__se_sys_futex (2 samples, 0.07%)</title><rect x="773.6" y="547.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="776.6" y="558.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.07%)</title><rect x="773.6" y="531.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="776.6" y="542.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.07%)</title><rect x="773.6" y="515.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="776.6" y="526.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="774.1" y="499.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="777.1" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="774.1" y="483.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="777.1" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="774.1" y="467.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="777.1" y="478.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="774.5" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="777.5" y="558.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.04%)</title><rect x="774.9" y="595.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="777.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (1 samples, 0.04%)</title><rect x="775.4" y="627.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="778.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (106 samples, 3.90%)</title><rect x="775.8" y="643.0" width="46.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="778.8" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (106 samples, 3.90%)</title><rect x="775.8" y="627.0" width="46.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="778.8" y="638.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (106 samples, 3.90%)</title><rect x="775.8" y="611.0" width="46.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="778.8" y="622.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.07%)</title><rect x="775.8" y="595.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="778.8" y="606.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="776.2" y="579.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="779.2" y="590.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="776.2" y="563.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="779.2" y="574.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="776.2" y="547.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="779.2" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (102 samples, 3.76%)</title><rect x="776.7" y="595.0" width="44.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.7" y="606.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.07%)</title><rect x="776.7" y="579.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="779.7" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.07%)</title><rect x="776.7" y="563.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="779.7" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="776.7" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="779.7" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="776.7" y="531.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="779.7" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="777.1" y="547.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="780.1" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="777.1" y="531.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.1" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (100 samples, 3.68%)</title><rect x="777.5" y="579.0" width="43.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="780.5" y="590.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (100 samples, 3.68%)</title><rect x="777.5" y="563.0" width="43.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="780.5" y="574.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.04%)</title><rect x="777.5" y="547.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.5" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (99 samples, 3.65%)</title><rect x="778.0" y="547.0" width="43.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="781.0" y="558.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (99 samples, 3.65%)</title><rect x="778.0" y="531.0" width="43.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.0" y="542.0">one/..</text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="778.0" y="515.0" width="1.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="781.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="778.0" y="499.0" width="1.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="781.0" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.11%)</title><rect x="778.0" y="483.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="781.0" y="494.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="778.0" y="467.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="781.0" y="478.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.07%)</title><rect x="778.4" y="467.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="781.4" y="478.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="778.8" y="451.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="781.8" y="462.0"></text>
</g>
<g>
<title>__send (1 samples, 0.04%)</title><rect x="779.3" y="483.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="782.3" y="494.0"></text>
</g>
<g>
<title>__send (95 samples, 3.50%)</title><rect x="779.7" y="515.0" width="41.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="782.7" y="526.0">__s..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="780.6" y="499.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="783.6" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (92 samples, 3.39%)</title><rect x="781.0" y="499.0" width="40.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="784.0" y="510.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (92 samples, 3.39%)</title><rect x="781.0" y="483.0" width="40.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="784.0" y="494.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (88 samples, 3.24%)</title><rect x="782.3" y="467.0" width="38.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="785.3" y="478.0">__x..</text>
</g>
<g>
<title>__sys_sendto (85 samples, 3.13%)</title><rect x="783.6" y="451.0" width="37.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="786.6" y="462.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (84 samples, 3.09%)</title><rect x="784.1" y="435.0" width="36.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="787.1" y="446.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.04%)</title><rect x="784.1" y="419.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="787.1" y="430.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.04%)</title><rect x="784.1" y="403.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="787.1" y="414.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="784.5" y="419.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="787.5" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (82 samples, 3.02%)</title><rect x="784.9" y="419.0" width="35.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="787.9" y="430.0">tcp..</text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="784.9" y="403.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="787.9" y="414.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="785.4" y="403.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="788.4" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="785.4" y="387.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="788.4" y="398.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.15%)</title><rect x="785.8" y="403.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="788.8" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="786.2" y="387.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="789.2" y="398.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="786.2" y="371.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="789.2" y="382.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.07%)</title><rect x="786.7" y="387.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="789.7" y="398.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (76 samples, 2.80%)</title><rect x="787.5" y="403.0" width="33.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="790.5" y="414.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (61 samples, 2.25%)</title><rect x="789.3" y="387.0" width="26.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="792.3" y="398.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (61 samples, 2.25%)</title><rect x="789.3" y="371.0" width="26.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="792.3" y="382.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (58 samples, 2.14%)</title><rect x="790.1" y="355.0" width="25.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="793.1" y="366.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (54 samples, 1.99%)</title><rect x="790.6" y="339.0" width="23.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="793.6" y="350.0">_..</text>
</g>
<g>
<title>ip_output (54 samples, 1.99%)</title><rect x="790.6" y="323.0" width="23.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="793.6" y="334.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (52 samples, 1.92%)</title><rect x="790.6" y="307.0" width="22.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="793.6" y="318.0">i..</text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.18%)</title><rect x="791.0" y="291.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="794.0" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="792.3" y="275.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="795.3" y="286.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.04%)</title><rect x="792.8" y="275.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="795.8" y="286.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.04%)</title><rect x="792.8" y="259.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="795.8" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (45 samples, 1.66%)</title><rect x="793.2" y="291.0" width="19.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="796.2" y="302.0"></text>
</g>
<g>
<title>do_softirq.part.0 (44 samples, 1.62%)</title><rect x="793.2" y="275.0" width="19.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="796.2" y="286.0"></text>
</g>
<g>
<title>do_softirq_own_stack (44 samples, 1.62%)</title><rect x="793.2" y="259.0" width="19.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="796.2" y="270.0"></text>
</g>
<g>
<title>__softirqentry_text_start (44 samples, 1.62%)</title><rect x="793.2" y="243.0" width="19.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="796.2" y="254.0"></text>
</g>
<g>
<title>net_rx_action (38 samples, 1.40%)</title><rect x="795.8" y="227.0" width="16.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="798.8" y="238.0"></text>
</g>
<g>
<title>process_backlog (37 samples, 1.36%)</title><rect x="796.2" y="211.0" width="16.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="799.2" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (37 samples, 1.36%)</title><rect x="796.2" y="195.0" width="16.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="799.2" y="206.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.04%)</title><rect x="796.2" y="179.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="799.2" y="190.0"></text>
</g>
<g>
<title>ip_rcv (36 samples, 1.33%)</title><rect x="796.7" y="179.0" width="15.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="799.7" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (36 samples, 1.33%)</title><rect x="796.7" y="163.0" width="15.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="799.7" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (35 samples, 1.29%)</title><rect x="797.1" y="147.0" width="15.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="800.1" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (35 samples, 1.29%)</title><rect x="797.1" y="131.0" width="15.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="800.1" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (35 samples, 1.29%)</title><rect x="797.1" y="115.0" width="15.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="800.1" y="126.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.07%)</title><rect x="797.5" y="99.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="800.5" y="110.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="798.4" y="99.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="801.4" y="110.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="798.4" y="83.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="801.4" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (31 samples, 1.14%)</title><rect x="798.8" y="99.0" width="13.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="801.8" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (31 samples, 1.14%)</title><rect x="798.8" y="83.0" width="13.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="801.8" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="799.3" y="67.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="802.3" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (15 samples, 0.55%)</title><rect x="799.7" y="67.0" width="6.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="802.7" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (15 samples, 0.55%)</title><rect x="799.7" y="51.0" width="6.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="802.7" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.55%)</title><rect x="799.7" y="35.0" width="6.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="802.7" y="46.0"></text>
</g>
<g>
<title>tcp_ack (13 samples, 0.48%)</title><rect x="806.2" y="67.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="809.2" y="78.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.11%)</title><rect x="808.0" y="51.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="811.0" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.07%)</title><rect x="808.0" y="35.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="811.0" y="46.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="808.8" y="35.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="811.8" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.11%)</title><rect x="809.3" y="51.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="812.3" y="62.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.04%)</title><rect x="810.6" y="51.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="813.6" y="62.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="811.0" y="51.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="814.0" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="811.4" y="51.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="814.4" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="811.4" y="35.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="814.4" y="46.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.04%)</title><rect x="811.9" y="67.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="814.9" y="78.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.04%)</title><rect x="812.3" y="275.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="815.3" y="286.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="812.7" y="291.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="815.7" y="302.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.04%)</title><rect x="812.7" y="275.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="815.7" y="286.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.07%)</title><rect x="813.2" y="307.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="816.2" y="318.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.07%)</title><rect x="813.2" y="291.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="816.2" y="302.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.04%)</title><rect x="814.1" y="339.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="817.1" y="350.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="814.5" y="339.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="817.5" y="350.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.04%)</title><rect x="814.9" y="339.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="817.9" y="350.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="815.4" y="355.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="818.4" y="366.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="815.4" y="339.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="818.4" y="350.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.07%)</title><rect x="815.8" y="387.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="818.8" y="398.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.07%)</title><rect x="815.8" y="371.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="818.8" y="382.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.07%)</title><rect x="815.8" y="355.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="818.8" y="366.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.15%)</title><rect x="816.7" y="387.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="819.7" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.15%)</title><rect x="816.7" y="371.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="819.7" y="382.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.07%)</title><rect x="817.1" y="355.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="820.1" y="366.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.07%)</title><rect x="817.1" y="339.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="820.1" y="350.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="818.0" y="355.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="821.0" y="366.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.07%)</title><rect x="818.4" y="387.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="821.4" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.11%)</title><rect x="819.3" y="387.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="822.3" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.07%)</title><rect x="819.7" y="371.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="822.7" y="382.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="820.6" y="467.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="823.6" y="478.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="820.6" y="451.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="823.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="821.0" y="595.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="824.0" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1 samples, 0.04%)</title><rect x="821.4" y="595.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.4" y="606.0"></text>
</g>
<g>
<title>[NIO Worker #14 tid=1082472] (267 samples, 9.83%)</title><rect x="821.9" y="755.0" width="116.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="824.9" y="766.0">[NIO Worker #1..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.07%)</title><rect x="821.9" y="739.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="824.9" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="821.9" y="723.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="824.9" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="822.3" y="723.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="825.3" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="822.3" y="707.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="825.3" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="822.3" y="691.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="825.3" y="702.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.04%)</title><rect x="822.3" y="675.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="825.3" y="686.0"></text>
</g>
<g>
<title>[not_walkable_Java] (9 samples, 0.33%)</title><rect x="822.7" y="739.0" width="4.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="825.7" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (9 samples, 0.33%)</title><rect x="822.7" y="723.0" width="4.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="825.7" y="734.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.11%)</title><rect x="822.7" y="707.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="825.7" y="718.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.22%)</title><rect x="824.0" y="707.0" width="2.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="827.0" y="718.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.22%)</title><rect x="824.0" y="691.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="827.0" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.run (256 samples, 9.43%)</title><rect x="826.7" y="739.0" width="111.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="829.7" y="750.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (256 samples, 9.43%)</title><rect x="826.7" y="723.0" width="111.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="829.7" y="734.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (256 samples, 9.43%)</title><rect x="826.7" y="707.0" width="111.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="829.7" y="718.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (23 samples, 0.85%)</title><rect x="827.1" y="691.0" width="10.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="830.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (23 samples, 0.85%)</title><rect x="827.1" y="675.0" width="10.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (23 samples, 0.85%)</title><rect x="827.1" y="659.0" width="10.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (23 samples, 0.85%)</title><rect x="827.1" y="643.0" width="10.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="830.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (23 samples, 0.85%)</title><rect x="827.1" y="627.0" width="10.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="830.1" y="638.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="830.1" y="611.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="833.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (15 samples, 0.55%)</title><rect x="830.6" y="611.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="833.6" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.26%)</title><rect x="830.6" y="595.0" width="3.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="833.6" y="606.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.04%)</title><rect x="831.9" y="579.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="834.9" y="590.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.07%)</title><rect x="832.3" y="579.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="835.3" y="590.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.07%)</title><rect x="832.3" y="563.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="835.3" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.04%)</title><rect x="833.2" y="579.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="836.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.29%)</title><rect x="833.6" y="595.0" width="3.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="836.6" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (8 samples, 0.29%)</title><rect x="833.6" y="579.0" width="3.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="836.6" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.26%)</title><rect x="834.0" y="563.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="837.0" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.26%)</title><rect x="834.0" y="547.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="837.0" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (6 samples, 0.22%)</title><rect x="834.5" y="531.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="837.5" y="542.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.22%)</title><rect x="834.5" y="515.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="837.5" y="526.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.22%)</title><rect x="834.5" y="499.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="837.5" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.11%)</title><rect x="835.3" y="483.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="838.3" y="494.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.04%)</title><rect x="835.8" y="467.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="838.8" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="835.8" y="451.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="838.8" y="462.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="836.2" y="467.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="839.2" y="478.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="836.2" y="451.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="839.2" y="462.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.04%)</title><rect x="836.7" y="483.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="839.7" y="494.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.04%)</title><rect x="836.7" y="467.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="839.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$54/953807481.run (232 samples, 8.55%)</title><rect x="837.1" y="691.0" width="100.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="840.1" y="702.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (232 samples, 8.55%)</title><rect x="837.1" y="675.0" width="100.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="840.1" y="686.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.putEntity (232 samples, 8.55%)</title><rect x="837.1" y="659.0" width="100.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="840.1" y="670.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.upsert (132 samples, 4.86%)</title><rect x="837.1" y="643.0" width="57.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="840.1" y="654.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (132 samples, 4.86%)</title><rect x="837.1" y="627.0" width="57.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="840.1" y="638.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (132 samples, 4.86%)</title><rect x="837.1" y="611.0" width="57.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="840.1" y="622.0">org/ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (124 samples, 4.57%)</title><rect x="837.1" y="595.0" width="53.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="840.1" y="606.0">Java_..</text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="838.0" y="579.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="841.0" y="590.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.04%)</title><rect x="838.4" y="579.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="841.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="838.8" y="579.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="841.8" y="590.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (119 samples, 4.38%)</title><rect x="839.3" y="579.0" width="51.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="842.3" y="590.0">rocks..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="839.7" y="563.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="842.7" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="840.1" y="563.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="843.1" y="574.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="840.6" y="563.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="843.6" y="574.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.07%)</title><rect x="841.0" y="563.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="844.0" y="574.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="841.0" y="547.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="844.0" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="841.4" y="547.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="844.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (113 samples, 4.16%)</title><rect x="841.9" y="563.0" width="49.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="844.9" y="574.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (112 samples, 4.13%)</title><rect x="842.3" y="547.0" width="48.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="845.3" y="558.0">rock..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (107 samples, 3.94%)</title><rect x="842.7" y="531.0" width="46.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="845.7" y="542.0">rock..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.04%)</title><rect x="842.7" y="515.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="845.7" y="526.0"></text>
</g>
<g>
<title>_init (2 samples, 0.07%)</title><rect x="843.2" y="515.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="846.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (91 samples, 3.35%)</title><rect x="844.0" y="515.0" width="39.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="847.0" y="526.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (88 samples, 3.24%)</title><rect x="844.0" y="499.0" width="38.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="847.0" y="510.0">roc..</text>
</g>
<g>
<title>__GI___sched_yield (10 samples, 0.37%)</title><rect x="847.1" y="483.0" width="4.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="850.1" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.26%)</title><rect x="848.4" y="467.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="851.4" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.26%)</title><rect x="848.4" y="451.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="851.4" y="462.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (3 samples, 0.11%)</title><rect x="850.1" y="435.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="853.1" y="446.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.11%)</title><rect x="850.1" y="419.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="853.1" y="430.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.11%)</title><rect x="850.1" y="403.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="853.1" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (3 samples, 0.11%)</title><rect x="850.1" y="387.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="853.1" y="398.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="851.4" y="483.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="854.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.04%)</title><rect x="852.3" y="483.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="855.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (30 samples, 1.10%)</title><rect x="852.7" y="483.0" width="13.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="855.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (29 samples, 1.07%)</title><rect x="852.7" y="467.0" width="12.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="855.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (29 samples, 1.07%)</title><rect x="852.7" y="451.0" width="12.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="855.7" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="852.7" y="435.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="855.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (28 samples, 1.03%)</title><rect x="853.2" y="435.0" width="12.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="856.2" y="446.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.04%)</title><rect x="853.6" y="419.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="856.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Flush() (1 samples, 0.04%)</title><rect x="854.0" y="419.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="857.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="854.5" y="419.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="857.5" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="854.9" y="419.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="857.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (23 samples, 0.85%)</title><rect x="855.3" y="419.0" width="10.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="858.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (23 samples, 0.85%)</title><rect x="855.3" y="403.0" width="10.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="858.3" y="414.0"></text>
</g>
<g>
<title>__write (22 samples, 0.81%)</title><rect x="855.8" y="387.0" width="9.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="858.8" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.74%)</title><rect x="856.6" y="371.0" width="8.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="859.6" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.74%)</title><rect x="856.6" y="355.0" width="8.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="859.6" y="366.0"></text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.07%)</title><rect x="857.1" y="339.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="860.1" y="350.0"></text>
</g>
<g>
<title>ksys_write (14 samples, 0.52%)</title><rect x="857.9" y="339.0" width="6.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="860.9" y="350.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.07%)</title><rect x="858.4" y="323.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="861.4" y="334.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="858.4" y="307.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="861.4" y="318.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="858.8" y="307.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="861.8" y="318.0"></text>
</g>
<g>
<title>vfs_write (11 samples, 0.41%)</title><rect x="859.3" y="323.0" width="4.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="862.3" y="334.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.07%)</title><rect x="859.3" y="307.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="862.3" y="318.0"></text>
</g>
<g>
<title>new_sync_write (9 samples, 0.33%)</title><rect x="860.1" y="307.0" width="3.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="863.1" y="318.0"></text>
</g>
<g>
<title>generic_file_write_iter (8 samples, 0.29%)</title><rect x="860.1" y="291.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="863.1" y="302.0"></text>
</g>
<g>
<title>__generic_file_write_iter (8 samples, 0.29%)</title><rect x="860.1" y="275.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="863.1" y="286.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.04%)</title><rect x="860.6" y="259.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="863.6" y="270.0"></text>
</g>
<g>
<title>generic_perform_write (6 samples, 0.22%)</title><rect x="861.0" y="259.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="864.0" y="270.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.07%)</title><rect x="861.0" y="243.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="864.0" y="254.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.04%)</title><rect x="861.9" y="243.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="864.9" y="254.0"></text>
</g>
<g>
<title>shmem_getpage_gfp.isra.0 (1 samples, 0.04%)</title><rect x="862.3" y="243.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="865.3" y="254.0"></text>
</g>
<g>
<title>find_lock_entry (1 samples, 0.04%)</title><rect x="862.3" y="227.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="865.3" y="238.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.04%)</title><rect x="862.3" y="211.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="865.3" y="222.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.04%)</title><rect x="862.3" y="195.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="865.3" y="206.0"></text>
</g>
<g>
<title>shmem_write_end (2 samples, 0.07%)</title><rect x="862.7" y="243.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="865.7" y="254.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.04%)</title><rect x="863.2" y="227.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="866.2" y="238.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.04%)</title><rect x="863.6" y="291.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="866.6" y="302.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (3 samples, 0.11%)</title><rect x="864.0" y="339.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="867.0" y="350.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.11%)</title><rect x="864.0" y="323.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="867.0" y="334.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="865.3" y="467.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="868.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (1 samples, 0.04%)</title><rect x="865.8" y="483.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="868.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (21 samples, 0.77%)</title><rect x="866.2" y="483.0" width="9.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="869.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="866.2" y="467.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="869.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (20 samples, 0.74%)</title><rect x="866.6" y="467.0" width="8.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="869.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (19 samples, 0.70%)</title><rect x="867.1" y="451.0" width="8.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="870.1" y="462.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.04%)</title><rect x="867.1" y="435.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="870.1" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (18 samples, 0.66%)</title><rect x="867.5" y="435.0" width="7.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="870.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (17 samples, 0.63%)</title><rect x="867.9" y="419.0" width="7.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="870.9" y="430.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="867.9" y="403.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="870.9" y="414.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.04%)</title><rect x="867.9" y="387.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="870.9" y="398.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (15 samples, 0.55%)</title><rect x="868.4" y="403.0" width="6.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="871.4" y="414.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (14 samples, 0.52%)</title><rect x="868.8" y="387.0" width="6.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="871.8" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (6 samples, 0.22%)</title><rect x="872.3" y="371.0" width="2.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="875.3" y="382.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="872.3" y="355.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="875.3" y="366.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="872.7" y="355.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="875.7" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.15%)</title><rect x="873.2" y="355.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="876.2" y="366.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="874.0" y="339.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="877.0" y="350.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="874.5" y="339.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="877.5" y="350.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.04%)</title><rect x="874.9" y="403.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="877.9" y="414.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="874.9" y="387.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="877.9" y="398.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (5 samples, 0.18%)</title><rect x="875.3" y="483.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="878.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (5 samples, 0.18%)</title><rect x="875.3" y="467.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="878.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.18%)</title><rect x="875.3" y="451.0" width="2.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="878.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (5 samples, 0.18%)</title><rect x="875.3" y="435.0" width="2.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="878.3" y="446.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="875.3" y="419.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="878.3" y="430.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="875.8" y="419.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="878.8" y="430.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.04%)</title><rect x="876.2" y="419.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="879.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.07%)</title><rect x="876.6" y="419.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="879.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (2 samples, 0.07%)</title><rect x="876.6" y="403.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="879.6" y="414.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.07%)</title><rect x="876.6" y="387.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="879.6" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="877.1" y="371.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="880.1" y="382.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.07%)</title><rect x="877.5" y="483.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="880.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.07%)</title><rect x="878.4" y="483.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="881.4" y="494.0"></text>
</g>
<g>
<title>__GI___sched_yield (1 samples, 0.04%)</title><rect x="878.4" y="467.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="881.4" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="878.4" y="451.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="881.4" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="878.4" y="435.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="881.4" y="446.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.04%)</title><rect x="878.4" y="419.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="881.4" y="430.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="878.4" y="403.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="881.4" y="414.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="878.4" y="387.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="881.4" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.04%)</title><rect x="878.4" y="371.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="881.4" y="382.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.04%)</title><rect x="878.8" y="467.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="881.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.07%)</title><rect x="879.2" y="483.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="882.2" y="494.0"></text>
</g>
<g>
<title>syscall (5 samples, 0.18%)</title><rect x="880.1" y="483.0" width="2.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="883.1" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.18%)</title><rect x="880.1" y="467.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="883.1" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.18%)</title><rect x="880.1" y="451.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="883.1" y="462.0"></text>
</g>
<g>
<title>__se_sys_clock_gettime (1 samples, 0.04%)</title><rect x="881.4" y="435.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="884.4" y="446.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (1 samples, 0.04%)</title><rect x="881.4" y="419.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="884.4" y="430.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.04%)</title><rect x="881.4" y="403.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="884.4" y="414.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="881.9" y="435.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="884.9" y="446.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="881.9" y="419.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="884.9" y="430.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.04%)</title><rect x="881.9" y="403.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="884.9" y="414.0"></text>
</g>
<g>
<title>dput (1 samples, 0.04%)</title><rect x="881.9" y="387.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="884.9" y="398.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1 samples, 0.04%)</title><rect x="882.3" y="499.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="885.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.04%)</title><rect x="882.7" y="499.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="885.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.04%)</title><rect x="883.2" y="499.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="886.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.29%)</title><rect x="883.6" y="515.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="886.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.04%)</title><rect x="883.6" y="499.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="886.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.15%)</title><rect x="884.0" y="499.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="887.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, int) (1 samples, 0.04%)</title><rect x="884.9" y="483.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="887.9" y="494.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.04%)</title><rect x="885.3" y="483.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="888.3" y="494.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (3 samples, 0.11%)</title><rect x="885.8" y="499.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="888.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="887.1" y="515.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="890.1" y="526.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (4 samples, 0.15%)</title><rect x="887.5" y="515.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="890.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="889.2" y="531.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="892.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.07%)</title><rect x="890.1" y="531.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="893.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="891.0" y="595.0" width="1.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="894.0" y="606.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.04%)</title><rect x="891.0" y="579.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="894.0" y="590.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.04%)</title><rect x="891.4" y="579.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="894.4" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="891.4" y="563.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="894.4" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="891.4" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="894.4" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (1 samples, 0.04%)</title><rect x="891.4" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="894.4" y="542.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="891.4" y="515.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="894.4" y="526.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="891.4" y="499.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="894.4" y="510.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.04%)</title><rect x="891.4" y="483.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="894.4" y="494.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="891.4" y="467.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="894.4" y="478.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="891.8" y="579.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="894.8" y="590.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.04%)</title><rect x="892.3" y="579.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="895.3" y="590.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="892.3" y="563.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="895.3" y="574.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="892.7" y="595.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="895.7" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.04%)</title><rect x="893.6" y="595.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="896.6" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="893.6" y="579.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="896.6" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="893.6" y="563.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="896.6" y="574.0"></text>
</g>
<g>
<title>__se_sys_futex (1 samples, 0.04%)</title><rect x="893.6" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="896.6" y="558.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="893.6" y="531.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="896.6" y="542.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="893.6" y="515.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="896.6" y="526.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="893.6" y="499.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="896.6" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="893.6" y="483.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="896.6" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="893.6" y="467.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="896.6" y="478.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.04%)</title><rect x="894.0" y="595.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="897.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (100 samples, 3.68%)</title><rect x="894.5" y="643.0" width="43.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="897.5" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (100 samples, 3.68%)</title><rect x="894.5" y="627.0" width="43.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.5" y="638.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (100 samples, 3.68%)</title><rect x="894.5" y="611.0" width="43.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="897.5" y="622.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.07%)</title><rect x="896.2" y="595.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="899.2" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="897.1" y="595.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="900.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (93 samples, 3.43%)</title><rect x="897.5" y="595.0" width="40.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="900.5" y="606.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (93 samples, 3.43%)</title><rect x="897.5" y="579.0" width="40.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="900.5" y="590.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (93 samples, 3.43%)</title><rect x="897.5" y="563.0" width="40.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="900.5" y="574.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (93 samples, 3.43%)</title><rect x="897.5" y="547.0" width="40.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="900.5" y="558.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (93 samples, 3.43%)</title><rect x="897.5" y="531.0" width="40.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="900.5" y="542.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.07%)</title><rect x="897.9" y="515.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="900.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.22%)</title><rect x="898.8" y="515.0" width="2.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="901.8" y="526.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.22%)</title><rect x="898.8" y="499.0" width="2.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="901.8" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.18%)</title><rect x="898.8" y="483.0" width="2.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="901.8" y="494.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="899.2" y="467.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="902.2" y="478.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.11%)</title><rect x="899.7" y="467.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="902.7" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.07%)</title><rect x="900.1" y="451.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="903.1" y="462.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="901.0" y="483.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="904.0" y="494.0"></text>
</g>
<g>
<title>__send (84 samples, 3.09%)</title><rect x="901.4" y="515.0" width="36.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="904.4" y="526.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (82 samples, 3.02%)</title><rect x="902.3" y="499.0" width="35.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="905.3" y="510.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (82 samples, 3.02%)</title><rect x="902.3" y="483.0" width="35.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="905.3" y="494.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (79 samples, 2.91%)</title><rect x="903.1" y="467.0" width="34.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="906.1" y="478.0">__..</text>
</g>
<g>
<title>__sys_sendto (79 samples, 2.91%)</title><rect x="903.1" y="451.0" width="34.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="906.1" y="462.0">__..</text>
</g>
<g>
<title>sock_sendmsg (77 samples, 2.84%)</title><rect x="903.6" y="435.0" width="33.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="906.6" y="446.0">so..</text>
</g>
<g>
<title>tcp_sendmsg (77 samples, 2.84%)</title><rect x="903.6" y="419.0" width="33.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="906.6" y="430.0">tc..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="903.6" y="403.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="906.6" y="414.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="904.0" y="403.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="907.0" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="904.0" y="387.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="907.0" y="398.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (75 samples, 2.76%)</title><rect x="904.5" y="403.0" width="32.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="907.5" y="414.0">tc..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.11%)</title><rect x="907.1" y="387.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="910.1" y="398.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.11%)</title><rect x="907.1" y="371.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="910.1" y="382.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (57 samples, 2.10%)</title><rect x="908.4" y="387.0" width="24.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="911.4" y="398.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (56 samples, 2.06%)</title><rect x="908.8" y="371.0" width="24.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="911.8" y="382.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (52 samples, 1.92%)</title><rect x="909.2" y="355.0" width="22.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="912.2" y="366.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (44 samples, 1.62%)</title><rect x="910.5" y="339.0" width="19.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="913.5" y="350.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.04%)</title><rect x="910.5" y="323.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="913.5" y="334.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.04%)</title><rect x="911.0" y="323.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="914.0" y="334.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="911.0" y="307.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="914.0" y="318.0"></text>
</g>
<g>
<title>ip_output (42 samples, 1.55%)</title><rect x="911.4" y="323.0" width="18.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="914.4" y="334.0"></text>
</g>
<g>
<title>ip_finish_output2 (40 samples, 1.47%)</title><rect x="911.8" y="307.0" width="17.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="914.8" y="318.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.29%)</title><rect x="911.8" y="291.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="914.8" y="302.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.18%)</title><rect x="912.7" y="275.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="915.7" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.18%)</title><rect x="912.7" y="259.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="915.7" y="270.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="912.7" y="243.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="915.7" y="254.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.15%)</title><rect x="913.1" y="243.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="916.1" y="254.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.15%)</title><rect x="913.1" y="227.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="916.1" y="238.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="913.1" y="211.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="916.1" y="222.0"></text>
</g>
<g>
<title>ktime_get_with_offset (3 samples, 0.11%)</title><rect x="913.6" y="211.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="916.6" y="222.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.11%)</title><rect x="913.6" y="195.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="916.6" y="206.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.04%)</title><rect x="914.9" y="275.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="917.9" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (31 samples, 1.14%)</title><rect x="915.3" y="291.0" width="13.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="918.3" y="302.0"></text>
</g>
<g>
<title>do_softirq.part.0 (31 samples, 1.14%)</title><rect x="915.3" y="275.0" width="13.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="918.3" y="286.0"></text>
</g>
<g>
<title>do_softirq_own_stack (30 samples, 1.10%)</title><rect x="915.8" y="259.0" width="13.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="918.8" y="270.0"></text>
</g>
<g>
<title>__softirqentry_text_start (30 samples, 1.10%)</title><rect x="915.8" y="243.0" width="13.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="918.8" y="254.0"></text>
</g>
<g>
<title>net_rx_action (30 samples, 1.10%)</title><rect x="915.8" y="227.0" width="13.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="918.8" y="238.0"></text>
</g>
<g>
<title>process_backlog (29 samples, 1.07%)</title><rect x="916.2" y="211.0" width="12.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="919.2" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (28 samples, 1.03%)</title><rect x="916.6" y="195.0" width="12.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="919.6" y="206.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.07%)</title><rect x="916.6" y="179.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="919.6" y="190.0"></text>
</g>
<g>
<title>ip_rcv (26 samples, 0.96%)</title><rect x="917.5" y="179.0" width="11.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="920.5" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (23 samples, 0.85%)</title><rect x="917.9" y="163.0" width="10.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="920.9" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (23 samples, 0.85%)</title><rect x="917.9" y="147.0" width="10.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="920.9" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (23 samples, 0.85%)</title><rect x="917.9" y="131.0" width="10.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="920.9" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (23 samples, 0.85%)</title><rect x="917.9" y="115.0" width="10.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="920.9" y="126.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.11%)</title><rect x="918.4" y="99.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="921.4" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.04%)</title><rect x="919.7" y="99.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="922.7" y="110.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.04%)</title><rect x="919.7" y="83.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="922.7" y="94.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.07%)</title><rect x="920.1" y="99.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="923.1" y="110.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="920.1" y="83.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="923.1" y="94.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.04%)</title><rect x="920.5" y="83.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="923.5" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (16 samples, 0.59%)</title><rect x="921.0" y="99.0" width="6.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="924.0" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (16 samples, 0.59%)</title><rect x="921.0" y="83.0" width="6.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="924.0" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="921.4" y="67.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="924.4" y="78.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="921.4" y="51.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="924.4" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="921.4" y="35.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="924.4" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (7 samples, 0.26%)</title><rect x="921.8" y="67.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="924.8" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.26%)</title><rect x="921.8" y="51.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="924.8" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.22%)</title><rect x="922.3" y="35.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="925.3" y="46.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.22%)</title><rect x="924.9" y="67.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="927.9" y="78.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.07%)</title><rect x="925.3" y="51.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="928.3" y="62.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.07%)</title><rect x="925.3" y="35.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="928.3" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="926.2" y="51.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="929.2" y="62.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.04%)</title><rect x="926.6" y="51.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="929.6" y="62.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.04%)</title><rect x="927.1" y="51.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="930.1" y="62.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="927.5" y="67.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="930.5" y="78.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.07%)</title><rect x="927.9" y="163.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="930.9" y="174.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="928.8" y="291.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="931.8" y="302.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.04%)</title><rect x="929.2" y="307.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="932.2" y="318.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="929.2" y="291.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="932.2" y="302.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.11%)</title><rect x="929.7" y="339.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="932.7" y="350.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.04%)</title><rect x="931.0" y="339.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="934.0" y="350.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.04%)</title><rect x="931.4" y="339.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="934.4" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.11%)</title><rect x="931.8" y="355.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="934.8" y="366.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.04%)</title><rect x="931.8" y="339.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="934.8" y="350.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.0 (1 samples, 0.04%)</title><rect x="932.3" y="339.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="935.3" y="350.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="932.7" y="339.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="935.7" y="350.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="933.1" y="387.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="936.1" y="398.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.04%)</title><rect x="933.1" y="371.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="936.1" y="382.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.07%)</title><rect x="933.6" y="387.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="936.6" y="398.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.07%)</title><rect x="933.6" y="371.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="936.6" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.11%)</title><rect x="934.4" y="387.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="937.4" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.11%)</title><rect x="934.4" y="371.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="937.4" y="382.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.04%)</title><rect x="934.9" y="355.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="937.9" y="366.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="934.9" y="339.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="937.9" y="350.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="934.9" y="323.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="937.9" y="334.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="935.3" y="355.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="938.3" y="366.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.04%)</title><rect x="935.7" y="387.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="938.7" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="936.2" y="387.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="939.2" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="936.2" y="371.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="939.2" y="382.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="936.6" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="939.6" y="398.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="937.0" y="435.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="940.0" y="446.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="937.0" y="419.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="940.0" y="430.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="937.0" y="403.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="940.0" y="414.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="937.5" y="467.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="940.5" y="478.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="937.5" y="451.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="940.5" y="462.0"></text>
</g>
<g>
<title>[NIO Worker #15 tid=1082471] (270 samples, 9.94%)</title><rect x="937.9" y="755.0" width="117.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="940.9" y="766.0">[NIO Worker #1..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="937.9" y="739.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="940.9" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="937.9" y="723.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="940.9" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="937.9" y="707.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="940.9" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="937.9" y="691.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="940.9" y="702.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.04%)</title><rect x="937.9" y="675.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="940.9" y="686.0"></text>
</g>
<g>
<title>[not_walkable_Java] (8 samples, 0.29%)</title><rect x="938.4" y="739.0" width="3.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="941.4" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (8 samples, 0.29%)</title><rect x="938.4" y="723.0" width="3.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="941.4" y="734.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.29%)</title><rect x="938.4" y="707.0" width="3.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="941.4" y="718.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.11%)</title><rect x="940.5" y="691.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="943.5" y="702.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.04%)</title><rect x="941.8" y="739.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="944.8" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="941.8" y="723.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="944.8" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (260 samples, 9.58%)</title><rect x="942.3" y="739.0" width="113.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="945.3" y="750.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (260 samples, 9.58%)</title><rect x="942.3" y="723.0" width="113.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="945.3" y="734.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (260 samples, 9.58%)</title><rect x="942.3" y="707.0" width="113.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="945.3" y="718.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (30 samples, 1.10%)</title><rect x="942.7" y="691.0" width="13.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="945.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (30 samples, 1.10%)</title><rect x="942.7" y="675.0" width="13.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="945.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (30 samples, 1.10%)</title><rect x="942.7" y="659.0" width="13.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="945.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (2 samples, 0.07%)</title><rect x="942.7" y="643.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="945.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.07%)</title><rect x="942.7" y="627.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="945.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (28 samples, 1.03%)</title><rect x="943.6" y="643.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="946.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (26 samples, 0.96%)</title><rect x="944.4" y="627.0" width="11.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="947.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (21 samples, 0.77%)</title><rect x="946.6" y="611.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="949.6" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (8 samples, 0.29%)</title><rect x="947.0" y="595.0" width="3.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="950.0" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.15%)</title><rect x="947.5" y="579.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="950.5" y="590.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="948.8" y="563.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="951.8" y="574.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="949.2" y="579.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="952.2" y="590.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="949.7" y="579.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="952.7" y="590.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.04%)</title><rect x="950.1" y="579.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="953.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.44%)</title><rect x="950.5" y="595.0" width="5.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="953.5" y="606.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.04%)</title><rect x="950.5" y="579.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="953.5" y="590.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.04%)</title><rect x="951.0" y="579.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="954.0" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (9 samples, 0.33%)</title><rect x="951.4" y="579.0" width="3.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="954.4" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.29%)</title><rect x="951.8" y="563.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="954.8" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.29%)</title><rect x="951.8" y="547.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="954.8" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (4 samples, 0.15%)</title><rect x="952.7" y="531.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="955.7" y="542.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.15%)</title><rect x="952.7" y="515.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="955.7" y="526.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.15%)</title><rect x="952.7" y="499.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="955.7" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="953.1" y="483.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="956.1" y="494.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.04%)</title><rect x="953.1" y="467.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="956.1" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="953.1" y="451.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="956.1" y="462.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.04%)</title><rect x="953.6" y="483.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="956.6" y="494.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (1 samples, 0.04%)</title><rect x="954.0" y="483.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="957.0" y="494.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="954.4" y="531.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="957.4" y="542.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="954.9" y="531.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="957.9" y="542.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="955.3" y="579.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="958.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$54/953807481.run (229 samples, 8.43%)</title><rect x="955.7" y="691.0" width="99.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="958.7" y="702.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (229 samples, 8.43%)</title><rect x="955.7" y="675.0" width="99.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="958.7" y="686.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.putEntity (229 samples, 8.43%)</title><rect x="955.7" y="659.0" width="99.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="958.7" y="670.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.upsert (142 samples, 5.23%)</title><rect x="955.7" y="643.0" width="61.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="958.7" y="654.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (141 samples, 5.19%)</title><rect x="955.7" y="627.0" width="61.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="958.7" y="638.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (141 samples, 5.19%)</title><rect x="955.7" y="611.0" width="61.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="958.7" y="622.0">org/ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (134 samples, 4.94%)</title><rect x="955.7" y="595.0" width="58.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="958.7" y="606.0">Java_o..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="956.2" y="579.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="959.2" y="590.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.04%)</title><rect x="956.6" y="579.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="959.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="957.0" y="579.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="960.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="957.5" y="579.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="960.5" y="590.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (129 samples, 4.75%)</title><rect x="957.9" y="579.0" width="56.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="960.9" y="590.0">rocksd..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="958.3" y="563.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="961.3" y="574.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="958.8" y="563.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="961.8" y="574.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.15%)</title><rect x="959.2" y="563.0" width="1.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="962.2" y="574.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="960.5" y="547.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="963.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (120 samples, 4.42%)</title><rect x="961.0" y="563.0" width="52.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="964.0" y="574.0">rocks..</text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="961.4" y="547.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="964.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="961.8" y="547.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="964.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (117 samples, 4.31%)</title><rect x="962.3" y="547.0" width="50.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="965.3" y="558.0">rocks..</text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="962.3" y="531.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="965.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (114 samples, 4.20%)</title><rect x="962.7" y="531.0" width="49.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="965.7" y="542.0">rocks..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.04%)</title><rect x="962.7" y="515.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="965.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (107 samples, 3.94%)</title><rect x="963.1" y="515.0" width="46.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="966.1" y="526.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.04%)</title><rect x="963.1" y="499.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="966.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (104 samples, 3.83%)</title><rect x="963.6" y="499.0" width="45.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="966.6" y="510.0">rock..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="968.3" y="483.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="971.3" y="494.0"></text>
</g>
<g>
<title>__GI___sched_yield (12 samples, 0.44%)</title><rect x="968.8" y="483.0" width="5.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="971.8" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.37%)</title><rect x="969.6" y="467.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="972.6" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.37%)</title><rect x="969.6" y="451.0" width="4.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="972.6" y="462.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (9 samples, 0.33%)</title><rect x="970.1" y="435.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="973.1" y="446.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.33%)</title><rect x="970.1" y="419.0" width="3.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="973.1" y="430.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.33%)</title><rect x="970.1" y="403.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="973.1" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (9 samples, 0.33%)</title><rect x="970.1" y="387.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="973.1" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.04%)</title><rect x="974.0" y="483.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="977.0" y="494.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="974.4" y="483.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="977.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.04%)</title><rect x="974.9" y="483.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="977.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (36 samples, 1.33%)</title><rect x="975.3" y="483.0" width="15.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="978.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (2 samples, 0.07%)</title><rect x="975.7" y="467.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="978.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (32 samples, 1.18%)</title><rect x="976.6" y="467.0" width="13.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="979.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (31 samples, 1.14%)</title><rect x="976.6" y="451.0" width="13.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="979.6" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="976.6" y="435.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="979.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.04%)</title><rect x="977.0" y="435.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="980.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (1 samples, 0.04%)</title><rect x="977.5" y="435.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="980.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (28 samples, 1.03%)</title><rect x="977.9" y="435.0" width="12.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="980.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.04%)</title><rect x="977.9" y="419.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="980.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (27 samples, 0.99%)</title><rect x="978.3" y="419.0" width="11.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="981.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize() (1 samples, 0.04%)</title><rect x="979.2" y="403.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="982.2" y="414.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (24 samples, 0.88%)</title><rect x="979.6" y="403.0" width="10.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="982.6" y="414.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="980.5" y="387.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="983.5" y="398.0"></text>
</g>
<g>
<title>__write (21 samples, 0.77%)</title><rect x="980.9" y="387.0" width="9.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="983.9" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.63%)</title><rect x="982.7" y="371.0" width="7.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="985.7" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.63%)</title><rect x="982.7" y="355.0" width="7.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="985.7" y="366.0"></text>
</g>
<g>
<title>ksys_write (15 samples, 0.55%)</title><rect x="983.1" y="339.0" width="6.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="986.1" y="350.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.04%)</title><rect x="983.1" y="323.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="986.1" y="334.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="983.1" y="307.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="986.1" y="318.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="983.1" y="291.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="986.1" y="302.0"></text>
</g>
<g>
<title>vfs_write (14 samples, 0.52%)</title><rect x="983.6" y="323.0" width="6.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="986.6" y="334.0"></text>
</g>
<g>
<title>new_sync_write (13 samples, 0.48%)</title><rect x="983.6" y="307.0" width="5.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="986.6" y="318.0"></text>
</g>
<g>
<title>generic_file_write_iter (12 samples, 0.44%)</title><rect x="984.0" y="291.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="987.0" y="302.0"></text>
</g>
<g>
<title>__generic_file_write_iter (11 samples, 0.41%)</title><rect x="984.0" y="275.0" width="4.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="987.0" y="286.0"></text>
</g>
<g>
<title>file_remove_privs (2 samples, 0.07%)</title><rect x="984.0" y="259.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="987.0" y="270.0"></text>
</g>
<g>
<title>file_update_time (3 samples, 0.11%)</title><rect x="984.9" y="259.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="987.9" y="270.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.04%)</title><rect x="985.7" y="243.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="988.7" y="254.0"></text>
</g>
<g>
<title>generic_perform_write (6 samples, 0.22%)</title><rect x="986.2" y="259.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="989.2" y="270.0"></text>
</g>
<g>
<title>shmem_getpage_gfp.isra.0 (4 samples, 0.15%)</title><rect x="986.6" y="243.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="989.6" y="254.0"></text>
</g>
<g>
<title>find_lock_entry (2 samples, 0.07%)</title><rect x="987.0" y="227.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="990.0" y="238.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.07%)</title><rect x="987.0" y="211.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="990.0" y="222.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.04%)</title><rect x="987.9" y="227.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="990.9" y="238.0"></text>
</g>
<g>
<title>activate_page (1 samples, 0.04%)</title><rect x="987.9" y="211.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="990.9" y="222.0"></text>
</g>
<g>
<title>shmem_write_end (1 samples, 0.04%)</title><rect x="988.3" y="243.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="991.3" y="254.0"></text>
</g>
<g>
<title>down_write (1 samples, 0.04%)</title><rect x="988.8" y="275.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="991.8" y="286.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.04%)</title><rect x="989.2" y="307.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="992.2" y="318.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="989.6" y="339.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="992.6" y="350.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.04%)</title><rect x="990.1" y="451.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="993.1" y="462.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="990.5" y="467.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="993.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.04%)</title><rect x="990.9" y="483.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="993.9" y="494.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.04%)</title><rect x="990.9" y="467.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="993.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (27 samples, 0.99%)</title><rect x="991.4" y="483.0" width="11.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="994.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="991.4" y="467.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="994.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (26 samples, 0.96%)</title><rect x="991.8" y="467.0" width="11.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="994.8" y="478.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="992.2" y="451.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="995.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (23 samples, 0.85%)</title><rect x="992.7" y="451.0" width="10.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="995.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.04%)</title><rect x="992.7" y="435.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="995.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (22 samples, 0.81%)</title><rect x="993.1" y="435.0" width="9.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="996.1" y="446.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="994.0" y="419.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="997.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (19 samples, 0.70%)</title><rect x="994.4" y="419.0" width="8.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="997.4" y="430.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="995.7" y="403.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="998.7" y="414.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.04%)</title><rect x="995.7" y="387.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="998.7" y="398.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (14 samples, 0.52%)</title><rect x="996.2" y="403.0" width="6.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="999.2" y="414.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (12 samples, 0.44%)</title><rect x="996.6" y="387.0" width="5.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="999.6" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (4 samples, 0.15%)</title><rect x="1000.1" y="371.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1003.1" y="382.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1000.1" y="355.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1003.1" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.11%)</title><rect x="1000.5" y="355.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1003.5" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.04%)</title><rect x="1001.8" y="387.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1004.8" y="398.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="1001.8" y="371.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1004.8" y="382.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.04%)</title><rect x="1002.2" y="403.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1005.2" y="414.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (1 samples, 0.04%)</title><rect x="1002.2" y="387.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1005.2" y="398.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.04%)</title><rect x="1002.7" y="451.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1005.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (6 samples, 0.22%)</title><rect x="1003.1" y="483.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1006.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (6 samples, 0.22%)</title><rect x="1003.1" y="467.0" width="2.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1006.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.18%)</title><rect x="1003.5" y="451.0" width="2.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1006.5" y="462.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1003.5" y="435.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1006.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (4 samples, 0.15%)</title><rect x="1004.0" y="435.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1007.0" y="446.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.04%)</title><rect x="1004.0" y="419.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1007.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (3 samples, 0.11%)</title><rect x="1004.4" y="419.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1007.4" y="430.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (2 samples, 0.07%)</title><rect x="1004.9" y="403.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1007.9" y="414.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.07%)</title><rect x="1004.9" y="387.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1007.9" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (2 samples, 0.07%)</title><rect x="1004.9" y="371.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1007.9" y="382.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.07%)</title><rect x="1005.7" y="483.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1008.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.04%)</title><rect x="1006.6" y="483.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1009.6" y="494.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.04%)</title><rect x="1006.6" y="467.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1009.6" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1006.6" y="451.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1009.6" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1006.6" y="435.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1009.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.04%)</title><rect x="1007.0" y="483.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1010.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.04%)</title><rect x="1007.5" y="483.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1010.5" y="494.0"></text>
</g>
<g>
<title>syscall (2 samples, 0.07%)</title><rect x="1007.9" y="483.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1010.9" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1008.3" y="467.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1011.3" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1008.3" y="451.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1011.3" y="462.0"></text>
</g>
<g>
<title>__x64_sys_clock_gettime (1 samples, 0.04%)</title><rect x="1008.3" y="435.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1011.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.04%)</title><rect x="1008.8" y="499.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1011.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.04%)</title><rect x="1009.2" y="499.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1012.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.18%)</title><rect x="1009.6" y="515.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1012.6" y="526.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1009.6" y="499.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1012.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="1010.1" y="499.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1013.1" y="510.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.07%)</title><rect x="1010.9" y="499.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1013.9" y="510.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.04%)</title><rect x="1011.8" y="515.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1014.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="1012.2" y="531.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1015.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="1012.7" y="531.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1015.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="1013.1" y="563.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1016.1" y="574.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="1013.5" y="563.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1016.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.11%)</title><rect x="1014.0" y="595.0" width="1.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1017.0" y="606.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (3 samples, 0.11%)</title><rect x="1014.0" y="579.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1017.0" y="590.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1015.3" y="595.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1018.3" y="606.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.04%)</title><rect x="1015.7" y="595.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1018.7" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.04%)</title><rect x="1016.2" y="595.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1019.2" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1016.2" y="579.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1019.2" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1016.2" y="563.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1019.2" y="574.0"></text>
</g>
<g>
<title>__se_sys_futex (1 samples, 0.04%)</title><rect x="1016.2" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1019.2" y="558.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="1016.2" y="531.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1019.2" y="542.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="1016.2" y="515.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1019.2" y="526.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.04%)</title><rect x="1016.6" y="595.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1019.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (1 samples, 0.04%)</title><rect x="1017.0" y="627.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1020.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (87 samples, 3.20%)</title><rect x="1017.5" y="643.0" width="37.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1020.5" y="654.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (87 samples, 3.20%)</title><rect x="1017.5" y="627.0" width="37.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1020.5" y="638.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (87 samples, 3.20%)</title><rect x="1017.5" y="611.0" width="37.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1020.5" y="622.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.11%)</title><rect x="1017.9" y="595.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1020.9" y="606.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="1017.9" y="579.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1020.9" y="590.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.07%)</title><rect x="1018.3" y="579.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1021.3" y="590.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.07%)</title><rect x="1018.3" y="563.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1021.3" y="574.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.07%)</title><rect x="1018.3" y="547.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1021.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (81 samples, 2.98%)</title><rect x="1019.2" y="595.0" width="35.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1022.2" y="606.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="1019.2" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1022.2" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="1019.2" y="563.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1022.2" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="1019.2" y="547.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1022.2" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1019.2" y="531.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1022.2" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (80 samples, 2.95%)</title><rect x="1019.6" y="579.0" width="34.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1022.6" y="590.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (80 samples, 2.95%)</title><rect x="1019.6" y="563.0" width="34.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1022.6" y="574.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (80 samples, 2.95%)</title><rect x="1019.6" y="547.0" width="34.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1022.6" y="558.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (80 samples, 2.95%)</title><rect x="1019.6" y="531.0" width="34.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1022.6" y="542.0">on..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="1019.6" y="515.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1022.6" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="1019.6" y="499.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1022.6" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.07%)</title><rect x="1019.6" y="483.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1022.6" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="1020.1" y="467.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1023.1" y="478.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="1020.1" y="451.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1023.1" y="462.0"></text>
</g>
<g>
<title>__send (78 samples, 2.87%)</title><rect x="1020.5" y="515.0" width="33.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1023.5" y="526.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (77 samples, 2.84%)</title><rect x="1020.9" y="499.0" width="33.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1023.9" y="510.0">en..</text>
</g>
<g>
<title>do_syscall_64 (77 samples, 2.84%)</title><rect x="1020.9" y="483.0" width="33.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1023.9" y="494.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (76 samples, 2.80%)</title><rect x="1020.9" y="467.0" width="33.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1023.9" y="478.0">__..</text>
</g>
<g>
<title>__sys_sendto (75 samples, 2.76%)</title><rect x="1021.4" y="451.0" width="32.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1024.4" y="462.0">__..</text>
</g>
<g>
<title>sock_sendmsg (73 samples, 2.69%)</title><rect x="1021.4" y="435.0" width="31.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1024.4" y="446.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.04%)</title><rect x="1021.4" y="419.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1024.4" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (72 samples, 2.65%)</title><rect x="1021.8" y="419.0" width="31.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1024.8" y="430.0">tc..</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.07%)</title><rect x="1021.8" y="403.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1024.8" y="414.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.07%)</title><rect x="1022.7" y="403.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1025.7" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.07%)</title><rect x="1022.7" y="387.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1025.7" y="398.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="1023.1" y="371.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1026.1" y="382.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="1023.5" y="403.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1026.5" y="414.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="1023.5" y="387.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1026.5" y="398.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (67 samples, 2.47%)</title><rect x="1024.0" y="403.0" width="29.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1027.0" y="414.0">tc..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="1025.7" y="387.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1028.7" y="398.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="1025.7" y="371.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1028.7" y="382.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (53 samples, 1.95%)</title><rect x="1026.1" y="387.0" width="23.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1029.1" y="398.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (53 samples, 1.95%)</title><rect x="1026.1" y="371.0" width="23.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1029.1" y="382.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (48 samples, 1.77%)</title><rect x="1027.5" y="355.0" width="20.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1030.5" y="366.0"></text>
</g>
<g>
<title>__ip_queue_xmit (45 samples, 1.66%)</title><rect x="1028.3" y="339.0" width="19.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1031.3" y="350.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.07%)</title><rect x="1028.3" y="323.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1031.3" y="334.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.07%)</title><rect x="1028.3" y="307.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1031.3" y="318.0"></text>
</g>
<g>
<title>ip_output (43 samples, 1.58%)</title><rect x="1029.2" y="323.0" width="18.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1032.2" y="334.0"></text>
</g>
<g>
<title>ip_finish_output2 (40 samples, 1.47%)</title><rect x="1029.6" y="307.0" width="17.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1032.6" y="318.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.11%)</title><rect x="1030.1" y="291.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1033.1" y="302.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.11%)</title><rect x="1030.1" y="275.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1033.1" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.11%)</title><rect x="1030.1" y="259.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1033.1" y="270.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="1030.5" y="243.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1033.5" y="254.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="1030.5" y="227.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1033.5" y="238.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.04%)</title><rect x="1030.5" y="211.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1033.5" y="222.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="1030.9" y="243.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1033.9" y="254.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (35 samples, 1.29%)</title><rect x="1031.4" y="291.0" width="15.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1034.4" y="302.0"></text>
</g>
<g>
<title>do_softirq.part.0 (35 samples, 1.29%)</title><rect x="1031.4" y="275.0" width="15.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1034.4" y="286.0"></text>
</g>
<g>
<title>do_softirq_own_stack (33 samples, 1.22%)</title><rect x="1032.2" y="259.0" width="14.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1035.2" y="270.0"></text>
</g>
<g>
<title>__softirqentry_text_start (33 samples, 1.22%)</title><rect x="1032.2" y="243.0" width="14.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1035.2" y="254.0"></text>
</g>
<g>
<title>net_rx_action (33 samples, 1.22%)</title><rect x="1032.2" y="227.0" width="14.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1035.2" y="238.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="1032.2" y="211.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1035.2" y="222.0"></text>
</g>
<g>
<title>process_backlog (32 samples, 1.18%)</title><rect x="1032.7" y="211.0" width="13.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1035.7" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (32 samples, 1.18%)</title><rect x="1032.7" y="195.0" width="13.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1035.7" y="206.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.04%)</title><rect x="1033.1" y="179.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1036.1" y="190.0"></text>
</g>
<g>
<title>ip_rcv (30 samples, 1.10%)</title><rect x="1033.5" y="179.0" width="13.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1036.5" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (29 samples, 1.07%)</title><rect x="1034.0" y="163.0" width="12.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1037.0" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (29 samples, 1.07%)</title><rect x="1034.0" y="147.0" width="12.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1037.0" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (29 samples, 1.07%)</title><rect x="1034.0" y="131.0" width="12.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1037.0" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (29 samples, 1.07%)</title><rect x="1034.0" y="115.0" width="12.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1037.0" y="126.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.11%)</title><rect x="1034.4" y="99.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1037.4" y="110.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.04%)</title><rect x="1035.3" y="83.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1038.3" y="94.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="1035.7" y="99.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1038.7" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (24 samples, 0.88%)</title><rect x="1036.1" y="99.0" width="10.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1039.1" y="110.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="1036.1" y="83.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1039.1" y="94.0"></text>
</g>
<g>
<title>tcp_rcv_established (23 samples, 0.85%)</title><rect x="1036.6" y="83.0" width="10.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1039.6" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (6 samples, 0.22%)</title><rect x="1037.9" y="67.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1040.9" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.22%)</title><rect x="1037.9" y="51.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1040.9" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.22%)</title><rect x="1037.9" y="35.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1040.9" y="46.0"></text>
</g>
<g>
<title>tcp_ack (13 samples, 0.48%)</title><rect x="1040.5" y="67.0" width="5.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1043.5" y="78.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.07%)</title><rect x="1041.8" y="51.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1044.8" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="1041.8" y="35.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1044.8" y="46.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="1042.2" y="35.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1045.2" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="1042.7" y="51.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1045.7" y="62.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="1043.1" y="51.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1046.1" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="1043.5" y="51.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1046.5" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="1043.5" y="35.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1046.5" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.04%)</title><rect x="1044.0" y="51.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1047.0" y="62.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.04%)</title><rect x="1044.4" y="51.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1047.4" y="62.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.07%)</title><rect x="1044.8" y="51.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1047.8" y="62.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.04%)</title><rect x="1045.7" y="51.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1048.7" y="62.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.04%)</title><rect x="1046.1" y="67.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1049.1" y="78.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="1046.6" y="291.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1049.6" y="302.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.07%)</title><rect x="1047.0" y="307.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1050.0" y="318.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.07%)</title><rect x="1047.0" y="291.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1050.0" y="302.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.04%)</title><rect x="1047.4" y="275.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1050.4" y="286.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="1047.9" y="339.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1050.9" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.07%)</title><rect x="1048.3" y="355.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1051.3" y="366.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.0 (1 samples, 0.04%)</title><rect x="1048.3" y="339.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1051.3" y="350.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="1048.7" y="339.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1051.7" y="350.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.26%)</title><rect x="1049.2" y="387.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1052.2" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.22%)</title><rect x="1049.6" y="371.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1052.6" y="382.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.11%)</title><rect x="1050.5" y="355.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1053.5" y="366.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.11%)</title><rect x="1050.5" y="339.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1053.5" y="350.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="1051.8" y="355.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1054.8" y="366.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.04%)</title><rect x="1052.2" y="387.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1055.2" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="1052.7" y="387.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1055.7" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="1052.7" y="371.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1055.7" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="1052.7" y="355.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1055.7" y="366.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.07%)</title><rect x="1053.1" y="435.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1056.1" y="446.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="1053.1" y="419.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1056.1" y="430.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="1053.5" y="403.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1056.5" y="414.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="1054.0" y="467.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1057.0" y="478.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.04%)</title><rect x="1054.0" y="451.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1057.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.07%)</title><rect x="1054.4" y="595.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1057.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="1054.8" y="579.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1057.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="1054.8" y="563.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1057.8" y="574.0"></text>
</g>
<g>
<title>[NIO Worker #9 tid=1082465] (281 samples, 10.35%)</title><rect x="1055.3" y="755.0" width="122.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1058.3" y="766.0">[NIO Worker #9 ..</text>
</g>
<g>
<title>[not_walkable_Java] (8 samples, 0.29%)</title><rect x="1055.3" y="739.0" width="3.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1058.3" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (8 samples, 0.29%)</title><rect x="1055.3" y="723.0" width="3.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1058.3" y="734.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.29%)</title><rect x="1055.3" y="707.0" width="3.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1058.3" y="718.0"></text>
</g>
<g>
<title>[vdso] (8 samples, 0.29%)</title><rect x="1055.3" y="691.0" width="3.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1058.3" y="702.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.11%)</title><rect x="1058.7" y="739.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1061.7" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.11%)</title><rect x="1058.7" y="723.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1061.7" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (270 samples, 9.94%)</title><rect x="1060.0" y="739.0" width="117.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1063.0" y="750.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (270 samples, 9.94%)</title><rect x="1060.0" y="723.0" width="117.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1063.0" y="734.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (270 samples, 9.94%)</title><rect x="1060.0" y="707.0" width="117.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1063.0" y="718.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (27 samples, 0.99%)</title><rect x="1060.5" y="691.0" width="11.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1063.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (27 samples, 0.99%)</title><rect x="1060.5" y="675.0" width="11.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1063.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (27 samples, 0.99%)</title><rect x="1060.5" y="659.0" width="11.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1063.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (1 samples, 0.04%)</title><rect x="1060.5" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1063.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.04%)</title><rect x="1060.5" y="627.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1063.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (26 samples, 0.96%)</title><rect x="1060.9" y="643.0" width="11.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1063.9" y="654.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.07%)</title><rect x="1061.4" y="627.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1064.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (23 samples, 0.85%)</title><rect x="1062.2" y="627.0" width="10.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1065.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (16 samples, 0.59%)</title><rect x="1065.3" y="611.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1068.3" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.22%)</title><rect x="1065.3" y="595.0" width="2.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1068.3" y="606.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.07%)</title><rect x="1066.1" y="579.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1069.1" y="590.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="1067.0" y="579.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1070.0" y="590.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.04%)</title><rect x="1067.0" y="563.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1070.0" y="574.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.04%)</title><rect x="1067.4" y="579.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1070.4" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1067.4" y="563.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1070.4" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1067.4" y="547.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1070.4" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (1 samples, 0.04%)</title><rect x="1067.4" y="531.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1070.4" y="542.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="1067.4" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1070.4" y="526.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="1067.4" y="499.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1070.4" y="510.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="1067.4" y="483.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1070.4" y="494.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.29%)</title><rect x="1067.9" y="595.0" width="3.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1070.9" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (8 samples, 0.29%)</title><rect x="1067.9" y="579.0" width="3.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1070.9" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.29%)</title><rect x="1067.9" y="563.0" width="3.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1070.9" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.29%)</title><rect x="1067.9" y="547.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1070.9" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (8 samples, 0.29%)</title><rect x="1067.9" y="531.0" width="3.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1070.9" y="542.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.22%)</title><rect x="1068.3" y="515.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1071.3" y="526.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.18%)</title><rect x="1068.7" y="499.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1071.7" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.15%)</title><rect x="1068.7" y="483.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1071.7" y="494.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (3 samples, 0.11%)</title><rect x="1068.7" y="467.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1071.7" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.11%)</title><rect x="1068.7" y="451.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1071.7" y="462.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="1070.0" y="467.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1073.0" y="478.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="1070.0" y="451.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1073.0" y="462.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.04%)</title><rect x="1070.5" y="483.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1073.5" y="494.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.04%)</title><rect x="1070.9" y="515.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1073.9" y="526.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.04%)</title><rect x="1070.9" y="499.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1073.9" y="510.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="1071.3" y="595.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1074.3" y="606.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="1071.8" y="595.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1074.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$54/953807481.run (242 samples, 8.91%)</title><rect x="1072.2" y="691.0" width="105.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1075.2" y="702.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (242 samples, 8.91%)</title><rect x="1072.2" y="675.0" width="105.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1075.2" y="686.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.putEntity (242 samples, 8.91%)</title><rect x="1072.2" y="659.0" width="105.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1075.2" y="670.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.upsert (140 samples, 5.16%)</title><rect x="1072.2" y="643.0" width="60.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1075.2" y="654.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (139 samples, 5.12%)</title><rect x="1072.2" y="627.0" width="60.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1075.2" y="638.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (139 samples, 5.12%)</title><rect x="1072.2" y="611.0" width="60.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1075.2" y="622.0">org/ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (131 samples, 4.83%)</title><rect x="1072.7" y="595.0" width="56.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1075.7" y="606.0">Java_o..</text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="1072.7" y="579.0" width="0.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1075.7" y="590.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.07%)</title><rect x="1073.5" y="579.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1076.5" y="590.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (127 samples, 4.68%)</title><rect x="1074.4" y="579.0" width="55.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1077.4" y="590.0">rocks..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.07%)</title><rect x="1074.4" y="563.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1077.4" y="574.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="1075.3" y="563.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1078.3" y="574.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="1075.7" y="563.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1078.7" y="574.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1076.1" y="563.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1079.1" y="574.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.11%)</title><rect x="1076.6" y="563.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1079.6" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="1077.4" y="547.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1080.4" y="558.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.07%)</title><rect x="1077.9" y="563.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1080.9" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="1078.3" y="547.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1081.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (117 samples, 4.31%)</title><rect x="1078.7" y="563.0" width="50.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1081.7" y="574.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (116 samples, 4.27%)</title><rect x="1079.2" y="547.0" width="50.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1082.2" y="558.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (114 samples, 4.20%)</title><rect x="1079.2" y="531.0" width="49.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1082.2" y="542.0">rocks..</text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1079.6" y="515.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1082.6" y="526.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.04%)</title><rect x="1080.0" y="515.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1083.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.04%)</title><rect x="1080.5" y="515.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1083.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (104 samples, 3.83%)</title><rect x="1080.9" y="515.0" width="45.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1083.9" y="526.0">rock..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1081.3" y="499.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1084.3" y="510.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1081.8" y="499.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1084.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MemTableInsertStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.04%)</title><rect x="1082.2" y="499.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1085.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (98 samples, 3.61%)</title><rect x="1082.6" y="499.0" width="42.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1085.6" y="510.0">rock..</text>
</g>
<g>
<title>__GI___sched_yield (5 samples, 0.18%)</title><rect x="1086.6" y="483.0" width="2.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1089.6" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.15%)</title><rect x="1087.0" y="467.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1090.0" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.15%)</title><rect x="1087.0" y="451.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1090.0" y="462.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (3 samples, 0.11%)</title><rect x="1087.4" y="435.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1090.4" y="446.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.11%)</title><rect x="1087.4" y="419.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1090.4" y="430.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.11%)</title><rect x="1087.4" y="403.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1090.4" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (3 samples, 0.11%)</title><rect x="1087.4" y="387.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1090.4" y="398.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="1088.7" y="483.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1091.7" y="494.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1089.6" y="483.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1092.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.04%)</title><rect x="1090.0" y="483.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1093.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.04%)</title><rect x="1090.5" y="483.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1093.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (35 samples, 1.29%)</title><rect x="1090.9" y="483.0" width="15.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1093.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (33 samples, 1.22%)</title><rect x="1091.3" y="467.0" width="14.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1094.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (29 samples, 1.07%)</title><rect x="1092.6" y="451.0" width="12.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1095.6" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (4 samples, 0.15%)</title><rect x="1092.6" y="435.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1095.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (2 samples, 0.07%)</title><rect x="1094.4" y="435.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1097.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (23 samples, 0.85%)</title><rect x="1095.3" y="435.0" width="9.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1098.3" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1095.3" y="419.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1098.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Flush() (1 samples, 0.04%)</title><rect x="1095.7" y="419.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1098.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="1096.1" y="419.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1099.1" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (19 samples, 0.70%)</title><rect x="1096.6" y="419.0" width="8.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1099.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (17 samples, 0.63%)</title><rect x="1097.4" y="403.0" width="7.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1100.4" y="414.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="1098.3" y="387.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1101.3" y="398.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1098.7" y="387.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1101.7" y="398.0"></text>
</g>
<g>
<title>__write (13 samples, 0.48%)</title><rect x="1099.2" y="387.0" width="5.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1102.2" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.48%)</title><rect x="1099.2" y="371.0" width="5.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1102.2" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.48%)</title><rect x="1099.2" y="355.0" width="5.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1102.2" y="366.0"></text>
</g>
<g>
<title>ksys_write (12 samples, 0.44%)</title><rect x="1099.6" y="339.0" width="5.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1102.6" y="350.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.07%)</title><rect x="1099.6" y="323.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1102.6" y="334.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="1099.6" y="307.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1102.6" y="318.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="1100.0" y="291.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1103.0" y="302.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="1100.5" y="323.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1103.5" y="334.0"></text>
</g>
<g>
<title>vfs_write (9 samples, 0.33%)</title><rect x="1100.9" y="323.0" width="3.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1103.9" y="334.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.04%)</title><rect x="1101.3" y="307.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1104.3" y="318.0"></text>
</g>
<g>
<title>new_sync_write (6 samples, 0.22%)</title><rect x="1101.8" y="307.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1104.8" y="318.0"></text>
</g>
<g>
<title>generic_file_write_iter (6 samples, 0.22%)</title><rect x="1101.8" y="291.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1104.8" y="302.0"></text>
</g>
<g>
<title>__generic_file_write_iter (6 samples, 0.22%)</title><rect x="1101.8" y="275.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1104.8" y="286.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.04%)</title><rect x="1101.8" y="259.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1104.8" y="270.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.04%)</title><rect x="1101.8" y="243.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1104.8" y="254.0"></text>
</g>
<g>
<title>generic_perform_write (5 samples, 0.18%)</title><rect x="1102.2" y="259.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1105.2" y="270.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.04%)</title><rect x="1102.2" y="243.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1105.2" y="254.0"></text>
</g>
<g>
<title>shmem_getpage_gfp.isra.0 (4 samples, 0.15%)</title><rect x="1102.6" y="243.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1105.6" y="254.0"></text>
</g>
<g>
<title>find_lock_entry (3 samples, 0.11%)</title><rect x="1103.1" y="227.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1106.1" y="238.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.11%)</title><rect x="1103.1" y="211.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1106.1" y="222.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.04%)</title><rect x="1103.9" y="195.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1106.9" y="206.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.04%)</title><rect x="1104.4" y="307.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1107.4" y="318.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="1104.8" y="419.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1107.8" y="430.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.04%)</title><rect x="1105.2" y="451.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1108.2" y="462.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.04%)</title><rect x="1105.7" y="467.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1108.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (1 samples, 0.04%)</title><rect x="1106.1" y="483.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1109.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.04%)</title><rect x="1106.6" y="483.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1109.6" y="494.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="1106.6" y="467.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1109.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (1 samples, 0.04%)</title><rect x="1107.0" y="483.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1110.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (22 samples, 0.81%)</title><rect x="1107.4" y="483.0" width="9.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1110.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="1107.4" y="467.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1110.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (21 samples, 0.77%)</title><rect x="1107.9" y="467.0" width="9.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1110.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (20 samples, 0.74%)</title><rect x="1107.9" y="451.0" width="8.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1110.9" y="462.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1107.9" y="435.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1110.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.04%)</title><rect x="1108.3" y="435.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1111.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (18 samples, 0.66%)</title><rect x="1108.7" y="435.0" width="7.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1111.7" y="446.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.04%)</title><rect x="1108.7" y="419.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1111.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (17 samples, 0.63%)</title><rect x="1109.2" y="419.0" width="7.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1112.2" y="430.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="1110.5" y="403.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1113.5" y="414.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.04%)</title><rect x="1110.5" y="387.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1113.5" y="398.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (12 samples, 0.44%)</title><rect x="1110.9" y="403.0" width="5.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1113.9" y="414.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (11 samples, 0.41%)</title><rect x="1111.3" y="387.0" width="4.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1114.3" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (3 samples, 0.11%)</title><rect x="1114.4" y="371.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1117.4" y="382.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1114.8" y="355.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1117.8" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="1115.2" y="355.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1118.2" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="1115.7" y="371.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1118.7" y="382.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="1115.7" y="355.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1118.7" y="366.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.04%)</title><rect x="1116.1" y="403.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1119.1" y="414.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.04%)</title><rect x="1116.1" y="387.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1119.1" y="398.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="1116.1" y="371.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1119.1" y="382.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="1116.1" y="355.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1119.1" y="366.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="1116.1" y="339.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1119.1" y="350.0"></text>
</g>
<g>
<title>__lru_cache_add (1 samples, 0.04%)</title><rect x="1116.1" y="323.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1119.1" y="334.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (1 samples, 0.04%)</title><rect x="1116.1" y="307.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1119.1" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1116.1" y="291.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1119.1" y="302.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="1116.5" y="451.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1119.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (2 samples, 0.07%)</title><rect x="1117.0" y="483.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1120.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.07%)</title><rect x="1117.0" y="467.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1120.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="1117.0" y="451.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1120.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.07%)</title><rect x="1117.0" y="435.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1120.0" y="446.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.04%)</title><rect x="1117.0" y="419.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1120.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.04%)</title><rect x="1117.4" y="419.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1120.4" y="430.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.04%)</title><rect x="1117.4" y="403.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1120.4" y="414.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.04%)</title><rect x="1117.4" y="387.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1120.4" y="398.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1117.4" y="371.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1120.4" y="382.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.04%)</title><rect x="1117.9" y="483.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1120.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (4 samples, 0.15%)</title><rect x="1118.3" y="483.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1121.3" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1119.6" y="467.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1122.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (5 samples, 0.18%)</title><rect x="1120.0" y="483.0" width="2.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1123.0" y="494.0"></text>
</g>
<g>
<title>__GI___sched_yield (4 samples, 0.15%)</title><rect x="1120.0" y="467.0" width="1.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1123.0" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.15%)</title><rect x="1120.0" y="451.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1123.0" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.15%)</title><rect x="1120.0" y="435.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1123.0" y="446.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (3 samples, 0.11%)</title><rect x="1120.0" y="419.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1123.0" y="430.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.04%)</title><rect x="1120.0" y="403.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1123.0" y="414.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.07%)</title><rect x="1120.5" y="403.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1123.5" y="414.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.07%)</title><rect x="1120.5" y="387.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1123.5" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (2 samples, 0.07%)</title><rect x="1120.5" y="371.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1123.5" y="382.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="1121.3" y="419.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1124.3" y="430.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.04%)</title><rect x="1121.8" y="467.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1124.8" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1121.8" y="451.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1124.8" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1121.8" y="435.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1124.8" y="446.0"></text>
</g>
<g>
<title>__se_sys_clock_gettime (1 samples, 0.04%)</title><rect x="1121.8" y="419.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1124.8" y="430.0"></text>
</g>
<g>
<title>put_timespec64 (1 samples, 0.04%)</title><rect x="1121.8" y="403.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1124.8" y="414.0"></text>
</g>
<g>
<title>_copy_to_user (1 samples, 0.04%)</title><rect x="1121.8" y="387.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1124.8" y="398.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.04%)</title><rect x="1122.2" y="483.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1125.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.04%)</title><rect x="1122.6" y="483.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1125.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.04%)</title><rect x="1123.1" y="483.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1126.1" y="494.0"></text>
</g>
<g>
<title>syscall (4 samples, 0.15%)</title><rect x="1123.5" y="483.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1126.5" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.15%)</title><rect x="1123.5" y="467.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1126.5" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.15%)</title><rect x="1123.5" y="451.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1126.5" y="462.0"></text>
</g>
<g>
<title>__se_sys_clock_gettime (2 samples, 0.07%)</title><rect x="1123.5" y="435.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1126.5" y="446.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (2 samples, 0.07%)</title><rect x="1123.5" y="419.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1126.5" y="430.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.07%)</title><rect x="1123.5" y="403.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1126.5" y="414.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.07%)</title><rect x="1123.5" y="387.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1126.5" y="398.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="1124.4" y="435.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1127.4" y="446.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="1124.4" y="419.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1127.4" y="430.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="1124.8" y="435.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1127.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.04%)</title><rect x="1125.2" y="499.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1128.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.04%)</title><rect x="1125.7" y="499.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1128.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.04%)</title><rect x="1126.1" y="515.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1129.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="1126.5" y="515.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1129.5" y="526.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1126.5" y="499.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1129.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, int) (1 samples, 0.04%)</title><rect x="1127.0" y="499.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1130.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="1127.4" y="515.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1130.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.04%)</title><rect x="1127.8" y="515.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1130.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="1128.3" y="515.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1131.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (2 samples, 0.07%)</title><rect x="1128.7" y="531.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1131.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="1129.6" y="595.0" width="1.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1132.6" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1129.6" y="579.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1132.6" y="590.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.04%)</title><rect x="1129.6" y="563.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1132.6" y="574.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1130.0" y="579.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1133.0" y="590.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.04%)</title><rect x="1130.5" y="579.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1133.5" y="590.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.04%)</title><rect x="1130.9" y="579.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1133.9" y="590.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="1130.9" y="563.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1133.9" y="574.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1131.3" y="595.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1134.3" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.07%)</title><rect x="1131.8" y="595.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1134.8" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="1131.8" y="579.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1134.8" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="1131.8" y="563.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1134.8" y="574.0"></text>
</g>
<g>
<title>__se_sys_futex (2 samples, 0.07%)</title><rect x="1131.8" y="547.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1134.8" y="558.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.07%)</title><rect x="1131.8" y="531.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1134.8" y="542.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.07%)</title><rect x="1131.8" y="515.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1134.8" y="526.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.07%)</title><rect x="1131.8" y="499.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1134.8" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.07%)</title><rect x="1131.8" y="483.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1134.8" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.07%)</title><rect x="1131.8" y="467.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1134.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (1 samples, 0.04%)</title><rect x="1132.6" y="627.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1135.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (102 samples, 3.76%)</title><rect x="1133.1" y="643.0" width="44.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1136.1" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (102 samples, 3.76%)</title><rect x="1133.1" y="627.0" width="44.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1136.1" y="638.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (102 samples, 3.76%)</title><rect x="1133.1" y="611.0" width="44.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1136.1" y="622.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="1135.2" y="595.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1138.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (96 samples, 3.54%)</title><rect x="1135.7" y="595.0" width="41.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1138.7" y="606.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.18%)</title><rect x="1135.7" y="579.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1138.7" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.15%)</title><rect x="1136.1" y="563.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1139.1" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.11%)</title><rect x="1136.1" y="547.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1139.1" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.07%)</title><rect x="1136.5" y="531.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1139.5" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="1137.4" y="547.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1140.4" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="1137.4" y="531.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1140.4" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (91 samples, 3.35%)</title><rect x="1137.8" y="579.0" width="39.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1140.8" y="590.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (91 samples, 3.35%)</title><rect x="1137.8" y="563.0" width="39.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1140.8" y="574.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (91 samples, 3.35%)</title><rect x="1137.8" y="547.0" width="39.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1140.8" y="558.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="1137.8" y="531.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1140.8" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (90 samples, 3.31%)</title><rect x="1138.3" y="531.0" width="39.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1141.3" y="542.0">one..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="1138.7" y="515.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1141.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="1138.7" y="499.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1141.7" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.07%)</title><rect x="1138.7" y="483.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1141.7" y="494.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="1139.1" y="467.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1142.1" y="478.0"></text>
</g>
<g>
<title>__send (87 samples, 3.20%)</title><rect x="1139.6" y="515.0" width="37.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1142.6" y="526.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (86 samples, 3.17%)</title><rect x="1140.0" y="499.0" width="37.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1143.0" y="510.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (86 samples, 3.17%)</title><rect x="1140.0" y="483.0" width="37.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1143.0" y="494.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (81 samples, 2.98%)</title><rect x="1141.8" y="467.0" width="35.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1144.8" y="478.0">__x..</text>
</g>
<g>
<title>__sys_sendto (81 samples, 2.98%)</title><rect x="1141.8" y="451.0" width="35.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1144.8" y="462.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (77 samples, 2.84%)</title><rect x="1142.2" y="435.0" width="33.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1145.2" y="446.0">so..</text>
</g>
<g>
<title>tcp_sendmsg (77 samples, 2.84%)</title><rect x="1142.2" y="419.0" width="33.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1145.2" y="430.0">tc..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="1142.2" y="403.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1145.2" y="414.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="1142.6" y="403.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1145.6" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="1142.6" y="387.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1145.6" y="398.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="1142.6" y="371.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1145.6" y="382.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.04%)</title><rect x="1142.6" y="355.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1145.6" y="366.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (75 samples, 2.76%)</title><rect x="1143.1" y="403.0" width="32.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1146.1" y="414.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (65 samples, 2.39%)</title><rect x="1144.4" y="387.0" width="28.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1147.4" y="398.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (65 samples, 2.39%)</title><rect x="1144.4" y="371.0" width="28.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1147.4" y="382.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (63 samples, 2.32%)</title><rect x="1144.8" y="355.0" width="27.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1147.8" y="366.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (56 samples, 2.06%)</title><rect x="1145.2" y="339.0" width="24.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1148.2" y="350.0">_..</text>
</g>
<g>
<title>ip_local_out (1 samples, 0.04%)</title><rect x="1145.2" y="323.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1148.2" y="334.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="1145.2" y="307.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1148.2" y="318.0"></text>
</g>
<g>
<title>ip_output (55 samples, 2.03%)</title><rect x="1145.7" y="323.0" width="23.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1148.7" y="334.0">i..</text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.04%)</title><rect x="1146.5" y="307.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1149.5" y="318.0"></text>
</g>
<g>
<title>ip_finish_output2 (51 samples, 1.88%)</title><rect x="1147.0" y="307.0" width="22.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1150.0" y="318.0">i..</text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.07%)</title><rect x="1147.0" y="291.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1150.0" y="302.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.07%)</title><rect x="1147.0" y="275.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1150.0" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="1147.4" y="259.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1150.4" y="270.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="1147.4" y="243.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1150.4" y="254.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="1147.4" y="227.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1150.4" y="238.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="1147.4" y="211.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1150.4" y="222.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (49 samples, 1.80%)</title><rect x="1147.8" y="291.0" width="21.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1150.8" y="302.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (48 samples, 1.77%)</title><rect x="1148.3" y="275.0" width="20.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1151.3" y="286.0"></text>
</g>
<g>
<title>do_softirq_own_stack (46 samples, 1.69%)</title><rect x="1149.1" y="259.0" width="20.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1152.1" y="270.0"></text>
</g>
<g>
<title>__softirqentry_text_start (46 samples, 1.69%)</title><rect x="1149.1" y="243.0" width="20.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1152.1" y="254.0"></text>
</g>
<g>
<title>net_rx_action (44 samples, 1.62%)</title><rect x="1150.0" y="227.0" width="19.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1153.0" y="238.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="1150.9" y="211.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1153.9" y="222.0"></text>
</g>
<g>
<title>process_backlog (41 samples, 1.51%)</title><rect x="1151.3" y="211.0" width="17.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1154.3" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (40 samples, 1.47%)</title><rect x="1151.8" y="195.0" width="17.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1154.8" y="206.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.04%)</title><rect x="1151.8" y="179.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1154.8" y="190.0"></text>
</g>
<g>
<title>ip_rcv (39 samples, 1.44%)</title><rect x="1152.2" y="179.0" width="16.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1155.2" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (38 samples, 1.40%)</title><rect x="1152.2" y="163.0" width="16.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1155.2" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (37 samples, 1.36%)</title><rect x="1152.6" y="147.0" width="16.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1155.6" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (37 samples, 1.36%)</title><rect x="1152.6" y="131.0" width="16.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1155.6" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (37 samples, 1.36%)</title><rect x="1152.6" y="115.0" width="16.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1155.6" y="126.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.04%)</title><rect x="1153.1" y="99.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1156.1" y="110.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="1153.5" y="99.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1156.5" y="110.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="1153.5" y="83.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1156.5" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (33 samples, 1.22%)</title><rect x="1153.9" y="99.0" width="14.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1156.9" y="110.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="1153.9" y="83.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1156.9" y="94.0"></text>
</g>
<g>
<title>tcp_rcv_established (32 samples, 1.18%)</title><rect x="1154.4" y="83.0" width="13.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1157.4" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="1156.5" y="67.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1159.5" y="78.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="1156.5" y="51.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1159.5" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1156.5" y="35.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1159.5" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (12 samples, 0.44%)</title><rect x="1157.0" y="67.0" width="5.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1160.0" y="78.0"></text>
</g>
<g>
<title>__rcu_read_lock (2 samples, 0.07%)</title><rect x="1157.0" y="51.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1160.0" y="62.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.37%)</title><rect x="1157.8" y="51.0" width="4.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1160.8" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.37%)</title><rect x="1157.8" y="35.0" width="4.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1160.8" y="46.0"></text>
</g>
<g>
<title>tcp_ack (11 samples, 0.41%)</title><rect x="1162.2" y="67.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1165.2" y="78.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.07%)</title><rect x="1163.5" y="51.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1166.5" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="1163.5" y="35.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1166.5" y="46.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="1163.9" y="35.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1166.9" y="46.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="1164.4" y="51.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1167.4" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="1164.4" y="35.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1167.4" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.11%)</title><rect x="1164.8" y="51.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1167.8" y="62.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.07%)</title><rect x="1166.1" y="51.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1169.1" y="62.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.07%)</title><rect x="1167.0" y="67.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1170.0" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="1167.8" y="67.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1170.8" y="78.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.04%)</title><rect x="1168.3" y="99.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1171.3" y="110.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.04%)</title><rect x="1168.7" y="163.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1171.7" y="174.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.04%)</title><rect x="1169.1" y="307.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1172.1" y="318.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="1169.1" y="291.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1172.1" y="302.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.15%)</title><rect x="1169.6" y="339.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1172.6" y="350.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.07%)</title><rect x="1170.4" y="323.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1173.4" y="334.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="1171.3" y="339.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1174.3" y="350.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.04%)</title><rect x="1171.7" y="339.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1174.7" y="350.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="1172.2" y="355.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1175.2" y="366.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.04%)</title><rect x="1172.2" y="339.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1175.2" y="350.0"></text>
</g>
<g>
<title>restore_regs_and_return_to_kernel (1 samples, 0.04%)</title><rect x="1172.6" y="387.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1175.6" y="398.0"></text>
</g>
<g>
<title>preempt_schedule_irq (1 samples, 0.04%)</title><rect x="1172.6" y="371.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1175.6" y="382.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="1173.0" y="387.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1176.0" y="398.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.04%)</title><rect x="1173.0" y="371.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1176.0" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.04%)</title><rect x="1173.5" y="387.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1176.5" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.04%)</title><rect x="1173.5" y="371.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1176.5" y="382.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="1173.5" y="355.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1176.5" y="366.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.04%)</title><rect x="1173.9" y="387.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1176.9" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.07%)</title><rect x="1174.4" y="387.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1177.4" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="1174.8" y="371.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1177.8" y="382.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.04%)</title><rect x="1175.2" y="387.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1178.2" y="398.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.11%)</title><rect x="1175.7" y="435.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1178.7" y="446.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.11%)</title><rect x="1175.7" y="419.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1178.7" y="430.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.07%)</title><rect x="1176.1" y="403.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1179.1" y="414.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="1177.0" y="467.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1180.0" y="478.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="1177.0" y="451.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1180.0" y="462.0"></text>
</g>
<g>
<title>[tid=1082238] (29 samples, 1.07%)</title><rect x="1177.4" y="755.0" width="12.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1180.4" y="766.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (27 samples, 0.99%)</title><rect x="1177.4" y="739.0" width="11.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1180.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*) (27 samples, 0.99%)</title><rect x="1177.4" y="723.0" width="11.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long) (27 samples, 0.99%)</title><rect x="1177.4" y="707.0" width="11.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1180.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority) (27 samples, 0.99%)</title><rect x="1177.4" y="691.0" width="11.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority) (26 samples, 0.96%)</title><rect x="1177.4" y="675.0" width="11.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector&lt;rocksdb::DBImpl::BGFlushArg, 8ul&gt; const&amp;, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority) (26 samples, 0.96%)</title><rect x="1177.4" y="659.0" width="11.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1180.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&amp;, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;&amp;, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority) (26 samples, 0.96%)</title><rect x="1177.4" y="643.0" width="11.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1180.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*) (26 samples, 0.96%)</title><rect x="1177.4" y="627.0" width="11.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::FlushJob::WriteLevel0Table() (26 samples, 0.96%)</title><rect x="1177.4" y="611.0" width="11.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.4" y="622.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1177.4" y="595.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1180.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::BuildTable(std::string const&amp;, rocksdb::Env*, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::TableCache*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, std::vector&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt; &gt; &gt;, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&amp;, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollectorFactory, std::default_delete&lt;rocksdb::IntTblPropCollectorFactory&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollectorFactory, std::default_delete&lt;rocksdb::IntTblProp (25 samples, 0.92%)</title><rect x="1177.8" y="595.0" width="10.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (11 samples, 0.41%)</title><rect x="1178.3" y="579.0" width="4.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::Flush() (8 samples, 0.29%)</title><rect x="1178.3" y="563.0" width="3.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::BlockBuilder*, rocksdb::BlockHandle*, bool) (8 samples, 0.29%)</title><rect x="1178.3" y="547.0" width="3.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::Slice const&amp;, rocksdb::BlockHandle*, bool) (8 samples, 0.29%)</title><rect x="1178.3" y="531.0" width="3.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::CompressBlock(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, rocksdb::CompressionType*, unsigned int, bool, std::string*, std::string*, std::string*) (8 samples, 0.29%)</title><rect x="1178.3" y="515.0" width="3.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.3" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (8 samples, 0.29%)</title><rect x="1178.3" y="499.0" width="3.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1181.3" y="510.0"></text>
</g>
<g>
<title>snappy::RawCompress(char const*, unsigned long, char*, unsigned long*) (8 samples, 0.29%)</title><rect x="1178.3" y="483.0" width="3.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.3" y="494.0"></text>
</g>
<g>
<title>snappy::Compress(snappy::Source*, snappy::Sink*) (8 samples, 0.29%)</title><rect x="1178.3" y="467.0" width="3.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.3" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="1178.3" y="451.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1181.3" y="462.0"></text>
</g>
<g>
<title>snappy::internal::CompressFragment(char const*, unsigned long, char*, unsigned short*, int) (7 samples, 0.26%)</title><rect x="1178.7" y="451.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.7" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (4 samples, 0.15%)</title><rect x="1180.0" y="435.0" width="1.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1183.0" y="446.0"></text>
</g>
<g>
<title>int&amp;&amp; std::forward&lt;int&gt;(std::remove_reference&lt;int&gt;::type&amp;) (1 samples, 0.04%)</title><rect x="1181.3" y="419.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::NotifyCollectTableCollectorsOnAdd(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, unsigned long, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; const&amp;, rocksdb::Logger*) (1 samples, 0.04%)</title><rect x="1181.7" y="563.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.7" y="574.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="1182.2" y="563.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.2" y="574.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="1182.6" y="563.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::Finish() (1 samples, 0.04%)</title><rect x="1183.0" y="579.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::WriteIndexBlock(rocksdb::MetaIndexBuilder*, rocksdb::BlockHandle*) (1 samples, 0.04%)</title><rect x="1183.0" y="563.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::Slice const&amp;, rocksdb::BlockHandle*, bool) (1 samples, 0.04%)</title><rect x="1183.0" y="547.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::CompressBlock(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, rocksdb::CompressionType*, unsigned int, bool, std::string*, std::string*, std::string*) (1 samples, 0.04%)</title><rect x="1183.0" y="531.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.0" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="1183.0" y="515.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1186.0" y="526.0"></text>
</g>
<g>
<title>snappy::RawCompress(char const*, unsigned long, char*, unsigned long*) (1 samples, 0.04%)</title><rect x="1183.0" y="499.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.0" y="510.0"></text>
</g>
<g>
<title>snappy::Compress(snappy::Source*, snappy::Sink*) (1 samples, 0.04%)</title><rect x="1183.0" y="483.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.0" y="494.0"></text>
</g>
<g>
<title>snappy::internal::CompressFragment(char const*, unsigned long, char*, unsigned short*, int) (1 samples, 0.04%)</title><rect x="1183.0" y="467.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.0" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="1183.0" y="451.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1186.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::Next() (12 samples, 0.44%)</title><rect x="1183.5" y="579.0" width="5.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.5" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="1183.9" y="563.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1186.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::NextFromInput() (10 samples, 0.37%)</title><rect x="1184.3" y="563.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.3" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="1185.7" y="547.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1188.7" y="558.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="1186.1" y="547.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1189.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Next() (1 samples, 0.04%)</title><rect x="1186.5" y="547.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::key() const (3 samples, 0.11%)</title><rect x="1187.0" y="547.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::value() const (1 samples, 0.04%)</title><rect x="1188.3" y="547.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::JobContext::Clean() (1 samples, 0.04%)</title><rect x="1188.7" y="675.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (1 samples, 0.04%)</title><rect x="1188.7" y="659.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::SuperVersion::~SuperVersion() (1 samples, 0.04%)</title><rect x="1188.7" y="643.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::~MemTable() (1 samples, 0.04%)</title><rect x="1188.7" y="627.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.7" y="638.0"></text>
</g>
<g>
<title>__GI___munmap (1 samples, 0.04%)</title><rect x="1188.7" y="611.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1191.7" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1188.7" y="595.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1191.7" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1188.7" y="579.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1191.7" y="590.0"></text>
</g>
<g>
<title>__x64_sys_munmap (1 samples, 0.04%)</title><rect x="1188.7" y="563.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1191.7" y="574.0"></text>
</g>
<g>
<title>__vm_munmap (1 samples, 0.04%)</title><rect x="1188.7" y="547.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1191.7" y="558.0"></text>
</g>
<g>
<title>__do_munmap (1 samples, 0.04%)</title><rect x="1188.7" y="531.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1191.7" y="542.0"></text>
</g>
<g>
<title>unmap_region (1 samples, 0.04%)</title><rect x="1188.7" y="515.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1191.7" y="526.0"></text>
</g>
<g>
<title>tlb_finish_mmu (1 samples, 0.04%)</title><rect x="1188.7" y="499.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1191.7" y="510.0"></text>
</g>
<g>
<title>tlb_flush_mmu (1 samples, 0.04%)</title><rect x="1188.7" y="483.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1191.7" y="494.0"></text>
</g>
<g>
<title>release_pages (1 samples, 0.04%)</title><rect x="1188.7" y="467.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1191.7" y="478.0"></text>
</g>
<g>
<title>free_unref_page_list (1 samples, 0.04%)</title><rect x="1188.7" y="451.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1191.7" y="462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1189.1" y="739.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1192.1" y="750.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="1189.1" y="723.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.1" y="734.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="1189.6" y="739.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.6" y="750.0"></text>
</g>
</g>
</svg>
