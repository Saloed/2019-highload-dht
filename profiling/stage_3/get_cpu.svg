<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="805"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="805"> </text>
<g id="frames">
<g>
<title>all (2,625 samples, 100.00%)</title><rect x="10.0" y="771.0" width="1180.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="782.0">all</text>
</g>
<g>
<title>[NIO Selector #1 tid=1082259] (196 samples, 7.47%)</title><rect x="10.0" y="755.0" width="88.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="13.0" y="766.0">[NIO Selec..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.04%)</title><rect x="10.0" y="739.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.04%)</title><rect x="10.0" y="723.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="10.0" y="707.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="10.0" y="691.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (195 samples, 7.43%)</title><rect x="10.4" y="739.0" width="87.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.4" y="750.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (23 samples, 0.88%)</title><rect x="10.4" y="723.0" width="10.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (23 samples, 0.88%)</title><rect x="10.4" y="707.0" width="10.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.4" y="718.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="10.4" y="691.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="13.4" y="702.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="10.4" y="675.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.4" y="686.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="10.4" y="659.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.4" y="670.0"></text>
</g>
<g>
<title>epoll_wait (22 samples, 0.84%)</title><rect x="10.9" y="691.0" width="9.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="13.9" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.84%)</title><rect x="10.9" y="675.0" width="9.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="13.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.84%)</title><rect x="10.9" y="659.0" width="9.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="13.9" y="670.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (17 samples, 0.65%)</title><rect x="12.7" y="643.0" width="7.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="15.7" y="654.0"></text>
</g>
<g>
<title>do_epoll_wait (17 samples, 0.65%)</title><rect x="12.7" y="627.0" width="7.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="15.7" y="638.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.11%)</title><rect x="12.7" y="611.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="15.7" y="622.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.08%)</title><rect x="13.1" y="595.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="16.1" y="606.0"></text>
</g>
<g>
<title>ep_poll (14 samples, 0.53%)</title><rect x="14.0" y="611.0" width="6.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="17.0" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.04%)</title><rect x="15.4" y="595.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="18.4" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (8 samples, 0.30%)</title><rect x="15.8" y="595.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="18.8" y="606.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (6 samples, 0.23%)</title><rect x="15.8" y="579.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="18.8" y="590.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="18.5" y="579.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="21.5" y="590.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.04%)</title><rect x="19.0" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="22.0" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.08%)</title><rect x="19.4" y="595.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="22.4" y="606.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.08%)</title><rect x="19.4" y="579.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="22.4" y="590.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="19.9" y="563.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="22.9" y="574.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="20.3" y="643.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="23.3" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (172 samples, 6.55%)</title><rect x="20.8" y="723.0" width="77.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.8" y="734.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (171 samples, 6.51%)</title><rect x="21.2" y="707.0" width="76.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.2" y="718.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (107 samples, 4.08%)</title><rect x="21.2" y="691.0" width="48.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.2" y="702.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (82 samples, 3.12%)</title><rect x="22.1" y="675.0" width="36.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.1" y="686.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (81 samples, 3.09%)</title><rect x="22.6" y="659.0" width="36.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.6" y="670.0">one..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (74 samples, 2.82%)</title><rect x="22.6" y="643.0" width="33.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.6" y="654.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="22.6" y="627.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="25.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.entity (73 samples, 2.78%)</title><rect x="23.0" y="627.0" width="32.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="26.0" y="638.0">ru..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (73 samples, 2.78%)</title><rect x="23.0" y="611.0" width="32.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.0" y="622.0">on..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (72 samples, 2.74%)</title><rect x="23.5" y="595.0" width="32.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.5" y="606.0">ja..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (72 samples, 2.74%)</title><rect x="23.5" y="579.0" width="32.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="26.5" y="590.0">on..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (72 samples, 2.74%)</title><rect x="23.5" y="563.0" width="32.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="26.5" y="574.0">on..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (72 samples, 2.74%)</title><rect x="23.5" y="547.0" width="32.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.5" y="558.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (71 samples, 2.70%)</title><rect x="23.9" y="531.0" width="32.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="26.9" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (71 samples, 2.70%)</title><rect x="23.9" y="515.0" width="32.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.9" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (71 samples, 2.70%)</title><rect x="23.9" y="499.0" width="32.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.9" y="510.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (68 samples, 2.59%)</title><rect x="25.3" y="483.0" width="30.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="28.3" y="494.0">jd..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.04%)</title><rect x="25.7" y="467.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="28.7" y="478.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.08%)</title><rect x="26.2" y="467.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="29.2" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.38%)</title><rect x="27.1" y="467.0" width="4.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="30.1" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.04%)</title><rect x="27.5" y="451.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="30.5" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="28.0" y="451.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="31.0" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.08%)</title><rect x="28.4" y="451.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="31.4" y="462.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.08%)</title><rect x="29.3" y="451.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="32.3" y="462.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="30.2" y="451.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="33.2" y="462.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.04%)</title><rect x="30.7" y="451.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="33.7" y="462.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.04%)</title><rect x="31.1" y="451.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="34.1" y="462.0"></text>
</g>
<g>
<title>__pthread_cond_signal (54 samples, 2.06%)</title><rect x="31.6" y="467.0" width="24.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="34.6" y="478.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 1.83%)</title><rect x="34.3" y="451.0" width="21.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="37.3" y="462.0">e..</text>
</g>
<g>
<title>do_syscall_64 (48 samples, 1.83%)</title><rect x="34.3" y="435.0" width="21.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="37.3" y="446.0">d..</text>
</g>
<g>
<title>__se_sys_futex (42 samples, 1.60%)</title><rect x="36.1" y="419.0" width="18.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="39.1" y="430.0"></text>
</g>
<g>
<title>do_futex (40 samples, 1.52%)</title><rect x="37.0" y="403.0" width="18.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="40.0" y="414.0"></text>
</g>
<g>
<title>futex_wake (39 samples, 1.49%)</title><rect x="37.4" y="387.0" width="17.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="40.4" y="398.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.04%)</title><rect x="38.3" y="371.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="41.3" y="382.0"></text>
</g>
<g>
<title>wake_up_q (36 samples, 1.37%)</title><rect x="38.8" y="371.0" width="16.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="41.8" y="382.0"></text>
</g>
<g>
<title>try_to_wake_up (36 samples, 1.37%)</title><rect x="38.8" y="355.0" width="16.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="41.8" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (34 samples, 1.30%)</title><rect x="39.7" y="339.0" width="15.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="42.7" y="350.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="55.0" y="419.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="58.0" y="430.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="55.4" y="419.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="58.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 0.23%)</title><rect x="55.9" y="643.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.9" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.23%)</title><rect x="55.9" y="627.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="58.9" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.08%)</title><rect x="55.9" y="611.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="58.9" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.15%)</title><rect x="56.8" y="611.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="59.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.15%)</title><rect x="56.8" y="595.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="59.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.15%)</title><rect x="56.8" y="579.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.04%)</title><rect x="58.5" y="643.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.5" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="58.5" y="627.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.5" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="58.5" y="611.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13 samples, 0.50%)</title><rect x="59.0" y="675.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.11%)</title><rect x="60.3" y="659.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="63.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.08%)</title><rect x="60.8" y="643.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.08%)</title><rect x="60.8" y="627.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.8" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.19%)</title><rect x="61.7" y="659.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.7" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.19%)</title><rect x="61.7" y="643.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.08%)</title><rect x="62.1" y="627.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.08%)</title><rect x="62.1" y="611.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.1" y="622.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (2 samples, 0.08%)</title><rect x="63.0" y="627.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="66.0" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.08%)</title><rect x="63.9" y="659.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (5 samples, 0.19%)</title><rect x="64.8" y="675.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.8" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.19%)</title><rect x="64.8" y="659.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.8" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.19%)</title><rect x="64.8" y="643.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.11%)</title><rect x="65.7" y="627.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.7" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.11%)</title><rect x="65.7" y="611.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="68.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.08%)</title><rect x="67.1" y="675.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="70.1" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.11%)</title><rect x="68.0" y="675.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.0" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.11%)</title><rect x="68.0" y="659.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.11%)</title><rect x="68.0" y="643.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.11%)</title><rect x="68.0" y="627.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.08%)</title><rect x="68.4" y="611.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.4" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (64 samples, 2.44%)</title><rect x="69.3" y="691.0" width="28.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.3" y="702.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (61 samples, 2.32%)</title><rect x="69.3" y="675.0" width="27.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="72.3" y="686.0">o..</text>
</g>
<g>
<title>[unknown] (9 samples, 0.34%)</title><rect x="69.3" y="659.0" width="4.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="72.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.34%)</title><rect x="69.3" y="643.0" width="4.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="72.3" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.15%)</title><rect x="69.3" y="627.0" width="1.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="72.3" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.11%)</title><rect x="69.8" y="611.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="72.8" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="70.7" y="595.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="73.7" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.15%)</title><rect x="71.1" y="627.0" width="1.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="74.1" y="638.0"></text>
</g>
<g>
<title>recv (1 samples, 0.04%)</title><rect x="72.9" y="627.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="75.9" y="638.0"></text>
</g>
<g>
<title>recv (52 samples, 1.98%)</title><rect x="73.4" y="659.0" width="23.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="76.4" y="670.0">r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 1.68%)</title><rect x="77.0" y="643.0" width="19.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="80.0" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 1.68%)</title><rect x="77.0" y="627.0" width="19.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="80.0" y="638.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (38 samples, 1.45%)</title><rect x="78.8" y="611.0" width="17.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="81.8" y="622.0"></text>
</g>
<g>
<title>__sys_recvfrom (38 samples, 1.45%)</title><rect x="78.8" y="595.0" width="17.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="81.8" y="606.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="79.2" y="579.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="82.2" y="590.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="79.7" y="579.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="82.7" y="590.0"></text>
</g>
<g>
<title>inet6_recvmsg (34 samples, 1.30%)</title><rect x="80.1" y="579.0" width="15.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="83.1" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (34 samples, 1.30%)</title><rect x="80.1" y="563.0" width="15.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="83.1" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (11 samples, 0.42%)</title><rect x="83.3" y="547.0" width="4.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="86.3" y="558.0"></text>
</g>
<g>
<title>skb_release_all (10 samples, 0.38%)</title><rect x="83.3" y="531.0" width="4.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="86.3" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (10 samples, 0.38%)</title><rect x="83.3" y="515.0" width="4.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="86.3" y="526.0"></text>
</g>
<g>
<title>dst_release (6 samples, 0.23%)</title><rect x="83.7" y="499.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="86.7" y="510.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.11%)</title><rect x="86.4" y="499.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="89.4" y="510.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="87.8" y="531.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="90.8" y="542.0"></text>
</g>
<g>
<title>ns_to_timespec64 (2 samples, 0.08%)</title><rect x="88.2" y="547.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="91.2" y="558.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.11%)</title><rect x="89.1" y="547.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="92.1" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.08%)</title><rect x="89.1" y="531.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="92.1" y="542.0"></text>
</g>
<g>
<title>preempt_count_add (2 samples, 0.08%)</title><rect x="89.1" y="515.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="92.1" y="526.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="90.0" y="531.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="93.0" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (9 samples, 0.34%)</title><rect x="90.5" y="547.0" width="4.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="93.5" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (9 samples, 0.34%)</title><rect x="90.5" y="531.0" width="4.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="93.5" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.15%)</title><rect x="92.3" y="515.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="95.3" y="526.0"></text>
</g>
<g>
<title>copyout (4 samples, 0.15%)</title><rect x="92.3" y="499.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="95.3" y="510.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.15%)</title><rect x="92.3" y="483.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="95.3" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.04%)</title><rect x="94.1" y="515.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="97.1" y="526.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="94.1" y="499.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="97.1" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="94.1" y="483.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="97.1" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.08%)</title><rect x="94.5" y="547.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="97.5" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="95.0" y="531.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="98.0" y="542.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="95.0" y="515.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="98.0" y="526.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="95.4" y="579.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="98.4" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="95.4" y="563.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="98.4" y="574.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="95.4" y="547.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="98.4" y="558.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.08%)</title><rect x="95.9" y="611.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="98.9" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.08%)</title><rect x="95.9" y="595.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="98.9" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (3 samples, 0.11%)</title><rect x="96.8" y="675.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.8" y="686.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=1082260] (199 samples, 7.58%)</title><rect x="98.1" y="755.0" width="89.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="101.1" y="766.0">[NIO Selec..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.04%)</title><rect x="98.1" y="739.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="101.1" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (198 samples, 7.54%)</title><rect x="98.6" y="739.0" width="89.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.6" y="750.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (19 samples, 0.72%)</title><rect x="98.6" y="723.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="101.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (18 samples, 0.69%)</title><rect x="99.0" y="707.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="102.0" y="718.0"></text>
</g>
<g>
<title>epoll_wait (18 samples, 0.69%)</title><rect x="99.0" y="691.0" width="8.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="102.0" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.65%)</title><rect x="99.5" y="675.0" width="7.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="102.5" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.65%)</title><rect x="99.5" y="659.0" width="7.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="102.5" y="670.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (13 samples, 0.50%)</title><rect x="101.3" y="643.0" width="5.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="104.3" y="654.0"></text>
</g>
<g>
<title>do_epoll_wait (13 samples, 0.50%)</title><rect x="101.3" y="627.0" width="5.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="104.3" y="638.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.11%)</title><rect x="101.3" y="611.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="104.3" y="622.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.11%)</title><rect x="101.3" y="595.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="104.3" y="606.0"></text>
</g>
<g>
<title>ep_poll (10 samples, 0.38%)</title><rect x="102.6" y="611.0" width="4.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="105.6" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.04%)</title><rect x="103.5" y="595.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="106.5" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (4 samples, 0.15%)</title><rect x="104.0" y="595.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="107.0" y="606.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (3 samples, 0.11%)</title><rect x="104.0" y="579.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="107.0" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.04%)</title><rect x="105.3" y="579.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="108.3" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (1 samples, 0.04%)</title><rect x="105.3" y="563.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="108.3" y="574.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="105.3" y="547.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="108.3" y="558.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="105.3" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="108.3" y="542.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.11%)</title><rect x="105.7" y="595.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="108.7" y="606.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.11%)</title><rect x="105.7" y="579.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="108.7" y="590.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="106.6" y="563.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="109.6" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="106.6" y="547.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="109.6" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (179 samples, 6.82%)</title><rect x="107.1" y="723.0" width="80.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.1" y="734.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (179 samples, 6.82%)</title><rect x="107.1" y="707.0" width="80.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="110.1" y="718.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (109 samples, 4.15%)</title><rect x="107.1" y="691.0" width="49.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.1" y="702.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (89 samples, 3.39%)</title><rect x="107.1" y="675.0" width="40.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="110.1" y="686.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (89 samples, 3.39%)</title><rect x="107.1" y="659.0" width="40.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="110.1" y="670.0">one..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (85 samples, 3.24%)</title><rect x="107.5" y="643.0" width="38.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.5" y="654.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.19%)</title><rect x="107.5" y="627.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="108.9" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="108.9" y="595.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.9" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="109.3" y="611.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="112.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.entity (80 samples, 3.05%)</title><rect x="109.8" y="627.0" width="36.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="112.8" y="638.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="109.8" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.8" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="109.8" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.04%)</title><rect x="109.8" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="112.8" y="590.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (79 samples, 3.01%)</title><rect x="110.2" y="611.0" width="35.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.2" y="622.0">one..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (76 samples, 2.90%)</title><rect x="111.6" y="595.0" width="34.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.6" y="606.0">ja..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (76 samples, 2.90%)</title><rect x="111.6" y="579.0" width="34.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="114.6" y="590.0">on..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (76 samples, 2.90%)</title><rect x="111.6" y="563.0" width="34.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="114.6" y="574.0">on..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (76 samples, 2.90%)</title><rect x="111.6" y="547.0" width="34.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="114.6" y="558.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (76 samples, 2.90%)</title><rect x="111.6" y="531.0" width="34.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="114.6" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (74 samples, 2.82%)</title><rect x="111.6" y="515.0" width="33.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="114.6" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (74 samples, 2.82%)</title><rect x="111.6" y="499.0" width="33.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.6" y="510.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (67 samples, 2.55%)</title><rect x="114.7" y="483.0" width="30.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.7" y="494.0">jd..</text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.04%)</title><rect x="115.2" y="467.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="118.2" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark (11 samples, 0.42%)</title><rect x="115.6" y="467.0" width="5.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="118.6" y="478.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="115.6" y="451.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="118.6" y="462.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.04%)</title><rect x="116.1" y="451.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="119.1" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="116.5" y="451.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="119.5" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.08%)</title><rect x="117.0" y="451.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="120.0" y="462.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.08%)</title><rect x="117.9" y="451.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="120.9" y="462.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.11%)</title><rect x="118.8" y="451.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="121.8" y="462.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="120.1" y="451.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="123.1" y="462.0"></text>
</g>
<g>
<title>__pthread_cond_signal (54 samples, 2.06%)</title><rect x="120.6" y="467.0" width="24.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="123.6" y="478.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (49 samples, 1.87%)</title><rect x="122.8" y="451.0" width="22.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="125.8" y="462.0">e..</text>
</g>
<g>
<title>do_syscall_64 (49 samples, 1.87%)</title><rect x="122.8" y="435.0" width="22.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="125.8" y="446.0">d..</text>
</g>
<g>
<title>__se_sys_futex (42 samples, 1.60%)</title><rect x="124.2" y="419.0" width="18.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="127.2" y="430.0"></text>
</g>
<g>
<title>do_futex (41 samples, 1.56%)</title><rect x="124.6" y="403.0" width="18.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="127.6" y="414.0"></text>
</g>
<g>
<title>futex_wake (41 samples, 1.56%)</title><rect x="124.6" y="387.0" width="18.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="127.6" y="398.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="125.1" y="371.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="128.1" y="382.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.11%)</title><rect x="125.5" y="371.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="128.5" y="382.0"></text>
</g>
<g>
<title>__unqueue_futex (2 samples, 0.08%)</title><rect x="126.0" y="355.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="129.0" y="366.0"></text>
</g>
<g>
<title>wake_up_q (36 samples, 1.37%)</title><rect x="126.9" y="371.0" width="16.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="129.9" y="382.0"></text>
</g>
<g>
<title>try_to_wake_up (36 samples, 1.37%)</title><rect x="126.9" y="355.0" width="16.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="129.9" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (36 samples, 1.37%)</title><rect x="126.9" y="339.0" width="16.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="129.9" y="350.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (3 samples, 0.11%)</title><rect x="143.1" y="419.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="146.1" y="430.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.11%)</title><rect x="143.1" y="403.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="146.1" y="414.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.04%)</title><rect x="143.5" y="387.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="146.5" y="398.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.04%)</title><rect x="144.0" y="387.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="147.0" y="398.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="144.4" y="419.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="147.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (2 samples, 0.08%)</title><rect x="144.9" y="515.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.9" y="526.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.11%)</title><rect x="145.8" y="643.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="148.8" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.11%)</title><rect x="145.8" y="627.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.8" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.11%)</title><rect x="145.8" y="611.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="148.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.11%)</title><rect x="145.8" y="595.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="148.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.11%)</title><rect x="145.8" y="579.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="148.8" y="590.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="146.7" y="563.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="149.7" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (14 samples, 0.53%)</title><rect x="147.1" y="675.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="150.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.08%)</title><rect x="148.9" y="659.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="151.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="149.4" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="152.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="149.4" y="627.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="152.4" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.27%)</title><rect x="149.8" y="659.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="152.8" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.27%)</title><rect x="149.8" y="643.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.15%)</title><rect x="151.2" y="627.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.15%)</title><rect x="151.2" y="611.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.2" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.04%)</title><rect x="152.9" y="659.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="155.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (6 samples, 0.23%)</title><rect x="153.4" y="675.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.4" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.11%)</title><rect x="154.7" y="659.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.7" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.11%)</title><rect x="154.7" y="643.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="157.7" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (70 samples, 2.67%)</title><rect x="156.1" y="691.0" width="31.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="159.1" y="702.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (70 samples, 2.67%)</title><rect x="156.1" y="675.0" width="31.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="159.1" y="686.0">on..</text>
</g>
<g>
<title>[unknown] (9 samples, 0.34%)</title><rect x="156.5" y="659.0" width="4.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="159.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.34%)</title><rect x="156.5" y="643.0" width="4.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="159.5" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.27%)</title><rect x="156.5" y="627.0" width="3.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="159.5" y="638.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="157.0" y="611.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="160.0" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.15%)</title><rect x="157.4" y="611.0" width="1.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="160.4" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="158.8" y="595.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="161.8" y="606.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="159.2" y="611.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="162.2" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.08%)</title><rect x="159.7" y="627.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="162.7" y="638.0"></text>
</g>
<g>
<title>recv (60 samples, 2.29%)</title><rect x="160.6" y="659.0" width="27.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="163.6" y="670.0">r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (55 samples, 2.10%)</title><rect x="162.8" y="643.0" width="24.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="165.8" y="654.0">e..</text>
</g>
<g>
<title>do_syscall_64 (55 samples, 2.10%)</title><rect x="162.8" y="627.0" width="24.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="165.8" y="638.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (51 samples, 1.94%)</title><rect x="163.3" y="611.0" width="22.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="166.3" y="622.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (50 samples, 1.90%)</title><rect x="163.7" y="595.0" width="22.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="166.7" y="606.0">_..</text>
</g>
<g>
<title>import_single_range (2 samples, 0.08%)</title><rect x="163.7" y="579.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="166.7" y="590.0"></text>
</g>
<g>
<title>inet6_recvmsg (44 samples, 1.68%)</title><rect x="164.6" y="579.0" width="19.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="167.6" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (43 samples, 1.64%)</title><rect x="165.1" y="563.0" width="19.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="168.1" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.30%)</title><rect x="170.9" y="547.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="173.9" y="558.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.27%)</title><rect x="170.9" y="531.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="173.9" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (7 samples, 0.27%)</title><rect x="170.9" y="515.0" width="3.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="173.9" y="526.0"></text>
</g>
<g>
<title>dst_release (4 samples, 0.15%)</title><rect x="170.9" y="499.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="173.9" y="510.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.11%)</title><rect x="172.7" y="499.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="175.7" y="510.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="174.1" y="531.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="177.1" y="542.0"></text>
</g>
<g>
<title>ns_to_timespec64 (2 samples, 0.08%)</title><rect x="174.5" y="547.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="177.5" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (12 samples, 0.46%)</title><rect x="175.4" y="547.0" width="5.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="178.4" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (11 samples, 0.42%)</title><rect x="175.9" y="531.0" width="4.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="178.9" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.15%)</title><rect x="176.8" y="515.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="179.8" y="526.0"></text>
</g>
<g>
<title>copyout (3 samples, 0.11%)</title><rect x="177.2" y="499.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="180.2" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="177.7" y="483.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="180.7" y="494.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="178.1" y="483.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="181.1" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.19%)</title><rect x="178.6" y="515.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="181.6" y="526.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.19%)</title><rect x="178.6" y="499.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="181.6" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.15%)</title><rect x="179.0" y="483.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="182.0" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.08%)</title><rect x="180.8" y="547.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="183.8" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (6 samples, 0.23%)</title><rect x="181.7" y="547.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="184.7" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.15%)</title><rect x="182.6" y="531.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="185.6" y="542.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.15%)</title><rect x="182.6" y="515.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="185.6" y="526.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.08%)</title><rect x="183.5" y="499.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="186.5" y="510.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.04%)</title><rect x="184.4" y="579.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="187.4" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.11%)</title><rect x="184.9" y="579.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="187.9" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="185.8" y="563.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="188.8" y="574.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="185.8" y="547.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="188.8" y="558.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="186.2" y="611.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="189.2" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="186.2" y="595.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="189.2" y="606.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.08%)</title><rect x="186.7" y="611.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="189.7" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.08%)</title><rect x="186.7" y="595.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="189.7" y="606.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=1082261] (196 samples, 7.47%)</title><rect x="187.6" y="755.0" width="88.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="190.6" y="766.0">[NIO Selec..</text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.11%)</title><rect x="187.6" y="739.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="190.6" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (193 samples, 7.35%)</title><rect x="188.9" y="739.0" width="86.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.9" y="750.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (20 samples, 0.76%)</title><rect x="188.9" y="723.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="191.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (20 samples, 0.76%)</title><rect x="188.9" y="707.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.9" y="718.0"></text>
</g>
<g>
<title>epoll_wait (20 samples, 0.76%)</title><rect x="188.9" y="691.0" width="9.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="191.9" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.72%)</title><rect x="189.4" y="675.0" width="8.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="192.4" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.72%)</title><rect x="189.4" y="659.0" width="8.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="192.4" y="670.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (16 samples, 0.61%)</title><rect x="189.4" y="643.0" width="7.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="192.4" y="654.0"></text>
</g>
<g>
<title>do_epoll_wait (14 samples, 0.53%)</title><rect x="190.3" y="627.0" width="6.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="193.3" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="190.3" y="611.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="193.3" y="622.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="190.3" y="595.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="193.3" y="606.0"></text>
</g>
<g>
<title>ep_poll (13 samples, 0.50%)</title><rect x="190.7" y="611.0" width="5.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="193.7" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (7 samples, 0.27%)</title><rect x="191.6" y="595.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="194.6" y="606.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (2 samples, 0.08%)</title><rect x="191.6" y="579.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="194.6" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.19%)</title><rect x="192.5" y="579.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="195.5" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (5 samples, 0.19%)</title><rect x="192.5" y="563.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="195.5" y="574.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.15%)</title><rect x="193.0" y="547.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="196.0" y="558.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="194.3" y="531.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="197.3" y="542.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.08%)</title><rect x="194.8" y="595.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="197.8" y="606.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.08%)</title><rect x="195.7" y="595.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="198.7" y="606.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.08%)</title><rect x="195.7" y="579.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="198.7" y="590.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="196.6" y="643.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="199.6" y="654.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="196.6" y="627.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="199.6" y="638.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.04%)</title><rect x="196.6" y="611.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="199.6" y="622.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.08%)</title><rect x="197.0" y="643.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="200.0" y="654.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="197.5" y="627.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="200.5" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (173 samples, 6.59%)</title><rect x="197.9" y="723.0" width="77.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="200.9" y="734.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (173 samples, 6.59%)</title><rect x="197.9" y="707.0" width="77.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="200.9" y="718.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (93 samples, 3.54%)</title><rect x="198.4" y="691.0" width="41.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="201.4" y="702.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (77 samples, 2.93%)</title><rect x="198.4" y="675.0" width="34.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="201.4" y="686.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (77 samples, 2.93%)</title><rect x="198.4" y="659.0" width="34.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="201.4" y="670.0">on..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (72 samples, 2.74%)</title><rect x="198.4" y="643.0" width="32.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="201.4" y="654.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.11%)</title><rect x="198.4" y="627.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="201.4" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="198.8" y="611.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="201.8" y="622.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="199.2" y="611.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="202.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="199.2" y="595.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="202.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="199.2" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="202.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="199.2" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="202.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.entity (69 samples, 2.63%)</title><rect x="199.7" y="627.0" width="31.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="202.7" y="638.0">ru..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (69 samples, 2.63%)</title><rect x="199.7" y="611.0" width="31.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="202.7" y="622.0">on..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (68 samples, 2.59%)</title><rect x="200.1" y="595.0" width="30.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="203.1" y="606.0">ja..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (68 samples, 2.59%)</title><rect x="200.1" y="579.0" width="30.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="203.1" y="590.0">on..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (68 samples, 2.59%)</title><rect x="200.1" y="563.0" width="30.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="203.1" y="574.0">on..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (68 samples, 2.59%)</title><rect x="200.1" y="547.0" width="30.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="203.1" y="558.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (68 samples, 2.59%)</title><rect x="200.1" y="531.0" width="30.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="203.1" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (67 samples, 2.55%)</title><rect x="200.1" y="515.0" width="30.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="203.1" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (67 samples, 2.55%)</title><rect x="200.1" y="499.0" width="30.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="203.1" y="510.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (66 samples, 2.51%)</title><rect x="200.6" y="483.0" width="29.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="203.6" y="494.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark (13 samples, 0.50%)</title><rect x="200.6" y="467.0" width="5.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="203.6" y="478.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.08%)</title><rect x="201.9" y="451.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="204.9" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="202.8" y="451.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="205.8" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.08%)</title><rect x="203.3" y="451.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="206.3" y="462.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.04%)</title><rect x="204.2" y="451.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="207.2" y="462.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.08%)</title><rect x="204.6" y="451.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="207.6" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="205.5" y="451.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="208.5" y="462.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.04%)</title><rect x="206.0" y="451.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="209.0" y="462.0"></text>
</g>
<g>
<title>__pthread_cond_signal (53 samples, 2.02%)</title><rect x="206.4" y="467.0" width="23.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="209.4" y="478.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (49 samples, 1.87%)</title><rect x="208.2" y="451.0" width="22.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="211.2" y="462.0">e..</text>
</g>
<g>
<title>do_syscall_64 (49 samples, 1.87%)</title><rect x="208.2" y="435.0" width="22.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="211.2" y="446.0">d..</text>
</g>
<g>
<title>__se_sys_futex (43 samples, 1.64%)</title><rect x="209.1" y="419.0" width="19.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="212.1" y="430.0"></text>
</g>
<g>
<title>do_futex (41 samples, 1.56%)</title><rect x="210.0" y="403.0" width="18.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="213.0" y="414.0"></text>
</g>
<g>
<title>futex_wake (40 samples, 1.52%)</title><rect x="210.5" y="387.0" width="18.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="213.5" y="398.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="211.4" y="371.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="214.4" y="382.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.04%)</title><rect x="211.8" y="371.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="214.8" y="382.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.04%)</title><rect x="212.3" y="371.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="215.3" y="382.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.04%)</title><rect x="212.3" y="355.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="215.3" y="366.0"></text>
</g>
<g>
<title>wake_up_q (35 samples, 1.33%)</title><rect x="212.7" y="371.0" width="15.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="215.7" y="382.0"></text>
</g>
<g>
<title>try_to_wake_up (35 samples, 1.33%)</title><rect x="212.7" y="355.0" width="15.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="215.7" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (35 samples, 1.33%)</title><rect x="212.7" y="339.0" width="15.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="215.7" y="350.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.04%)</title><rect x="228.0" y="323.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="231.0" y="334.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="228.5" y="419.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="231.5" y="430.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="228.5" y="403.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="231.5" y="414.0"></text>
</g>
<g>
<title>syscall_trace_enter (3 samples, 0.11%)</title><rect x="228.9" y="419.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="231.9" y="430.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="229.4" y="403.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="232.4" y="414.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.04%)</title><rect x="229.8" y="403.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="232.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (1 samples, 0.04%)</title><rect x="230.3" y="515.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="233.3" y="526.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.11%)</title><rect x="230.7" y="643.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="233.7" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.11%)</title><rect x="230.7" y="627.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="233.7" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="230.7" y="611.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="233.7" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.08%)</title><rect x="231.2" y="611.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="234.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.08%)</title><rect x="231.2" y="595.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="234.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.08%)</title><rect x="231.2" y="579.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="234.2" y="590.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="231.6" y="563.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="234.6" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.08%)</title><rect x="232.1" y="643.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="235.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.08%)</title><rect x="232.1" y="627.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="235.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.08%)</title><rect x="232.1" y="611.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.1" y="622.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1 samples, 0.04%)</title><rect x="232.5" y="595.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="235.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (11 samples, 0.42%)</title><rect x="233.0" y="675.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="236.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.15%)</title><rect x="233.9" y="659.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.15%)</title><rect x="233.9" y="643.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="236.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.15%)</title><rect x="233.9" y="627.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="236.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.04%)</title><rect x="235.2" y="611.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="238.2" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.11%)</title><rect x="235.7" y="659.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="238.7" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.11%)</title><rect x="235.7" y="643.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="238.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="236.6" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="239.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="236.6" y="611.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="239.6" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.08%)</title><rect x="237.0" y="659.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="240.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.15%)</title><rect x="237.9" y="675.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="240.9" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.15%)</title><rect x="237.9" y="659.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="240.9" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.15%)</title><rect x="237.9" y="643.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="240.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.08%)</title><rect x="238.8" y="627.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="241.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.04%)</title><rect x="239.3" y="611.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="242.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="239.7" y="675.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="242.7" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.04%)</title><rect x="240.2" y="691.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="243.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.04%)</title><rect x="240.2" y="675.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.04%)</title><rect x="240.2" y="659.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="243.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="240.2" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="243.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="240.2" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="243.2" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (78 samples, 2.97%)</title><rect x="240.6" y="691.0" width="35.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="243.6" y="702.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (78 samples, 2.97%)</title><rect x="240.6" y="675.0" width="35.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="243.6" y="686.0">one..</text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="241.5" y="659.0" width="4.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="244.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="241.5" y="643.0" width="4.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="244.5" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.27%)</title><rect x="241.5" y="627.0" width="3.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="244.5" y="638.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.08%)</title><rect x="241.5" y="611.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="244.5" y="622.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="242.4" y="611.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="245.4" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.15%)</title><rect x="242.9" y="611.0" width="1.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="245.9" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="242.9" y="595.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="245.9" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (3 samples, 0.11%)</title><rect x="243.3" y="595.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="246.3" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.08%)</title><rect x="244.7" y="627.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="247.7" y="638.0"></text>
</g>
<g>
<title>recv (1 samples, 0.04%)</title><rect x="245.6" y="627.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="248.6" y="638.0"></text>
</g>
<g>
<title>recv (66 samples, 2.51%)</title><rect x="246.0" y="659.0" width="29.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="249.0" y="670.0">recv</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="248.2" y="643.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="251.2" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (60 samples, 2.29%)</title><rect x="248.7" y="643.0" width="27.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="251.7" y="654.0">e..</text>
</g>
<g>
<title>do_syscall_64 (60 samples, 2.29%)</title><rect x="248.7" y="627.0" width="27.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="251.7" y="638.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (56 samples, 2.13%)</title><rect x="250.0" y="611.0" width="25.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="253.0" y="622.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (53 samples, 2.02%)</title><rect x="251.4" y="595.0" width="23.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="254.4" y="606.0">_..</text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="252.7" y="579.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="255.7" y="590.0"></text>
</g>
<g>
<title>inet6_recvmsg (46 samples, 1.75%)</title><rect x="253.2" y="579.0" width="20.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="256.2" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (46 samples, 1.75%)</title><rect x="253.2" y="563.0" width="20.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="256.2" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (12 samples, 0.46%)</title><rect x="255.9" y="547.0" width="5.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="258.9" y="558.0"></text>
</g>
<g>
<title>skb_release_all (10 samples, 0.38%)</title><rect x="256.3" y="531.0" width="4.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="259.3" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (8 samples, 0.30%)</title><rect x="257.2" y="515.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="260.2" y="526.0"></text>
</g>
<g>
<title>dst_release (5 samples, 0.19%)</title><rect x="257.7" y="499.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="260.7" y="510.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.08%)</title><rect x="259.9" y="499.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="262.9" y="510.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="260.8" y="531.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="263.8" y="542.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="261.3" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="264.3" y="558.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="261.7" y="547.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="264.7" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="262.2" y="547.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="265.2" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="262.2" y="531.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="265.2" y="542.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.23%)</title><rect x="262.6" y="547.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="265.6" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.08%)</title><rect x="263.1" y="531.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="266.1" y="542.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="263.5" y="515.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="266.5" y="526.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.11%)</title><rect x="264.0" y="531.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="267.0" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (11 samples, 0.42%)</title><rect x="265.3" y="547.0" width="5.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="268.3" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (10 samples, 0.38%)</title><rect x="265.8" y="531.0" width="4.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="268.8" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.19%)</title><rect x="267.6" y="515.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="270.6" y="526.0"></text>
</g>
<g>
<title>copyout (3 samples, 0.11%)</title><rect x="268.5" y="499.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="271.5" y="510.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.11%)</title><rect x="268.5" y="483.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="271.5" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.04%)</title><rect x="269.8" y="515.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="272.8" y="526.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="269.8" y="499.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="272.8" y="510.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.15%)</title><rect x="270.3" y="547.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="273.3" y="558.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="271.6" y="531.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="274.6" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.11%)</title><rect x="272.1" y="547.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="275.1" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.08%)</title><rect x="272.5" y="531.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="275.5" y="542.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.08%)</title><rect x="272.5" y="515.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="275.5" y="526.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.08%)</title><rect x="272.5" y="499.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="275.5" y="510.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (1 samples, 0.04%)</title><rect x="273.4" y="547.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="276.4" y="558.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.04%)</title><rect x="273.9" y="579.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="276.9" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="273.9" y="563.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="276.9" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.08%)</title><rect x="274.3" y="579.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="277.3" y="590.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="274.3" y="563.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="277.3" y="574.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="275.2" y="611.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="278.2" y="622.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.04%)</title><rect x="275.2" y="595.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="278.2" y="606.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=1082263] (107 samples, 4.08%)</title><rect x="275.7" y="755.0" width="48.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="278.7" y="766.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (107 samples, 4.08%)</title><rect x="275.7" y="739.0" width="48.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="278.7" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (10 samples, 0.38%)</title><rect x="276.1" y="723.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="279.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (10 samples, 0.38%)</title><rect x="276.1" y="707.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="279.1" y="718.0"></text>
</g>
<g>
<title>epoll_wait (10 samples, 0.38%)</title><rect x="276.1" y="691.0" width="4.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="279.1" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.38%)</title><rect x="276.1" y="675.0" width="4.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="279.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.38%)</title><rect x="276.1" y="659.0" width="4.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="279.1" y="670.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (9 samples, 0.34%)</title><rect x="276.6" y="643.0" width="4.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="279.6" y="654.0"></text>
</g>
<g>
<title>do_epoll_wait (8 samples, 0.30%)</title><rect x="277.0" y="627.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="280.0" y="638.0"></text>
</g>
<g>
<title>ep_poll (8 samples, 0.30%)</title><rect x="277.0" y="611.0" width="3.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="280.0" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (3 samples, 0.11%)</title><rect x="277.5" y="595.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="280.5" y="606.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.11%)</title><rect x="277.5" y="579.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="280.5" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.08%)</title><rect x="277.9" y="563.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="280.9" y="574.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.08%)</title><rect x="277.9" y="547.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="280.9" y="558.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="278.4" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="281.4" y="542.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.15%)</title><rect x="278.8" y="595.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="281.8" y="606.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.08%)</title><rect x="279.7" y="579.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="282.7" y="590.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="279.7" y="563.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="282.7" y="574.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="280.2" y="563.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="283.2" y="574.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.04%)</title><rect x="280.2" y="547.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="283.2" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (95 samples, 3.62%)</title><rect x="280.6" y="723.0" width="42.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="283.6" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (95 samples, 3.62%)</title><rect x="280.6" y="707.0" width="42.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.6" y="718.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (56 samples, 2.13%)</title><rect x="280.6" y="691.0" width="25.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.6" y="702.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (47 samples, 1.79%)</title><rect x="281.5" y="675.0" width="21.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="284.5" y="686.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (47 samples, 1.79%)</title><rect x="281.5" y="659.0" width="21.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="284.5" y="670.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (47 samples, 1.79%)</title><rect x="281.5" y="643.0" width="21.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="284.5" y="654.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.08%)</title><rect x="281.5" y="627.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.5" y="638.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="282.0" y="611.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="282.0" y="595.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="282.0" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="285.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="282.0" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="285.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.entity (45 samples, 1.71%)</title><rect x="282.4" y="627.0" width="20.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="285.4" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="282.4" y="611.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="285.4" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="282.4" y="595.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="285.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.04%)</title><rect x="282.4" y="579.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="285.4" y="590.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (44 samples, 1.68%)</title><rect x="282.9" y="611.0" width="19.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="285.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (44 samples, 1.68%)</title><rect x="282.9" y="595.0" width="19.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="285.9" y="606.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (44 samples, 1.68%)</title><rect x="282.9" y="579.0" width="19.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="285.9" y="590.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (44 samples, 1.68%)</title><rect x="282.9" y="563.0" width="19.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="285.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (44 samples, 1.68%)</title><rect x="282.9" y="547.0" width="19.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="285.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (44 samples, 1.68%)</title><rect x="282.9" y="531.0" width="19.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="285.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (44 samples, 1.68%)</title><rect x="282.9" y="515.0" width="19.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (44 samples, 1.68%)</title><rect x="282.9" y="499.0" width="19.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (41 samples, 1.56%)</title><rect x="284.2" y="483.0" width="18.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="287.2" y="494.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.04%)</title><rect x="284.2" y="467.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="287.2" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.08%)</title><rect x="284.7" y="467.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="287.7" y="478.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.04%)</title><rect x="284.7" y="451.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="287.7" y="462.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="285.1" y="451.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="288.1" y="462.0"></text>
</g>
<g>
<title>__pthread_cond_signal (37 samples, 1.41%)</title><rect x="285.6" y="467.0" width="16.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="288.6" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 1.41%)</title><rect x="285.6" y="451.0" width="16.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="288.6" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 1.41%)</title><rect x="285.6" y="435.0" width="16.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="288.6" y="446.0"></text>
</g>
<g>
<title>__se_sys_futex (33 samples, 1.26%)</title><rect x="286.9" y="419.0" width="14.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="289.9" y="430.0"></text>
</g>
<g>
<title>do_futex (33 samples, 1.26%)</title><rect x="286.9" y="403.0" width="14.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="289.9" y="414.0"></text>
</g>
<g>
<title>futex_wake (31 samples, 1.18%)</title><rect x="287.8" y="387.0" width="13.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="290.8" y="398.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="288.3" y="371.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="291.3" y="382.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="288.3" y="355.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="291.3" y="366.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.04%)</title><rect x="288.7" y="371.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="291.7" y="382.0"></text>
</g>
<g>
<title>wake_up_q (28 samples, 1.07%)</title><rect x="289.2" y="371.0" width="12.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="292.2" y="382.0"></text>
</g>
<g>
<title>try_to_wake_up (28 samples, 1.07%)</title><rect x="289.2" y="355.0" width="12.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="292.2" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (28 samples, 1.07%)</title><rect x="289.2" y="339.0" width="12.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="292.2" y="350.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="301.7" y="419.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="304.7" y="430.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.04%)</title><rect x="302.2" y="467.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="305.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.23%)</title><rect x="302.6" y="675.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="305.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.04%)</title><rect x="303.5" y="659.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="306.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="303.5" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="306.5" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="303.5" y="627.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="306.5" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.11%)</title><rect x="304.0" y="659.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="307.0" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.11%)</title><rect x="304.0" y="643.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="307.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="304.9" y="627.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="307.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="304.9" y="611.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="307.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.04%)</title><rect x="305.3" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="308.3" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="305.3" y="659.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.3" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="305.3" y="643.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="305.3" y="627.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="308.3" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (39 samples, 1.49%)</title><rect x="305.8" y="691.0" width="17.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="308.8" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (39 samples, 1.49%)</title><rect x="305.8" y="675.0" width="17.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="308.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="305.8" y="659.0" width="2.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="308.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="305.8" y="643.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="308.8" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.19%)</title><rect x="305.8" y="627.0" width="2.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="308.8" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="305.8" y="611.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="308.8" y="622.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="306.2" y="611.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="309.2" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.11%)</title><rect x="306.7" y="611.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="309.7" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.08%)</title><rect x="307.1" y="595.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="310.1" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="308.0" y="627.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="311.0" y="638.0"></text>
</g>
<g>
<title>recv (33 samples, 1.26%)</title><rect x="308.5" y="659.0" width="14.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="311.5" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 1.14%)</title><rect x="309.8" y="643.0" width="13.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="312.8" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 1.14%)</title><rect x="309.8" y="627.0" width="13.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="312.8" y="638.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (29 samples, 1.10%)</title><rect x="310.3" y="611.0" width="13.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="313.3" y="622.0"></text>
</g>
<g>
<title>__sys_recvfrom (29 samples, 1.10%)</title><rect x="310.3" y="595.0" width="13.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="313.3" y="606.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="310.3" y="579.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="313.3" y="590.0"></text>
</g>
<g>
<title>inet6_recvmsg (27 samples, 1.03%)</title><rect x="310.7" y="579.0" width="12.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="313.7" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (27 samples, 1.03%)</title><rect x="310.7" y="563.0" width="12.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="313.7" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.19%)</title><rect x="313.0" y="547.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="316.0" y="558.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.11%)</title><rect x="313.0" y="531.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="316.0" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.11%)</title><rect x="313.0" y="515.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="316.0" y="526.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.11%)</title><rect x="313.0" y="499.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="316.0" y="510.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.08%)</title><rect x="314.3" y="531.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="317.3" y="542.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.08%)</title><rect x="315.2" y="547.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="318.2" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.08%)</title><rect x="315.2" y="531.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="318.2" y="542.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="315.7" y="515.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="318.7" y="526.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.04%)</title><rect x="315.7" y="499.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="318.7" y="510.0"></text>
</g>
<g>
<title>ns_to_timespec64 (1 samples, 0.04%)</title><rect x="316.1" y="547.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="319.1" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.27%)</title><rect x="316.6" y="547.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="319.6" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (7 samples, 0.27%)</title><rect x="316.6" y="531.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="319.6" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.08%)</title><rect x="317.9" y="515.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="320.9" y="526.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.04%)</title><rect x="318.4" y="499.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="321.4" y="510.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="318.4" y="483.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="321.4" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.08%)</title><rect x="318.8" y="515.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="321.8" y="526.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.08%)</title><rect x="318.8" y="499.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="321.8" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="319.3" y="483.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="322.3" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.15%)</title><rect x="319.7" y="547.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="322.7" y="558.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="321.1" y="531.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="324.1" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="321.5" y="547.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="324.5" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="321.5" y="531.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="324.5" y="542.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="321.5" y="515.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="324.5" y="526.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (2 samples, 0.08%)</title><rect x="322.0" y="547.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="325.0" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="322.9" y="579.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="325.9" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="322.9" y="563.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="325.9" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="323.3" y="723.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="326.3" y="734.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="323.3" y="707.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="326.3" y="718.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="323.3" y="691.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="326.3" y="702.0"></text>
</g>
<g>
<title>[NIO Worker #10 tid=1082466] (282 samples, 10.74%)</title><rect x="323.8" y="755.0" width="126.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="326.8" y="766.0">[NIO Worker #10 ..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="323.8" y="739.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="326.8" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.04%)</title><rect x="323.8" y="723.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="326.8" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (1 samples, 0.04%)</title><rect x="323.8" y="707.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="326.8" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.04%)</title><rect x="323.8" y="691.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="326.8" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (1 samples, 0.04%)</title><rect x="323.8" y="675.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="326.8" y="686.0"></text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.11%)</title><rect x="324.2" y="739.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="327.2" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.11%)</title><rect x="324.2" y="723.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="327.2" y="734.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.11%)</title><rect x="324.2" y="707.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="327.2" y="718.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.11%)</title><rect x="324.2" y="691.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="327.2" y="702.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.04%)</title><rect x="325.6" y="739.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="328.6" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="325.6" y="723.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="328.6" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (277 samples, 10.55%)</title><rect x="326.0" y="739.0" width="124.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="329.0" y="750.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (277 samples, 10.55%)</title><rect x="326.0" y="723.0" width="124.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="329.0" y="734.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (277 samples, 10.55%)</title><rect x="326.0" y="707.0" width="124.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="329.0" y="718.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.04%)</title><rect x="326.0" y="691.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="329.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="326.0" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="329.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (23 samples, 0.88%)</title><rect x="326.5" y="691.0" width="10.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (23 samples, 0.88%)</title><rect x="326.5" y="675.0" width="10.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (23 samples, 0.88%)</title><rect x="326.5" y="659.0" width="10.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (2 samples, 0.08%)</title><rect x="326.5" y="643.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.08%)</title><rect x="326.5" y="627.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (21 samples, 0.80%)</title><rect x="327.4" y="643.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="330.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (19 samples, 0.72%)</title><rect x="327.8" y="627.0" width="8.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="330.8" y="638.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="330.1" y="611.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="333.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (13 samples, 0.50%)</title><rect x="330.5" y="611.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="333.5" y="622.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="331.0" y="595.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="334.0" y="606.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.08%)</title><rect x="331.4" y="595.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="334.4" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.04%)</title><rect x="331.4" y="579.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="334.4" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="331.9" y="579.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="334.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.34%)</title><rect x="332.3" y="595.0" width="4.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="335.3" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (9 samples, 0.34%)</title><rect x="332.3" y="579.0" width="4.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="335.3" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.34%)</title><rect x="332.3" y="563.0" width="4.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="335.3" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.34%)</title><rect x="332.3" y="547.0" width="4.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="335.3" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (9 samples, 0.34%)</title><rect x="332.3" y="531.0" width="4.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="335.3" y="542.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.23%)</title><rect x="332.8" y="515.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="335.8" y="526.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.19%)</title><rect x="333.2" y="499.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="336.2" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.11%)</title><rect x="334.1" y="483.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="337.1" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.04%)</title><rect x="335.0" y="467.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="338.0" y="478.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.04%)</title><rect x="335.0" y="451.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="338.0" y="462.0"></text>
</g>
<g>
<title>get_timespec64 (2 samples, 0.08%)</title><rect x="335.5" y="515.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="338.5" y="526.0"></text>
</g>
<g>
<title>_copy_from_user (2 samples, 0.08%)</title><rect x="335.5" y="499.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="338.5" y="510.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.04%)</title><rect x="336.4" y="627.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="339.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$54/953807481.run (253 samples, 9.64%)</title><rect x="336.8" y="691.0" width="113.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="339.8" y="702.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (253 samples, 9.64%)</title><rect x="336.8" y="675.0" width="113.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="339.8" y="686.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.getEntity (252 samples, 9.60%)</title><rect x="336.8" y="659.0" width="113.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="339.8" y="670.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.get (142 samples, 5.41%)</title><rect x="336.8" y="643.0" width="63.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="339.8" y="654.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (140 samples, 5.33%)</title><rect x="336.8" y="627.0" width="62.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="339.8" y="638.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (140 samples, 5.33%)</title><rect x="336.8" y="611.0" width="62.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="339.8" y="622.0">org/ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (136 samples, 5.18%)</title><rect x="337.3" y="595.0" width="61.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="340.3" y="606.0">Java_o..</text>
</g>
<g>
<title>__libc_free (2 samples, 0.08%)</title><rect x="337.3" y="579.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="340.3" y="590.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.04%)</title><rect x="338.2" y="579.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="341.2" y="590.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.04%)</title><rect x="338.6" y="579.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="341.6" y="590.0"></text>
</g>
<g>
<title>operator delete[](void*) (2 samples, 0.08%)</title><rect x="339.1" y="579.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="342.1" y="590.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (128 samples, 4.88%)</title><rect x="340.0" y="579.0" width="57.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="343.0" y="590.0">rocksd..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="340.4" y="563.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="343.4" y="574.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (2 samples, 0.08%)</title><rect x="340.8" y="563.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="343.8" y="574.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.08%)</title><rect x="341.7" y="563.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="344.7" y="574.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.08%)</title><rect x="342.6" y="563.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="345.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (111 samples, 4.23%)</title><rect x="343.5" y="563.0" width="49.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="346.5" y="574.0">rocks..</text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="343.5" y="547.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="346.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (108 samples, 4.11%)</title><rect x="344.0" y="547.0" width="48.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="347.0" y="558.0">rock..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (2 samples, 0.08%)</title><rect x="344.4" y="531.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="347.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (2 samples, 0.08%)</title><rect x="344.4" y="515.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="347.4" y="526.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.08%)</title><rect x="344.4" y="499.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="347.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (105 samples, 4.00%)</title><rect x="345.3" y="531.0" width="47.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="348.3" y="542.0">rock..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="345.3" y="515.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="348.3" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="345.8" y="515.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="348.8" y="526.0"></text>
</g>
<g>
<title>_init (2 samples, 0.08%)</title><rect x="346.7" y="515.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="349.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (97 samples, 3.70%)</title><rect x="347.6" y="515.0" width="43.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="350.6" y="526.0">rock..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.08%)</title><rect x="348.9" y="499.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="351.9" y="510.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (3 samples, 0.11%)</title><rect x="349.8" y="499.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="352.8" y="510.0"></text>
</g>
<g>
<title>_init (3 samples, 0.11%)</title><rect x="351.2" y="499.0" width="1.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="354.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.04%)</title><rect x="352.5" y="499.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="355.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (6 samples, 0.23%)</title><rect x="353.0" y="499.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="356.0" y="510.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="353.0" y="483.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="356.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (5 samples, 0.19%)</title><rect x="353.4" y="483.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="356.4" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="354.8" y="467.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="357.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="355.2" y="467.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="358.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.04%)</title><rect x="355.7" y="499.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="358.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::MergeContext*, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="356.1" y="499.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="359.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long) (1 samples, 0.04%)</title><rect x="356.6" y="499.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="359.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (23 samples, 0.88%)</title><rect x="357.0" y="499.0" width="10.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="360.0" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (18 samples, 0.69%)</title><rect x="358.4" y="483.0" width="8.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="361.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (18 samples, 0.69%)</title><rect x="358.4" y="467.0" width="8.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="361.4" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="361.1" y="451.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="364.1" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.11%)</title><rect x="361.5" y="451.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="364.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 0.30%)</title><rect x="362.9" y="451.0" width="3.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="365.9" y="462.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (3 samples, 0.11%)</title><rect x="364.7" y="435.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="367.7" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="366.0" y="435.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="369.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (2 samples, 0.08%)</title><rect x="366.5" y="483.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="369.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="367.4" y="499.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="370.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::StopWatchNano::StopWatchNano(rocksdb::Env*, bool) (1 samples, 0.04%)</title><rect x="367.8" y="499.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="370.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.04%)</title><rect x="368.3" y="499.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="371.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (50 samples, 1.90%)</title><rect x="368.7" y="499.0" width="22.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="371.7" y="510.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (2 samples, 0.08%)</title><rect x="369.2" y="483.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="372.2" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="369.6" y="467.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="372.6" y="478.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="369.6" y="451.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="372.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::FileIndexer::GetNextLevelIndex(unsigned long, unsigned long, int, int, int*, int*) const (2 samples, 0.08%)</title><rect x="370.1" y="483.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="373.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int) (45 samples, 1.71%)</title><rect x="371.0" y="483.0" width="20.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="374.0" y="494.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="371.4" y="467.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="374.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (40 samples, 1.52%)</title><rect x="371.9" y="467.0" width="17.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="374.9" y="478.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="372.3" y="451.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="375.3" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="372.8" y="451.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="375.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::IndexBlockIter*, bool, bool) (1 samples, 0.04%)</title><rect x="373.2" y="451.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="376.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetFilter(rocksdb::FilePrefetchBuffer*, rocksdb::BlockHandle const&amp;, bool, bool, rocksdb::GetContext*, rocksdb::SliceTransform const*) const (2 samples, 0.08%)</title><rect x="373.7" y="451.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="376.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::DelegateCleanupsTo(rocksdb::Cleanable*) (1 samples, 0.04%)</title><rect x="374.6" y="451.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="377.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (13 samples, 0.50%)</title><rect x="375.0" y="451.0" width="5.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="378.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (11 samples, 0.42%)</title><rect x="375.5" y="435.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="378.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, unsigned long, bool, rocksdb::GetContext*) (5 samples, 0.19%)</title><rect x="375.9" y="419.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="378.9" y="430.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (3 samples, 0.11%)</title><rect x="376.4" y="403.0" width="1.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="379.4" y="414.0"></text>
</g>
<g>
<title>MurmurHash64A(void const*, int, unsigned int) (1 samples, 0.04%)</title><rect x="376.4" y="387.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="379.4" y="398.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="376.8" y="387.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="379.8" y="398.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="376.8" y="371.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="379.8" y="382.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.04%)</title><rect x="377.3" y="387.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="380.3" y="398.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="377.7" y="403.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="380.7" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::PutDataBlockToCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockContents*, rocksdb::CompressionType, unsigned int, rocksdb::UncompressionDict const&amp;, unsigned long, unsigned long, rocksdb::MemoryAllocator*, bool, rocksdb::Cache::Priority, rocksdb::GetContext*) (1 samples, 0.04%)</title><rect x="378.2" y="419.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="381.2" y="430.0"></text>
</g>
<g>
<title>__malloc_usable_size (1 samples, 0.04%)</title><rect x="378.2" y="403.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="381.2" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (4 samples, 0.15%)</title><rect x="378.6" y="419.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="381.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (4 samples, 0.15%)</title><rect x="378.6" y="403.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="381.6" y="414.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (4 samples, 0.15%)</title><rect x="378.6" y="387.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="381.6" y="398.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (4 samples, 0.15%)</title><rect x="378.6" y="371.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="381.6" y="382.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (4 samples, 0.15%)</title><rect x="378.6" y="355.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="381.6" y="366.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (4 samples, 0.15%)</title><rect x="378.6" y="339.0" width="1.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="381.6" y="350.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (4 samples, 0.15%)</title><rect x="378.6" y="323.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="381.6" y="334.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (4 samples, 0.15%)</title><rect x="378.6" y="307.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="381.6" y="318.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="380.0" y="291.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="383.0" y="302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="380.0" y="275.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="383.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="380.4" y="435.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="383.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (8 samples, 0.30%)</title><rect x="380.9" y="451.0" width="3.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="383.9" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="382.7" y="435.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="385.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.11%)</title><rect x="383.1" y="435.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="386.1" y="446.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="383.1" y="419.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="386.1" y="430.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="383.6" y="419.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="386.6" y="430.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="384.0" y="419.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="387.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (1 samples, 0.04%)</title><rect x="384.5" y="451.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="387.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="384.5" y="435.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="387.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="384.5" y="419.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="387.5" y="430.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (2 samples, 0.08%)</title><rect x="384.9" y="451.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="387.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::IndexBlockIter() (1 samples, 0.04%)</title><rect x="385.8" y="451.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="388.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (7 samples, 0.27%)</title><rect x="386.3" y="451.0" width="3.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="389.3" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="388.0" y="435.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="391.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="388.9" y="435.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="391.9" y="446.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="388.9" y="419.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="391.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="389.4" y="451.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="392.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="389.8" y="467.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="392.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="390.3" y="467.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="393.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::value() const (1 samples, 0.04%)</title><rect x="390.7" y="467.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="393.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.04%)</title><rect x="391.2" y="515.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="394.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (2 samples, 0.08%)</title><rect x="391.6" y="515.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="394.6" y="526.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (2 samples, 0.08%)</title><rect x="392.5" y="547.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="395.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.08%)</title><rect x="393.4" y="563.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="396.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (7 samples, 0.27%)</title><rect x="394.3" y="563.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="397.3" y="574.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="394.3" y="547.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="397.3" y="558.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.08%)</title><rect x="394.8" y="547.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="397.8" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="395.2" y="531.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="398.2" y="542.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.15%)</title><rect x="395.7" y="547.0" width="1.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="398.7" y="558.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.04%)</title><rect x="395.7" y="531.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="398.7" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="396.1" y="531.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="399.1" y="542.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.08%)</title><rect x="396.6" y="531.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="399.6" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="396.6" y="515.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="399.6" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="396.6" y="499.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="399.6" y="510.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="396.6" y="483.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="399.6" y="494.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="397.0" y="515.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="400.0" y="526.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (2 samples, 0.08%)</title><rect x="397.5" y="579.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="400.5" y="590.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="398.4" y="595.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="401.4" y="606.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="398.8" y="595.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="401.8" y="606.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.04%)</title><rect x="399.3" y="595.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="402.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (2 samples, 0.08%)</title><rect x="399.7" y="627.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="402.7" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.04%)</title><rect x="399.7" y="611.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="402.7" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="399.7" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="402.7" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.04%)</title><rect x="400.2" y="611.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="403.2" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="400.2" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="403.2" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="400.2" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="403.2" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="400.2" y="563.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="403.2" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="400.2" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="403.2" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="400.2" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="403.2" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.04%)</title><rect x="400.2" y="515.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="403.2" y="526.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="400.2" y="499.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="403.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (110 samples, 4.19%)</title><rect x="400.6" y="643.0" width="49.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="403.6" y="654.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (110 samples, 4.19%)</title><rect x="400.6" y="627.0" width="49.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="403.6" y="638.0">one/n..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="402.0" y="611.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="405.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (106 samples, 4.04%)</title><rect x="402.4" y="611.0" width="47.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="405.4" y="622.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.15%)</title><rect x="402.4" y="595.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="405.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.15%)</title><rect x="402.4" y="579.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="405.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="402.4" y="563.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="405.4" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.11%)</title><rect x="402.9" y="563.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="405.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.11%)</title><rect x="402.9" y="547.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="405.9" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (102 samples, 3.89%)</title><rect x="404.2" y="595.0" width="45.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="407.2" y="606.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (102 samples, 3.89%)</title><rect x="404.2" y="579.0" width="45.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.2" y="590.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (102 samples, 3.89%)</title><rect x="404.2" y="563.0" width="45.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.2" y="574.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (101 samples, 3.85%)</title><rect x="404.7" y="547.0" width="45.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="407.7" y="558.0">one/..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="405.6" y="531.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="408.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="405.6" y="515.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="408.6" y="526.0"></text>
</g>
<g>
<title>__send (1 samples, 0.04%)</title><rect x="405.6" y="499.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="408.6" y="510.0"></text>
</g>
<g>
<title>__send (98 samples, 3.73%)</title><rect x="406.0" y="531.0" width="44.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="409.0" y="542.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (93 samples, 3.54%)</title><rect x="408.3" y="515.0" width="41.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="411.3" y="526.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (93 samples, 3.54%)</title><rect x="408.3" y="499.0" width="41.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="411.3" y="510.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (91 samples, 3.47%)</title><rect x="409.2" y="483.0" width="40.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="412.2" y="494.0">__x..</text>
</g>
<g>
<title>__sys_sendto (91 samples, 3.47%)</title><rect x="409.2" y="467.0" width="40.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="412.2" y="478.0">__s..</text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="409.2" y="451.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="412.2" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (90 samples, 3.43%)</title><rect x="409.6" y="451.0" width="40.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="412.6" y="462.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.04%)</title><rect x="409.6" y="435.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="412.6" y="446.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.04%)</title><rect x="409.6" y="419.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="412.6" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (89 samples, 3.39%)</title><rect x="410.1" y="435.0" width="40.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="413.1" y="446.0">tcp..</text>
</g>
<g>
<title>release_sock (2 samples, 0.08%)</title><rect x="410.1" y="419.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="413.1" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.08%)</title><rect x="410.1" y="403.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="413.1" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (87 samples, 3.31%)</title><rect x="411.0" y="419.0" width="39.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="414.0" y="430.0">tcp..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.08%)</title><rect x="412.3" y="403.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="415.3" y="414.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.04%)</title><rect x="412.8" y="387.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="415.8" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (73 samples, 2.78%)</title><rect x="413.2" y="403.0" width="32.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="416.2" y="414.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (73 samples, 2.78%)</title><rect x="413.2" y="387.0" width="32.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="416.2" y="398.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (67 samples, 2.55%)</title><rect x="414.6" y="371.0" width="30.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="417.6" y="382.0">__..</text>
</g>
<g>
<title>__ip_queue_xmit (63 samples, 2.40%)</title><rect x="416.4" y="355.0" width="28.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="419.4" y="366.0">__..</text>
</g>
<g>
<title>ip_local_out (2 samples, 0.08%)</title><rect x="416.4" y="339.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="419.4" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.08%)</title><rect x="416.4" y="323.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="419.4" y="334.0"></text>
</g>
<g>
<title>ip_output (61 samples, 2.32%)</title><rect x="417.3" y="339.0" width="27.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="420.3" y="350.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (55 samples, 2.10%)</title><rect x="418.6" y="323.0" width="24.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="421.6" y="334.0">i..</text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.27%)</title><rect x="420.0" y="307.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="423.0" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.11%)</title><rect x="420.4" y="291.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="423.4" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.11%)</title><rect x="420.4" y="275.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="423.4" y="286.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.11%)</title><rect x="420.4" y="259.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="423.4" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.11%)</title><rect x="420.4" y="243.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="423.4" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="420.4" y="227.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="423.4" y="238.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="420.9" y="227.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="423.9" y="238.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.04%)</title><rect x="421.3" y="227.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="424.3" y="238.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (1 samples, 0.04%)</title><rect x="421.8" y="291.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="424.8" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.08%)</title><rect x="422.2" y="291.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="425.2" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (44 samples, 1.68%)</title><rect x="423.1" y="307.0" width="19.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="426.1" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (43 samples, 1.64%)</title><rect x="423.6" y="291.0" width="19.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="426.6" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (42 samples, 1.60%)</title><rect x="424.0" y="275.0" width="18.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="427.0" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (42 samples, 1.60%)</title><rect x="424.0" y="259.0" width="18.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="427.0" y="270.0"></text>
</g>
<g>
<title>net_rx_action (40 samples, 1.52%)</title><rect x="424.9" y="243.0" width="18.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="427.9" y="254.0"></text>
</g>
<g>
<title>process_backlog (40 samples, 1.52%)</title><rect x="424.9" y="227.0" width="18.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="427.9" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (39 samples, 1.49%)</title><rect x="425.4" y="211.0" width="17.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="428.4" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.19%)</title><rect x="425.4" y="195.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="428.4" y="206.0"></text>
</g>
<g>
<title>ip_rcv (34 samples, 1.30%)</title><rect x="427.6" y="195.0" width="15.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="430.6" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (32 samples, 1.22%)</title><rect x="428.1" y="179.0" width="14.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="431.1" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (32 samples, 1.22%)</title><rect x="428.1" y="163.0" width="14.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="431.1" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (32 samples, 1.22%)</title><rect x="428.1" y="147.0" width="14.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="431.1" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (32 samples, 1.22%)</title><rect x="428.1" y="131.0" width="14.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="431.1" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.04%)</title><rect x="428.1" y="115.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="431.1" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.11%)</title><rect x="428.5" y="115.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="431.5" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.08%)</title><rect x="429.0" y="99.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="432.0" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (28 samples, 1.07%)</title><rect x="429.9" y="115.0" width="12.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="432.9" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (28 samples, 1.07%)</title><rect x="429.9" y="99.0" width="12.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="432.9" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="430.3" y="83.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="433.3" y="94.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="430.3" y="67.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="433.3" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="430.3" y="51.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="433.3" y="62.0"></text>
</g>
<g>
<title>sock_def_readable (10 samples, 0.38%)</title><rect x="430.8" y="83.0" width="4.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="433.8" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.38%)</title><rect x="430.8" y="67.0" width="4.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="433.8" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.38%)</title><rect x="430.8" y="51.0" width="4.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="433.8" y="62.0"></text>
</g>
<g>
<title>tcp_ack (15 samples, 0.57%)</title><rect x="435.2" y="83.0" width="6.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="438.2" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.30%)</title><rect x="436.6" y="67.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="439.6" y="78.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.08%)</title><rect x="436.6" y="51.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="439.6" y="62.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.08%)</title><rect x="437.5" y="51.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="440.5" y="62.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.08%)</title><rect x="437.5" y="35.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="440.5" y="46.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.15%)</title><rect x="438.4" y="51.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="441.4" y="62.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="440.2" y="67.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="443.2" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="440.6" y="67.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="443.6" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.04%)</title><rect x="441.1" y="67.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="444.1" y="78.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.04%)</title><rect x="441.1" y="51.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="444.1" y="62.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.04%)</title><rect x="441.5" y="67.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="444.5" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.04%)</title><rect x="442.0" y="83.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="445.0" y="94.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.04%)</title><rect x="442.4" y="179.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="445.4" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.04%)</title><rect x="442.4" y="163.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="445.4" y="174.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="442.9" y="307.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="445.9" y="318.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.11%)</title><rect x="443.3" y="323.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="446.3" y="334.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.11%)</title><rect x="443.3" y="307.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="446.3" y="318.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="444.7" y="371.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="447.7" y="382.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="444.7" y="355.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="447.7" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.08%)</title><rect x="445.1" y="371.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="448.1" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="445.1" y="355.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="448.1" y="366.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="445.1" y="339.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="448.1" y="350.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.0 (1 samples, 0.04%)</title><rect x="445.6" y="355.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="448.6" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="446.0" y="403.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="449.0" y="414.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.04%)</title><rect x="446.0" y="387.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="449.0" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="446.0" y="371.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="449.0" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.19%)</title><rect x="446.5" y="403.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="449.5" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.15%)</title><rect x="446.5" y="387.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="449.5" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.04%)</title><rect x="446.5" y="371.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="449.5" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="446.5" y="355.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="449.5" y="366.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="446.9" y="371.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="449.9" y="382.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.08%)</title><rect x="447.4" y="371.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="450.4" y="382.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.04%)</title><rect x="448.3" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="451.3" y="398.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.04%)</title><rect x="448.7" y="403.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="451.7" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="449.2" y="403.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="452.2" y="414.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="449.6" y="403.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="452.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.putEntity (1 samples, 0.04%)</title><rect x="450.1" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.1" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="450.1" y="643.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.1" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="450.1" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="453.1" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="450.1" y="611.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="453.1" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="450.1" y="595.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.1" y="606.0"></text>
</g>
<g>
<title>[NIO Worker #13 tid=1082470] (269 samples, 10.25%)</title><rect x="450.5" y="755.0" width="121.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="453.5" y="766.0">[NIO Worker #13..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.08%)</title><rect x="450.5" y="739.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="453.5" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.08%)</title><rect x="450.5" y="723.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="453.5" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (2 samples, 0.08%)</title><rect x="450.5" y="707.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="453.5" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.08%)</title><rect x="450.5" y="691.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="453.5" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (1 samples, 0.04%)</title><rect x="451.0" y="675.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="454.0" y="686.0"></text>
</g>
<g>
<title>[not_walkable_Java] (6 samples, 0.23%)</title><rect x="451.4" y="739.0" width="2.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="454.4" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (6 samples, 0.23%)</title><rect x="451.4" y="723.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="454.4" y="734.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.23%)</title><rect x="451.4" y="707.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="454.4" y="718.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.19%)</title><rect x="451.9" y="691.0" width="2.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="454.9" y="702.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.04%)</title><rect x="454.1" y="739.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="457.1" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="454.1" y="723.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="457.1" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (260 samples, 9.90%)</title><rect x="454.6" y="739.0" width="116.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="457.6" y="750.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (260 samples, 9.90%)</title><rect x="454.6" y="723.0" width="116.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="457.6" y="734.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (260 samples, 9.90%)</title><rect x="454.6" y="707.0" width="116.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="457.6" y="718.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (27 samples, 1.03%)</title><rect x="454.6" y="691.0" width="12.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="457.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (27 samples, 1.03%)</title><rect x="454.6" y="675.0" width="12.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="457.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (27 samples, 1.03%)</title><rect x="454.6" y="659.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="457.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (5 samples, 0.19%)</title><rect x="454.6" y="643.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="457.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.19%)</title><rect x="454.6" y="627.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.6" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="456.4" y="611.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="459.4" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="456.4" y="595.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="459.4" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="456.4" y="579.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="459.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (22 samples, 0.84%)</title><rect x="456.8" y="643.0" width="9.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="459.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (22 samples, 0.84%)</title><rect x="456.8" y="627.0" width="9.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="459.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (18 samples, 0.69%)</title><rect x="458.2" y="611.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.2" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="458.2" y="595.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="461.2" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.04%)</title><rect x="458.6" y="595.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="461.6" y="606.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.23%)</title><rect x="459.1" y="595.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="462.1" y="606.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.08%)</title><rect x="459.1" y="579.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="462.1" y="590.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.08%)</title><rect x="460.0" y="579.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="463.0" y="590.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.04%)</title><rect x="460.9" y="579.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="463.9" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.04%)</title><rect x="461.3" y="579.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="464.3" y="590.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="461.8" y="595.0" width="4.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="464.8" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (9 samples, 0.34%)</title><rect x="461.8" y="579.0" width="4.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="464.8" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.34%)</title><rect x="461.8" y="563.0" width="4.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="464.8" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.34%)</title><rect x="461.8" y="547.0" width="4.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="464.8" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (6 samples, 0.23%)</title><rect x="462.2" y="531.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="465.2" y="542.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.15%)</title><rect x="462.7" y="515.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="465.7" y="526.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.15%)</title><rect x="462.7" y="499.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="465.7" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.08%)</title><rect x="462.7" y="483.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="465.7" y="494.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.04%)</title><rect x="462.7" y="467.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="465.7" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="462.7" y="451.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="465.7" y="462.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="463.1" y="467.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="466.1" y="478.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="463.1" y="451.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="466.1" y="462.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.08%)</title><rect x="463.6" y="483.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="466.6" y="494.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="463.6" y="467.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="466.6" y="478.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.04%)</title><rect x="463.6" y="451.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="466.6" y="462.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.04%)</title><rect x="464.0" y="467.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="467.0" y="478.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.04%)</title><rect x="464.5" y="515.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="467.5" y="526.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.04%)</title><rect x="464.5" y="499.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="467.5" y="510.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="464.5" y="483.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="467.5" y="494.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="464.9" y="531.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="467.9" y="542.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="465.4" y="531.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="468.4" y="542.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.04%)</title><rect x="465.8" y="579.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="468.8" y="590.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.04%)</title><rect x="466.3" y="611.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="469.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$54/953807481.run (232 samples, 8.84%)</title><rect x="466.7" y="691.0" width="104.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="469.7" y="702.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (232 samples, 8.84%)</title><rect x="466.7" y="675.0" width="104.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="469.7" y="686.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.getEntity (232 samples, 8.84%)</title><rect x="466.7" y="659.0" width="104.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="469.7" y="670.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.get (138 samples, 5.26%)</title><rect x="466.7" y="643.0" width="62.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="469.7" y="654.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (136 samples, 5.18%)</title><rect x="466.7" y="627.0" width="61.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.7" y="638.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (136 samples, 5.18%)</title><rect x="466.7" y="611.0" width="61.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="469.7" y="622.0">org/ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (129 samples, 4.91%)</title><rect x="466.7" y="595.0" width="58.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="469.7" y="606.0">Java_o..</text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="466.7" y="579.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="469.7" y="590.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.04%)</title><rect x="467.2" y="579.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="470.2" y="590.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.04%)</title><rect x="467.6" y="579.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="470.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.04%)</title><rect x="468.1" y="579.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="471.1" y="590.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (121 samples, 4.61%)</title><rect x="468.5" y="579.0" width="54.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="471.5" y="590.0">rocks..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="469.0" y="563.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="472.0" y="574.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (3 samples, 0.11%)</title><rect x="469.4" y="563.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="472.4" y="574.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.04%)</title><rect x="470.8" y="563.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="473.8" y="574.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="471.2" y="563.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="474.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (109 samples, 4.15%)</title><rect x="471.7" y="563.0" width="49.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="474.7" y="574.0">rock..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (107 samples, 4.08%)</title><rect x="471.7" y="547.0" width="48.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="474.7" y="558.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="473.5" y="531.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="476.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (4 samples, 0.15%)</title><rect x="473.9" y="531.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="476.9" y="542.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="474.4" y="515.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="477.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="474.8" y="515.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="477.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Unref(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="475.3" y="515.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="478.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (97 samples, 3.70%)</title><rect x="475.7" y="531.0" width="43.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="478.7" y="542.0">rock..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="475.7" y="515.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="478.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (2 samples, 0.08%)</title><rect x="476.2" y="515.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="479.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.08%)</title><rect x="477.1" y="515.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="480.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (89 samples, 3.39%)</title><rect x="478.0" y="515.0" width="40.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="481.0" y="526.0">roc..</text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.04%)</title><rect x="478.9" y="499.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="481.9" y="510.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="479.3" y="499.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="482.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (3 samples, 0.11%)</title><rect x="479.8" y="499.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="482.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="479.8" y="483.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="482.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.04%)</title><rect x="480.2" y="483.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="483.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.04%)</title><rect x="480.7" y="483.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="483.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.04%)</title><rect x="480.7" y="467.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="483.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (3 samples, 0.11%)</title><rect x="481.1" y="499.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="484.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.08%)</title><rect x="481.1" y="483.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="484.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.04%)</title><rect x="481.6" y="467.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="484.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.04%)</title><rect x="482.0" y="483.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="485.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.04%)</title><rect x="482.4" y="499.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="485.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (23 samples, 0.88%)</title><rect x="482.9" y="499.0" width="10.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="485.9" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (19 samples, 0.72%)</title><rect x="484.7" y="483.0" width="8.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="487.7" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="484.7" y="467.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="487.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (18 samples, 0.69%)</title><rect x="485.1" y="467.0" width="8.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="488.1" y="478.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="490.5" y="451.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="493.5" y="462.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="491.0" y="451.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="494.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.15%)</title><rect x="491.4" y="451.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="494.4" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="491.4" y="435.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="494.4" y="446.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (3 samples, 0.11%)</title><rect x="491.9" y="435.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="494.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.04%)</title><rect x="493.2" y="499.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="496.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (54 samples, 2.06%)</title><rect x="493.7" y="499.0" width="24.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="496.7" y="510.0">r..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="493.7" y="483.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="496.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="494.1" y="483.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="497.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int) (52 samples, 1.98%)</title><rect x="494.6" y="483.0" width="23.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="497.6" y="494.0">r..</text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="495.0" y="467.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="498.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*) const (1 samples, 0.04%)</title><rect x="495.5" y="467.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="498.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (45 samples, 1.71%)</title><rect x="495.9" y="467.0" width="20.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="498.9" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (2 samples, 0.08%)</title><rect x="497.3" y="451.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="500.3" y="462.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="498.2" y="451.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="501.2" y="462.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="498.6" y="451.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="501.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="499.1" y="451.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="502.1" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::BlockHandle&gt;::~BlockIter() (1 samples, 0.04%)</title><rect x="499.5" y="451.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="502.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::Block::NewIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::Comparator const*, rocksdb::Comparator const*, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.04%)</title><rect x="500.0" y="451.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="503.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (12 samples, 0.46%)</title><rect x="500.4" y="451.0" width="5.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="503.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (10 samples, 0.38%)</title><rect x="500.4" y="435.0" width="4.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="503.4" y="446.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.04%)</title><rect x="500.4" y="419.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="503.4" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetCacheKey(char const*, unsigned long, rocksdb::BlockHandle const&amp;, char*) (1 samples, 0.04%)</title><rect x="500.9" y="419.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="503.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, unsigned long, bool, rocksdb::GetContext*) (6 samples, 0.23%)</title><rect x="501.3" y="419.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="504.3" y="430.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (6 samples, 0.23%)</title><rect x="501.3" y="403.0" width="2.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="504.3" y="414.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="501.8" y="387.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="504.8" y="398.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetShard(int) const (1 samples, 0.04%)</title><rect x="502.2" y="387.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="505.2" y="398.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="502.7" y="387.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="505.7" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.04%)</title><rect x="502.7" y="371.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="505.7" y="382.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (1 samples, 0.04%)</title><rect x="503.1" y="387.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="506.1" y="398.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.04%)</title><rect x="503.6" y="387.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="506.6" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (2 samples, 0.08%)</title><rect x="504.0" y="419.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="507.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(unsigned long, unsigned long, rocksdb::Slice*, char*) const (1 samples, 0.04%)</title><rect x="504.0" y="403.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="507.0" y="414.0"></text>
</g>
<g>
<title>__libc_pread64 (1 samples, 0.04%)</title><rect x="504.0" y="387.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="507.0" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="504.0" y="371.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="507.0" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="504.0" y="355.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="507.0" y="366.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.04%)</title><rect x="504.0" y="339.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="507.0" y="350.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.04%)</title><rect x="504.0" y="323.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="507.0" y="334.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.04%)</title><rect x="504.0" y="307.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="507.0" y="318.0"></text>
</g>
<g>
<title>shmem_file_read_iter (1 samples, 0.04%)</title><rect x="504.0" y="291.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="507.0" y="302.0"></text>
</g>
<g>
<title>shmem_getpage_gfp.isra.0 (1 samples, 0.04%)</title><rect x="504.0" y="275.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="507.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (1 samples, 0.04%)</title><rect x="504.5" y="403.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="507.5" y="414.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (1 samples, 0.04%)</title><rect x="504.5" y="387.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="507.5" y="398.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (1 samples, 0.04%)</title><rect x="504.5" y="371.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="507.5" y="382.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (1 samples, 0.04%)</title><rect x="504.5" y="355.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="507.5" y="366.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="504.5" y="339.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="507.5" y="350.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="504.5" y="323.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="507.5" y="334.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (1 samples, 0.04%)</title><rect x="504.5" y="307.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="507.5" y="318.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="504.5" y="291.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="507.5" y="302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="504.5" y="275.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="507.5" y="286.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="504.5" y="259.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="507.5" y="270.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::Block::NewIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::Comparator const*, rocksdb::Comparator const*, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (2 samples, 0.08%)</title><rect x="504.9" y="435.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="507.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (5 samples, 0.19%)</title><rect x="505.8" y="451.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="508.8" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="506.7" y="435.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="509.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.08%)</title><rect x="507.2" y="435.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="510.2" y="446.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="507.6" y="419.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="510.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (2 samples, 0.08%)</title><rect x="508.1" y="451.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="511.1" y="462.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="508.5" y="435.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="511.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (2 samples, 0.08%)</title><rect x="509.0" y="451.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="512.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (13 samples, 0.50%)</title><rect x="509.9" y="451.0" width="5.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="512.9" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.11%)</title><rect x="513.0" y="435.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="516.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.11%)</title><rect x="514.4" y="435.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="517.4" y="446.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="514.8" y="419.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="517.8" y="430.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="515.3" y="419.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="518.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="515.7" y="451.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="518.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::BlockHandle&gt;::Valid() const (1 samples, 0.04%)</title><rect x="516.2" y="467.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="519.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (2 samples, 0.08%)</title><rect x="516.6" y="467.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="519.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="517.5" y="467.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="520.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="518.0" y="515.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="521.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long) (1 samples, 0.04%)</title><rect x="518.4" y="515.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="521.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="518.9" y="515.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="521.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="519.3" y="531.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="522.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.04%)</title><rect x="519.8" y="547.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="522.8" y="558.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="520.2" y="547.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="523.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.04%)</title><rect x="520.7" y="563.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="523.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (4 samples, 0.15%)</title><rect x="521.1" y="563.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="524.1" y="574.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.15%)</title><rect x="521.1" y="547.0" width="1.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="524.1" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.08%)</title><rect x="521.6" y="531.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="524.6" y="542.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="522.5" y="531.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="525.5" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="522.5" y="515.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="525.5" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="522.5" y="499.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="525.5" y="510.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (4 samples, 0.15%)</title><rect x="522.9" y="579.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="525.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="524.7" y="595.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="527.7" y="606.0"></text>
</g>
<g>
<title>_int_free (2 samples, 0.08%)</title><rect x="524.7" y="579.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="527.7" y="590.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.08%)</title><rect x="525.6" y="595.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="528.6" y="606.0"></text>
</g>
<g>
<title>_init (2 samples, 0.08%)</title><rect x="526.5" y="595.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="529.5" y="606.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.04%)</title><rect x="527.4" y="595.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="530.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (2 samples, 0.08%)</title><rect x="527.9" y="627.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="530.9" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.08%)</title><rect x="527.9" y="611.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="530.9" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="527.9" y="595.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="530.9" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="527.9" y="579.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.9" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="527.9" y="563.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="530.9" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="528.3" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (94 samples, 3.58%)</title><rect x="528.8" y="643.0" width="42.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="531.8" y="654.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (94 samples, 3.58%)</title><rect x="528.8" y="627.0" width="42.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="531.8" y="638.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="530.1" y="611.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="533.1" y="622.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="530.1" y="595.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="533.1" y="606.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="530.1" y="579.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="533.1" y="590.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="530.1" y="563.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="533.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (90 samples, 3.43%)</title><rect x="530.5" y="611.0" width="40.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="533.5" y="622.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.08%)</title><rect x="530.5" y="595.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="533.5" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.08%)</title><rect x="530.5" y="579.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="533.5" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="530.5" y="563.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="533.5" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="531.0" y="563.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="534.0" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="531.0" y="547.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="534.0" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (88 samples, 3.35%)</title><rect x="531.4" y="595.0" width="39.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="534.4" y="606.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (88 samples, 3.35%)</title><rect x="531.4" y="579.0" width="39.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="534.4" y="590.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (87 samples, 3.31%)</title><rect x="531.9" y="563.0" width="39.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="534.9" y="574.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (87 samples, 3.31%)</title><rect x="531.9" y="547.0" width="39.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="534.9" y="558.0">one..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="533.2" y="531.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="536.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="533.2" y="515.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="536.2" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="533.2" y="499.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="536.2" y="510.0"></text>
</g>
<g>
<title>__send (83 samples, 3.16%)</title><rect x="533.7" y="531.0" width="37.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="536.7" y="542.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (81 samples, 3.09%)</title><rect x="534.6" y="515.0" width="36.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="537.6" y="526.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (81 samples, 3.09%)</title><rect x="534.6" y="499.0" width="36.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="537.6" y="510.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (75 samples, 2.86%)</title><rect x="535.0" y="483.0" width="33.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="538.0" y="494.0">__..</text>
</g>
<g>
<title>__sys_sendto (75 samples, 2.86%)</title><rect x="535.0" y="467.0" width="33.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="538.0" y="478.0">__..</text>
</g>
<g>
<title>sock_sendmsg (70 samples, 2.67%)</title><rect x="535.9" y="451.0" width="31.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="538.9" y="462.0">so..</text>
</g>
<g>
<title>tcp_sendmsg (70 samples, 2.67%)</title><rect x="535.9" y="435.0" width="31.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="538.9" y="446.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (70 samples, 2.67%)</title><rect x="535.9" y="419.0" width="31.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="538.9" y="430.0">tc..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.08%)</title><rect x="537.3" y="403.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="540.3" y="414.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (58 samples, 2.21%)</title><rect x="538.2" y="403.0" width="26.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="541.2" y="414.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (58 samples, 2.21%)</title><rect x="538.2" y="387.0" width="26.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="541.2" y="398.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (51 samples, 1.94%)</title><rect x="539.5" y="371.0" width="23.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="542.5" y="382.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (46 samples, 1.75%)</title><rect x="540.4" y="355.0" width="20.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="543.4" y="366.0"></text>
</g>
<g>
<title>ip_output (46 samples, 1.75%)</title><rect x="540.4" y="339.0" width="20.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="543.4" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (44 samples, 1.68%)</title><rect x="540.9" y="323.0" width="19.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="543.9" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (12 samples, 0.46%)</title><rect x="540.9" y="307.0" width="5.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="543.9" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (11 samples, 0.42%)</title><rect x="540.9" y="291.0" width="4.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="543.9" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (9 samples, 0.34%)</title><rect x="541.8" y="275.0" width="4.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="544.8" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="542.2" y="259.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="545.2" y="270.0"></text>
</g>
<g>
<title>netif_rx (7 samples, 0.27%)</title><rect x="542.7" y="259.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="545.7" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (7 samples, 0.27%)</title><rect x="542.7" y="243.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="545.7" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.19%)</title><rect x="543.6" y="227.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="546.6" y="238.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.04%)</title><rect x="545.8" y="291.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="548.8" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (32 samples, 1.22%)</title><rect x="546.3" y="307.0" width="14.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="549.3" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (32 samples, 1.22%)</title><rect x="546.3" y="291.0" width="14.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="549.3" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (32 samples, 1.22%)</title><rect x="546.3" y="275.0" width="14.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="549.3" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (32 samples, 1.22%)</title><rect x="546.3" y="259.0" width="14.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="549.3" y="270.0"></text>
</g>
<g>
<title>net_rx_action (29 samples, 1.10%)</title><rect x="547.6" y="243.0" width="13.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="550.6" y="254.0"></text>
</g>
<g>
<title>process_backlog (28 samples, 1.07%)</title><rect x="548.1" y="227.0" width="12.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="551.1" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (28 samples, 1.07%)</title><rect x="548.1" y="211.0" width="12.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="551.1" y="222.0"></text>
</g>
<g>
<title>ip_rcv (28 samples, 1.07%)</title><rect x="548.1" y="195.0" width="12.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="551.1" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (28 samples, 1.07%)</title><rect x="548.1" y="179.0" width="12.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="551.1" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (27 samples, 1.03%)</title><rect x="548.5" y="163.0" width="12.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="551.5" y="174.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.04%)</title><rect x="548.5" y="147.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="551.5" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (26 samples, 0.99%)</title><rect x="549.0" y="147.0" width="11.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="552.0" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (26 samples, 0.99%)</title><rect x="549.0" y="131.0" width="11.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="552.0" y="142.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.04%)</title><rect x="549.4" y="115.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="552.4" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (22 samples, 0.84%)</title><rect x="549.9" y="115.0" width="9.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="552.9" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (22 samples, 0.84%)</title><rect x="549.9" y="99.0" width="9.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="552.9" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="549.9" y="83.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="552.9" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (6 samples, 0.23%)</title><rect x="550.3" y="83.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="553.3" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.23%)</title><rect x="550.3" y="67.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="553.3" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.23%)</title><rect x="550.3" y="51.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="553.3" y="62.0"></text>
</g>
<g>
<title>tcp_ack (14 samples, 0.53%)</title><rect x="553.0" y="83.0" width="6.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="556.0" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.15%)</title><rect x="556.2" y="67.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="559.2" y="78.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.08%)</title><rect x="556.2" y="51.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="559.2" y="62.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.08%)</title><rect x="557.1" y="51.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="560.1" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.08%)</title><rect x="558.0" y="67.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="561.0" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.04%)</title><rect x="558.9" y="67.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="561.9" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.04%)</title><rect x="559.3" y="83.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="562.3" y="94.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb.isra.0 (2 samples, 0.08%)</title><rect x="559.8" y="115.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="562.8" y="126.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.04%)</title><rect x="560.7" y="323.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="563.7" y="334.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="560.7" y="307.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="563.7" y="318.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="561.1" y="355.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="564.1" y="366.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.04%)</title><rect x="561.6" y="355.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="564.6" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.04%)</title><rect x="562.0" y="355.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="565.0" y="366.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="562.5" y="371.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="565.5" y="382.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="562.5" y="355.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="565.5" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="562.9" y="371.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="565.9" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="562.9" y="355.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="565.9" y="366.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="562.9" y="339.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="565.9" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="562.9" y="323.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="565.9" y="334.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.08%)</title><rect x="563.4" y="371.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="566.4" y="382.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="564.3" y="403.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="567.3" y="414.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.04%)</title><rect x="564.3" y="387.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="567.3" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="564.3" y="371.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="567.3" y="382.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="564.7" y="403.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="567.7" y="414.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.04%)</title><rect x="564.7" y="387.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="567.7" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.08%)</title><rect x="565.2" y="403.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="568.2" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.08%)</title><rect x="565.2" y="387.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="568.2" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.04%)</title><rect x="565.2" y="371.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="568.2" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="565.2" y="355.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="568.2" y="366.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="565.2" y="339.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="568.2" y="350.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="565.6" y="371.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="568.6" y="382.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.04%)</title><rect x="566.1" y="403.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="569.1" y="414.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.04%)</title><rect x="566.5" y="403.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="569.5" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="567.0" y="403.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="570.0" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="567.0" y="387.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="570.0" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="567.0" y="371.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="570.0" y="382.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.11%)</title><rect x="567.4" y="451.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="570.4" y="462.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.11%)</title><rect x="567.4" y="435.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="570.4" y="446.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.11%)</title><rect x="567.4" y="419.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="570.4" y="430.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (4 samples, 0.15%)</title><rect x="568.8" y="483.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="571.8" y="494.0"></text>
</g>
<g>
<title>__audit_syscall_exit (4 samples, 0.15%)</title><rect x="568.8" y="467.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="571.8" y="478.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.08%)</title><rect x="569.2" y="451.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="572.2" y="462.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.04%)</title><rect x="570.1" y="451.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="573.1" y="462.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="570.6" y="483.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="573.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (1 samples, 0.04%)</title><rect x="571.0" y="691.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.0" y="702.0"></text>
</g>
<g>
<title>[NIO Worker #14 tid=1082472] (268 samples, 10.21%)</title><rect x="571.5" y="755.0" width="120.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="574.5" y="766.0">[NIO Worker #14..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="571.5" y="739.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="574.5" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.04%)</title><rect x="571.5" y="723.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="574.5" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.04%)</title><rect x="571.5" y="707.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="574.5" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (1 samples, 0.04%)</title><rect x="571.5" y="691.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="574.5" y="702.0"></text>
</g>
<g>
<title>[not_walkable_Java] (4 samples, 0.15%)</title><rect x="571.9" y="739.0" width="1.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="574.9" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (4 samples, 0.15%)</title><rect x="571.9" y="723.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="574.9" y="734.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.15%)</title><rect x="571.9" y="707.0" width="1.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="574.9" y="718.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.15%)</title><rect x="571.9" y="691.0" width="1.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="574.9" y="702.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.04%)</title><rect x="573.7" y="739.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="576.7" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="573.7" y="723.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="576.7" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (262 samples, 9.98%)</title><rect x="574.2" y="739.0" width="117.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.2" y="750.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (262 samples, 9.98%)</title><rect x="574.2" y="723.0" width="117.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="577.2" y="734.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (262 samples, 9.98%)</title><rect x="574.2" y="707.0" width="117.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="577.2" y="718.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.04%)</title><rect x="574.2" y="691.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="577.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="574.2" y="675.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="577.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1 samples, 0.04%)</title><rect x="574.2" y="659.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="577.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (26 samples, 0.99%)</title><rect x="574.6" y="691.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (26 samples, 0.99%)</title><rect x="574.6" y="675.0" width="11.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="577.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (26 samples, 0.99%)</title><rect x="574.6" y="659.0" width="11.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (3 samples, 0.11%)</title><rect x="574.6" y="643.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="577.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.11%)</title><rect x="574.6" y="627.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="577.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (23 samples, 0.88%)</title><rect x="576.0" y="643.0" width="10.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="579.0" y="654.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.08%)</title><rect x="576.0" y="627.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="579.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (21 samples, 0.80%)</title><rect x="576.8" y="627.0" width="9.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="579.8" y="638.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.08%)</title><rect x="580.4" y="611.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="583.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 0.42%)</title><rect x="581.3" y="611.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="584.3" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.04%)</title><rect x="581.3" y="595.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="584.3" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="581.3" y="579.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="584.3" y="590.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="581.3" y="563.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="584.3" y="574.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="581.8" y="595.0" width="4.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="584.8" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (9 samples, 0.34%)</title><rect x="581.8" y="579.0" width="4.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="584.8" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.30%)</title><rect x="582.2" y="563.0" width="3.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="585.2" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.30%)</title><rect x="582.2" y="547.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="585.2" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (7 samples, 0.27%)</title><rect x="582.2" y="531.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="585.2" y="542.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.27%)</title><rect x="582.2" y="515.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="585.2" y="526.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.23%)</title><rect x="582.7" y="499.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="585.7" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 0.19%)</title><rect x="582.7" y="483.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="585.7" y="494.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (5 samples, 0.19%)</title><rect x="582.7" y="467.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="585.7" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.19%)</title><rect x="582.7" y="451.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="585.7" y="462.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.04%)</title><rect x="584.9" y="483.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="587.9" y="494.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="585.4" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="588.4" y="542.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.04%)</title><rect x="585.4" y="515.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="588.4" y="526.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="585.8" y="579.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="588.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$54/953807481.run (234 samples, 8.91%)</title><rect x="586.3" y="691.0" width="105.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="589.3" y="702.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (234 samples, 8.91%)</title><rect x="586.3" y="675.0" width="105.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="589.3" y="686.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.getEntity (234 samples, 8.91%)</title><rect x="586.3" y="659.0" width="105.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="589.3" y="670.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.get (132 samples, 5.03%)</title><rect x="586.7" y="643.0" width="59.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="589.7" y="654.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (132 samples, 5.03%)</title><rect x="586.7" y="627.0" width="59.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="589.7" y="638.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (132 samples, 5.03%)</title><rect x="586.7" y="611.0" width="59.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.7" y="622.0">org/ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (127 samples, 4.84%)</title><rect x="586.7" y="595.0" width="57.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="589.7" y="606.0">Java_o..</text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="587.2" y="579.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="590.2" y="590.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.04%)</title><rect x="587.6" y="579.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="590.6" y="590.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.04%)</title><rect x="588.1" y="579.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="591.1" y="590.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.08%)</title><rect x="588.5" y="579.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="591.5" y="590.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (120 samples, 4.57%)</title><rect x="589.4" y="579.0" width="54.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="592.4" y="590.0">rocks..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="590.3" y="563.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="593.3" y="574.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.11%)</title><rect x="590.8" y="563.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="593.8" y="574.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="591.2" y="547.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="594.2" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="591.7" y="547.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="594.7" y="558.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.04%)</title><rect x="592.1" y="563.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="595.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (108 samples, 4.11%)</title><rect x="592.6" y="563.0" width="48.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="595.6" y="574.0">rock..</text>
</g>
<g>
<title>_init (2 samples, 0.08%)</title><rect x="592.6" y="547.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="595.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (104 samples, 3.96%)</title><rect x="593.5" y="547.0" width="46.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="596.5" y="558.0">rock..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (6 samples, 0.23%)</title><rect x="593.9" y="531.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="596.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (2 samples, 0.08%)</title><rect x="593.9" y="515.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="596.9" y="526.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.08%)</title><rect x="593.9" y="499.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="596.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Unref(rocksdb::LRUHandle*) (2 samples, 0.08%)</title><rect x="594.8" y="515.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="597.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="595.7" y="515.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="598.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.04%)</title><rect x="596.2" y="515.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="599.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (97 samples, 3.70%)</title><rect x="596.6" y="531.0" width="43.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="599.6" y="542.0">rock..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.04%)</title><rect x="596.6" y="515.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="599.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (92 samples, 3.50%)</title><rect x="597.1" y="515.0" width="41.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="600.1" y="526.0">roc..</text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="598.0" y="499.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="601.0" y="510.0"></text>
</g>
<g>
<title>_init (2 samples, 0.08%)</title><rect x="598.4" y="499.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="601.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (6 samples, 0.23%)</title><rect x="599.3" y="499.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="602.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="600.2" y="483.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="603.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.08%)</title><rect x="600.7" y="483.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="603.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="601.1" y="467.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="604.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.04%)</title><rect x="601.6" y="483.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="604.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.04%)</title><rect x="601.6" y="467.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="604.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (3 samples, 0.11%)</title><rect x="602.0" y="499.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="605.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.08%)</title><rect x="602.0" y="483.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="605.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.04%)</title><rect x="602.5" y="467.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="605.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.04%)</title><rect x="602.9" y="483.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="605.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (17 samples, 0.65%)</title><rect x="603.4" y="499.0" width="7.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="606.4" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (17 samples, 0.65%)</title><rect x="603.4" y="483.0" width="7.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="606.4" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="603.4" y="467.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="606.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (14 samples, 0.53%)</title><rect x="603.8" y="467.0" width="6.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="606.8" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="607.4" y="451.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="610.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.15%)</title><rect x="608.3" y="451.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="611.3" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="609.7" y="435.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="612.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.08%)</title><rect x="610.1" y="467.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="613.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.04%)</title><rect x="611.0" y="499.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="614.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::StopWatchNano::StopWatchNano(rocksdb::Env*, bool) (1 samples, 0.04%)</title><rect x="611.5" y="499.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="614.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int) (1 samples, 0.04%)</title><rect x="611.9" y="499.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="614.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (58 samples, 2.21%)</title><rect x="612.4" y="499.0" width="26.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="615.4" y="510.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="613.7" y="483.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="616.7" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="614.2" y="483.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="617.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (1 samples, 0.04%)</title><rect x="615.1" y="483.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="618.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int) (51 samples, 1.94%)</title><rect x="615.5" y="483.0" width="22.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="618.5" y="494.0">r..</text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="616.9" y="467.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="619.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (47 samples, 1.79%)</title><rect x="617.3" y="467.0" width="21.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="620.3" y="478.0">r..</text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.04%)</title><rect x="618.2" y="451.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="621.2" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="618.7" y="451.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="621.7" y="462.0"></text>
</g>
<g>
<title>_init (2 samples, 0.08%)</title><rect x="619.1" y="451.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="622.1" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::BlockBasedTable::IndexReader&gt;*, rocksdb::GetContext*) (1 samples, 0.04%)</title><rect x="620.0" y="451.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="623.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::IndexBlockIter*, bool, bool) (1 samples, 0.04%)</title><rect x="620.0" y="435.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="623.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter* rocksdb::Block::NewIterator&lt;rocksdb::IndexBlockIter&gt;(rocksdb::Comparator const*, rocksdb::Comparator const*, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.04%)</title><rect x="620.0" y="419.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="623.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="620.5" y="451.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="623.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::BlockHandle&gt;::~BlockIter() (2 samples, 0.08%)</title><rect x="620.9" y="451.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="623.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (17 samples, 0.65%)</title><rect x="621.8" y="451.0" width="7.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="624.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (14 samples, 0.53%)</title><rect x="621.8" y="435.0" width="6.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="624.8" y="446.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.04%)</title><rect x="621.8" y="419.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="624.8" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, unsigned long, bool, rocksdb::GetContext*) (10 samples, 0.38%)</title><rect x="622.3" y="419.0" width="4.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="625.3" y="430.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (10 samples, 0.38%)</title><rect x="622.3" y="403.0" width="4.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="625.3" y="414.0"></text>
</g>
<g>
<title>MurmurHash64A(void const*, int, unsigned int) (3 samples, 0.11%)</title><rect x="623.6" y="387.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="626.6" y="398.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetShard(int) const (1 samples, 0.04%)</title><rect x="624.9" y="387.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="627.9" y="398.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="625.4" y="387.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="628.4" y="398.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.08%)</title><rect x="625.8" y="387.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="628.8" y="398.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.04%)</title><rect x="625.8" y="371.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="628.8" y="382.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="626.3" y="371.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="629.3" y="382.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="626.3" y="355.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="629.3" y="366.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (2 samples, 0.08%)</title><rect x="626.7" y="419.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="629.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (2 samples, 0.08%)</title><rect x="626.7" y="403.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="629.7" y="414.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (2 samples, 0.08%)</title><rect x="626.7" y="387.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="629.7" y="398.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (2 samples, 0.08%)</title><rect x="626.7" y="371.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="629.7" y="382.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (2 samples, 0.08%)</title><rect x="626.7" y="355.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="629.7" y="366.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (2 samples, 0.08%)</title><rect x="626.7" y="339.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="629.7" y="350.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (2 samples, 0.08%)</title><rect x="626.7" y="323.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="629.7" y="334.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (2 samples, 0.08%)</title><rect x="626.7" y="307.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="629.7" y="318.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="626.7" y="291.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="629.7" y="302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="626.7" y="275.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="629.7" y="286.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::TryFastAppend(char const*, unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="627.2" y="291.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="630.2" y="302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="627.2" y="275.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="630.2" y="286.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::Value(rocksdb::Cache::Handle*) (1 samples, 0.04%)</title><rect x="627.6" y="419.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="630.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (1 samples, 0.04%)</title><rect x="628.1" y="435.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="631.1" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::Block::NewIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::Comparator const*, rocksdb::Comparator const*, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.04%)</title><rect x="628.5" y="435.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="631.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="629.0" y="435.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="632.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (10 samples, 0.38%)</title><rect x="629.4" y="451.0" width="4.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="632.4" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="629.9" y="435.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="632.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (8 samples, 0.30%)</title><rect x="630.3" y="435.0" width="3.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="633.3" y="446.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (2 samples, 0.08%)</title><rect x="632.6" y="419.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="635.6" y="430.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="633.5" y="419.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="636.5" y="430.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::IndexBlockIter() (1 samples, 0.04%)</title><rect x="633.9" y="451.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="636.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (8 samples, 0.30%)</title><rect x="634.4" y="451.0" width="3.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="637.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.15%)</title><rect x="636.2" y="435.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="639.2" y="446.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="637.1" y="419.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="640.1" y="430.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="637.5" y="419.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="640.5" y="430.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="638.0" y="451.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="641.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="638.4" y="515.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="641.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (2 samples, 0.08%)</title><rect x="638.9" y="515.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="641.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="639.8" y="515.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="642.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.04%)</title><rect x="640.2" y="547.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="643.2" y="558.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="640.7" y="547.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="643.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (4 samples, 0.15%)</title><rect x="641.1" y="563.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="644.1" y="574.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.08%)</title><rect x="641.6" y="547.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="644.6" y="558.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="641.6" y="531.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="644.6" y="542.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="642.0" y="531.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="645.0" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="642.0" y="515.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="645.0" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="642.0" y="499.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="645.0" y="510.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.04%)</title><rect x="642.0" y="483.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="645.0" y="494.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="642.5" y="547.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="645.5" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="642.5" y="531.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="645.5" y="542.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="642.9" y="563.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="645.9" y="574.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.04%)</title><rect x="643.4" y="579.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="646.4" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="643.8" y="595.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="646.8" y="606.0"></text>
</g>
<g>
<title>_int_free (2 samples, 0.08%)</title><rect x="643.8" y="579.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="646.8" y="590.0"></text>
</g>
<g>
<title>__GI___libc_malloc (3 samples, 0.11%)</title><rect x="644.7" y="595.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="647.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (101 samples, 3.85%)</title><rect x="646.1" y="643.0" width="45.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="649.1" y="654.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (101 samples, 3.85%)</title><rect x="646.1" y="627.0" width="45.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="649.1" y="638.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.08%)</title><rect x="646.5" y="611.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="649.5" y="622.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="646.5" y="595.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="649.5" y="606.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="647.0" y="595.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="650.0" y="606.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="647.0" y="579.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="650.0" y="590.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="647.0" y="563.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="650.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (97 samples, 3.70%)</title><rect x="647.4" y="611.0" width="43.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="650.4" y="622.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.19%)</title><rect x="647.4" y="595.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.15%)</title><rect x="647.9" y="579.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="650.9" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.11%)</title><rect x="647.9" y="563.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="650.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="649.2" y="563.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="652.2" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="649.2" y="547.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="652.2" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (92 samples, 3.50%)</title><rect x="649.7" y="595.0" width="41.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="652.7" y="606.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (92 samples, 3.50%)</title><rect x="649.7" y="579.0" width="41.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="652.7" y="590.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (91 samples, 3.47%)</title><rect x="650.1" y="563.0" width="40.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="653.1" y="574.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (89 samples, 3.39%)</title><rect x="651.0" y="547.0" width="40.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="654.0" y="558.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="651.5" y="531.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="654.5" y="542.0"></text>
</g>
<g>
<title>__send (87 samples, 3.31%)</title><rect x="651.9" y="531.0" width="39.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="654.9" y="542.0">__s..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="652.8" y="515.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="655.8" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (84 samples, 3.20%)</title><rect x="653.3" y="515.0" width="37.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="656.3" y="526.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (84 samples, 3.20%)</title><rect x="653.3" y="499.0" width="37.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="656.3" y="510.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (80 samples, 3.05%)</title><rect x="653.7" y="483.0" width="36.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="656.7" y="494.0">__x..</text>
</g>
<g>
<title>__sys_sendto (80 samples, 3.05%)</title><rect x="653.7" y="467.0" width="36.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="656.7" y="478.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (78 samples, 2.97%)</title><rect x="653.7" y="451.0" width="35.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="656.7" y="462.0">soc..</text>
</g>
<g>
<title>tcp_sendmsg (78 samples, 2.97%)</title><rect x="653.7" y="435.0" width="35.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="656.7" y="446.0">tcp..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="653.7" y="419.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="656.7" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="653.7" y="403.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="656.7" y="414.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="654.2" y="419.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="657.2" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="654.2" y="403.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="657.2" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (76 samples, 2.90%)</title><rect x="654.6" y="419.0" width="34.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="657.6" y="430.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (56 samples, 2.13%)</title><rect x="655.5" y="403.0" width="25.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="658.5" y="414.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (56 samples, 2.13%)</title><rect x="655.5" y="387.0" width="25.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="658.5" y="398.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (50 samples, 1.90%)</title><rect x="656.9" y="371.0" width="22.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="659.9" y="382.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (48 samples, 1.83%)</title><rect x="656.9" y="355.0" width="21.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="659.9" y="366.0">_..</text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.04%)</title><rect x="657.3" y="339.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="660.3" y="350.0"></text>
</g>
<g>
<title>ip_output (46 samples, 1.75%)</title><rect x="657.8" y="339.0" width="20.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="660.8" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (46 samples, 1.75%)</title><rect x="657.8" y="323.0" width="20.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="660.8" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.15%)</title><rect x="658.7" y="307.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="661.7" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.08%)</title><rect x="659.1" y="291.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="662.1" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="659.6" y="275.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="662.6" y="286.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="659.6" y="259.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="662.6" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="659.6" y="243.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="662.6" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="659.6" y="227.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="662.6" y="238.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.04%)</title><rect x="660.0" y="291.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="663.0" y="302.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.04%)</title><rect x="660.0" y="275.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="663.0" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (40 samples, 1.52%)</title><rect x="660.5" y="307.0" width="17.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="663.5" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (40 samples, 1.52%)</title><rect x="660.5" y="291.0" width="17.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="663.5" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (39 samples, 1.49%)</title><rect x="660.9" y="275.0" width="17.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="663.9" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (39 samples, 1.49%)</title><rect x="660.9" y="259.0" width="17.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="663.9" y="270.0"></text>
</g>
<g>
<title>net_rx_action (37 samples, 1.41%)</title><rect x="661.8" y="243.0" width="16.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="664.8" y="254.0"></text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.08%)</title><rect x="662.3" y="227.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="665.3" y="238.0"></text>
</g>
<g>
<title>debug_smp_processor_id (1 samples, 0.04%)</title><rect x="662.7" y="211.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="665.7" y="222.0"></text>
</g>
<g>
<title>process_backlog (34 samples, 1.30%)</title><rect x="663.2" y="227.0" width="15.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="666.2" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (32 samples, 1.22%)</title><rect x="664.1" y="211.0" width="14.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="667.1" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.04%)</title><rect x="664.1" y="195.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="667.1" y="206.0"></text>
</g>
<g>
<title>ip_rcv (31 samples, 1.18%)</title><rect x="664.5" y="195.0" width="13.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="667.5" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (30 samples, 1.14%)</title><rect x="665.0" y="179.0" width="13.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="668.0" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (30 samples, 1.14%)</title><rect x="665.0" y="163.0" width="13.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="668.0" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (30 samples, 1.14%)</title><rect x="665.0" y="147.0" width="13.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="668.0" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (30 samples, 1.14%)</title><rect x="665.0" y="131.0" width="13.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="668.0" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.08%)</title><rect x="666.3" y="115.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="669.3" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.08%)</title><rect x="666.3" y="99.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="669.3" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (24 samples, 0.91%)</title><rect x="667.2" y="115.0" width="10.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="670.2" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (23 samples, 0.88%)</title><rect x="667.7" y="99.0" width="10.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="670.7" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (6 samples, 0.23%)</title><rect x="668.1" y="83.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="671.1" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.23%)</title><rect x="668.1" y="67.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="671.1" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.23%)</title><rect x="668.1" y="51.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="671.1" y="62.0"></text>
</g>
<g>
<title>tcp_ack (15 samples, 0.57%)</title><rect x="670.8" y="83.0" width="6.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="673.8" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.15%)</title><rect x="673.0" y="67.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="676.0" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="673.0" y="51.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="676.0" y="62.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.11%)</title><rect x="673.5" y="51.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="676.5" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.08%)</title><rect x="674.8" y="67.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="677.8" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.04%)</title><rect x="675.7" y="67.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="678.7" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="676.2" y="67.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="679.2" y="78.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.04%)</title><rect x="676.6" y="67.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="679.6" y="78.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.04%)</title><rect x="677.1" y="67.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="680.1" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="677.5" y="83.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="680.5" y="94.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="677.5" y="67.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="680.5" y="78.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.04%)</title><rect x="678.0" y="115.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="681.0" y="126.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="678.4" y="355.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="681.4" y="366.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.04%)</title><rect x="678.9" y="355.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="681.9" y="366.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="679.3" y="371.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="682.3" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="679.8" y="371.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="682.8" y="382.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="680.2" y="371.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="683.2" y="382.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.11%)</title><rect x="680.7" y="403.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="683.7" y="414.0"></text>
</g>
<g>
<title>copyin (3 samples, 0.11%)</title><rect x="680.7" y="387.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="683.7" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.08%)</title><rect x="681.1" y="371.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="684.1" y="382.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="682.0" y="403.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="685.0" y="414.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.04%)</title><rect x="682.0" y="387.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="685.0" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.23%)</title><rect x="682.5" y="403.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="685.5" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.23%)</title><rect x="682.5" y="387.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="685.5" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.11%)</title><rect x="683.4" y="371.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="686.4" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.11%)</title><rect x="683.4" y="355.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="686.4" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="684.7" y="371.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="687.7" y="382.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.11%)</title><rect x="685.2" y="403.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="688.2" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.11%)</title><rect x="686.5" y="403.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="689.5" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.08%)</title><rect x="687.0" y="387.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="690.0" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="687.4" y="371.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="690.4" y="382.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="687.9" y="403.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="690.9" y="414.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.04%)</title><rect x="688.3" y="403.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="691.3" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.08%)</title><rect x="688.8" y="451.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="691.8" y="462.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="688.8" y="435.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="691.8" y="446.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="689.2" y="419.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="692.2" y="430.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="689.7" y="483.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="692.7" y="494.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.08%)</title><rect x="690.1" y="483.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="693.1" y="494.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="690.6" y="467.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="693.6" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="691.0" y="611.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="694.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="691.0" y="595.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="694.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="691.0" y="579.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="694.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (1 samples, 0.04%)</title><rect x="691.5" y="691.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.5" y="702.0"></text>
</g>
<g>
<title>[NIO Worker #17 tid=1082601] (269 samples, 10.25%)</title><rect x="691.9" y="755.0" width="120.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="694.9" y="766.0">[NIO Worker #17..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="691.9" y="739.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="694.9" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.04%)</title><rect x="691.9" y="723.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="694.9" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.04%)</title><rect x="691.9" y="707.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="694.9" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (1 samples, 0.04%)</title><rect x="691.9" y="691.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="694.9" y="702.0"></text>
</g>
<g>
<title>[not_walkable_Java] (13 samples, 0.50%)</title><rect x="692.4" y="739.0" width="5.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="695.4" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (13 samples, 0.50%)</title><rect x="692.4" y="723.0" width="5.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="695.4" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="692.4" y="707.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="695.4" y="718.0"></text>
</g>
<g>
<title>clock_gettime (12 samples, 0.46%)</title><rect x="692.8" y="707.0" width="5.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="695.8" y="718.0"></text>
</g>
<g>
<title>[vdso] (12 samples, 0.46%)</title><rect x="692.8" y="691.0" width="5.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="695.8" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.run (255 samples, 9.71%)</title><rect x="698.2" y="739.0" width="114.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.2" y="750.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (255 samples, 9.71%)</title><rect x="698.2" y="723.0" width="114.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="701.2" y="734.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (255 samples, 9.71%)</title><rect x="698.2" y="707.0" width="114.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="701.2" y="718.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.04%)</title><rect x="698.2" y="691.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="701.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="698.2" y="675.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="701.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1 samples, 0.04%)</title><rect x="698.2" y="659.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="701.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (25 samples, 0.95%)</title><rect x="698.7" y="691.0" width="11.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (25 samples, 0.95%)</title><rect x="698.7" y="675.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="701.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (25 samples, 0.95%)</title><rect x="698.7" y="659.0" width="11.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="701.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (25 samples, 0.95%)</title><rect x="698.7" y="643.0" width="11.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (23 samples, 0.88%)</title><rect x="699.1" y="627.0" width="10.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (19 samples, 0.72%)</title><rect x="700.9" y="611.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="703.9" y="622.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="701.8" y="595.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="704.8" y="606.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.27%)</title><rect x="702.3" y="595.0" width="3.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="705.3" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.11%)</title><rect x="702.3" y="579.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="705.3" y="590.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="702.7" y="563.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="705.7" y="574.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.04%)</title><rect x="703.2" y="563.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="706.2" y="574.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.04%)</title><rect x="703.6" y="579.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="706.6" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.04%)</title><rect x="704.1" y="579.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="707.1" y="590.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="704.5" y="579.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="707.5" y="590.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.04%)</title><rect x="705.0" y="579.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="708.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.34%)</title><rect x="705.4" y="595.0" width="4.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="708.4" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (9 samples, 0.34%)</title><rect x="705.4" y="579.0" width="4.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="708.4" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.34%)</title><rect x="705.4" y="563.0" width="4.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="708.4" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.34%)</title><rect x="705.4" y="547.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="708.4" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (8 samples, 0.30%)</title><rect x="705.9" y="531.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="708.9" y="542.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.15%)</title><rect x="706.8" y="515.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="709.8" y="526.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.15%)</title><rect x="706.8" y="499.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="709.8" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="706.8" y="483.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="709.8" y="494.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.04%)</title><rect x="706.8" y="467.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="709.8" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="706.8" y="451.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="709.8" y="462.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.08%)</title><rect x="707.2" y="483.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="710.2" y="494.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.04%)</title><rect x="707.7" y="467.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="710.7" y="478.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.04%)</title><rect x="708.1" y="483.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="711.1" y="494.0"></text>
</g>
<g>
<title>get_timespec64 (2 samples, 0.08%)</title><rect x="708.6" y="515.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="711.6" y="526.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.04%)</title><rect x="709.0" y="499.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="712.0" y="510.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.04%)</title><rect x="709.5" y="627.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="712.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$54/953807481.run (228 samples, 8.69%)</title><rect x="709.9" y="691.0" width="102.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="712.9" y="702.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (228 samples, 8.69%)</title><rect x="709.9" y="675.0" width="102.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="712.9" y="686.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.getEntity (228 samples, 8.69%)</title><rect x="709.9" y="659.0" width="102.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="712.9" y="670.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.get (135 samples, 5.14%)</title><rect x="709.9" y="643.0" width="60.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="712.9" y="654.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (134 samples, 5.10%)</title><rect x="709.9" y="627.0" width="60.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="712.9" y="638.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (134 samples, 5.10%)</title><rect x="709.9" y="611.0" width="60.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="712.9" y="622.0">org/ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (126 samples, 4.80%)</title><rect x="710.4" y="595.0" width="56.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="713.4" y="606.0">Java_o..</text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="710.8" y="579.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="713.8" y="590.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.04%)</title><rect x="711.3" y="579.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="714.3" y="590.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="711.7" y="579.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="714.7" y="590.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.08%)</title><rect x="712.2" y="579.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="715.2" y="590.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.04%)</title><rect x="713.1" y="579.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="716.1" y="590.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (116 samples, 4.42%)</title><rect x="713.5" y="579.0" width="52.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="716.5" y="590.0">rocks..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="714.0" y="563.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="717.0" y="574.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.08%)</title><rect x="714.4" y="563.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="717.4" y="574.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="714.9" y="547.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="717.9" y="558.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.11%)</title><rect x="715.3" y="563.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="718.3" y="574.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="715.8" y="547.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="718.8" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="716.2" y="547.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="719.2" y="558.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.08%)</title><rect x="716.7" y="563.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="719.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (103 samples, 3.92%)</title><rect x="717.6" y="563.0" width="46.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="720.6" y="574.0">rock..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (101 samples, 3.85%)</title><rect x="717.6" y="547.0" width="45.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="720.6" y="558.0">rock..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (3 samples, 0.11%)</title><rect x="717.6" y="531.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="720.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetHash(rocksdb::Cache::Handle*) const (1 samples, 0.04%)</title><rect x="717.6" y="515.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="720.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="718.0" y="515.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="721.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.04%)</title><rect x="718.4" y="515.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="721.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (98 samples, 3.73%)</title><rect x="718.9" y="531.0" width="44.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="721.9" y="542.0">rock..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="718.9" y="515.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="721.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.04%)</title><rect x="719.3" y="515.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="722.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (94 samples, 3.58%)</title><rect x="719.8" y="515.0" width="42.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="722.8" y="526.0">rock..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="721.1" y="499.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="724.1" y="510.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.04%)</title><rect x="721.6" y="499.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="724.6" y="510.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="722.0" y="499.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="725.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.04%)</title><rect x="722.5" y="499.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="725.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (2 samples, 0.08%)</title><rect x="722.9" y="499.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="725.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.04%)</title><rect x="722.9" y="483.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="725.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.04%)</title><rect x="723.4" y="483.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="726.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (7 samples, 0.27%)</title><rect x="723.8" y="499.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="726.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="724.3" y="483.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="727.3" y="494.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="724.3" y="467.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="727.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (3 samples, 0.11%)</title><rect x="724.7" y="483.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="727.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (2 samples, 0.08%)</title><rect x="726.1" y="483.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="729.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.04%)</title><rect x="727.0" y="499.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="730.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::MergeContext*, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="727.4" y="499.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="730.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (19 samples, 0.72%)</title><rect x="727.9" y="499.0" width="8.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="730.9" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (17 samples, 0.65%)</title><rect x="728.3" y="483.0" width="7.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="731.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (17 samples, 0.65%)</title><rect x="728.3" y="467.0" width="7.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="731.3" y="478.0"></text>
</g>
<g>
<title>_init (2 samples, 0.08%)</title><rect x="732.8" y="451.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="735.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.19%)</title><rect x="733.7" y="451.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="736.7" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="735.5" y="435.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="738.5" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="736.0" y="483.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="739.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::PinnedIteratorsManager::~PinnedIteratorsManager() (1 samples, 0.04%)</title><rect x="736.4" y="499.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="739.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int) (1 samples, 0.04%)</title><rect x="736.9" y="499.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="739.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.04%)</title><rect x="737.3" y="499.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="740.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (54 samples, 2.06%)</title><rect x="737.8" y="499.0" width="24.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="740.8" y="510.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="739.1" y="483.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="742.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int) (50 samples, 1.90%)</title><rect x="739.6" y="483.0" width="22.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="742.6" y="494.0">r..</text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="740.5" y="467.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="743.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*) const (1 samples, 0.04%)</title><rect x="740.9" y="467.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="743.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (40 samples, 1.52%)</title><rect x="741.4" y="467.0" width="18.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="744.4" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (2 samples, 0.08%)</title><rect x="742.3" y="451.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="745.3" y="462.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (3 samples, 0.11%)</title><rect x="743.2" y="451.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="746.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (1 samples, 0.04%)</title><rect x="744.5" y="451.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="747.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::BlockBasedTable::IndexReader&gt;*, rocksdb::GetContext*) (1 samples, 0.04%)</title><rect x="745.0" y="451.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="748.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter* rocksdb::Block::NewIterator&lt;rocksdb::IndexBlockIter&gt;(rocksdb::Comparator const*, rocksdb::Comparator const*, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.04%)</title><rect x="745.0" y="435.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="748.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="745.4" y="451.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="748.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="745.9" y="451.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="748.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (12 samples, 0.46%)</title><rect x="746.3" y="451.0" width="5.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="749.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (9 samples, 0.34%)</title><rect x="746.8" y="435.0" width="4.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="749.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, unsigned long, bool, rocksdb::GetContext*) (4 samples, 0.15%)</title><rect x="746.8" y="419.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="749.8" y="430.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (4 samples, 0.15%)</title><rect x="746.8" y="403.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="749.8" y="414.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.08%)</title><rect x="747.2" y="387.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="750.2" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.04%)</title><rect x="747.2" y="371.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="750.2" y="382.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="747.7" y="371.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="750.7" y="382.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="747.7" y="355.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="750.7" y="366.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (1 samples, 0.04%)</title><rect x="748.1" y="387.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="751.1" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (5 samples, 0.19%)</title><rect x="748.6" y="419.0" width="2.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="751.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(unsigned long, unsigned long, rocksdb::Slice*, char*) const (1 samples, 0.04%)</title><rect x="749.0" y="403.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="752.0" y="414.0"></text>
</g>
<g>
<title>__libc_pread64 (1 samples, 0.04%)</title><rect x="749.0" y="387.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="752.0" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="749.0" y="371.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="752.0" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="749.0" y="355.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="752.0" y="366.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (3 samples, 0.11%)</title><rect x="749.5" y="403.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="752.5" y="414.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (3 samples, 0.11%)</title><rect x="749.5" y="387.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="752.5" y="398.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (3 samples, 0.11%)</title><rect x="749.5" y="371.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="752.5" y="382.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (3 samples, 0.11%)</title><rect x="749.5" y="355.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="752.5" y="366.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (3 samples, 0.11%)</title><rect x="749.5" y="339.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="752.5" y="350.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (3 samples, 0.11%)</title><rect x="749.5" y="323.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="752.5" y="334.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (3 samples, 0.11%)</title><rect x="749.5" y="307.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="752.5" y="318.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (2 samples, 0.08%)</title><rect x="749.9" y="291.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="752.9" y="302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="750.4" y="275.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="753.4" y="286.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="750.4" y="259.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="753.4" y="270.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (1 samples, 0.04%)</title><rect x="750.8" y="435.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="753.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::UncompressionDict::GetEmptyDict() (1 samples, 0.04%)</title><rect x="751.3" y="435.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="754.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (8 samples, 0.30%)</title><rect x="751.7" y="451.0" width="3.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="754.7" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="754.0" y="435.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="757.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.08%)</title><rect x="754.4" y="435.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="757.4" y="446.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="754.9" y="419.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="757.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (1 samples, 0.04%)</title><rect x="755.3" y="451.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="758.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::DelegateCleanupsTo(rocksdb::Cleanable*) (1 samples, 0.04%)</title><rect x="755.3" y="435.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="758.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (8 samples, 0.30%)</title><rect x="755.8" y="451.0" width="3.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="758.8" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.11%)</title><rect x="757.1" y="435.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="760.1" y="446.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.08%)</title><rect x="758.5" y="435.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="761.5" y="446.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="758.9" y="419.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="761.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (1 samples, 0.04%)</title><rect x="759.4" y="467.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="762.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::BlockHandle&gt;::status() const (2 samples, 0.08%)</title><rect x="759.8" y="467.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="762.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::BlockHandle&gt;::~BlockIter() (1 samples, 0.04%)</title><rect x="760.7" y="467.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="763.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (1 samples, 0.04%)</title><rect x="761.2" y="467.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="764.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::value() const (1 samples, 0.04%)</title><rect x="761.6" y="467.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="764.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.04%)</title><rect x="762.1" y="515.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="765.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="762.5" y="515.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="765.5" y="526.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (2 samples, 0.08%)</title><rect x="763.0" y="547.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="766.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (4 samples, 0.15%)</title><rect x="763.9" y="563.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="766.9" y="574.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="763.9" y="547.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="766.9" y="558.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="764.3" y="547.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="767.3" y="558.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="764.3" y="531.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="767.3" y="542.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.08%)</title><rect x="764.8" y="547.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="767.8" y="558.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="764.8" y="531.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="767.8" y="542.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="765.2" y="531.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="768.2" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="765.2" y="515.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="768.2" y="526.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (2 samples, 0.08%)</title><rect x="765.6" y="579.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="768.6" y="590.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.04%)</title><rect x="766.5" y="579.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="769.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="767.0" y="595.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="770.0" y="606.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="767.0" y="579.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="770.0" y="590.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="767.4" y="595.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="770.4" y="606.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="767.9" y="595.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="770.9" y="606.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.04%)</title><rect x="768.3" y="595.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="771.3" y="606.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (3 samples, 0.11%)</title><rect x="768.8" y="595.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="771.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (1 samples, 0.04%)</title><rect x="770.1" y="627.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="773.1" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.04%)</title><rect x="770.1" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="773.1" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="770.1" y="595.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="773.1" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="770.1" y="579.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="773.1" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="770.1" y="563.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.1" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="770.1" y="547.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="773.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (93 samples, 3.54%)</title><rect x="770.6" y="643.0" width="41.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="773.6" y="654.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (93 samples, 3.54%)</title><rect x="770.6" y="627.0" width="41.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="773.6" y="638.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.08%)</title><rect x="771.9" y="611.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="774.9" y="622.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="771.9" y="595.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="774.9" y="606.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="772.4" y="595.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="775.4" y="606.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="772.4" y="579.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="775.4" y="590.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="772.4" y="563.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="775.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (88 samples, 3.35%)</title><rect x="772.8" y="611.0" width="39.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="775.8" y="622.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.15%)</title><rect x="772.8" y="595.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="775.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.15%)</title><rect x="772.8" y="579.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="775.8" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="772.8" y="563.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="775.8" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.11%)</title><rect x="773.3" y="563.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="776.3" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.11%)</title><rect x="773.3" y="547.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="776.3" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (84 samples, 3.20%)</title><rect x="774.6" y="595.0" width="37.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="777.6" y="606.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (84 samples, 3.20%)</title><rect x="774.6" y="579.0" width="37.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="777.6" y="590.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.04%)</title><rect x="774.6" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="777.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (83 samples, 3.16%)</title><rect x="775.1" y="563.0" width="37.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="778.1" y="574.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (83 samples, 3.16%)</title><rect x="775.1" y="547.0" width="37.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="778.1" y="558.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="776.4" y="531.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="779.4" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="776.9" y="531.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="779.9" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="776.9" y="515.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="779.9" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="776.9" y="499.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="779.9" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="776.9" y="483.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="779.9" y="494.0"></text>
</g>
<g>
<title>__send (78 samples, 2.97%)</title><rect x="777.3" y="531.0" width="35.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="780.3" y="542.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (76 samples, 2.90%)</title><rect x="778.2" y="515.0" width="34.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="781.2" y="526.0">en..</text>
</g>
<g>
<title>do_syscall_64 (76 samples, 2.90%)</title><rect x="778.2" y="499.0" width="34.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="781.2" y="510.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (72 samples, 2.74%)</title><rect x="778.7" y="483.0" width="32.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="781.7" y="494.0">__..</text>
</g>
<g>
<title>__sys_sendto (72 samples, 2.74%)</title><rect x="778.7" y="467.0" width="32.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="781.7" y="478.0">__..</text>
</g>
<g>
<title>sock_sendmsg (69 samples, 2.63%)</title><rect x="779.6" y="451.0" width="31.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="782.6" y="462.0">so..</text>
</g>
<g>
<title>tcp_sendmsg (68 samples, 2.59%)</title><rect x="780.0" y="435.0" width="30.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="783.0" y="446.0">tc..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="780.0" y="419.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="783.0" y="430.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.04%)</title><rect x="780.0" y="403.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="783.0" y="414.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="780.5" y="419.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="783.5" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="780.5" y="403.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="783.5" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (66 samples, 2.51%)</title><rect x="780.9" y="419.0" width="29.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="783.9" y="430.0">tc..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="781.4" y="403.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="784.4" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="781.4" y="387.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="784.4" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (53 samples, 2.02%)</title><rect x="781.8" y="403.0" width="23.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="784.8" y="414.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (53 samples, 2.02%)</title><rect x="781.8" y="387.0" width="23.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="784.8" y="398.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (53 samples, 2.02%)</title><rect x="781.8" y="371.0" width="23.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="784.8" y="382.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (48 samples, 1.83%)</title><rect x="783.6" y="355.0" width="21.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="786.6" y="366.0">_..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.08%)</title><rect x="784.1" y="339.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="787.1" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.08%)</title><rect x="784.1" y="323.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="787.1" y="334.0"></text>
</g>
<g>
<title>ip_output (45 samples, 1.71%)</title><rect x="785.0" y="339.0" width="20.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="788.0" y="350.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.04%)</title><rect x="785.4" y="323.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="788.4" y="334.0"></text>
</g>
<g>
<title>ip_finish_output2 (43 samples, 1.64%)</title><rect x="785.9" y="323.0" width="19.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="788.9" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.30%)</title><rect x="787.2" y="307.0" width="3.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="790.2" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.19%)</title><rect x="787.7" y="291.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="790.7" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.15%)</title><rect x="788.1" y="275.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="791.1" y="286.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.11%)</title><rect x="788.1" y="259.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="791.1" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.11%)</title><rect x="788.1" y="243.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="791.1" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.11%)</title><rect x="788.1" y="227.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="791.1" y="238.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.04%)</title><rect x="789.5" y="259.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="792.5" y="270.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.08%)</title><rect x="789.9" y="291.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="792.9" y="302.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.08%)</title><rect x="789.9" y="275.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="792.9" y="286.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.04%)</title><rect x="790.4" y="259.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="793.4" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (31 samples, 1.18%)</title><rect x="790.8" y="307.0" width="14.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="793.8" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (31 samples, 1.18%)</title><rect x="790.8" y="291.0" width="14.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="793.8" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (30 samples, 1.14%)</title><rect x="791.3" y="275.0" width="13.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="794.3" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (30 samples, 1.14%)</title><rect x="791.3" y="259.0" width="13.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="794.3" y="270.0"></text>
</g>
<g>
<title>net_rx_action (26 samples, 0.99%)</title><rect x="793.1" y="243.0" width="11.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="796.1" y="254.0"></text>
</g>
<g>
<title>process_backlog (25 samples, 0.95%)</title><rect x="793.5" y="227.0" width="11.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="796.5" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (24 samples, 0.91%)</title><rect x="794.0" y="211.0" width="10.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="797.0" y="222.0"></text>
</g>
<g>
<title>ip_rcv (24 samples, 0.91%)</title><rect x="794.0" y="195.0" width="10.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="797.0" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (23 samples, 0.88%)</title><rect x="794.0" y="179.0" width="10.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="797.0" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (23 samples, 0.88%)</title><rect x="794.0" y="163.0" width="10.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="797.0" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (23 samples, 0.88%)</title><rect x="794.0" y="147.0" width="10.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="797.0" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (23 samples, 0.88%)</title><rect x="794.0" y="131.0" width="10.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="797.0" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.04%)</title><rect x="794.4" y="115.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="797.4" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (20 samples, 0.76%)</title><rect x="794.9" y="115.0" width="9.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="797.9" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (20 samples, 0.76%)</title><rect x="794.9" y="99.0" width="9.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="797.9" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (6 samples, 0.23%)</title><rect x="795.3" y="83.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="798.3" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.19%)</title><rect x="795.8" y="67.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="798.8" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.15%)</title><rect x="796.2" y="51.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="799.2" y="62.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.38%)</title><rect x="798.0" y="83.0" width="4.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="801.0" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.15%)</title><rect x="799.4" y="67.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="802.4" y="78.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.08%)</title><rect x="799.4" y="51.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="802.4" y="62.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.08%)</title><rect x="800.3" y="51.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="803.3" y="62.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.04%)</title><rect x="801.2" y="67.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="804.2" y="78.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.04%)</title><rect x="801.6" y="67.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="804.6" y="78.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.04%)</title><rect x="802.1" y="67.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="805.1" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="802.5" y="83.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="805.5" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="803.0" y="83.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="806.0" y="94.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="803.4" y="83.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="806.4" y="94.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb.isra.0 (1 samples, 0.04%)</title><rect x="803.9" y="115.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="806.9" y="126.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.04%)</title><rect x="804.3" y="179.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="807.3" y="190.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="804.8" y="307.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="807.8" y="318.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="805.2" y="355.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="808.2" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="805.7" y="403.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="808.7" y="414.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.04%)</title><rect x="805.7" y="387.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="808.7" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="805.7" y="371.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="808.7" y="382.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="806.1" y="403.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="809.1" y="414.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.04%)</title><rect x="806.1" y="387.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="809.1" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.23%)</title><rect x="806.6" y="403.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="809.6" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.19%)</title><rect x="807.0" y="387.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="810.0" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.11%)</title><rect x="807.0" y="371.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="810.0" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.11%)</title><rect x="807.0" y="355.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="810.0" y="366.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="807.9" y="339.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="810.9" y="350.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.08%)</title><rect x="808.4" y="371.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="811.4" y="382.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.04%)</title><rect x="809.3" y="403.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="812.3" y="414.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.04%)</title><rect x="809.7" y="403.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="812.7" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="810.2" y="403.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="813.2" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="810.2" y="387.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="813.2" y="398.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="810.6" y="451.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="813.6" y="462.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="810.6" y="435.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="813.6" y="446.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="811.1" y="483.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="814.1" y="494.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="811.5" y="483.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="814.5" y="494.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="811.5" y="467.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="814.5" y="478.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="812.0" y="483.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="815.0" y="494.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="812.0" y="467.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="815.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (1 samples, 0.04%)</title><rect x="812.4" y="691.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="815.4" y="702.0"></text>
</g>
<g>
<title>[NIO Worker #19 tid=1083049] (273 samples, 10.40%)</title><rect x="812.8" y="755.0" width="122.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="815.8" y="766.0">[NIO Worker #19..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.08%)</title><rect x="812.8" y="739.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="815.8" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.08%)</title><rect x="812.8" y="723.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="815.8" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.08%)</title><rect x="812.8" y="707.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="815.8" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (2 samples, 0.08%)</title><rect x="812.8" y="691.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="815.8" y="702.0"></text>
</g>
<g>
<title>[not_walkable_Java] (7 samples, 0.27%)</title><rect x="813.7" y="739.0" width="3.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="816.7" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (7 samples, 0.27%)</title><rect x="813.7" y="723.0" width="3.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="816.7" y="734.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.27%)</title><rect x="813.7" y="707.0" width="3.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="816.7" y="718.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.27%)</title><rect x="813.7" y="691.0" width="3.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="816.7" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="816.4" y="675.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="819.4" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="816.4" y="659.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="819.4" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="816.4" y="643.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="819.4" y="654.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.04%)</title><rect x="816.9" y="739.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="819.9" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="816.9" y="723.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="819.9" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (263 samples, 10.02%)</title><rect x="817.3" y="739.0" width="118.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="820.3" y="750.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (263 samples, 10.02%)</title><rect x="817.3" y="723.0" width="118.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="820.3" y="734.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (263 samples, 10.02%)</title><rect x="817.3" y="707.0" width="118.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="820.3" y="718.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (31 samples, 1.18%)</title><rect x="817.8" y="691.0" width="13.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="820.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (31 samples, 1.18%)</title><rect x="817.8" y="675.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="820.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (30 samples, 1.14%)</title><rect x="818.2" y="659.0" width="13.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="821.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (1 samples, 0.04%)</title><rect x="818.2" y="643.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="821.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.04%)</title><rect x="818.2" y="627.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="821.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (29 samples, 1.10%)</title><rect x="818.7" y="643.0" width="13.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.7" y="654.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="819.1" y="627.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="822.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (27 samples, 1.03%)</title><rect x="819.6" y="627.0" width="12.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.6" y="638.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="824.1" y="611.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="827.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (16 samples, 0.61%)</title><rect x="824.5" y="611.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="827.5" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.19%)</title><rect x="825.4" y="595.0" width="2.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="828.4" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.08%)</title><rect x="825.4" y="579.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="828.4" y="590.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.04%)</title><rect x="825.9" y="563.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="828.9" y="574.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="826.3" y="579.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="829.3" y="590.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.08%)</title><rect x="826.8" y="579.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="829.8" y="590.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.30%)</title><rect x="827.7" y="595.0" width="3.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="830.7" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (8 samples, 0.30%)</title><rect x="827.7" y="579.0" width="3.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="830.7" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.30%)</title><rect x="827.7" y="563.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="830.7" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.30%)</title><rect x="827.7" y="547.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="830.7" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (7 samples, 0.27%)</title><rect x="828.1" y="531.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="831.1" y="542.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.23%)</title><rect x="828.1" y="515.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="831.1" y="526.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.23%)</title><rect x="828.1" y="499.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="831.1" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.11%)</title><rect x="828.1" y="483.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="831.1" y="494.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.08%)</title><rect x="828.1" y="467.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="831.1" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.08%)</title><rect x="828.1" y="451.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="831.1" y="462.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.04%)</title><rect x="829.0" y="467.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="832.0" y="478.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.11%)</title><rect x="829.5" y="483.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="832.5" y="494.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="829.9" y="467.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="832.9" y="478.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.04%)</title><rect x="830.4" y="467.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="833.4" y="478.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.04%)</title><rect x="830.8" y="515.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="833.8" y="526.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.04%)</title><rect x="830.8" y="499.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="833.8" y="510.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="830.8" y="483.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="833.8" y="494.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="831.3" y="595.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="834.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$54/953807481.run (231 samples, 8.80%)</title><rect x="831.7" y="691.0" width="103.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="834.7" y="702.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (231 samples, 8.80%)</title><rect x="831.7" y="675.0" width="103.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="834.7" y="686.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.getEntity (231 samples, 8.80%)</title><rect x="831.7" y="659.0" width="103.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="834.7" y="670.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.get (120 samples, 4.57%)</title><rect x="831.7" y="643.0" width="54.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="834.7" y="654.0">ru/ma..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (117 samples, 4.46%)</title><rect x="831.7" y="627.0" width="52.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="834.7" y="638.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (117 samples, 4.46%)</title><rect x="831.7" y="611.0" width="52.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="834.7" y="622.0">org/r..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (112 samples, 4.27%)</title><rect x="831.7" y="595.0" width="50.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="834.7" y="606.0">Java_..</text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.08%)</title><rect x="831.7" y="579.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="834.7" y="590.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.04%)</title><rect x="832.6" y="579.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="835.6" y="590.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="833.1" y="579.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="836.1" y="590.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="833.5" y="579.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="836.5" y="590.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.04%)</title><rect x="834.0" y="579.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="837.0" y="590.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.04%)</title><rect x="834.4" y="579.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="837.4" y="590.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (103 samples, 3.92%)</title><rect x="834.9" y="579.0" width="46.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="837.9" y="590.0">rock..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="834.9" y="563.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="837.9" y="574.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="835.3" y="563.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="838.3" y="574.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (2 samples, 0.08%)</title><rect x="835.8" y="563.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="838.8" y="574.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="836.7" y="563.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="839.7" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="836.7" y="547.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="839.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (93 samples, 3.54%)</title><rect x="837.1" y="563.0" width="41.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="840.1" y="574.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (91 samples, 3.47%)</title><rect x="837.1" y="547.0" width="40.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="840.1" y="558.0">roc..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (2 samples, 0.08%)</title><rect x="837.1" y="531.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="840.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="837.1" y="515.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="840.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="837.1" y="499.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="840.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Unref(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="837.6" y="515.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="840.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (87 samples, 3.31%)</title><rect x="838.0" y="531.0" width="39.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="841.0" y="542.0">roc..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="838.0" y="515.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="841.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (82 samples, 3.12%)</title><rect x="838.9" y="515.0" width="36.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="841.9" y="526.0">roc..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="841.6" y="499.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="844.6" y="510.0"></text>
</g>
<g>
<title>_init (2 samples, 0.08%)</title><rect x="842.5" y="499.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="845.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (5 samples, 0.19%)</title><rect x="843.4" y="499.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="846.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.04%)</title><rect x="843.4" y="483.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="846.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="843.9" y="483.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="846.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.04%)</title><rect x="844.3" y="483.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="847.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="844.3" y="467.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="847.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (2 samples, 0.08%)</title><rect x="844.8" y="483.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="847.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.04%)</title><rect x="845.2" y="467.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="848.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="845.7" y="499.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="848.7" y="510.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="845.7" y="483.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="848.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (15 samples, 0.57%)</title><rect x="846.1" y="499.0" width="6.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="849.1" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (15 samples, 0.57%)</title><rect x="846.1" y="483.0" width="6.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="849.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (15 samples, 0.57%)</title><rect x="846.1" y="467.0" width="6.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="849.1" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="847.9" y="451.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="850.9" y="462.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="848.8" y="451.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="851.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 0.30%)</title><rect x="849.3" y="451.0" width="3.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="852.3" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (2 samples, 0.08%)</title><rect x="849.7" y="435.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="852.7" y="446.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (3 samples, 0.11%)</title><rect x="850.6" y="435.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="853.6" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="852.0" y="435.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="855.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="852.9" y="499.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="855.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="852.9" y="483.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="855.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.04%)</title><rect x="853.3" y="499.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="856.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.04%)</title><rect x="853.8" y="499.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="856.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (48 samples, 1.83%)</title><rect x="854.2" y="499.0" width="21.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="857.2" y="510.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (2 samples, 0.08%)</title><rect x="856.5" y="483.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="859.5" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="856.9" y="467.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="859.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int) (41 samples, 1.56%)</title><rect x="857.4" y="483.0" width="18.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="860.4" y="494.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="857.8" y="467.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="860.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (38 samples, 1.45%)</title><rect x="858.3" y="467.0" width="17.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="861.3" y="478.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="858.7" y="451.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="861.7" y="462.0"></text>
</g>
<g>
<title>_init (3 samples, 0.11%)</title><rect x="859.2" y="451.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="862.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (1 samples, 0.04%)</title><rect x="860.5" y="451.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="863.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (12 samples, 0.46%)</title><rect x="860.9" y="451.0" width="5.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="863.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, unsigned long, bool, rocksdb::GetContext*) (1 samples, 0.04%)</title><rect x="861.4" y="435.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="864.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (7 samples, 0.27%)</title><rect x="861.8" y="435.0" width="3.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="864.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetCacheKey(char const*, unsigned long, rocksdb::BlockHandle const&amp;, char*) (1 samples, 0.04%)</title><rect x="861.8" y="419.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="864.8" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, unsigned long, bool, rocksdb::GetContext*) (5 samples, 0.19%)</title><rect x="862.3" y="419.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="865.3" y="430.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (5 samples, 0.19%)</title><rect x="862.3" y="403.0" width="2.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="865.3" y="414.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetShard(int) const (1 samples, 0.04%)</title><rect x="862.3" y="387.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="865.3" y="398.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.08%)</title><rect x="862.7" y="387.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="865.7" y="398.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="862.7" y="371.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="865.7" y="382.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="863.2" y="371.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="866.2" y="382.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="863.2" y="355.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="866.2" y="366.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (2 samples, 0.08%)</title><rect x="863.6" y="387.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="866.6" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (1 samples, 0.04%)</title><rect x="864.5" y="419.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="867.5" y="430.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (1 samples, 0.04%)</title><rect x="864.5" y="403.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="867.5" y="414.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (1 samples, 0.04%)</title><rect x="864.5" y="387.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="867.5" y="398.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (1 samples, 0.04%)</title><rect x="864.5" y="371.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="867.5" y="382.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (1 samples, 0.04%)</title><rect x="864.5" y="355.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="867.5" y="366.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="864.5" y="339.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="867.5" y="350.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="864.5" y="323.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="867.5" y="334.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (1 samples, 0.04%)</title><rect x="864.5" y="307.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="867.5" y="318.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (3 samples, 0.11%)</title><rect x="865.0" y="435.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="868.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (8 samples, 0.30%)</title><rect x="866.3" y="451.0" width="3.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="869.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.11%)</title><rect x="868.6" y="435.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="871.6" y="446.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="869.0" y="419.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="872.0" y="430.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="869.5" y="419.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="872.5" y="430.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (1 samples, 0.04%)</title><rect x="869.9" y="451.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="872.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="869.9" y="435.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="872.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="869.9" y="419.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="872.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (2 samples, 0.08%)</title><rect x="870.4" y="451.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="873.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (8 samples, 0.30%)</title><rect x="871.3" y="451.0" width="3.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="874.3" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="873.5" y="435.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="876.5" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="874.0" y="435.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="877.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="874.4" y="435.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="877.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="874.9" y="451.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="877.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetFilter(rocksdb::SliceTransform const*, rocksdb::FilePrefetchBuffer*, bool, rocksdb::GetContext*) const (1 samples, 0.04%)</title><rect x="875.3" y="467.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="878.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="875.8" y="515.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="878.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="876.2" y="515.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="879.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.04%)</title><rect x="876.7" y="515.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="879.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Release(rocksdb::Cache::Handle*, bool) (2 samples, 0.08%)</title><rect x="877.1" y="531.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="880.1" y="542.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (2 samples, 0.08%)</title><rect x="878.0" y="547.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="881.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (5 samples, 0.19%)</title><rect x="878.9" y="563.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="881.9" y="574.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.11%)</title><rect x="878.9" y="547.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="881.9" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="878.9" y="531.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="881.9" y="542.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.08%)</title><rect x="879.4" y="531.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="882.4" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.08%)</title><rect x="879.4" y="515.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="882.4" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="879.4" y="499.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="882.4" y="510.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="879.4" y="483.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="882.4" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="879.8" y="499.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="882.8" y="510.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="880.3" y="547.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="883.3" y="558.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="880.7" y="547.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="883.7" y="558.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (2 samples, 0.08%)</title><rect x="881.2" y="579.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="884.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="882.1" y="595.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="885.1" y="606.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="882.1" y="579.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="885.1" y="590.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="882.5" y="595.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="885.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.08%)</title><rect x="883.0" y="595.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="886.0" y="606.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.04%)</title><rect x="883.9" y="595.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="886.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (3 samples, 0.11%)</title><rect x="884.3" y="627.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.3" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.04%)</title><rect x="884.3" y="611.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="887.3" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="884.3" y="595.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="887.3" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.08%)</title><rect x="884.8" y="611.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.8" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="884.8" y="595.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="887.8" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="884.8" y="579.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="887.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (111 samples, 4.23%)</title><rect x="885.7" y="643.0" width="49.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="888.7" y="654.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (111 samples, 4.23%)</title><rect x="885.7" y="627.0" width="49.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="888.7" y="638.0">one/n..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.08%)</title><rect x="886.6" y="611.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="889.6" y="622.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="886.6" y="595.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="889.6" y="606.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="887.0" y="595.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="890.0" y="606.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="887.0" y="579.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="890.0" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.08%)</title><rect x="887.5" y="611.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="890.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (105 samples, 4.00%)</title><rect x="888.4" y="611.0" width="47.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="891.4" y="622.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.23%)</title><rect x="888.8" y="595.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="891.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.23%)</title><rect x="888.8" y="579.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="891.8" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.08%)</title><rect x="888.8" y="563.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="891.8" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.15%)</title><rect x="889.7" y="563.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="892.7" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.15%)</title><rect x="889.7" y="547.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="892.7" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (98 samples, 3.73%)</title><rect x="891.5" y="595.0" width="44.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="894.5" y="606.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (98 samples, 3.73%)</title><rect x="891.5" y="579.0" width="44.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="894.5" y="590.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (98 samples, 3.73%)</title><rect x="891.5" y="563.0" width="44.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.5" y="574.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (97 samples, 3.70%)</title><rect x="892.0" y="547.0" width="43.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="895.0" y="558.0">one/..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.11%)</title><rect x="893.3" y="531.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="896.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.11%)</title><rect x="893.3" y="515.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="896.3" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.08%)</title><rect x="893.3" y="499.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="896.3" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="893.8" y="483.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="896.8" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="893.8" y="467.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="896.8" y="478.0"></text>
</g>
<g>
<title>__send (1 samples, 0.04%)</title><rect x="894.2" y="499.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="897.2" y="510.0"></text>
</g>
<g>
<title>__send (91 samples, 3.47%)</title><rect x="894.7" y="531.0" width="40.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="897.7" y="542.0">__s..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="894.7" y="515.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="897.7" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (90 samples, 3.43%)</title><rect x="895.1" y="515.0" width="40.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="898.1" y="526.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (90 samples, 3.43%)</title><rect x="895.1" y="499.0" width="40.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="898.1" y="510.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (85 samples, 3.24%)</title><rect x="896.9" y="483.0" width="38.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="899.9" y="494.0">__x..</text>
</g>
<g>
<title>__sys_sendto (85 samples, 3.24%)</title><rect x="896.9" y="467.0" width="38.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="899.9" y="478.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (81 samples, 3.09%)</title><rect x="896.9" y="451.0" width="36.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="899.9" y="462.0">soc..</text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="896.9" y="435.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="899.9" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg (80 samples, 3.05%)</title><rect x="897.4" y="435.0" width="35.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="900.4" y="446.0">tcp..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="897.4" y="419.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="900.4" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.04%)</title><rect x="897.4" y="403.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="900.4" y="414.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.04%)</title><rect x="897.4" y="387.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="900.4" y="398.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="897.8" y="419.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="900.8" y="430.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="897.8" y="403.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="900.8" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (78 samples, 2.97%)</title><rect x="898.3" y="419.0" width="35.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="901.3" y="430.0">tcp..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.08%)</title><rect x="899.2" y="403.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="902.2" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.08%)</title><rect x="899.2" y="387.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="902.2" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (66 samples, 2.51%)</title><rect x="900.1" y="403.0" width="29.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="903.1" y="414.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (66 samples, 2.51%)</title><rect x="900.1" y="387.0" width="29.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="903.1" y="398.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (65 samples, 2.48%)</title><rect x="900.1" y="371.0" width="29.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="903.1" y="382.0">__..</text>
</g>
<g>
<title>__ip_queue_xmit (62 samples, 2.36%)</title><rect x="900.5" y="355.0" width="27.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="903.5" y="366.0">_..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="900.5" y="339.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="903.5" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="900.5" y="323.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="903.5" y="334.0"></text>
</g>
<g>
<title>ip_output (61 samples, 2.32%)</title><rect x="901.0" y="339.0" width="27.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="904.0" y="350.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (59 samples, 2.25%)</title><rect x="901.4" y="323.0" width="26.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="904.4" y="334.0">i..</text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.30%)</title><rect x="901.9" y="307.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="904.9" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.08%)</title><rect x="903.7" y="291.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="906.7" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.08%)</title><rect x="903.7" y="275.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="906.7" y="286.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="904.1" y="259.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="907.1" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="904.1" y="243.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="907.1" y="254.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.04%)</title><rect x="904.1" y="227.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="907.1" y="238.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.08%)</title><rect x="904.6" y="291.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="907.6" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (50 samples, 1.90%)</title><rect x="905.5" y="307.0" width="22.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="908.5" y="318.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (50 samples, 1.90%)</title><rect x="905.5" y="291.0" width="22.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="908.5" y="302.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (50 samples, 1.90%)</title><rect x="905.5" y="275.0" width="22.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="908.5" y="286.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (50 samples, 1.90%)</title><rect x="905.5" y="259.0" width="22.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="908.5" y="270.0">_..</text>
</g>
<g>
<title>net_rx_action (46 samples, 1.75%)</title><rect x="907.2" y="243.0" width="20.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="910.2" y="254.0"></text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.04%)</title><rect x="907.7" y="227.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="910.7" y="238.0"></text>
</g>
<g>
<title>process_backlog (44 samples, 1.68%)</title><rect x="908.1" y="227.0" width="19.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="911.1" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (43 samples, 1.64%)</title><rect x="908.6" y="211.0" width="19.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="911.6" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.08%)</title><rect x="908.6" y="195.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="911.6" y="206.0"></text>
</g>
<g>
<title>ip_rcv (41 samples, 1.56%)</title><rect x="909.5" y="195.0" width="18.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="912.5" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (40 samples, 1.52%)</title><rect x="909.9" y="179.0" width="18.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="912.9" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (40 samples, 1.52%)</title><rect x="909.9" y="163.0" width="18.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="912.9" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (40 samples, 1.52%)</title><rect x="909.9" y="147.0" width="18.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="912.9" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (39 samples, 1.49%)</title><rect x="910.4" y="131.0" width="17.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="913.4" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.11%)</title><rect x="910.8" y="115.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="913.8" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="912.2" y="115.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="915.2" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (34 samples, 1.30%)</title><rect x="912.6" y="115.0" width="15.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="915.6" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (34 samples, 1.30%)</title><rect x="912.6" y="99.0" width="15.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="915.6" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.08%)</title><rect x="914.4" y="83.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="917.4" y="94.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.08%)</title><rect x="914.4" y="67.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="917.4" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (14 samples, 0.53%)</title><rect x="915.3" y="83.0" width="6.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="918.3" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 0.50%)</title><rect x="915.8" y="67.0" width="5.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="918.8" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.50%)</title><rect x="915.8" y="51.0" width="5.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="918.8" y="62.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.04%)</title><rect x="921.2" y="35.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="924.2" y="46.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.38%)</title><rect x="921.6" y="83.0" width="4.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="924.6" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.08%)</title><rect x="922.5" y="67.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="925.5" y="78.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="922.5" y="51.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="925.5" y="62.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="922.5" y="35.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="925.5" y="46.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="923.0" y="51.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="926.0" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.08%)</title><rect x="923.4" y="67.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="926.4" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.04%)</title><rect x="924.3" y="67.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="927.3" y="78.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.04%)</title><rect x="924.8" y="67.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="927.8" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.04%)</title><rect x="925.2" y="67.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="928.2" y="78.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.04%)</title><rect x="925.7" y="67.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="928.7" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="926.1" y="83.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="929.1" y="94.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.11%)</title><rect x="926.6" y="83.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="929.6" y="94.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.04%)</title><rect x="927.9" y="323.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="930.9" y="334.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="927.9" y="307.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="930.9" y="318.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="928.4" y="355.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="931.4" y="366.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="928.8" y="355.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="931.8" y="366.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="929.3" y="371.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="932.3" y="382.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="929.3" y="355.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="932.3" y="366.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.08%)</title><rect x="929.7" y="403.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="932.7" y="414.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.08%)</title><rect x="929.7" y="387.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="932.7" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.15%)</title><rect x="930.6" y="403.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="933.6" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.15%)</title><rect x="930.6" y="387.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="933.6" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.04%)</title><rect x="931.1" y="371.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="934.1" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="931.1" y="355.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="934.1" y="366.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="931.5" y="371.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="934.5" y="382.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="932.0" y="371.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="935.0" y="382.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.04%)</title><rect x="932.4" y="403.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="935.4" y="414.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.04%)</title><rect x="932.4" y="387.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="935.4" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="932.9" y="403.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="935.9" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="932.9" y="387.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="935.9" y="398.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.15%)</title><rect x="933.3" y="451.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="936.3" y="462.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.15%)</title><rect x="933.3" y="435.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="936.3" y="446.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.11%)</title><rect x="933.8" y="419.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="936.8" y="430.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="935.1" y="483.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="938.1" y="494.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="935.1" y="467.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="938.1" y="478.0"></text>
</g>
<g>
<title>[NIO Worker #20 tid=1083220] (289 samples, 11.01%)</title><rect x="935.6" y="755.0" width="129.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="938.6" y="766.0">[NIO Worker #20 ..</text>
</g>
<g>
<title>[not_walkable_Java] (9 samples, 0.34%)</title><rect x="935.6" y="739.0" width="4.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="938.6" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (9 samples, 0.34%)</title><rect x="935.6" y="723.0" width="4.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="938.6" y="734.0"></text>
</g>
<g>
<title>clock_gettime (9 samples, 0.34%)</title><rect x="935.6" y="707.0" width="4.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="938.6" y="718.0"></text>
</g>
<g>
<title>[vdso] (8 samples, 0.30%)</title><rect x="936.0" y="691.0" width="3.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="939.0" y="702.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="939.2" y="675.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="942.2" y="686.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="939.2" y="659.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="942.2" y="670.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="939.2" y="643.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="942.2" y="654.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="939.2" y="627.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="942.2" y="638.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.04%)</title><rect x="939.2" y="611.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="942.2" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="939.2" y="595.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="942.2" y="606.0"></text>
</g>
<g>
<title>java/lang/Thread.run (280 samples, 10.67%)</title><rect x="939.6" y="739.0" width="125.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="942.6" y="750.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (280 samples, 10.67%)</title><rect x="939.6" y="723.0" width="125.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="942.6" y="734.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (280 samples, 10.67%)</title><rect x="939.6" y="707.0" width="125.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="942.6" y="718.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (21 samples, 0.80%)</title><rect x="940.1" y="691.0" width="9.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="943.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (21 samples, 0.80%)</title><rect x="940.1" y="675.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="943.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (21 samples, 0.80%)</title><rect x="940.1" y="659.0" width="9.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="943.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (1 samples, 0.04%)</title><rect x="940.1" y="643.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="943.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.04%)</title><rect x="940.1" y="627.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="943.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (20 samples, 0.76%)</title><rect x="940.5" y="643.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="943.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (19 samples, 0.72%)</title><rect x="941.0" y="627.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="944.0" y="638.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="942.8" y="611.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="945.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.46%)</title><rect x="943.2" y="611.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="946.2" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.15%)</title><rect x="943.7" y="595.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="946.7" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="943.7" y="579.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="946.7" y="590.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.08%)</title><rect x="944.1" y="579.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="947.1" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="945.0" y="579.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="948.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="945.5" y="595.0" width="3.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="948.5" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (7 samples, 0.27%)</title><rect x="945.5" y="579.0" width="3.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="948.5" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.27%)</title><rect x="945.5" y="563.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="948.5" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.27%)</title><rect x="945.5" y="547.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="948.5" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (6 samples, 0.23%)</title><rect x="945.9" y="531.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="948.9" y="542.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.23%)</title><rect x="945.9" y="515.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="948.9" y="526.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.19%)</title><rect x="946.4" y="499.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="949.4" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.11%)</title><rect x="947.3" y="483.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="950.3" y="494.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.08%)</title><rect x="947.3" y="467.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="950.3" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.08%)</title><rect x="947.3" y="451.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="950.3" y="462.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="948.2" y="467.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="951.2" y="478.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.08%)</title><rect x="948.6" y="611.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="951.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$54/953807481.run (257 samples, 9.79%)</title><rect x="949.5" y="691.0" width="115.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="952.5" y="702.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (257 samples, 9.79%)</title><rect x="949.5" y="675.0" width="115.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="952.5" y="686.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.getEntity (257 samples, 9.79%)</title><rect x="949.5" y="659.0" width="115.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="952.5" y="670.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.get (140 samples, 5.33%)</title><rect x="949.5" y="643.0" width="62.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="952.5" y="654.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (138 samples, 5.26%)</title><rect x="949.5" y="627.0" width="62.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="952.5" y="638.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (138 samples, 5.26%)</title><rect x="949.5" y="611.0" width="62.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="952.5" y="622.0">org/ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (131 samples, 4.99%)</title><rect x="949.5" y="595.0" width="58.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="952.5" y="606.0">Java_o..</text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="950.0" y="579.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="953.0" y="590.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="950.4" y="579.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="953.4" y="590.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.04%)</title><rect x="950.9" y="579.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="953.9" y="590.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (126 samples, 4.80%)</title><rect x="951.3" y="579.0" width="56.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="954.3" y="590.0">rocksd..</text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.11%)</title><rect x="952.7" y="563.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="955.7" y="574.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="953.1" y="547.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="956.1" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="953.6" y="547.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="956.6" y="558.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="954.0" y="563.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="957.0" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="954.0" y="547.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="957.0" y="558.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.04%)</title><rect x="954.4" y="563.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="957.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (2 samples, 0.08%)</title><rect x="954.9" y="563.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="957.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (101 samples, 3.85%)</title><rect x="955.8" y="563.0" width="45.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="958.8" y="574.0">rock..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (2 samples, 0.08%)</title><rect x="955.8" y="547.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="958.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="956.7" y="547.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="959.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (96 samples, 3.66%)</title><rect x="957.1" y="547.0" width="43.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="960.1" y="558.0">rock..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (3 samples, 0.11%)</title><rect x="957.1" y="531.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="960.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetShard(int) const (1 samples, 0.04%)</title><rect x="957.1" y="515.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="960.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="957.6" y="515.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="960.6" y="526.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.04%)</title><rect x="957.6" y="499.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="960.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Unref(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="958.0" y="515.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="961.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (92 samples, 3.50%)</title><rect x="958.5" y="531.0" width="41.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="961.5" y="542.0">roc..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="958.5" y="515.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="961.5" y="526.0"></text>
</g>
<g>
<title>_init (3 samples, 0.11%)</title><rect x="958.9" y="515.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="961.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.04%)</title><rect x="960.3" y="515.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="963.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.04%)</title><rect x="960.7" y="515.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="963.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (84 samples, 3.20%)</title><rect x="961.2" y="515.0" width="37.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="964.2" y="526.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="963.4" y="499.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="966.4" y="510.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="963.9" y="499.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="966.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (5 samples, 0.19%)</title><rect x="964.3" y="499.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="967.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.08%)</title><rect x="964.3" y="483.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="967.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (3 samples, 0.11%)</title><rect x="965.2" y="483.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="968.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="966.1" y="467.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="969.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="966.6" y="499.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="969.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.04%)</title><rect x="966.6" y="483.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="969.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (26 samples, 0.99%)</title><rect x="967.0" y="499.0" width="11.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="970.0" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (24 samples, 0.91%)</title><rect x="967.9" y="483.0" width="10.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="970.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (20 samples, 0.76%)</title><rect x="968.8" y="467.0" width="9.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="971.8" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="973.3" y="451.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="976.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 0.34%)</title><rect x="973.8" y="451.0" width="4.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="976.8" y="462.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="976.0" y="435.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="979.0" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.11%)</title><rect x="976.5" y="435.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="979.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="977.8" y="467.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="980.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (1 samples, 0.04%)</title><rect x="978.3" y="467.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="981.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.04%)</title><rect x="978.7" y="499.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="981.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int) (1 samples, 0.04%)</title><rect x="979.2" y="499.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="982.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (43 samples, 1.64%)</title><rect x="979.6" y="499.0" width="19.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="982.6" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (2 samples, 0.08%)</title><rect x="979.6" y="483.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="982.6" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="980.1" y="467.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="983.1" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="980.5" y="483.0" width="0.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="983.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (1 samples, 0.04%)</title><rect x="981.4" y="483.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="984.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int) (38 samples, 1.45%)</title><rect x="981.9" y="483.0" width="17.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="984.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (30 samples, 1.14%)</title><rect x="983.2" y="467.0" width="13.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="986.2" y="478.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.08%)</title><rect x="983.7" y="451.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="986.7" y="462.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="984.6" y="451.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="987.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetUncompressionDict(rocksdb::BlockBasedTable::Rep*, rocksdb::FilePrefetchBuffer*, bool, rocksdb::GetContext*) (1 samples, 0.04%)</title><rect x="985.0" y="451.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="988.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::BlockHandle&gt;::~BlockIter() (1 samples, 0.04%)</title><rect x="985.5" y="451.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="988.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (1 samples, 0.04%)</title><rect x="985.9" y="451.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="988.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (9 samples, 0.34%)</title><rect x="986.4" y="451.0" width="4.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="989.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (6 samples, 0.23%)</title><rect x="986.8" y="435.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="989.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, unsigned long, bool, rocksdb::GetContext*) (3 samples, 0.11%)</title><rect x="986.8" y="419.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="989.8" y="430.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (2 samples, 0.08%)</title><rect x="986.8" y="403.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="989.8" y="414.0"></text>
</g>
<g>
<title>MurmurHash64A(void const*, int, unsigned int) (1 samples, 0.04%)</title><rect x="986.8" y="387.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="989.8" y="398.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="987.3" y="387.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="990.3" y="398.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.04%)</title><rect x="987.3" y="371.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="990.3" y="382.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::GetUsage(rocksdb::Cache::Handle*) const (1 samples, 0.04%)</title><rect x="987.7" y="403.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="990.7" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (3 samples, 0.11%)</title><rect x="988.2" y="419.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="991.2" y="430.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="988.2" y="403.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="991.2" y="414.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (2 samples, 0.08%)</title><rect x="988.6" y="403.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="991.6" y="414.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (2 samples, 0.08%)</title><rect x="988.6" y="387.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="991.6" y="398.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (2 samples, 0.08%)</title><rect x="988.6" y="371.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="991.6" y="382.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (2 samples, 0.08%)</title><rect x="988.6" y="355.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="991.6" y="366.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (2 samples, 0.08%)</title><rect x="988.6" y="339.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="991.6" y="350.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (2 samples, 0.08%)</title><rect x="988.6" y="323.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="991.6" y="334.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (2 samples, 0.08%)</title><rect x="988.6" y="307.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="991.6" y="318.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long) (2 samples, 0.08%)</title><rect x="988.6" y="291.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="991.6" y="302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (2 samples, 0.08%)</title><rect x="988.6" y="275.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="991.6" y="286.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="989.1" y="259.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="992.1" y="270.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (1 samples, 0.04%)</title><rect x="989.5" y="435.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="992.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::Block::NewIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::Comparator const*, rocksdb::Comparator const*, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.04%)</title><rect x="990.0" y="435.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="993.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (2 samples, 0.08%)</title><rect x="990.4" y="451.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="993.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="990.9" y="435.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="993.9" y="446.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="990.9" y="419.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="993.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (1 samples, 0.04%)</title><rect x="991.3" y="451.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="994.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (1 samples, 0.04%)</title><rect x="991.8" y="451.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="994.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (9 samples, 0.34%)</title><rect x="992.2" y="451.0" width="4.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="995.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.15%)</title><rect x="994.5" y="435.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="997.5" y="446.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="994.5" y="419.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="997.5" y="430.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (3 samples, 0.11%)</title><rect x="994.9" y="419.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="997.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="996.3" y="451.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="999.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::BlockHandle&gt;::status() const (1 samples, 0.04%)</title><rect x="996.7" y="467.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="999.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::IndexBlockIter() (1 samples, 0.04%)</title><rect x="997.2" y="467.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1000.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="997.6" y="467.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1000.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::value() const (1 samples, 0.04%)</title><rect x="998.1" y="467.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1001.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="998.5" y="467.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1001.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long) (1 samples, 0.04%)</title><rect x="999.0" y="515.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1002.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="999.4" y="515.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1002.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="999.9" y="531.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1002.9" y="542.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (2 samples, 0.08%)</title><rect x="1000.3" y="547.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1003.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (14 samples, 0.53%)</title><rect x="1001.2" y="563.0" width="6.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1004.2" y="574.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.04%)</title><rect x="1001.6" y="547.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1004.6" y="558.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="1002.1" y="547.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1005.1" y="558.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="1002.5" y="547.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1005.5" y="558.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.08%)</title><rect x="1003.0" y="547.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1006.0" y="558.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.08%)</title><rect x="1003.0" y="531.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1006.0" y="542.0"></text>
</g>
<g>
<title>jni_NewByteArray (8 samples, 0.30%)</title><rect x="1003.9" y="547.0" width="3.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1006.9" y="558.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="1004.3" y="531.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1007.3" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.08%)</title><rect x="1004.8" y="531.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1007.8" y="542.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.15%)</title><rect x="1005.7" y="531.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1008.7" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.08%)</title><rect x="1006.6" y="515.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1009.6" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.08%)</title><rect x="1006.6" y="499.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1009.6" y="510.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.04%)</title><rect x="1007.0" y="483.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1010.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="1007.5" y="563.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1010.5" y="574.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.04%)</title><rect x="1007.9" y="579.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1010.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.11%)</title><rect x="1008.4" y="595.0" width="1.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1011.4" y="606.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="1008.4" y="579.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1011.4" y="590.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (2 samples, 0.08%)</title><rect x="1008.8" y="579.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1011.8" y="590.0"></text>
</g>
<g>
<title>__GI___libc_malloc (3 samples, 0.11%)</title><rect x="1009.7" y="595.0" width="1.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1012.7" y="606.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.04%)</title><rect x="1011.1" y="595.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1014.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (2 samples, 0.08%)</title><rect x="1011.5" y="627.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1014.5" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.08%)</title><rect x="1011.5" y="611.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1014.5" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="1011.5" y="595.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1014.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="1011.5" y="579.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1014.5" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1011.5" y="563.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1014.5" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="1011.5" y="547.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1014.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="1011.5" y="531.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1014.5" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.04%)</title><rect x="1011.5" y="515.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1014.5" y="526.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1011.5" y="499.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1014.5" y="510.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1 samples, 0.04%)</title><rect x="1012.0" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1015.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (117 samples, 4.46%)</title><rect x="1012.4" y="643.0" width="52.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1015.4" y="654.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (117 samples, 4.46%)</title><rect x="1012.4" y="627.0" width="52.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1015.4" y="638.0">one/n..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.19%)</title><rect x="1014.7" y="611.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1017.7" y="622.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="1016.5" y="595.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1019.5" y="606.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="1016.5" y="579.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1019.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (105 samples, 4.00%)</title><rect x="1016.9" y="611.0" width="47.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1019.9" y="622.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.15%)</title><rect x="1016.9" y="595.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1019.9" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.11%)</title><rect x="1017.4" y="579.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1020.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.08%)</title><rect x="1017.4" y="563.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1020.4" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="1018.3" y="563.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1021.3" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="1018.3" y="547.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1021.3" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (101 samples, 3.85%)</title><rect x="1018.7" y="595.0" width="45.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1021.7" y="606.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (101 samples, 3.85%)</title><rect x="1018.7" y="579.0" width="45.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1021.7" y="590.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.04%)</title><rect x="1018.7" y="563.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1021.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (100 samples, 3.81%)</title><rect x="1019.2" y="563.0" width="44.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1022.2" y="574.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (100 samples, 3.81%)</title><rect x="1019.2" y="547.0" width="44.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1022.2" y="558.0">one/..</text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="1019.2" y="531.0" width="1.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1022.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="1019.2" y="515.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1022.2" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.08%)</title><rect x="1019.2" y="499.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1022.2" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.08%)</title><rect x="1019.2" y="483.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1022.2" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.08%)</title><rect x="1019.2" y="467.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1022.2" y="478.0"></text>
</g>
<g>
<title>__send (1 samples, 0.04%)</title><rect x="1020.1" y="499.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1023.1" y="510.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1020.5" y="499.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1023.5" y="510.0"></text>
</g>
<g>
<title>__send (96 samples, 3.66%)</title><rect x="1021.0" y="531.0" width="43.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1024.0" y="542.0">__send</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="1022.8" y="515.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1025.8" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (91 samples, 3.47%)</title><rect x="1023.2" y="515.0" width="40.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1026.2" y="526.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (91 samples, 3.47%)</title><rect x="1023.2" y="499.0" width="40.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1026.2" y="510.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (86 samples, 3.28%)</title><rect x="1025.0" y="483.0" width="38.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1028.0" y="494.0">__x..</text>
</g>
<g>
<title>__sys_sendto (86 samples, 3.28%)</title><rect x="1025.0" y="467.0" width="38.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1028.0" y="478.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (85 samples, 3.24%)</title><rect x="1025.5" y="451.0" width="38.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1028.5" y="462.0">soc..</text>
</g>
<g>
<title>tcp_sendmsg (84 samples, 3.20%)</title><rect x="1025.9" y="435.0" width="37.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1028.9" y="446.0">tcp..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="1025.9" y="419.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1028.9" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="1025.9" y="403.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1028.9" y="414.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="1026.4" y="419.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1029.4" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (82 samples, 3.12%)</title><rect x="1026.8" y="419.0" width="36.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1029.8" y="430.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (65 samples, 2.48%)</title><rect x="1029.5" y="403.0" width="29.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1032.5" y="414.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (65 samples, 2.48%)</title><rect x="1029.5" y="387.0" width="29.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1032.5" y="398.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (60 samples, 2.29%)</title><rect x="1030.0" y="371.0" width="26.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1033.0" y="382.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (53 samples, 2.02%)</title><rect x="1030.9" y="355.0" width="23.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1033.9" y="366.0">_..</text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.04%)</title><rect x="1031.3" y="339.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1034.3" y="350.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.04%)</title><rect x="1031.8" y="339.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1034.8" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="1031.8" y="323.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1034.8" y="334.0"></text>
</g>
<g>
<title>ip_output (50 samples, 1.90%)</title><rect x="1032.2" y="339.0" width="22.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1035.2" y="350.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (49 samples, 1.87%)</title><rect x="1032.2" y="323.0" width="22.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1035.2" y="334.0">i..</text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.15%)</title><rect x="1032.2" y="307.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1035.2" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.08%)</title><rect x="1033.1" y="291.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1036.1" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.08%)</title><rect x="1033.1" y="275.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1036.1" y="286.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.04%)</title><rect x="1033.1" y="259.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1036.1" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="1033.6" y="259.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1036.6" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (45 samples, 1.71%)</title><rect x="1034.0" y="307.0" width="20.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1037.0" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (45 samples, 1.71%)</title><rect x="1034.0" y="291.0" width="20.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1037.0" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (43 samples, 1.64%)</title><rect x="1034.9" y="275.0" width="19.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1037.9" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (43 samples, 1.64%)</title><rect x="1034.9" y="259.0" width="19.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1037.9" y="270.0"></text>
</g>
<g>
<title>net_rx_action (41 samples, 1.56%)</title><rect x="1035.8" y="243.0" width="18.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1038.8" y="254.0"></text>
</g>
<g>
<title>process_backlog (40 samples, 1.52%)</title><rect x="1036.3" y="227.0" width="17.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1039.3" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (36 samples, 1.37%)</title><rect x="1038.1" y="211.0" width="16.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1041.1" y="222.0"></text>
</g>
<g>
<title>ip_rcv (36 samples, 1.37%)</title><rect x="1038.1" y="195.0" width="16.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1041.1" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (35 samples, 1.33%)</title><rect x="1038.5" y="179.0" width="15.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1041.5" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (35 samples, 1.33%)</title><rect x="1038.5" y="163.0" width="15.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1041.5" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (35 samples, 1.33%)</title><rect x="1038.5" y="147.0" width="15.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1041.5" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (35 samples, 1.33%)</title><rect x="1038.5" y="131.0" width="15.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1041.5" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.04%)</title><rect x="1038.5" y="115.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1041.5" y="126.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.08%)</title><rect x="1039.0" y="115.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1042.0" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.11%)</title><rect x="1039.9" y="115.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1042.9" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.04%)</title><rect x="1040.8" y="99.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1043.8" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (28 samples, 1.07%)</title><rect x="1041.2" y="115.0" width="12.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1044.2" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (28 samples, 1.07%)</title><rect x="1041.2" y="99.0" width="12.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1044.2" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (6 samples, 0.23%)</title><rect x="1042.1" y="83.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1045.1" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.23%)</title><rect x="1042.1" y="67.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1045.1" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.19%)</title><rect x="1042.6" y="51.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1045.6" y="62.0"></text>
</g>
<g>
<title>tcp_ack (16 samples, 0.61%)</title><rect x="1044.8" y="83.0" width="7.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1047.8" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.08%)</title><rect x="1046.2" y="67.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1049.2" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="1046.2" y="51.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1049.2" y="62.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="1046.6" y="51.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1049.6" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="1047.1" y="67.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1050.1" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="1047.1" y="51.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1050.1" y="62.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.04%)</title><rect x="1047.5" y="67.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1050.5" y="78.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.04%)</title><rect x="1048.0" y="67.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1051.0" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (5 samples, 0.19%)</title><rect x="1048.4" y="67.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1051.4" y="78.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.04%)</title><rect x="1050.2" y="51.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1053.2" y="62.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.04%)</title><rect x="1050.6" y="67.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1053.6" y="78.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.04%)</title><rect x="1051.1" y="67.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1054.1" y="78.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="1051.5" y="67.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1054.5" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="1052.0" y="83.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1055.0" y="94.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="1052.0" y="67.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1055.0" y="78.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="1052.0" y="51.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1055.0" y="62.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.11%)</title><rect x="1052.4" y="83.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1055.4" y="94.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.04%)</title><rect x="1053.8" y="115.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1056.8" y="126.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.04%)</title><rect x="1054.2" y="323.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1057.2" y="334.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="1054.2" y="307.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1057.2" y="318.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.08%)</title><rect x="1054.7" y="355.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1057.7" y="366.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.04%)</title><rect x="1055.6" y="355.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1058.6" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.04%)</title><rect x="1056.0" y="355.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1059.0" y="366.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.04%)</title><rect x="1056.5" y="355.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1059.5" y="366.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.08%)</title><rect x="1056.9" y="371.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1059.9" y="382.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="1057.4" y="355.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1060.4" y="366.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (2 samples, 0.08%)</title><rect x="1057.8" y="371.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1060.8" y="382.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.08%)</title><rect x="1058.7" y="403.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1061.7" y="414.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.08%)</title><rect x="1058.7" y="387.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1061.7" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="1059.2" y="371.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1062.2" y="382.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.08%)</title><rect x="1059.6" y="403.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1062.6" y="414.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.08%)</title><rect x="1059.6" y="387.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1062.6" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.15%)</title><rect x="1060.5" y="403.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1063.5" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.15%)</title><rect x="1060.5" y="387.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1063.5" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.11%)</title><rect x="1060.5" y="371.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1063.5" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.11%)</title><rect x="1060.5" y="355.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1063.5" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="1061.9" y="371.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1064.9" y="382.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.08%)</title><rect x="1062.3" y="403.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1065.3" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="1063.2" y="403.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1066.2" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="1063.2" y="387.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1066.2" y="398.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="1063.7" y="483.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1066.7" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.08%)</title><rect x="1064.1" y="611.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1067.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (1 samples, 0.04%)</title><rect x="1065.0" y="691.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1068.0" y="702.0"></text>
</g>
<g>
<title>[NIO Worker #21 tid=1083397] (277 samples, 10.55%)</title><rect x="1065.5" y="755.0" width="124.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1068.5" y="766.0">[NIO Worker #21..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.08%)</title><rect x="1065.5" y="739.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1068.5" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.08%)</title><rect x="1065.5" y="723.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1068.5" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.04%)</title><rect x="1065.5" y="707.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1068.5" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (1 samples, 0.04%)</title><rect x="1065.5" y="691.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1068.5" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (1 samples, 0.04%)</title><rect x="1065.9" y="707.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1068.9" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.04%)</title><rect x="1065.9" y="691.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1068.9" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (1 samples, 0.04%)</title><rect x="1065.9" y="675.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1068.9" y="686.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.08%)</title><rect x="1066.4" y="739.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1069.4" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.08%)</title><rect x="1066.4" y="723.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1069.4" y="734.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.08%)</title><rect x="1066.4" y="707.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1069.4" y="718.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="1066.8" y="691.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1069.8" y="702.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.08%)</title><rect x="1067.3" y="739.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1070.3" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.08%)</title><rect x="1067.3" y="723.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1070.3" y="734.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="1067.7" y="707.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1070.7" y="718.0"></text>
</g>
<g>
<title>java/lang/Thread.run (271 samples, 10.32%)</title><rect x="1068.2" y="739.0" width="121.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1071.2" y="750.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (271 samples, 10.32%)</title><rect x="1068.2" y="723.0" width="121.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1071.2" y="734.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (271 samples, 10.32%)</title><rect x="1068.2" y="707.0" width="121.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1071.2" y="718.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (29 samples, 1.10%)</title><rect x="1068.6" y="691.0" width="13.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1071.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (29 samples, 1.10%)</title><rect x="1068.6" y="675.0" width="13.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1071.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (29 samples, 1.10%)</title><rect x="1068.6" y="659.0" width="13.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1071.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (1 samples, 0.04%)</title><rect x="1068.6" y="643.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1071.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.04%)</title><rect x="1068.6" y="627.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1071.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (28 samples, 1.07%)</title><rect x="1069.1" y="643.0" width="12.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1072.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (28 samples, 1.07%)</title><rect x="1069.1" y="627.0" width="12.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1072.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (23 samples, 0.88%)</title><rect x="1070.9" y="611.0" width="10.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1073.9" y="622.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.08%)</title><rect x="1071.8" y="595.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1074.8" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="1072.7" y="595.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1075.7" y="606.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.15%)</title><rect x="1073.1" y="595.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1076.1" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.08%)</title><rect x="1073.1" y="579.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1076.1" y="590.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.04%)</title><rect x="1073.6" y="563.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1076.6" y="574.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="1074.0" y="579.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1077.0" y="590.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="1074.5" y="579.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1077.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.53%)</title><rect x="1074.9" y="595.0" width="6.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1077.9" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (13 samples, 0.50%)</title><rect x="1074.9" y="579.0" width="5.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1077.9" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.50%)</title><rect x="1074.9" y="563.0" width="5.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1077.9" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.50%)</title><rect x="1074.9" y="547.0" width="5.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1077.9" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (11 samples, 0.42%)</title><rect x="1075.8" y="531.0" width="5.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1078.8" y="542.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.42%)</title><rect x="1075.8" y="515.0" width="5.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1078.8" y="526.0"></text>
</g>
<g>
<title>futex_wait (10 samples, 0.38%)</title><rect x="1076.3" y="499.0" width="4.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1079.3" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.23%)</title><rect x="1076.7" y="483.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1079.7" y="494.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (3 samples, 0.11%)</title><rect x="1077.2" y="467.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1080.2" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.11%)</title><rect x="1077.2" y="451.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1080.2" y="462.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.08%)</title><rect x="1078.5" y="467.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1081.5" y="478.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="1079.0" y="451.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1082.0" y="462.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.11%)</title><rect x="1079.4" y="483.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1082.4" y="494.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="1079.4" y="467.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1082.4" y="478.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.08%)</title><rect x="1079.9" y="467.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1082.9" y="478.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="1080.8" y="579.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1083.8" y="590.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.04%)</title><rect x="1081.2" y="611.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1084.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$54/953807481.run (241 samples, 9.18%)</title><rect x="1081.7" y="691.0" width="108.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1084.7" y="702.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (241 samples, 9.18%)</title><rect x="1081.7" y="675.0" width="108.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1084.7" y="686.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.getEntity (240 samples, 9.14%)</title><rect x="1081.7" y="659.0" width="107.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1084.7" y="670.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.04%)</title><rect x="1081.7" y="643.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1084.7" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.capacity (1 samples, 0.04%)</title><rect x="1081.7" y="627.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1084.7" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1081.7" y="611.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1084.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.get (151 samples, 5.75%)</title><rect x="1082.1" y="643.0" width="67.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1085.1" y="654.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (149 samples, 5.68%)</title><rect x="1082.1" y="627.0" width="67.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1085.1" y="638.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (149 samples, 5.68%)</title><rect x="1082.1" y="611.0" width="67.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1085.1" y="622.0">org/roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (140 samples, 5.33%)</title><rect x="1082.6" y="595.0" width="62.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1085.6" y="606.0">Java_o..</text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="1082.6" y="579.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1085.6" y="590.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1083.0" y="579.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1086.0" y="590.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.04%)</title><rect x="1083.5" y="579.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1086.5" y="590.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1083.9" y="579.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1086.9" y="590.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="1084.4" y="579.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1087.4" y="590.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="1084.8" y="579.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1087.8" y="590.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.04%)</title><rect x="1085.3" y="579.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1088.3" y="590.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.04%)</title><rect x="1085.7" y="579.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1088.7" y="590.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (131 samples, 4.99%)</title><rect x="1086.2" y="579.0" width="58.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1089.2" y="590.0">rocksd..</text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (2 samples, 0.08%)</title><rect x="1086.6" y="563.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1089.6" y="574.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="1087.5" y="563.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1090.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (119 samples, 4.53%)</title><rect x="1088.0" y="563.0" width="53.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1091.0" y="574.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (116 samples, 4.42%)</title><rect x="1088.4" y="547.0" width="52.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1091.4" y="558.0">rocks..</text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1089.8" y="531.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1092.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (3 samples, 0.11%)</title><rect x="1090.2" y="531.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1093.2" y="542.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1090.2" y="515.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1093.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="1090.7" y="515.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1093.7" y="526.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.04%)</title><rect x="1090.7" y="499.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1093.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.04%)</title><rect x="1091.1" y="515.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1094.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (109 samples, 4.15%)</title><rect x="1091.6" y="531.0" width="49.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1094.6" y="542.0">rock..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="1091.6" y="515.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1094.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (103 samples, 3.92%)</title><rect x="1092.0" y="515.0" width="46.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1095.0" y="526.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="1095.2" y="499.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1098.2" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="1095.6" y="499.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1098.6" y="510.0"></text>
</g>
<g>
<title>_init (2 samples, 0.08%)</title><rect x="1096.5" y="499.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1099.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (4 samples, 0.15%)</title><rect x="1097.4" y="499.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1100.4" y="510.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1097.8" y="483.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1100.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="1098.3" y="483.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1101.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.04%)</title><rect x="1098.7" y="483.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1101.7" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1098.7" y="467.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1101.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.08%)</title><rect x="1099.2" y="499.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1102.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.08%)</title><rect x="1099.2" y="483.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1102.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.04%)</title><rect x="1099.2" y="467.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1102.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.04%)</title><rect x="1099.6" y="467.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1102.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.04%)</title><rect x="1100.1" y="499.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1103.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (21 samples, 0.80%)</title><rect x="1100.5" y="499.0" width="9.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1103.5" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (18 samples, 0.69%)</title><rect x="1101.4" y="483.0" width="8.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1104.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (17 samples, 0.65%)</title><rect x="1101.4" y="467.0" width="7.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1104.4" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.15%)</title><rect x="1105.5" y="451.0" width="1.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1108.5" y="462.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1107.3" y="451.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1110.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.11%)</title><rect x="1107.7" y="451.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1110.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="1109.1" y="467.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1112.1" y="478.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1109.5" y="483.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1112.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.04%)</title><rect x="1110.0" y="499.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1113.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::PinnedIteratorsManager::~PinnedIteratorsManager() (2 samples, 0.08%)</title><rect x="1110.4" y="499.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1113.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="1111.3" y="499.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1114.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.04%)</title><rect x="1111.8" y="499.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1114.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (58 samples, 2.21%)</title><rect x="1112.2" y="499.0" width="26.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1115.2" y="510.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (2 samples, 0.08%)</title><rect x="1112.2" y="483.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1115.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (1 samples, 0.04%)</title><rect x="1113.1" y="483.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1116.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (1 samples, 0.04%)</title><rect x="1113.6" y="483.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1116.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::MergeContext*, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="1114.0" y="483.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1117.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.04%)</title><rect x="1114.5" y="483.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1117.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int) (52 samples, 1.98%)</title><rect x="1114.9" y="483.0" width="23.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1117.9" y="494.0">r..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*) const (1 samples, 0.04%)</title><rect x="1114.9" y="467.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1117.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (48 samples, 1.83%)</title><rect x="1115.4" y="467.0" width="21.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1118.4" y="478.0">r..</text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="1115.8" y="451.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1118.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetUncompressionDict(rocksdb::BlockBasedTable::Rep*, rocksdb::FilePrefetchBuffer*, bool, rocksdb::GetContext*) (1 samples, 0.04%)</title><rect x="1116.3" y="451.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1119.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::BlockBasedTable::IndexReader&gt;*, rocksdb::GetContext*) (2 samples, 0.08%)</title><rect x="1116.7" y="451.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1119.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::IndexBlockIter*, bool, bool) (2 samples, 0.08%)</title><rect x="1116.7" y="435.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1119.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter* rocksdb::Block::NewIterator&lt;rocksdb::IndexBlockIter&gt;(rocksdb::Comparator const*, rocksdb::Comparator const*, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.04%)</title><rect x="1117.2" y="419.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1120.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::DelegateCleanupsTo(rocksdb::Cleanable*) (1 samples, 0.04%)</title><rect x="1117.6" y="451.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1120.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (13 samples, 0.50%)</title><rect x="1118.1" y="451.0" width="5.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1121.1" y="462.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1118.5" y="435.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1121.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (9 samples, 0.34%)</title><rect x="1119.0" y="435.0" width="4.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1122.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, unsigned long, bool, rocksdb::GetContext*) (6 samples, 0.23%)</title><rect x="1119.0" y="419.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1122.0" y="430.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (6 samples, 0.23%)</title><rect x="1119.0" y="403.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1122.0" y="414.0"></text>
</g>
<g>
<title>MurmurHash64A(void const*, int, unsigned int) (2 samples, 0.08%)</title><rect x="1119.0" y="387.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1122.0" y="398.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (4 samples, 0.15%)</title><rect x="1119.9" y="387.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1122.9" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.04%)</title><rect x="1119.9" y="371.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1122.9" y="382.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (3 samples, 0.11%)</title><rect x="1120.3" y="371.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1123.3" y="382.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (3 samples, 0.11%)</title><rect x="1120.3" y="355.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1123.3" y="366.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (2 samples, 0.08%)</title><rect x="1121.7" y="419.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1124.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(unsigned long, unsigned long, rocksdb::Slice*, char*) const (1 samples, 0.04%)</title><rect x="1121.7" y="403.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1124.7" y="414.0"></text>
</g>
<g>
<title>__libc_pread64 (1 samples, 0.04%)</title><rect x="1121.7" y="387.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1124.7" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1121.7" y="371.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1124.7" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1121.7" y="355.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1124.7" y="366.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.04%)</title><rect x="1121.7" y="339.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1124.7" y="350.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.04%)</title><rect x="1121.7" y="323.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1124.7" y="334.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.04%)</title><rect x="1121.7" y="307.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1124.7" y="318.0"></text>
</g>
<g>
<title>shmem_file_read_iter (1 samples, 0.04%)</title><rect x="1121.7" y="291.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1124.7" y="302.0"></text>
</g>
<g>
<title>shmem_getpage_gfp.isra.0 (1 samples, 0.04%)</title><rect x="1121.7" y="275.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1124.7" y="286.0"></text>
</g>
<g>
<title>find_lock_entry (1 samples, 0.04%)</title><rect x="1121.7" y="259.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1124.7" y="270.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.04%)</title><rect x="1121.7" y="243.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1124.7" y="254.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.04%)</title><rect x="1121.7" y="227.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1124.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (1 samples, 0.04%)</title><rect x="1122.1" y="403.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1125.1" y="414.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (1 samples, 0.04%)</title><rect x="1122.1" y="387.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1125.1" y="398.0"></text>
</g>
<g>
<title>snappy::RawUncompress(char const*, unsigned long, char*) (1 samples, 0.04%)</title><rect x="1122.1" y="371.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1125.1" y="382.0"></text>
</g>
<g>
<title>snappy::RawUncompress(snappy::Source*, char*) (1 samples, 0.04%)</title><rect x="1122.1" y="355.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1125.1" y="366.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="1122.1" y="339.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1125.1" y="350.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="1122.1" y="323.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1125.1" y="334.0"></text>
</g>
<g>
<title>void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt;(snappy::SnappyArrayWriter*) (1 samples, 0.04%)</title><rect x="1122.1" y="307.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1125.1" y="318.0"></text>
</g>
<g>
<title>snappy::SnappyArrayWriter::TryFastAppend(char const*, unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="1122.1" y="291.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1125.1" y="302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10329967090062194616.so (1 samples, 0.04%)</title><rect x="1122.1" y="275.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1125.1" y="286.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="1122.6" y="419.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1125.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.08%)</title><rect x="1123.0" y="435.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1126.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (12 samples, 0.46%)</title><rect x="1123.9" y="451.0" width="5.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1126.9" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1126.6" y="435.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1129.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 0.19%)</title><rect x="1127.1" y="435.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1130.1" y="446.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (1 samples, 0.04%)</title><rect x="1129.3" y="451.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1132.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="1129.3" y="435.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1132.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Unref(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="1129.3" y="419.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1132.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (16 samples, 0.61%)</title><rect x="1129.8" y="451.0" width="7.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1132.8" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="1133.8" y="435.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1136.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 0.19%)</title><rect x="1134.7" y="435.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1137.7" y="446.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1136.5" y="419.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1139.5" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::BlockHandle&gt;::Valid() const (1 samples, 0.04%)</title><rect x="1137.0" y="467.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1140.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::BlockHandle&gt;::~BlockIter() (1 samples, 0.04%)</title><rect x="1137.4" y="467.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1140.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::value() const (1 samples, 0.04%)</title><rect x="1137.9" y="467.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1140.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="1138.3" y="515.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1141.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.08%)</title><rect x="1138.8" y="515.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1141.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.04%)</title><rect x="1139.7" y="515.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1142.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="1140.1" y="515.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1143.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.04%)</title><rect x="1140.6" y="547.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1143.6" y="558.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (1 samples, 0.04%)</title><rect x="1141.0" y="547.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1144.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.08%)</title><rect x="1141.5" y="563.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1144.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (4 samples, 0.15%)</title><rect x="1142.4" y="563.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1145.4" y="574.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.15%)</title><rect x="1142.4" y="547.0" width="1.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1145.4" y="558.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.08%)</title><rect x="1142.4" y="531.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1145.4" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="1143.2" y="531.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1146.2" y="542.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="1143.7" y="531.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1146.7" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="1143.7" y="515.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1146.7" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="1143.7" y="499.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1146.7" y="510.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.04%)</title><rect x="1143.7" y="483.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1146.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="1144.1" y="563.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1147.1" y="574.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="1144.6" y="563.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1147.6" y="574.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.04%)</title><rect x="1145.0" y="579.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1148.0" y="590.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.08%)</title><rect x="1145.5" y="595.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1148.5" y="606.0"></text>
</g>
<g>
<title>_init (2 samples, 0.08%)</title><rect x="1146.4" y="595.0" width="0.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1149.4" y="606.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.04%)</title><rect x="1147.3" y="595.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1150.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.04%)</title><rect x="1147.7" y="595.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1150.7" y="606.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="1148.2" y="595.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1151.2" y="606.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.04%)</title><rect x="1148.6" y="595.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1151.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (2 samples, 0.08%)</title><rect x="1149.1" y="627.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1152.1" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.04%)</title><rect x="1149.5" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1152.5" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1149.5" y="595.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1152.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1149.5" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1152.5" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1149.5" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1152.5" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="1149.5" y="547.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1152.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (88 samples, 3.35%)</title><rect x="1150.0" y="643.0" width="39.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1153.0" y="654.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (88 samples, 3.35%)</title><rect x="1150.0" y="627.0" width="39.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1153.0" y="638.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="1150.9" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1153.9" y="622.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="1150.9" y="595.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1153.9" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.08%)</title><rect x="1151.3" y="611.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1154.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (82 samples, 3.12%)</title><rect x="1152.2" y="611.0" width="36.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1155.2" y="622.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.11%)</title><rect x="1152.2" y="595.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1155.2" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="1153.1" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1156.1" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="1153.1" y="563.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1156.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (79 samples, 3.01%)</title><rect x="1153.6" y="595.0" width="35.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1156.6" y="606.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (79 samples, 3.01%)</title><rect x="1153.6" y="579.0" width="35.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1156.6" y="590.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (79 samples, 3.01%)</title><rect x="1153.6" y="563.0" width="35.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1156.6" y="574.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (78 samples, 2.97%)</title><rect x="1154.0" y="547.0" width="35.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.0" y="558.0">one..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1154.5" y="531.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1157.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1154.5" y="515.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1157.5" y="526.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="1154.5" y="499.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1157.5" y="510.0"></text>
</g>
<g>
<title>__send (76 samples, 2.90%)</title><rect x="1154.9" y="531.0" width="34.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1157.9" y="542.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (75 samples, 2.86%)</title><rect x="1155.4" y="515.0" width="33.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1158.4" y="526.0">en..</text>
</g>
<g>
<title>do_syscall_64 (75 samples, 2.86%)</title><rect x="1155.4" y="499.0" width="33.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1158.4" y="510.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (73 samples, 2.78%)</title><rect x="1155.8" y="483.0" width="32.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1158.8" y="494.0">__..</text>
</g>
<g>
<title>__sys_sendto (73 samples, 2.78%)</title><rect x="1155.8" y="467.0" width="32.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1158.8" y="478.0">__..</text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="1155.8" y="451.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1158.8" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (71 samples, 2.70%)</title><rect x="1156.3" y="451.0" width="31.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1159.3" y="462.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.04%)</title><rect x="1156.3" y="435.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1159.3" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg (70 samples, 2.67%)</title><rect x="1156.7" y="435.0" width="31.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1159.7" y="446.0">tc..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="1156.7" y="419.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1159.7" y="430.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="1157.2" y="419.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1160.2" y="430.0"></text>
</g>
<g>
<title>__release_sock (1 samples, 0.04%)</title><rect x="1157.2" y="403.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1160.2" y="414.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.04%)</title><rect x="1157.2" y="387.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1160.2" y="398.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.04%)</title><rect x="1157.2" y="371.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1160.2" y="382.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.04%)</title><rect x="1157.2" y="355.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1160.2" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.04%)</title><rect x="1157.2" y="339.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1160.2" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1157.2" y="323.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1160.2" y="334.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (68 samples, 2.59%)</title><rect x="1157.6" y="419.0" width="30.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1160.6" y="430.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (54 samples, 2.06%)</title><rect x="1158.5" y="403.0" width="24.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1161.5" y="414.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (54 samples, 2.06%)</title><rect x="1158.5" y="387.0" width="24.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1161.5" y="398.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (47 samples, 1.79%)</title><rect x="1159.4" y="371.0" width="21.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1162.4" y="382.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (44 samples, 1.68%)</title><rect x="1160.8" y="355.0" width="19.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1163.8" y="366.0"></text>
</g>
<g>
<title>ip_output (43 samples, 1.64%)</title><rect x="1160.8" y="339.0" width="19.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1163.8" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (39 samples, 1.49%)</title><rect x="1161.7" y="323.0" width="17.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1164.7" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (12 samples, 0.46%)</title><rect x="1161.7" y="307.0" width="5.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1164.7" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (9 samples, 0.34%)</title><rect x="1162.6" y="291.0" width="4.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1165.6" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (8 samples, 0.30%)</title><rect x="1163.0" y="275.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1166.0" y="286.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.19%)</title><rect x="1163.5" y="259.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1166.5" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.15%)</title><rect x="1163.9" y="243.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1166.9" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="1164.4" y="227.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1167.4" y="238.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.04%)</title><rect x="1164.8" y="227.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1167.8" y="238.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="1164.8" y="211.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1167.8" y="222.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="1165.3" y="227.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1168.3" y="238.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.04%)</title><rect x="1165.7" y="259.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1168.7" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="1166.2" y="259.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1169.2" y="270.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.04%)</title><rect x="1166.6" y="291.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1169.6" y="302.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.04%)</title><rect x="1166.6" y="275.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1169.6" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (27 samples, 1.03%)</title><rect x="1167.1" y="307.0" width="12.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1170.1" y="318.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.04%)</title><rect x="1167.1" y="291.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1170.1" y="302.0"></text>
</g>
<g>
<title>do_softirq.part.0 (25 samples, 0.95%)</title><rect x="1167.5" y="291.0" width="11.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1170.5" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (23 samples, 0.88%)</title><rect x="1168.4" y="275.0" width="10.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1171.4" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (23 samples, 0.88%)</title><rect x="1168.4" y="259.0" width="10.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1171.4" y="270.0"></text>
</g>
<g>
<title>net_rx_action (22 samples, 0.84%)</title><rect x="1168.9" y="243.0" width="9.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1171.9" y="254.0"></text>
</g>
<g>
<title>process_backlog (21 samples, 0.80%)</title><rect x="1169.3" y="227.0" width="9.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1172.3" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (20 samples, 0.76%)</title><rect x="1169.8" y="211.0" width="9.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1172.8" y="222.0"></text>
</g>
<g>
<title>ip_rcv (20 samples, 0.76%)</title><rect x="1169.8" y="195.0" width="9.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1172.8" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (19 samples, 0.72%)</title><rect x="1169.8" y="179.0" width="8.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1172.8" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (19 samples, 0.72%)</title><rect x="1169.8" y="163.0" width="8.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1172.8" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (19 samples, 0.72%)</title><rect x="1169.8" y="147.0" width="8.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1172.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (18 samples, 0.69%)</title><rect x="1170.2" y="131.0" width="8.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1173.2" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (17 samples, 0.65%)</title><rect x="1170.7" y="115.0" width="7.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1173.7" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (17 samples, 0.65%)</title><rect x="1170.7" y="99.0" width="7.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1173.7" y="110.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.04%)</title><rect x="1172.0" y="83.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1175.0" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (7 samples, 0.27%)</title><rect x="1172.5" y="83.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1175.5" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.27%)</title><rect x="1172.5" y="67.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1175.5" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.27%)</title><rect x="1172.5" y="51.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1175.5" y="62.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.11%)</title><rect x="1175.6" y="83.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1178.6" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="1176.5" y="67.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1179.5" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.04%)</title><rect x="1177.0" y="83.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1180.0" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="1177.4" y="83.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1180.4" y="94.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="1177.4" y="67.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1180.4" y="78.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="1177.4" y="51.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1180.4" y="62.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.04%)</title><rect x="1177.9" y="83.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1180.9" y="94.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.04%)</title><rect x="1178.3" y="179.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1181.3" y="190.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.04%)</title><rect x="1178.8" y="291.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1181.8" y="302.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.08%)</title><rect x="1179.2" y="323.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1182.2" y="334.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="1179.7" y="307.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1182.7" y="318.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.04%)</title><rect x="1180.1" y="339.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1183.1" y="350.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="1180.6" y="371.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1183.6" y="382.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="1180.6" y="355.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1183.6" y="366.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.04%)</title><rect x="1181.0" y="371.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1184.0" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="1181.5" y="371.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1184.5" y="382.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.04%)</title><rect x="1181.5" y="355.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1184.5" y="366.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.08%)</title><rect x="1181.9" y="371.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1184.9" y="382.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="1182.8" y="403.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1185.8" y="414.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.04%)</title><rect x="1182.8" y="387.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1185.8" y="398.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="1183.3" y="403.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1186.3" y="414.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.04%)</title><rect x="1183.3" y="387.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1186.3" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.27%)</title><rect x="1183.7" y="403.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1186.7" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.23%)</title><rect x="1184.2" y="387.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1187.2" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.11%)</title><rect x="1185.1" y="371.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1188.1" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.08%)</title><rect x="1185.5" y="355.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1188.5" y="366.0"></text>
</g>
<g>
<title>__slab_alloc.isra.0 (2 samples, 0.08%)</title><rect x="1185.5" y="339.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1188.5" y="350.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="1186.4" y="371.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1189.4" y="382.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.04%)</title><rect x="1186.9" y="403.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1189.9" y="414.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.04%)</title><rect x="1186.9" y="387.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1189.9" y="398.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="1187.3" y="403.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1190.3" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="1187.8" y="403.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1190.8" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="1187.8" y="387.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1190.8" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="1187.8" y="371.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1190.8" y="382.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="1188.2" y="451.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1191.2" y="462.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1188.2" y="435.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1191.2" y="446.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="1188.7" y="483.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1191.7" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="1189.1" y="611.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1192.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="1189.1" y="595.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="1189.1" y="579.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1192.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.putEntity (1 samples, 0.04%)</title><rect x="1189.6" y="659.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1192.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="1189.6" y="643.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1192.6" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="1189.6" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.6" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1189.6" y="611.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1192.6" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1189.6" y="595.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.getEntity (1 samples, 0.04%)</title><rect x="1189.6" y="579.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1192.6" y="590.0"></text>
</g>
</g>
</svg>
