<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (1,512 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.07%)</title><rect x="10.0" y="915.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.33%)</title><rect x="10.8" y="915.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.8" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.07%)</title><rect x="10.8" y="899.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.8" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.07%)</title><rect x="11.6" y="899.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.6" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.07%)</title><rect x="11.6" y="883.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.6" y="894.0"></text>
</g>
<g>
<title>ObjArrayKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.07%)</title><rect x="11.6" y="867.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.6" y="878.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.20%)</title><rect x="12.3" y="899.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="15.3" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.13%)</title><rect x="13.1" y="883.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.1" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.13%)</title><rect x="13.1" y="867.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="16.1" y="878.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.07%)</title><rect x="13.9" y="851.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="16.9" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.26%)</title><rect x="14.7" y="915.0" width="3.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="17.7" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.20%)</title><rect x="15.5" y="899.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="18.5" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.13%)</title><rect x="16.2" y="883.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="19.2" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="16.2" y="867.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="19.2" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="16.2" y="851.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="19.2" y="862.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.07%)</title><rect x="16.2" y="835.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="19.2" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="17.0" y="867.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="20.0" y="878.0"></text>
</g>
<g>
<title>[not_walkable_Java] (19 samples, 1.26%)</title><rect x="17.8" y="915.0" width="14.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="20.8" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.07%)</title><rect x="17.8" y="899.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="20.8" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.07%)</title><rect x="17.8" y="883.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="20.8" y="894.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.07%)</title><rect x="17.8" y="867.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="20.8" y="878.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (1 samples, 0.07%)</title><rect x="17.8" y="851.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="20.8" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.07%)</title><rect x="18.6" y="899.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="21.6" y="910.0"></text>
</g>
<g>
<title>__clock_gettime (17 samples, 1.12%)</title><rect x="19.4" y="899.0" width="13.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="22.4" y="910.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.07%)</title><rect x="19.4" y="883.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="22.4" y="894.0"></text>
</g>
<g>
<title>clock_gettime (16 samples, 1.06%)</title><rect x="20.1" y="883.0" width="12.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="23.1" y="894.0"></text>
</g>
<g>
<title>[vdso] (12 samples, 0.79%)</title><rect x="23.3" y="867.0" width="9.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="26.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="32.6" y="915.0" width="1.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="35.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="32.6" y="899.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="35.6" y="910.0"></text>
</g>
<g>
<title>PerfEvents::destroyForThread(int) (2 samples, 0.13%)</title><rect x="32.6" y="883.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="35.6" y="894.0"></text>
</g>
<g>
<title>[unknown_Java] (9 samples, 0.60%)</title><rect x="34.2" y="915.0" width="7.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="37.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="38.1" y="899.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="41.1" y="910.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.07%)</title><rect x="38.1" y="883.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="41.1" y="894.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.13%)</title><rect x="38.9" y="899.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="41.9" y="910.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.07%)</title><rect x="40.4" y="899.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="43.4" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="41.2" y="915.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="44.2" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="41.2" y="899.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="44.2" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="41.2" y="883.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="44.2" y="894.0"></text>
</g>
<g>
<title>__se_sys_futex (1 samples, 0.07%)</title><rect x="41.2" y="867.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="44.2" y="878.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.07%)</title><rect x="41.2" y="851.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="44.2" y="862.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.07%)</title><rect x="41.2" y="835.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="44.2" y="846.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.07%)</title><rect x="41.2" y="819.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="44.2" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.07%)</title><rect x="41.2" y="803.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="44.2" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.07%)</title><rect x="41.2" y="787.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="44.2" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,152 samples, 76.19%)</title><rect x="42.0" y="915.0" width="899.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.0" y="926.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,152 samples, 76.19%)</title><rect x="42.0" y="899.0" width="899.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="45.0" y="910.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,152 samples, 76.19%)</title><rect x="42.0" y="883.0" width="899.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.0" y="894.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (304 samples, 20.11%)</title><rect x="46.7" y="867.0" width="237.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.7" y="878.0">java/util/concurrent/FutureTask..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (30 samples, 1.98%)</title><rect x="48.2" y="851.0" width="23.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="51.2" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (30 samples, 1.98%)</title><rect x="48.2" y="835.0" width="23.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.2" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (30 samples, 1.98%)</title><rect x="48.2" y="819.0" width="23.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.2" y="830.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (28 samples, 1.85%)</title><rect x="48.2" y="803.0" width="21.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="51.2" y="814.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.26%)</title><rect x="48.2" y="787.0" width="3.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="51.2" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.07%)</title><rect x="48.2" y="771.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="51.2" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.07%)</title><rect x="49.0" y="771.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="52.0" y="782.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.07%)</title><rect x="49.8" y="771.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="52.8" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.07%)</title><rect x="50.6" y="771.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="53.6" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (24 samples, 1.59%)</title><rect x="51.4" y="787.0" width="18.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="54.4" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 1.52%)</title><rect x="52.1" y="771.0" width="18.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="55.1" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 1.52%)</title><rect x="52.1" y="755.0" width="18.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="55.1" y="766.0"></text>
</g>
<g>
<title>__se_sys_futex (19 samples, 1.26%)</title><rect x="53.7" y="739.0" width="14.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="56.7" y="750.0"></text>
</g>
<g>
<title>do_futex (19 samples, 1.26%)</title><rect x="53.7" y="723.0" width="14.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="56.7" y="734.0"></text>
</g>
<g>
<title>futex_wake (18 samples, 1.19%)</title><rect x="54.5" y="707.0" width="14.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="57.5" y="718.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 1.12%)</title><rect x="55.3" y="691.0" width="13.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="58.3" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (17 samples, 1.12%)</title><rect x="55.3" y="675.0" width="13.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="58.3" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.99%)</title><rect x="56.0" y="659.0" width="11.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="59.0" y="670.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.07%)</title><rect x="67.8" y="659.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="70.8" y="670.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.07%)</title><rect x="68.5" y="739.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="71.5" y="750.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.07%)</title><rect x="69.3" y="739.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="72.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$$Lambda$93/619842903.call (2 samples, 0.13%)</title><rect x="70.1" y="803.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$$Lambda$93/619842903.call (272 samples, 17.99%)</title><rect x="71.7" y="851.0" width="212.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="74.7" y="862.0">ru/mail/polis/service/saloed..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter.lambda$proxyRequest$3 (272 samples, 17.99%)</title><rect x="71.7" y="835.0" width="212.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.7" y="846.0">ru/mail/polis/service/saloed..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter.proxySingleRequest (272 samples, 17.99%)</title><rect x="71.7" y="819.0" width="212.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.7" y="830.0">ru/mail/polis/service/saloed..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (272 samples, 17.99%)</title><rect x="71.7" y="803.0" width="212.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.7" y="814.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (272 samples, 17.99%)</title><rect x="71.7" y="787.0" width="212.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.7" y="798.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.26%)</title><rect x="73.2" y="771.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.20%)</title><rect x="74.0" y="755.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="77.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.13%)</title><rect x="74.0" y="739.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.07%)</title><rect x="74.8" y="723.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.07%)</title><rect x="75.6" y="739.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="78.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (44 samples, 2.91%)</title><rect x="76.3" y="771.0" width="34.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.3" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (44 samples, 2.91%)</title><rect x="76.3" y="755.0" width="34.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="79.3" y="766.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.07%)</title><rect x="77.9" y="739.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="80.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.53%)</title><rect x="78.7" y="739.0" width="6.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="81.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.53%)</title><rect x="78.7" y="723.0" width="6.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="81.7" y="734.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.40%)</title><rect x="78.7" y="707.0" width="4.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="81.7" y="718.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="78.7" y="691.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="81.7" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.33%)</title><rect x="79.5" y="691.0" width="3.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="82.5" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.07%)</title><rect x="81.0" y="675.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="84.0" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.13%)</title><rect x="81.8" y="675.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="84.8" y="686.0"></text>
</g>
<g>
<title>_init (1 samples, 0.07%)</title><rect x="83.4" y="707.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="86.4" y="718.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.07%)</title><rect x="84.1" y="707.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="87.1" y="718.0"></text>
</g>
<g>
<title>recv (33 samples, 2.18%)</title><rect x="84.9" y="739.0" width="25.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="87.9" y="750.0">r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 2.05%)</title><rect x="86.5" y="723.0" width="24.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="89.5" y="734.0">e..</text>
</g>
<g>
<title>do_syscall_64 (31 samples, 2.05%)</title><rect x="86.5" y="707.0" width="24.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="89.5" y="718.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (28 samples, 1.85%)</title><rect x="88.0" y="691.0" width="21.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="91.0" y="702.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (26 samples, 1.72%)</title><rect x="89.6" y="675.0" width="20.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="92.6" y="686.0"></text>
</g>
<g>
<title>inet6_recvmsg (26 samples, 1.72%)</title><rect x="89.6" y="659.0" width="20.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="92.6" y="670.0"></text>
</g>
<g>
<title>tcp_recvmsg (26 samples, 1.72%)</title><rect x="89.6" y="643.0" width="20.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="92.6" y="654.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (15 samples, 0.99%)</title><rect x="91.2" y="627.0" width="11.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="94.2" y="638.0"></text>
</g>
<g>
<title>__ip_queue_xmit (13 samples, 0.86%)</title><rect x="92.7" y="611.0" width="10.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="95.7" y="622.0"></text>
</g>
<g>
<title>ip_output (13 samples, 0.86%)</title><rect x="92.7" y="595.0" width="10.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="95.7" y="606.0"></text>
</g>
<g>
<title>ip_finish_output2 (13 samples, 0.86%)</title><rect x="92.7" y="579.0" width="10.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="95.7" y="590.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.33%)</title><rect x="92.7" y="563.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="95.7" y="574.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.20%)</title><rect x="92.7" y="547.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="95.7" y="558.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.20%)</title><rect x="92.7" y="531.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="95.7" y="542.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.07%)</title><rect x="92.7" y="515.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="95.7" y="526.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.13%)</title><rect x="93.5" y="515.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="96.5" y="526.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.13%)</title><rect x="93.5" y="499.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="96.5" y="510.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.07%)</title><rect x="93.5" y="483.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="96.5" y="494.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.07%)</title><rect x="94.3" y="483.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="97.3" y="494.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.07%)</title><rect x="94.3" y="467.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="97.3" y="478.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (1 samples, 0.07%)</title><rect x="95.1" y="547.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="98.1" y="558.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.07%)</title><rect x="95.8" y="547.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="98.8" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (8 samples, 0.53%)</title><rect x="96.6" y="563.0" width="6.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="99.6" y="574.0"></text>
</g>
<g>
<title>do_softirq.part.0 (8 samples, 0.53%)</title><rect x="96.6" y="547.0" width="6.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="99.6" y="558.0"></text>
</g>
<g>
<title>do_softirq_own_stack (7 samples, 0.46%)</title><rect x="97.4" y="531.0" width="5.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="100.4" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (7 samples, 0.46%)</title><rect x="97.4" y="515.0" width="5.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="100.4" y="526.0"></text>
</g>
<g>
<title>net_rx_action (7 samples, 0.46%)</title><rect x="97.4" y="499.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="100.4" y="510.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.07%)</title><rect x="98.2" y="483.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="101.2" y="494.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 0.33%)</title><rect x="99.0" y="483.0" width="3.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="102.0" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 0.26%)</title><rect x="99.7" y="467.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="102.7" y="478.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.07%)</title><rect x="100.5" y="451.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="103.5" y="462.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.13%)</title><rect x="101.3" y="451.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="104.3" y="462.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.13%)</title><rect x="101.3" y="435.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="104.3" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.13%)</title><rect x="101.3" y="419.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="104.3" y="430.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.13%)</title><rect x="101.3" y="403.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="104.3" y="414.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.13%)</title><rect x="101.3" y="387.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="104.3" y="398.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.13%)</title><rect x="101.3" y="371.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="104.3" y="382.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.13%)</title><rect x="101.3" y="355.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="104.3" y="366.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.07%)</title><rect x="101.3" y="339.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="104.3" y="350.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.07%)</title><rect x="102.1" y="339.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="105.1" y="350.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.07%)</title><rect x="102.1" y="323.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="105.1" y="334.0"></text>
</g>
<g>
<title>sk_wait_data (9 samples, 0.60%)</title><rect x="102.9" y="627.0" width="7.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="105.9" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.13%)</title><rect x="102.9" y="611.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="105.9" y="622.0"></text>
</g>
<g>
<title>wait_woken (7 samples, 0.46%)</title><rect x="104.4" y="611.0" width="5.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="107.4" y="622.0"></text>
</g>
<g>
<title>schedule_timeout (6 samples, 0.40%)</title><rect x="105.2" y="595.0" width="4.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="108.2" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.07%)</title><rect x="105.2" y="579.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="108.2" y="590.0"></text>
</g>
<g>
<title>init_timer_key (1 samples, 0.07%)</title><rect x="106.0" y="579.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="109.0" y="590.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.26%)</title><rect x="106.8" y="579.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="109.8" y="590.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.20%)</title><rect x="107.6" y="563.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="110.6" y="574.0"></text>
</g>
<g>
<title>debug_smp_processor_id (1 samples, 0.07%)</title><rect x="109.1" y="547.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="112.1" y="558.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.07%)</title><rect x="109.9" y="691.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="112.9" y="702.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.07%)</title><rect x="109.9" y="675.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="112.9" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (23 samples, 1.52%)</title><rect x="110.7" y="771.0" width="17.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="113.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.53%)</title><rect x="111.5" y="755.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.20%)</title><rect x="111.5" y="739.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="114.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.13%)</title><rect x="111.5" y="723.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="114.5" y="734.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.07%)</title><rect x="113.0" y="723.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="116.0" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.33%)</title><rect x="113.8" y="739.0" width="3.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="116.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (12 samples, 0.79%)</title><rect x="117.7" y="755.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="120.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.60%)</title><rect x="120.0" y="739.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="123.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.60%)</title><rect x="120.0" y="723.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="123.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.07%)</title><rect x="127.1" y="755.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="130.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.07%)</title><rect x="127.8" y="755.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.07%)</title><rect x="127.8" y="739.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.07%)</title><rect x="127.8" y="723.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="130.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (22 samples, 1.46%)</title><rect x="128.6" y="771.0" width="17.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.20%)</title><rect x="145.8" y="771.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="148.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.13%)</title><rect x="146.6" y="755.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.13%)</title><rect x="146.6" y="739.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (19 samples, 1.26%)</title><rect x="148.1" y="771.0" width="14.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.1" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (1 samples, 0.07%)</title><rect x="148.1" y="755.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="151.1" y="766.0"></text>
</g>
<g>
<title>__GI___setsockopt (18 samples, 1.19%)</title><rect x="148.9" y="755.0" width="14.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="151.9" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.99%)</title><rect x="151.3" y="739.0" width="11.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="154.3" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.99%)</title><rect x="151.3" y="723.0" width="11.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="154.3" y="734.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (12 samples, 0.79%)</title><rect x="153.6" y="707.0" width="9.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="156.6" y="718.0"></text>
</g>
<g>
<title>__sys_setsockopt (12 samples, 0.79%)</title><rect x="153.6" y="691.0" width="9.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="156.6" y="702.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (2 samples, 0.13%)</title><rect x="154.4" y="675.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="157.4" y="686.0"></text>
</g>
<g>
<title>fput (1 samples, 0.07%)</title><rect x="155.9" y="675.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="158.9" y="686.0"></text>
</g>
<g>
<title>sock_setsockopt (5 samples, 0.33%)</title><rect x="156.7" y="675.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="159.7" y="686.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.13%)</title><rect x="158.3" y="659.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="161.3" y="670.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.07%)</title><rect x="159.1" y="643.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="162.1" y="654.0"></text>
</g>
<g>
<title>sock_set_timeout (1 samples, 0.07%)</title><rect x="159.8" y="659.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="162.8" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.20%)</title><rect x="160.6" y="675.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="163.6" y="686.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.20%)</title><rect x="160.6" y="659.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="163.6" y="670.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.13%)</title><rect x="161.4" y="643.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="164.4" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (143 samples, 9.46%)</title><rect x="163.0" y="771.0" width="111.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.0" y="782.0">one/nio/net/N..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (4 samples, 0.26%)</title><rect x="163.7" y="755.0" width="3.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="166.7" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.07%)</title><rect x="163.7" y="739.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="166.7" y="750.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="164.5" y="739.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="167.5" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.13%)</title><rect x="165.3" y="739.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="168.3" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.07%)</title><rect x="166.1" y="723.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="169.1" y="734.0"></text>
</g>
<g>
<title>__send (138 samples, 9.13%)</title><rect x="166.9" y="755.0" width="107.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="169.9" y="766.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (136 samples, 8.99%)</title><rect x="168.4" y="739.0" width="106.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="171.4" y="750.0">entry_SYSCALL..</text>
</g>
<g>
<title>do_syscall_64 (136 samples, 8.99%)</title><rect x="168.4" y="723.0" width="106.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="171.4" y="734.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (130 samples, 8.60%)</title><rect x="170.0" y="707.0" width="101.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="173.0" y="718.0">__x64_sys_se..</text>
</g>
<g>
<title>__sys_sendto (130 samples, 8.60%)</title><rect x="170.0" y="691.0" width="101.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="173.0" y="702.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (129 samples, 8.53%)</title><rect x="170.8" y="675.0" width="100.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="173.8" y="686.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.07%)</title><rect x="171.5" y="659.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="174.5" y="670.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.07%)</title><rect x="171.5" y="643.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="174.5" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg (127 samples, 8.40%)</title><rect x="172.3" y="659.0" width="99.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="175.3" y="670.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.07%)</title><rect x="173.1" y="643.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="176.1" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.07%)</title><rect x="173.1" y="627.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="176.1" y="638.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.07%)</title><rect x="173.1" y="611.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="176.1" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (125 samples, 8.27%)</title><rect x="173.9" y="643.0" width="97.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="176.9" y="654.0">tcp_sendmsg..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.13%)</title><rect x="175.4" y="627.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="178.4" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.13%)</title><rect x="175.4" y="611.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="178.4" y="622.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (109 samples, 7.21%)</title><rect x="177.0" y="627.0" width="85.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="180.0" y="638.0">__tcp_push..</text>
</g>
<g>
<title>tcp_write_xmit (109 samples, 7.21%)</title><rect x="177.0" y="611.0" width="85.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="180.0" y="622.0">tcp_write_..</text>
</g>
<g>
<title>__tcp_transmit_skb (105 samples, 6.94%)</title><rect x="178.6" y="595.0" width="81.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="181.6" y="606.0">__tcp_tra..</text>
</g>
<g>
<title>__ip_queue_xmit (97 samples, 6.42%)</title><rect x="180.1" y="579.0" width="75.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="183.1" y="590.0">__ip_que..</text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.07%)</title><rect x="181.7" y="563.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="184.7" y="574.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.13%)</title><rect x="182.5" y="563.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="185.5" y="574.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.13%)</title><rect x="182.5" y="547.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="185.5" y="558.0"></text>
</g>
<g>
<title>ip_output (92 samples, 6.08%)</title><rect x="184.0" y="563.0" width="71.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="187.0" y="574.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (90 samples, 5.95%)</title><rect x="184.0" y="547.0" width="70.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="187.0" y="558.0">ip_finis..</text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.40%)</title><rect x="184.8" y="531.0" width="4.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="187.8" y="542.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.33%)</title><rect x="184.8" y="515.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="187.8" y="526.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.33%)</title><rect x="184.8" y="499.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="187.8" y="510.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.07%)</title><rect x="184.8" y="483.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="187.8" y="494.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.20%)</title><rect x="185.6" y="483.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="188.6" y="494.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.20%)</title><rect x="185.6" y="467.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="188.6" y="478.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.13%)</title><rect x="185.6" y="451.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="188.6" y="462.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.07%)</title><rect x="187.2" y="451.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="190.2" y="462.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.07%)</title><rect x="187.9" y="483.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="190.9" y="494.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.07%)</title><rect x="188.7" y="515.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="191.7" y="526.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.07%)</title><rect x="188.7" y="499.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="191.7" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (83 samples, 5.49%)</title><rect x="189.5" y="531.0" width="64.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="192.5" y="542.0">__local..</text>
</g>
<g>
<title>do_softirq.part.0 (83 samples, 5.49%)</title><rect x="189.5" y="515.0" width="64.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="192.5" y="526.0">do_soft..</text>
</g>
<g>
<title>do_softirq_own_stack (80 samples, 5.29%)</title><rect x="191.8" y="499.0" width="62.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="194.8" y="510.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (80 samples, 5.29%)</title><rect x="191.8" y="483.0" width="62.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="194.8" y="494.0">__soft..</text>
</g>
<g>
<title>net_rx_action (76 samples, 5.03%)</title><rect x="195.0" y="467.0" width="59.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="198.0" y="478.0">net_rx..</text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.13%)</title><rect x="196.5" y="451.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="199.5" y="462.0"></text>
</g>
<g>
<title>process_backlog (72 samples, 4.76%)</title><rect x="198.1" y="451.0" width="56.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="201.1" y="462.0">proces..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (68 samples, 4.50%)</title><rect x="199.6" y="435.0" width="53.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="202.6" y="446.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.20%)</title><rect x="199.6" y="419.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="202.6" y="430.0"></text>
</g>
<g>
<title>ip_rcv (65 samples, 4.30%)</title><rect x="202.0" y="419.0" width="50.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="205.0" y="430.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (63 samples, 4.17%)</title><rect x="202.0" y="403.0" width="49.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="205.0" y="414.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (63 samples, 4.17%)</title><rect x="202.0" y="387.0" width="49.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="205.0" y="398.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (63 samples, 4.17%)</title><rect x="202.0" y="371.0" width="49.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="205.0" y="382.0">ip_pr..</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.07%)</title><rect x="202.8" y="355.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="205.8" y="366.0"></text>
</g>
<g>
<title>tcp_v4_rcv (61 samples, 4.03%)</title><rect x="203.5" y="355.0" width="47.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="206.5" y="366.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.13%)</title><rect x="205.9" y="339.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="208.9" y="350.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.07%)</title><rect x="207.4" y="339.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="210.4" y="350.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (55 samples, 3.64%)</title><rect x="208.2" y="339.0" width="43.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="211.2" y="350.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (55 samples, 3.64%)</title><rect x="208.2" y="323.0" width="43.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="211.2" y="334.0">tcp_..</text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.07%)</title><rect x="211.3" y="307.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="214.3" y="318.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.07%)</title><rect x="211.3" y="291.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="214.3" y="302.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.07%)</title><rect x="211.3" y="275.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="214.3" y="286.0"></text>
</g>
<g>
<title>sock_def_readable (38 samples, 2.51%)</title><rect x="212.1" y="307.0" width="29.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="215.1" y="318.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (38 samples, 2.51%)</title><rect x="212.1" y="291.0" width="29.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="215.1" y="302.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (38 samples, 2.51%)</title><rect x="212.1" y="275.0" width="29.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="215.1" y="286.0">_r..</text>
</g>
<g>
<title>tcp_ack (10 samples, 0.66%)</title><rect x="241.8" y="307.0" width="7.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="244.8" y="318.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.26%)</title><rect x="243.3" y="291.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="246.3" y="302.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.26%)</title><rect x="243.3" y="275.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="246.3" y="286.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.07%)</title><rect x="246.5" y="291.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="249.5" y="302.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.13%)</title><rect x="247.2" y="291.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="250.2" y="302.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.07%)</title><rect x="248.0" y="275.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="251.0" y="286.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.07%)</title><rect x="248.8" y="291.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="251.8" y="302.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.07%)</title><rect x="248.8" y="275.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="251.8" y="286.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.07%)</title><rect x="249.6" y="307.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="252.6" y="318.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.07%)</title><rect x="250.4" y="307.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="253.4" y="318.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.07%)</title><rect x="250.4" y="291.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="253.4" y="302.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.07%)</title><rect x="250.4" y="275.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="253.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.13%)</title><rect x="251.2" y="403.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="254.2" y="414.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.13%)</title><rect x="251.2" y="387.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="254.2" y="398.0"></text>
</g>
<g>
<title>__rcu_read_unlock (2 samples, 0.13%)</title><rect x="252.7" y="435.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="255.7" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.13%)</title><rect x="254.3" y="547.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="257.3" y="558.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.13%)</title><rect x="254.3" y="531.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="257.3" y="542.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.07%)</title><rect x="255.1" y="515.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="258.1" y="526.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.13%)</title><rect x="255.8" y="579.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="258.8" y="590.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.07%)</title><rect x="256.6" y="563.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="259.6" y="574.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.07%)</title><rect x="257.4" y="579.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="260.4" y="590.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.07%)</title><rect x="258.2" y="579.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="261.2" y="590.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.07%)</title><rect x="259.0" y="579.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="262.0" y="590.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.07%)</title><rect x="259.7" y="579.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="262.7" y="590.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.07%)</title><rect x="260.5" y="595.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="263.5" y="606.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.07%)</title><rect x="261.3" y="595.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="264.3" y="606.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.13%)</title><rect x="262.1" y="627.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="265.1" y="638.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.13%)</title><rect x="262.1" y="611.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="265.1" y="622.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.07%)</title><rect x="262.9" y="595.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="265.9" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.26%)</title><rect x="263.6" y="627.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="266.6" y="638.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.26%)</title><rect x="263.6" y="611.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="266.6" y="622.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.20%)</title><rect x="263.6" y="595.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="266.6" y="606.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.20%)</title><rect x="263.6" y="579.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="266.6" y="590.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.07%)</title><rect x="266.0" y="595.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="269.0" y="606.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.07%)</title><rect x="266.8" y="627.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="269.8" y="638.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.07%)</title><rect x="267.5" y="627.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="270.5" y="638.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.26%)</title><rect x="268.3" y="627.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="271.3" y="638.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.20%)</title><rect x="269.1" y="611.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="272.1" y="622.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.07%)</title><rect x="270.7" y="595.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="273.7" y="606.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.13%)</title><rect x="271.4" y="707.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="274.4" y="718.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.13%)</title><rect x="271.4" y="691.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="274.4" y="702.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.07%)</title><rect x="272.2" y="675.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="275.2" y="686.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.13%)</title><rect x="273.0" y="707.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="276.0" y="718.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (3 samples, 0.20%)</title><rect x="274.6" y="771.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="277.6" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (3 samples, 0.20%)</title><rect x="274.6" y="755.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="277.6" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (3 samples, 0.20%)</title><rect x="274.6" y="739.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="277.6" y="750.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (8 samples, 0.53%)</title><rect x="276.9" y="771.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.07%)</title><rect x="280.8" y="755.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="283.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Socket.connect (1 samples, 0.07%)</title><rect x="281.6" y="755.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="284.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.07%)</title><rect x="281.6" y="739.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Socket.create (1 samples, 0.07%)</title><rect x="282.4" y="755.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.&lt;init&gt; (1 samples, 0.07%)</title><rect x="282.4" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="285.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Socket.&lt;init&gt; (1 samples, 0.07%)</title><rect x="282.4" y="723.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="283.1" y="771.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="286.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (5 samples, 0.33%)</title><rect x="283.9" y="867.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="286.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.33%)</title><rect x="283.9" y="851.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="286.9" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$73/2122379680.run (2 samples, 0.13%)</title><rect x="286.3" y="835.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (141 samples, 9.33%)</title><rect x="287.8" y="867.0" width="110.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="290.8" y="878.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (78 samples, 5.16%)</title><rect x="288.6" y="851.0" width="60.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="291.6" y="862.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (38 samples, 2.51%)</title><rect x="293.3" y="835.0" width="29.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="296.3" y="846.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.07%)</title><rect x="294.9" y="819.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="297.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="294.9" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="297.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (34 samples, 2.25%)</title><rect x="295.6" y="819.0" width="26.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="298.6" y="830.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (33 samples, 2.18%)</title><rect x="296.4" y="803.0" width="25.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="299.4" y="814.0">j..</text>
</g>
<g>
<title>Unsafe_Park (25 samples, 1.65%)</title><rect x="297.2" y="787.0" width="19.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="300.2" y="798.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.07%)</title><rect x="299.5" y="771.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="302.5" y="782.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 0.53%)</title><rect x="300.3" y="771.0" width="6.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="303.3" y="782.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (4 samples, 0.26%)</title><rect x="303.4" y="755.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="306.4" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (10 samples, 0.66%)</title><rect x="306.6" y="771.0" width="7.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="309.6" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.46%)</title><rect x="308.9" y="755.0" width="5.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="311.9" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.46%)</title><rect x="308.9" y="739.0" width="5.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="311.9" y="750.0"></text>
</g>
<g>
<title>__se_sys_futex (7 samples, 0.46%)</title><rect x="308.9" y="723.0" width="5.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="311.9" y="734.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.46%)</title><rect x="308.9" y="707.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="311.9" y="718.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.46%)</title><rect x="308.9" y="691.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="311.9" y="702.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.20%)</title><rect x="312.0" y="675.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="315.0" y="686.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.07%)</title><rect x="314.4" y="771.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="317.4" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.07%)</title><rect x="315.1" y="771.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="318.1" y="782.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.07%)</title><rect x="315.9" y="771.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="318.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.46%)</title><rect x="316.7" y="787.0" width="5.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="319.7" y="798.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.07%)</title><rect x="316.7" y="771.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="319.7" y="782.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.07%)</title><rect x="317.5" y="771.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="320.5" y="782.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (5 samples, 0.33%)</title><rect x="318.3" y="771.0" width="3.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="321.3" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.33%)</title><rect x="318.3" y="755.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="321.3" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.33%)</title><rect x="318.3" y="739.0" width="3.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="321.3" y="750.0"></text>
</g>
<g>
<title>__se_sys_futex (3 samples, 0.20%)</title><rect x="319.0" y="723.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="322.0" y="734.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.20%)</title><rect x="319.0" y="707.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="322.0" y="718.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.20%)</title><rect x="319.0" y="691.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="322.0" y="702.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.07%)</title><rect x="319.0" y="675.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="322.0" y="686.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.07%)</title><rect x="319.0" y="659.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="322.0" y="670.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.07%)</title><rect x="319.0" y="643.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="322.0" y="654.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.13%)</title><rect x="319.8" y="675.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="322.8" y="686.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.07%)</title><rect x="321.4" y="723.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="324.4" y="734.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.07%)</title><rect x="321.4" y="707.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="324.4" y="718.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.07%)</title><rect x="321.4" y="691.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="324.4" y="702.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="321.4" y="675.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="324.4" y="686.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.07%)</title><rect x="321.4" y="659.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="324.4" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.07%)</title><rect x="321.4" y="643.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="324.4" y="654.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.07%)</title><rect x="321.4" y="627.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="324.4" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.07%)</title><rect x="321.4" y="611.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="324.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="322.2" y="819.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="325.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.07%)</title><rect x="322.9" y="835.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="325.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.07%)</title><rect x="322.9" y="819.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="325.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (33 samples, 2.18%)</title><rect x="323.7" y="835.0" width="25.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="326.7" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (33 samples, 2.18%)</title><rect x="323.7" y="819.0" width="25.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="326.7" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (28 samples, 1.85%)</title><rect x="327.6" y="803.0" width="21.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.6" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (28 samples, 1.85%)</title><rect x="327.6" y="787.0" width="21.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="330.6" y="798.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (28 samples, 1.85%)</title><rect x="327.6" y="771.0" width="21.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.6" y="782.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.46%)</title><rect x="327.6" y="755.0" width="5.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="330.6" y="766.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.07%)</title><rect x="328.4" y="739.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="331.4" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.13%)</title><rect x="329.2" y="739.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="332.2" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.07%)</title><rect x="330.8" y="739.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="333.8" y="750.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.13%)</title><rect x="331.5" y="739.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="334.5" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (21 samples, 1.39%)</title><rect x="333.1" y="755.0" width="16.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="336.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 1.26%)</title><rect x="334.7" y="739.0" width="14.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="337.7" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 1.26%)</title><rect x="334.7" y="723.0" width="14.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="337.7" y="734.0"></text>
</g>
<g>
<title>__se_sys_futex (17 samples, 1.12%)</title><rect x="335.4" y="707.0" width="13.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="338.4" y="718.0"></text>
</g>
<g>
<title>do_futex (16 samples, 1.06%)</title><rect x="336.2" y="691.0" width="12.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="339.2" y="702.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 1.06%)</title><rect x="336.2" y="675.0" width="12.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="339.2" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.07%)</title><rect x="336.2" y="659.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="339.2" y="670.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 0.99%)</title><rect x="337.0" y="659.0" width="11.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="340.0" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (15 samples, 0.99%)</title><rect x="337.0" y="643.0" width="11.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="340.0" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.99%)</title><rect x="337.0" y="627.0" width="11.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="340.0" y="638.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.07%)</title><rect x="348.7" y="707.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="351.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (62 samples, 4.10%)</title><rect x="349.5" y="851.0" width="48.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="352.5" y="862.0">java..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (61 samples, 4.03%)</title><rect x="349.5" y="835.0" width="47.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="352.5" y="846.0">java..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (1 samples, 0.07%)</title><rect x="349.5" y="819.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="352.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="349.5" y="803.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="352.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (60 samples, 3.97%)</title><rect x="350.3" y="819.0" width="46.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="353.3" y="830.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (57 samples, 3.77%)</title><rect x="351.8" y="803.0" width="44.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="354.8" y="814.0">java..</text>
</g>
<g>
<title>__clock_gettime (6 samples, 0.40%)</title><rect x="361.2" y="787.0" width="4.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="364.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (38 samples, 2.51%)</title><rect x="365.9" y="787.0" width="29.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.9" y="798.0">jd..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.07%)</title><rect x="367.4" y="771.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="370.4" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (2 samples, 0.13%)</title><rect x="368.2" y="771.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="371.2" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (16 samples, 1.06%)</title><rect x="369.8" y="771.0" width="12.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="372.8" y="782.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.07%)</title><rect x="373.7" y="755.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="376.7" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.13%)</title><rect x="374.5" y="755.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="377.5" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="375.2" y="739.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="378.2" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.13%)</title><rect x="376.0" y="755.0" width="1.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="379.0" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (5 samples, 0.33%)</title><rect x="377.6" y="755.0" width="3.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="380.6" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.20%)</title><rect x="379.1" y="739.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="382.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.20%)</title><rect x="379.1" y="723.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="382.1" y="734.0"></text>
</g>
<g>
<title>__se_sys_futex (2 samples, 0.13%)</title><rect x="379.1" y="707.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="382.1" y="718.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.13%)</title><rect x="379.1" y="691.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="382.1" y="702.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.13%)</title><rect x="379.1" y="675.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="382.1" y="686.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.07%)</title><rect x="379.9" y="659.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="382.9" y="670.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.07%)</title><rect x="380.7" y="707.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="383.7" y="718.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.07%)</title><rect x="380.7" y="691.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="383.7" y="702.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.07%)</title><rect x="381.5" y="755.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="384.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.93%)</title><rect x="382.3" y="771.0" width="10.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="385.3" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (14 samples, 0.93%)</title><rect x="382.3" y="755.0" width="10.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="385.3" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.86%)</title><rect x="383.0" y="739.0" width="10.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="386.0" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.86%)</title><rect x="383.0" y="723.0" width="10.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="386.0" y="734.0"></text>
</g>
<g>
<title>__se_sys_futex (10 samples, 0.66%)</title><rect x="384.6" y="707.0" width="7.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="387.6" y="718.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.60%)</title><rect x="384.6" y="691.0" width="7.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="387.6" y="702.0"></text>
</g>
<g>
<title>futex_wait (9 samples, 0.60%)</title><rect x="384.6" y="675.0" width="7.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="387.6" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.26%)</title><rect x="384.6" y="659.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="387.6" y="670.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.13%)</title><rect x="384.6" y="643.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="387.6" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.07%)</title><rect x="385.4" y="627.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="388.4" y="638.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.13%)</title><rect x="386.2" y="643.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="389.2" y="654.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.26%)</title><rect x="387.7" y="659.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="390.7" y="670.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.13%)</title><rect x="389.3" y="643.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="392.3" y="654.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (2 samples, 0.13%)</title><rect x="389.3" y="627.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="392.3" y="638.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (1 samples, 0.07%)</title><rect x="390.8" y="659.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="393.8" y="670.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.07%)</title><rect x="391.6" y="691.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="394.6" y="702.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.07%)</title><rect x="391.6" y="675.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="394.6" y="686.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.07%)</title><rect x="391.6" y="659.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="394.6" y="670.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.07%)</title><rect x="392.4" y="707.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="395.4" y="718.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.07%)</title><rect x="393.2" y="771.0" width="0.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="396.2" y="782.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.07%)</title><rect x="393.2" y="755.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="396.2" y="766.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.07%)</title><rect x="394.0" y="771.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="397.0" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.07%)</title><rect x="394.7" y="771.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="397.7" y="782.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.07%)</title><rect x="395.5" y="787.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="398.5" y="798.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.07%)</title><rect x="396.3" y="803.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="399.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="397.1" y="835.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="400.1" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$73/2122379680.run (696 samples, 46.03%)</title><rect x="397.9" y="867.0" width="543.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="400.9" y="878.0">ru/mail/polis/service/saloed/ServiceImpl$$Lambda$73/2122379680.run</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (696 samples, 46.03%)</title><rect x="397.9" y="851.0" width="543.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.9" y="862.0">ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.processEntityForService (376 samples, 24.87%)</title><rect x="399.4" y="835.0" width="293.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.4" y="846.0">ru/mail/polis/service/saloed/ServiceImp..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (166 samples, 10.98%)</title><rect x="399.4" y="819.0" width="129.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="402.4" y="830.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (166 samples, 10.98%)</title><rect x="399.4" y="803.0" width="129.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="402.4" y="814.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (162 samples, 10.71%)</title><rect x="401.0" y="787.0" width="126.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="404.0" y="798.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.20%)</title><rect x="401.8" y="771.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="404.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.07%)</title><rect x="403.3" y="755.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="406.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.07%)</title><rect x="403.3" y="739.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="406.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.07%)</title><rect x="403.3" y="723.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="406.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.07%)</title><rect x="403.3" y="707.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (158 samples, 10.45%)</title><rect x="404.1" y="771.0" width="123.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="407.1" y="782.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/net/Session.write (158 samples, 10.45%)</title><rect x="404.1" y="755.0" width="123.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="407.1" y="766.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (157 samples, 10.38%)</title><rect x="404.9" y="739.0" width="122.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.9" y="750.0">one/nio/net/Ses..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="404.9" y="723.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="407.9" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.07%)</title><rect x="404.9" y="707.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="407.9" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.84] (1 samples, 0.07%)</title><rect x="404.9" y="691.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="407.9" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="404.9" y="675.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="407.9" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="404.9" y="659.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="407.9" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="404.9" y="643.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="407.9" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (156 samples, 10.32%)</title><rect x="405.7" y="723.0" width="121.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="408.7" y="734.0">one/nio/net/Nat..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.07%)</title><rect x="407.2" y="707.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="410.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.33%)</title><rect x="408.0" y="707.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="411.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.33%)</title><rect x="408.0" y="691.0" width="3.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="411.0" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.26%)</title><rect x="408.0" y="675.0" width="3.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="411.0" y="686.0"></text>
</g>
<g>
<title>_init (1 samples, 0.07%)</title><rect x="408.0" y="659.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="411.0" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.13%)</title><rect x="408.8" y="659.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="411.8" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.07%)</title><rect x="409.6" y="643.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="412.6" y="654.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.07%)</title><rect x="410.4" y="659.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="413.4" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.07%)</title><rect x="411.1" y="675.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="414.1" y="686.0"></text>
</g>
<g>
<title>__send (148 samples, 9.79%)</title><rect x="411.9" y="707.0" width="115.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="414.9" y="718.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (147 samples, 9.72%)</title><rect x="412.7" y="691.0" width="114.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="415.7" y="702.0">entry_SYSCALL_..</text>
</g>
<g>
<title>do_syscall_64 (147 samples, 9.72%)</title><rect x="412.7" y="675.0" width="114.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="415.7" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (143 samples, 9.46%)</title><rect x="414.3" y="659.0" width="111.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="417.3" y="670.0">__x64_sys_sen..</text>
</g>
<g>
<title>__sys_sendto (142 samples, 9.39%)</title><rect x="415.0" y="643.0" width="110.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="418.0" y="654.0">__sys_sendto</text>
</g>
<g>
<title>import_single_range (1 samples, 0.07%)</title><rect x="417.4" y="627.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="420.4" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (136 samples, 8.99%)</title><rect x="418.2" y="627.0" width="106.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="421.2" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.07%)</title><rect x="418.2" y="611.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="421.2" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg (135 samples, 8.93%)</title><rect x="418.9" y="611.0" width="105.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="421.9" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (135 samples, 8.93%)</title><rect x="418.9" y="595.0" width="105.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="421.9" y="606.0">tcp_sendmsg_l..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.07%)</title><rect x="421.3" y="579.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="424.3" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.07%)</title><rect x="421.3" y="563.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="424.3" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (113 samples, 7.47%)</title><rect x="422.1" y="579.0" width="88.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="425.1" y="590.0">__tcp_push..</text>
</g>
<g>
<title>tcp_write_xmit (112 samples, 7.41%)</title><rect x="422.8" y="563.0" width="87.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="425.8" y="574.0">tcp_write_..</text>
</g>
<g>
<title>__tcp_transmit_skb (107 samples, 7.08%)</title><rect x="423.6" y="547.0" width="83.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="426.6" y="558.0">__tcp_tra..</text>
</g>
<g>
<title>__ip_queue_xmit (102 samples, 6.75%)</title><rect x="426.0" y="531.0" width="79.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="429.0" y="542.0">__ip_queu..</text>
</g>
<g>
<title>ip_local_out (1 samples, 0.07%)</title><rect x="426.0" y="515.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="429.0" y="526.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.07%)</title><rect x="426.0" y="499.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="429.0" y="510.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.07%)</title><rect x="426.0" y="483.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="429.0" y="494.0"></text>
</g>
<g>
<title>ip_output (101 samples, 6.68%)</title><rect x="426.7" y="515.0" width="78.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="429.7" y="526.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (100 samples, 6.61%)</title><rect x="426.7" y="499.0" width="78.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="429.7" y="510.0">ip_finish..</text>
</g>
<g>
<title>__dev_queue_xmit (11 samples, 0.73%)</title><rect x="427.5" y="483.0" width="8.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="430.5" y="494.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.33%)</title><rect x="430.6" y="467.0" width="4.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="433.6" y="478.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.33%)</title><rect x="430.6" y="451.0" width="4.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="433.6" y="462.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.20%)</title><rect x="430.6" y="435.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="433.6" y="446.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.20%)</title><rect x="430.6" y="419.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="433.6" y="430.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.07%)</title><rect x="431.4" y="403.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="434.4" y="414.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.07%)</title><rect x="432.2" y="403.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="435.2" y="414.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.07%)</title><rect x="432.2" y="387.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="435.2" y="398.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.13%)</title><rect x="433.0" y="435.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="436.0" y="446.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.13%)</title><rect x="434.6" y="467.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="437.6" y="478.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.07%)</title><rect x="435.3" y="451.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="438.3" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (88 samples, 5.82%)</title><rect x="436.1" y="483.0" width="68.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="439.1" y="494.0">__local..</text>
</g>
<g>
<title>do_softirq.part.0 (87 samples, 5.75%)</title><rect x="436.9" y="467.0" width="67.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="439.9" y="478.0">do_soft..</text>
</g>
<g>
<title>do_softirq_own_stack (84 samples, 5.56%)</title><rect x="439.2" y="451.0" width="65.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="442.2" y="462.0">do_soft..</text>
</g>
<g>
<title>__softirqentry_text_start (84 samples, 5.56%)</title><rect x="439.2" y="435.0" width="65.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="442.2" y="446.0">__softi..</text>
</g>
<g>
<title>net_rx_action (82 samples, 5.42%)</title><rect x="440.8" y="419.0" width="64.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="443.8" y="430.0">net_rx_..</text>
</g>
<g>
<title>process_backlog (80 samples, 5.29%)</title><rect x="442.4" y="403.0" width="62.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="445.4" y="414.0">proces..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (80 samples, 5.29%)</title><rect x="442.4" y="387.0" width="62.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="445.4" y="398.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.26%)</title><rect x="442.4" y="371.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="445.4" y="382.0"></text>
</g>
<g>
<title>ip_rcv (76 samples, 5.03%)</title><rect x="445.5" y="371.0" width="59.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="448.5" y="382.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (72 samples, 4.76%)</title><rect x="447.0" y="355.0" width="56.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="450.0" y="366.0">ip_loc..</text>
</g>
<g>
<title>ip_local_deliver_finish (71 samples, 4.70%)</title><rect x="447.8" y="339.0" width="55.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="450.8" y="350.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (71 samples, 4.70%)</title><rect x="447.8" y="323.0" width="55.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="450.8" y="334.0">ip_pr..</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.07%)</title><rect x="447.8" y="307.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="450.8" y="318.0"></text>
</g>
<g>
<title>tcp_v4_rcv (70 samples, 4.63%)</title><rect x="448.6" y="307.0" width="54.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="451.6" y="318.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.13%)</title><rect x="450.9" y="291.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="453.9" y="302.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.07%)</title><rect x="451.7" y="275.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="454.7" y="286.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.13%)</title><rect x="452.5" y="291.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="455.5" y="302.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.07%)</title><rect x="453.3" y="275.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="456.3" y="286.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (62 samples, 4.10%)</title><rect x="454.1" y="291.0" width="48.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="457.1" y="302.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (62 samples, 4.10%)</title><rect x="454.1" y="275.0" width="48.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="457.1" y="286.0">tcp_..</text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.13%)</title><rect x="454.8" y="259.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="457.8" y="270.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.13%)</title><rect x="454.8" y="243.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="457.8" y="254.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.13%)</title><rect x="454.8" y="227.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="457.8" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (40 samples, 2.65%)</title><rect x="456.4" y="259.0" width="31.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="459.4" y="270.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (39 samples, 2.58%)</title><rect x="457.2" y="243.0" width="30.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="460.2" y="254.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (38 samples, 2.51%)</title><rect x="458.0" y="227.0" width="29.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="461.0" y="238.0">_r..</text>
</g>
<g>
<title>tcp_ack (15 samples, 0.99%)</title><rect x="487.6" y="259.0" width="11.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="490.6" y="270.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.13%)</title><rect x="490.0" y="243.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="493.0" y="254.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.07%)</title><rect x="490.0" y="227.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="493.0" y="238.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.07%)</title><rect x="490.7" y="227.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="493.7" y="238.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.07%)</title><rect x="491.5" y="243.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="494.5" y="254.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.07%)</title><rect x="492.3" y="243.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="495.3" y="254.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.13%)</title><rect x="493.1" y="243.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="496.1" y="254.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.07%)</title><rect x="493.9" y="227.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="496.9" y="238.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.20%)</title><rect x="494.6" y="243.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="497.6" y="254.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.07%)</title><rect x="497.0" y="243.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="500.0" y="254.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.13%)</title><rect x="497.8" y="243.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="500.8" y="254.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.20%)</title><rect x="499.3" y="259.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="502.3" y="270.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.07%)</title><rect x="501.7" y="259.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="504.7" y="270.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.07%)</title><rect x="502.4" y="291.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="505.4" y="302.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.07%)</title><rect x="503.2" y="355.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="506.2" y="366.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.07%)</title><rect x="504.0" y="355.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="507.0" y="366.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.07%)</title><rect x="504.0" y="339.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="507.0" y="350.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.07%)</title><rect x="504.8" y="499.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="507.8" y="510.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.07%)</title><rect x="504.8" y="483.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="507.8" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.07%)</title><rect x="505.6" y="531.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="508.6" y="542.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.07%)</title><rect x="506.3" y="531.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="509.3" y="542.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.07%)</title><rect x="507.1" y="547.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="510.1" y="558.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.07%)</title><rect x="507.1" y="531.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="510.1" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.13%)</title><rect x="507.9" y="547.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="510.9" y="558.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.07%)</title><rect x="508.7" y="531.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="511.7" y="542.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.07%)</title><rect x="509.5" y="547.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="512.5" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.13%)</title><rect x="510.3" y="579.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="513.3" y="590.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.13%)</title><rect x="510.3" y="563.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="513.3" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.13%)</title><rect x="510.3" y="547.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="513.3" y="558.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.13%)</title><rect x="511.8" y="579.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="514.8" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.13%)</title><rect x="511.8" y="563.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="514.8" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (10 samples, 0.66%)</title><rect x="513.4" y="579.0" width="7.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="516.4" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.53%)</title><rect x="514.9" y="563.0" width="6.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="517.9" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.20%)</title><rect x="515.7" y="547.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="518.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.20%)</title><rect x="515.7" y="531.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="518.7" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.07%)</title><rect x="517.3" y="515.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="520.3" y="526.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.07%)</title><rect x="518.1" y="547.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="521.1" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.20%)</title><rect x="518.8" y="547.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="521.8" y="558.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.07%)</title><rect x="521.2" y="579.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="524.2" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.20%)</title><rect x="522.0" y="579.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="525.0" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.20%)</title><rect x="522.0" y="563.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="525.0" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.13%)</title><rect x="522.7" y="547.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="525.7" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.13%)</title><rect x="524.3" y="627.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="527.3" y="638.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.13%)</title><rect x="524.3" y="611.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="527.3" y="622.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.13%)</title><rect x="524.3" y="595.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="527.3" y="606.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.07%)</title><rect x="525.9" y="659.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="528.9" y="670.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.07%)</title><rect x="525.9" y="643.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="528.9" y="654.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.07%)</title><rect x="525.9" y="627.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="528.9" y="638.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.07%)</title><rect x="526.6" y="659.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="529.6" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.13%)</title><rect x="527.4" y="787.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/UpsertEntityRequestProcessor.processLocal (210 samples, 13.89%)</title><rect x="529.0" y="819.0" width="163.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="532.0" y="830.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.upsertRecord (209 samples, 13.82%)</title><rect x="529.8" y="803.0" width="163.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="532.8" y="814.0">ru/mail/polis/dao/Roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (206 samples, 13.62%)</title><rect x="529.8" y="787.0" width="160.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="532.8" y="798.0">org/rocksdb/RocksDB...</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (205 samples, 13.56%)</title><rect x="530.5" y="771.0" width="160.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="533.5" y="782.0">org/rocksdb/RocksDB...</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (163 samples, 10.78%)</title><rect x="532.9" y="755.0" width="127.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="535.9" y="766.0">Java_org_rocksdb..</text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.13%)</title><rect x="535.2" y="739.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="538.2" y="750.0"></text>
</g>
<g>
<title>_init (2 samples, 0.13%)</title><rect x="536.8" y="739.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="539.8" y="750.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.07%)</title><rect x="538.3" y="739.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="541.3" y="750.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.07%)</title><rect x="539.1" y="739.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="542.1" y="750.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (154 samples, 10.19%)</title><rect x="539.9" y="739.0" width="120.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="542.9" y="750.0">rocksdb_put_hel..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.07%)</title><rect x="541.5" y="723.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="544.5" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.07%)</title><rect x="541.5" y="707.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="544.5" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.20%)</title><rect x="542.2" y="723.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="545.2" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.07%)</title><rect x="542.2" y="707.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="545.2" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.07%)</title><rect x="543.0" y="707.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="546.0" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.07%)</title><rect x="543.8" y="707.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="546.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (147 samples, 9.72%)</title><rect x="544.6" y="723.0" width="114.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="547.6" y="734.0">rocksdb::DB::P..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (147 samples, 9.72%)</title><rect x="544.6" y="707.0" width="114.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="547.6" y="718.0">rocksdb::DBImp..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (147 samples, 9.72%)</title><rect x="544.6" y="691.0" width="114.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="547.6" y="702.0">rocksdb::DB::P..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.07%)</title><rect x="545.4" y="675.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="548.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (138 samples, 9.13%)</title><rect x="546.2" y="675.0" width="107.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="549.2" y="686.0">rocksdb::DBIm..</text>
</g>
<g>
<title>rocksdb::DBImpl::MemTableInsertStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.07%)</title><rect x="546.9" y="659.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="549.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.07%)</title><rect x="547.7" y="659.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="550.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (130 samples, 8.60%)</title><rect x="548.5" y="659.0" width="101.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="551.5" y="670.0">rocksdb::DBI..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.07%)</title><rect x="553.2" y="643.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="556.2" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.07%)</title><rect x="553.2" y="627.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="556.2" y="638.0"></text>
</g>
<g>
<title>__GI___sched_yield (2 samples, 0.13%)</title><rect x="554.0" y="643.0" width="1.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="557.0" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.13%)</title><rect x="554.0" y="627.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="557.0" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.13%)</title><rect x="554.0" y="611.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="557.0" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (2 samples, 0.13%)</title><rect x="554.0" y="595.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="557.0" y="606.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.13%)</title><rect x="554.0" y="579.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="557.0" y="590.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.13%)</title><rect x="554.0" y="563.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="557.0" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (2 samples, 0.13%)</title><rect x="554.0" y="547.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="557.0" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="555.5" y="643.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="558.5" y="654.0"></text>
</g>
<g>
<title>_init (3 samples, 0.20%)</title><rect x="556.3" y="643.0" width="2.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="559.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (42 samples, 2.78%)</title><rect x="558.6" y="643.0" width="32.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="561.6" y="654.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (2 samples, 0.13%)</title><rect x="558.6" y="627.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="561.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (40 samples, 2.65%)</title><rect x="560.2" y="627.0" width="31.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="563.2" y="638.0">ro..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (38 samples, 2.51%)</title><rect x="561.0" y="611.0" width="29.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="564.0" y="622.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (1 samples, 0.07%)</title><rect x="561.0" y="595.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="564.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (37 samples, 2.45%)</title><rect x="561.8" y="595.0" width="28.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="564.8" y="606.0">ro..</text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.07%)</title><rect x="561.8" y="579.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="564.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="562.5" y="579.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="565.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (34 samples, 2.25%)</title><rect x="563.3" y="579.0" width="26.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="566.3" y="590.0">r..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="563.3" y="563.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="566.3" y="574.0"></text>
</g>
<g>
<title>_init (2 samples, 0.13%)</title><rect x="564.1" y="563.0" width="1.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="567.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (31 samples, 2.05%)</title><rect x="565.7" y="563.0" width="24.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="568.7" y="574.0">r..</text>
</g>
<g>
<title>__write (30 samples, 1.98%)</title><rect x="565.7" y="547.0" width="23.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="568.7" y="558.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 1.92%)</title><rect x="566.4" y="531.0" width="22.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="569.4" y="542.0">e..</text>
</g>
<g>
<title>do_syscall_64 (29 samples, 1.92%)</title><rect x="566.4" y="515.0" width="22.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="569.4" y="526.0">d..</text>
</g>
<g>
<title>ksys_write (22 samples, 1.46%)</title><rect x="570.3" y="499.0" width="17.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="573.3" y="510.0"></text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.20%)</title><rect x="570.3" y="483.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="573.3" y="494.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.20%)</title><rect x="570.3" y="467.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="573.3" y="478.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.20%)</title><rect x="570.3" y="451.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="573.3" y="462.0"></text>
</g>
<g>
<title>vfs_write (19 samples, 1.26%)</title><rect x="572.7" y="483.0" width="14.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="575.7" y="494.0"></text>
</g>
<g>
<title>__sb_end_write (1 samples, 0.07%)</title><rect x="572.7" y="467.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="575.7" y="478.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.07%)</title><rect x="572.7" y="451.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="575.7" y="462.0"></text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.13%)</title><rect x="573.5" y="467.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="576.5" y="478.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.07%)</title><rect x="575.0" y="467.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="578.0" y="478.0"></text>
</g>
<g>
<title>new_sync_write (15 samples, 0.99%)</title><rect x="575.8" y="467.0" width="11.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="578.8" y="478.0"></text>
</g>
<g>
<title>generic_file_write_iter (14 samples, 0.93%)</title><rect x="576.6" y="451.0" width="10.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="579.6" y="462.0"></text>
</g>
<g>
<title>__generic_file_write_iter (13 samples, 0.86%)</title><rect x="576.6" y="435.0" width="10.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="579.6" y="446.0"></text>
</g>
<g>
<title>file_remove_privs (1 samples, 0.07%)</title><rect x="576.6" y="419.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="579.6" y="430.0"></text>
</g>
<g>
<title>generic_perform_write (12 samples, 0.79%)</title><rect x="577.4" y="419.0" width="9.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="580.4" y="430.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.13%)</title><rect x="578.1" y="403.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="581.1" y="414.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.13%)</title><rect x="578.1" y="387.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="581.1" y="398.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.13%)</title><rect x="578.1" y="371.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="581.1" y="382.0"></text>
</g>
<g>
<title>shmem_getpage_gfp.isra.0 (7 samples, 0.46%)</title><rect x="579.7" y="403.0" width="5.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="582.7" y="414.0"></text>
</g>
<g>
<title>find_lock_entry (5 samples, 0.33%)</title><rect x="580.5" y="387.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="583.5" y="398.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.33%)</title><rect x="580.5" y="371.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="583.5" y="382.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.20%)</title><rect x="582.1" y="355.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="585.1" y="366.0"></text>
</g>
<g>
<title>xas_start (3 samples, 0.20%)</title><rect x="582.1" y="339.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="585.1" y="350.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.07%)</title><rect x="584.4" y="387.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="587.4" y="398.0"></text>
</g>
<g>
<title>activate_page (1 samples, 0.07%)</title><rect x="584.4" y="371.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="587.4" y="382.0"></text>
</g>
<g>
<title>shmem_write_end (2 samples, 0.13%)</title><rect x="585.2" y="403.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="588.2" y="414.0"></text>
</g>
<g>
<title>__set_page_dirty_no_writeback (1 samples, 0.07%)</title><rect x="586.0" y="387.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="589.0" y="398.0"></text>
</g>
<g>
<title>down_write (1 samples, 0.07%)</title><rect x="586.7" y="435.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="589.7" y="446.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.07%)</title><rect x="587.5" y="499.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="590.5" y="510.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.07%)</title><rect x="587.5" y="483.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="590.5" y="494.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.07%)</title><rect x="588.3" y="499.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="591.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (1 samples, 0.07%)</title><rect x="589.1" y="547.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="592.1" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.07%)</title><rect x="589.1" y="531.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="592.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.07%)</title><rect x="589.9" y="579.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="592.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.07%)</title><rect x="590.6" y="611.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="593.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (2 samples, 0.13%)</title><rect x="591.4" y="643.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="594.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.07%)</title><rect x="593.0" y="643.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="596.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (1 samples, 0.07%)</title><rect x="593.8" y="643.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="596.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (60 samples, 3.97%)</title><rect x="594.5" y="643.0" width="46.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="597.5" y="654.0">rock..</text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.07%)</title><rect x="596.1" y="627.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="599.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (57 samples, 3.77%)</title><rect x="596.9" y="627.0" width="44.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="599.9" y="638.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (54 samples, 3.57%)</title><rect x="597.7" y="611.0" width="42.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="600.7" y="622.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (54 samples, 3.57%)</title><rect x="597.7" y="595.0" width="42.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="600.7" y="606.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (1 samples, 0.07%)</title><rect x="598.4" y="579.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="601.4" y="590.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.07%)</title><rect x="599.2" y="579.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="602.2" y="590.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.07%)</title><rect x="599.2" y="563.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="602.2" y="574.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.07%)</title><rect x="599.2" y="547.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="602.2" y="558.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.07%)</title><rect x="599.2" y="531.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="602.2" y="542.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.07%)</title><rect x="599.2" y="515.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="602.2" y="526.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.07%)</title><rect x="599.2" y="499.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="602.2" y="510.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge_delay (1 samples, 0.07%)</title><rect x="599.2" y="483.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="602.2" y="494.0"></text>
</g>
<g>
<title>mem_cgroup_throttle_swaprate (1 samples, 0.07%)</title><rect x="599.2" y="467.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="602.2" y="478.0"></text>
</g>
<g>
<title>kthread_blkcg (1 samples, 0.07%)</title><rect x="599.2" y="451.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="602.2" y="462.0"></text>
</g>
<g>
<title>_init (2 samples, 0.13%)</title><rect x="600.0" y="579.0" width="1.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="603.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.07%)</title><rect x="601.6" y="579.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="604.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (47 samples, 3.11%)</title><rect x="602.3" y="579.0" width="36.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="605.3" y="590.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (3 samples, 0.20%)</title><rect x="604.7" y="563.0" width="2.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="607.7" y="574.0"></text>
</g>
<g>
<title>_init (1 samples, 0.07%)</title><rect x="605.5" y="547.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="608.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.07%)</title><rect x="606.2" y="547.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="609.2" y="558.0"></text>
</g>
<g>
<title>_init (1 samples, 0.07%)</title><rect x="607.0" y="563.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="610.0" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (39 samples, 2.58%)</title><rect x="607.8" y="563.0" width="30.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="610.8" y="574.0">bo..</text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (36 samples, 2.38%)</title><rect x="609.4" y="547.0" width="28.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="612.4" y="558.0">/t..</text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (12 samples, 0.79%)</title><rect x="625.8" y="531.0" width="9.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="628.8" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="626.5" y="515.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="629.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (10 samples, 0.66%)</title><rect x="627.3" y="515.0" width="7.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="630.3" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (1 samples, 0.07%)</title><rect x="628.9" y="499.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="631.9" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.13%)</title><rect x="629.7" y="499.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="632.7" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.07%)</title><rect x="630.4" y="483.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="633.4" y="494.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.13%)</title><rect x="631.2" y="499.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="634.2" y="510.0"></text>
</g>
<g>
<title>_init (2 samples, 0.13%)</title><rect x="632.8" y="499.0" width="1.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="635.8" y="510.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.07%)</title><rect x="634.3" y="499.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="637.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.20%)</title><rect x="635.1" y="531.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="638.1" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (1 samples, 0.07%)</title><rect x="635.9" y="515.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="638.9" y="526.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.07%)</title><rect x="636.7" y="515.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="639.7" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.07%)</title><rect x="637.5" y="547.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="640.5" y="558.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.07%)</title><rect x="638.2" y="563.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="641.2" y="574.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.07%)</title><rect x="638.2" y="547.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="641.2" y="558.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.07%)</title><rect x="638.2" y="531.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="641.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.07%)</title><rect x="639.0" y="579.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="642.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.07%)</title><rect x="639.8" y="611.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="642.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.07%)</title><rect x="640.6" y="611.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="643.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (1 samples, 0.07%)</title><rect x="641.4" y="643.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="644.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.07%)</title><rect x="641.4" y="627.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="644.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="641.4" y="611.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="644.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.07%)</title><rect x="641.4" y="595.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="644.4" y="606.0"></text>
</g>
<g>
<title>std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (1 samples, 0.07%)</title><rect x="641.4" y="579.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="644.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.20%)</title><rect x="642.1" y="643.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="645.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.13%)</title><rect x="644.5" y="643.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="647.5" y="654.0"></text>
</g>
<g>
<title>__GI___sched_yield (1 samples, 0.07%)</title><rect x="644.5" y="627.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="647.5" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="644.5" y="611.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="647.5" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="644.5" y="595.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="647.5" y="606.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.07%)</title><rect x="644.5" y="579.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="647.5" y="590.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.07%)</title><rect x="644.5" y="563.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="647.5" y="574.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.07%)</title><rect x="644.5" y="547.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="647.5" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.07%)</title><rect x="644.5" y="531.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="647.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::BlockingAwaitState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.07%)</title><rect x="645.3" y="627.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="648.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.07%)</title><rect x="646.0" y="643.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="649.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.07%)</title><rect x="646.8" y="643.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="649.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.07%)</title><rect x="646.8" y="627.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="649.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.07%)</title><rect x="647.6" y="643.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="650.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::AssertHeld() (1 samples, 0.07%)</title><rect x="648.4" y="643.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="651.4" y="654.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.07%)</title><rect x="649.2" y="643.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="652.2" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="649.2" y="627.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="652.2" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="649.2" y="611.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="652.2" y="622.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.07%)</title><rect x="649.2" y="595.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="652.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1 samples, 0.07%)</title><rect x="649.9" y="659.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="652.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (1 samples, 0.07%)</title><rect x="650.7" y="659.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="653.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.07%)</title><rect x="651.5" y="659.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="654.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.07%)</title><rect x="652.3" y="659.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="655.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.07%)</title><rect x="653.1" y="659.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="656.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.07%)</title><rect x="653.8" y="675.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="656.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.07%)</title><rect x="654.6" y="675.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="657.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.20%)</title><rect x="655.4" y="675.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="658.4" y="686.0"></text>
</g>
<g>
<title>_init (1 samples, 0.07%)</title><rect x="655.4" y="659.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="658.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.07%)</title><rect x="656.2" y="659.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="659.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, int) (1 samples, 0.07%)</title><rect x="657.0" y="659.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="660.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="657.8" y="675.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="660.8" y="686.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.07%)</title><rect x="658.5" y="675.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="661.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="659.3" y="723.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="662.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 1.32%)</title><rect x="660.1" y="755.0" width="15.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="663.1" y="766.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (12 samples, 0.79%)</title><rect x="660.1" y="739.0" width="9.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="663.1" y="750.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (2 samples, 0.13%)</title><rect x="669.5" y="739.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="672.5" y="750.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.13%)</title><rect x="671.0" y="739.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="674.0" y="750.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.07%)</title><rect x="672.6" y="739.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="675.6" y="750.0"></text>
</g>
<g>
<title>update_get_addr (3 samples, 0.20%)</title><rect x="673.4" y="739.0" width="2.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="676.4" y="750.0"></text>
</g>
<g>
<title>__GI___libc_malloc (6 samples, 0.40%)</title><rect x="675.7" y="755.0" width="4.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="678.7" y="766.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (2 samples, 0.13%)</title><rect x="680.4" y="755.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="683.4" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.40%)</title><rect x="681.9" y="755.0" width="4.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="684.9" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.33%)</title><rect x="682.7" y="739.0" width="3.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="685.7" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.33%)</title><rect x="682.7" y="723.0" width="3.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="685.7" y="734.0"></text>
</g>
<g>
<title>__se_sys_futex (5 samples, 0.33%)</title><rect x="682.7" y="707.0" width="3.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="685.7" y="718.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.33%)</title><rect x="682.7" y="691.0" width="3.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="685.7" y="702.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.26%)</title><rect x="683.5" y="675.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="686.5" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.07%)</title><rect x="683.5" y="659.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="686.5" y="670.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.20%)</title><rect x="684.3" y="659.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="687.3" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.20%)</title><rect x="684.3" y="643.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="687.3" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.20%)</title><rect x="684.3" y="627.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="687.3" y="638.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (4 samples, 0.26%)</title><rect x="686.6" y="755.0" width="3.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="689.6" y="766.0"></text>
</g>
<g>
<title>_init (1 samples, 0.07%)</title><rect x="689.7" y="755.0" width="0.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="692.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (3 samples, 0.20%)</title><rect x="690.5" y="787.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="693.5" y="798.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1 samples, 0.07%)</title><rect x="690.5" y="771.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="693.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.shiftArrayInplace (2 samples, 0.13%)</title><rect x="691.3" y="771.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.processEntityForUser (318 samples, 21.03%)</title><rect x="692.9" y="835.0" width="248.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="695.9" y="846.0">ru/mail/polis/service/saloed/Serv..</text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.07%)</title><rect x="695.2" y="819.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.2" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.07%)</title><rect x="695.2" y="803.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="698.2" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.07%)</title><rect x="695.2" y="787.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="698.2" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.07%)</title><rect x="696.0" y="819.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="699.0" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (15 samples, 0.99%)</title><rect x="696.8" y="819.0" width="11.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="699.8" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (13 samples, 0.86%)</title><rect x="698.3" y="803.0" width="10.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="701.3" y="814.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.07%)</title><rect x="698.3" y="787.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.3" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.07%)</title><rect x="698.3" y="771.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="701.3" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.07%)</title><rect x="698.3" y="755.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="701.3" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (12 samples, 0.79%)</title><rect x="699.1" y="787.0" width="9.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.1" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (12 samples, 0.79%)</title><rect x="699.1" y="771.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (12 samples, 0.79%)</title><rect x="699.1" y="755.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.1" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (2 samples, 0.13%)</title><rect x="699.1" y="739.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.1" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.07%)</title><rect x="699.1" y="723.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.1" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (1 samples, 0.07%)</title><rect x="699.1" y="707.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.1" y="718.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$24/597190999.accept (1 samples, 0.07%)</title><rect x="699.1" y="691.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="702.1" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="699.1" y="675.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.1" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="699.1" y="659.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.1" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.07%)</title><rect x="699.1" y="643.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="702.1" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.07%)</title><rect x="699.1" y="627.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="702.1" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.07%)</title><rect x="699.1" y="611.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.07%)</title><rect x="699.9" y="723.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.9" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (1 samples, 0.07%)</title><rect x="699.9" y="707.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (2 samples, 0.13%)</title><rect x="700.7" y="739.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="703.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (1 samples, 0.07%)</title><rect x="700.7" y="723.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="703.7" y="734.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$23/1891502635.get (1 samples, 0.07%)</title><rect x="700.7" y="707.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="703.7" y="718.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1 samples, 0.07%)</title><rect x="701.5" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="704.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (1 samples, 0.07%)</title><rect x="701.5" y="707.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="704.5" y="718.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1 samples, 0.07%)</title><rect x="702.2" y="739.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="705.2" y="750.0"></text>
</g>
<g>
<title>java/util/stream/Streams$ConcatSpliterator.forEachRemaining (7 samples, 0.46%)</title><rect x="703.0" y="739.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="706.0" y="750.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.13%)</title><rect x="703.8" y="723.0" width="1.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="706.8" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.forEachRemaining (3 samples, 0.20%)</title><rect x="705.4" y="723.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="708.4" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.13%)</title><rect x="706.1" y="707.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.1" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.13%)</title><rect x="706.1" y="691.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.1" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (2 samples, 0.13%)</title><rect x="706.1" y="675.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="709.1" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.13%)</title><rect x="706.1" y="659.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="709.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$114/1278788686.accept (1 samples, 0.07%)</title><rect x="706.1" y="643.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="709.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.07%)</title><rect x="706.1" y="627.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="709.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$110/486975771.apply (1 samples, 0.07%)</title><rect x="706.9" y="643.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="709.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/Streams$StreamBuilderImpl.forEachRemaining (1 samples, 0.07%)</title><rect x="707.7" y="723.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.7" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.07%)</title><rect x="707.7" y="707.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="710.7" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.07%)</title><rect x="707.7" y="691.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="710.7" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findAny (4 samples, 0.26%)</title><rect x="708.5" y="819.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.5" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.26%)</title><rect x="708.5" y="803.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.5" y="814.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.26%)</title><rect x="708.5" y="787.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="711.5" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.26%)</title><rect x="708.5" y="771.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="711.5" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.26%)</title><rect x="708.5" y="755.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="711.5" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (4 samples, 0.26%)</title><rect x="708.5" y="739.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="711.5" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (3 samples, 0.20%)</title><rect x="708.5" y="723.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="711.5" y="734.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.13%)</title><rect x="708.5" y="707.0" width="1.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="711.5" y="718.0"></text>
</g>
<g>
<title>java/util/stream/Sink.begin (1 samples, 0.07%)</title><rect x="710.0" y="707.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="713.0" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.07%)</title><rect x="710.8" y="723.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.8" y="734.0"></text>
</g>
<g>
<title>java/util/stream/Stream.concat (4 samples, 0.26%)</title><rect x="711.6" y="819.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="714.6" y="830.0"></text>
</g>
<g>
<title>java/util/stream/Streams$ConcatSpliterator$OfRef.&lt;init&gt; (4 samples, 0.26%)</title><rect x="711.6" y="803.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.6" y="814.0"></text>
</g>
<g>
<title>java/util/stream/Streams$ConcatSpliterator.&lt;init&gt; (4 samples, 0.26%)</title><rect x="711.6" y="787.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="714.6" y="798.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.estimateSize (4 samples, 0.26%)</title><rect x="711.6" y="771.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="714.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter.obtainResponses (50 samples, 3.31%)</title><rect x="714.7" y="819.0" width="39.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="717.7" y="830.0">ru/..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (50 samples, 3.31%)</title><rect x="714.7" y="803.0" width="39.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="717.7" y="814.0">jav..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (47 samples, 3.11%)</title><rect x="717.1" y="787.0" width="36.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="720.1" y="798.0">jav..</text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.07%)</title><rect x="717.1" y="771.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.07%)</title><rect x="717.1" y="755.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="720.1" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.07%)</title><rect x="717.1" y="739.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="720.1" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (46 samples, 3.04%)</title><rect x="717.8" y="771.0" width="35.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.8" y="782.0">jav..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (46 samples, 3.04%)</title><rect x="717.8" y="755.0" width="35.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="720.8" y="766.0">jav..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (46 samples, 3.04%)</title><rect x="717.8" y="739.0" width="35.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="720.8" y="750.0">jav..</text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (39 samples, 2.58%)</title><rect x="717.8" y="723.0" width="30.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.8" y="734.0">ja..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (39 samples, 2.58%)</title><rect x="717.8" y="707.0" width="30.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.8" y="718.0">ja..</text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="718.6" y="691.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="721.6" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (13 samples, 0.86%)</title><rect x="719.4" y="691.0" width="10.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="722.4" y="702.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.20%)</title><rect x="719.4" y="675.0" width="2.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="722.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (8 samples, 0.53%)</title><rect x="721.7" y="675.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="724.7" y="686.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.13%)</title><rect x="723.3" y="659.0" width="1.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="726.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (3 samples, 0.20%)</title><rect x="724.9" y="659.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="727.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$24/597190999.accept (1 samples, 0.07%)</title><rect x="726.4" y="643.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="729.4" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="726.4" y="627.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="729.4" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="726.4" y="611.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.4" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.07%)</title><rect x="726.4" y="595.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="729.4" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.07%)</title><rect x="726.4" y="579.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.4" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.07%)</title><rect x="726.4" y="563.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="729.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$$Lambda$105/1998710437.apply (1 samples, 0.07%)</title><rect x="727.2" y="659.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="730.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$$Lambda$103/841186949.test (2 samples, 0.13%)</title><rect x="728.0" y="675.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="731.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$$Lambda$96/814390560.apply (24 samples, 1.59%)</title><rect x="729.6" y="691.0" width="18.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="732.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter.obtainResponse (24 samples, 1.59%)</title><rect x="729.6" y="675.0" width="18.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="732.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.get (24 samples, 1.59%)</title><rect x="729.6" y="659.0" width="18.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="732.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.awaitDone (20 samples, 1.32%)</title><rect x="729.6" y="643.0" width="15.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="732.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (17 samples, 1.12%)</title><rect x="731.1" y="627.0" width="13.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="734.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (17 samples, 1.12%)</title><rect x="731.1" y="611.0" width="13.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.1" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.26%)</title><rect x="731.1" y="595.0" width="3.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="734.1" y="606.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.07%)</title><rect x="731.1" y="579.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="734.1" y="590.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.13%)</title><rect x="731.9" y="579.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="734.9" y="590.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.07%)</title><rect x="732.7" y="563.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="735.7" y="574.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.07%)</title><rect x="733.5" y="579.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="736.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.86%)</title><rect x="734.2" y="595.0" width="10.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="737.2" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (13 samples, 0.86%)</title><rect x="734.2" y="579.0" width="10.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="737.2" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.86%)</title><rect x="734.2" y="563.0" width="10.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="737.2" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.86%)</title><rect x="734.2" y="547.0" width="10.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="737.2" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (12 samples, 0.79%)</title><rect x="734.2" y="531.0" width="9.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="737.2" y="542.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.79%)</title><rect x="734.2" y="515.0" width="9.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="737.2" y="526.0"></text>
</g>
<g>
<title>futex_wait (12 samples, 0.79%)</title><rect x="734.2" y="499.0" width="9.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="737.2" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (8 samples, 0.53%)</title><rect x="735.0" y="483.0" width="6.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="738.0" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.07%)</title><rect x="735.0" y="467.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="738.0" y="478.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.07%)</title><rect x="735.0" y="451.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="738.0" y="462.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (7 samples, 0.46%)</title><rect x="735.8" y="467.0" width="5.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="738.8" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.46%)</title><rect x="735.8" y="451.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="738.8" y="462.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.20%)</title><rect x="741.3" y="483.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="744.3" y="494.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.07%)</title><rect x="742.0" y="467.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="745.0" y="478.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.07%)</title><rect x="742.8" y="467.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="745.8" y="478.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.07%)</title><rect x="743.6" y="531.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="746.6" y="542.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.07%)</title><rect x="744.4" y="627.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="747.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.report (4 samples, 0.26%)</title><rect x="745.2" y="643.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="748.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.awaitDone (1 samples, 0.07%)</title><rect x="747.5" y="627.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="750.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (2 samples, 0.13%)</title><rect x="748.3" y="723.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="751.3" y="734.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.13%)</title><rect x="748.3" y="707.0" width="1.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="751.3" y="718.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1 samples, 0.07%)</title><rect x="749.8" y="723.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="752.8" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (1 samples, 0.07%)</title><rect x="749.8" y="707.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="752.8" y="718.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1 samples, 0.07%)</title><rect x="749.8" y="691.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.8" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (1 samples, 0.07%)</title><rect x="749.8" y="675.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="752.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$23/1891502635.get (1 samples, 0.07%)</title><rect x="749.8" y="659.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="752.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (4 samples, 0.26%)</title><rect x="750.6" y="723.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="753.6" y="734.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="751.4" y="707.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="754.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (2 samples, 0.13%)</title><rect x="752.2" y="707.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="755.2" y="718.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.07%)</title><rect x="753.0" y="691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="756.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter.proxyRequest (40 samples, 2.65%)</title><rect x="753.7" y="819.0" width="31.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="756.7" y="830.0">ru..</text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.07%)</title><rect x="753.7" y="803.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="756.7" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (1 samples, 0.07%)</title><rect x="753.7" y="787.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="756.7" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (39 samples, 2.58%)</title><rect x="754.5" y="803.0" width="30.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="757.5" y="814.0">ja..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (38 samples, 2.51%)</title><rect x="755.3" y="787.0" width="29.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="758.3" y="798.0">ja..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (38 samples, 2.51%)</title><rect x="755.3" y="771.0" width="29.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="758.3" y="782.0">ja..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (38 samples, 2.51%)</title><rect x="755.3" y="755.0" width="29.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="758.3" y="766.0">ja..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (38 samples, 2.51%)</title><rect x="755.3" y="739.0" width="29.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="758.3" y="750.0">ja..</text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (38 samples, 2.51%)</title><rect x="755.3" y="723.0" width="29.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="758.3" y="734.0">ja..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (38 samples, 2.51%)</title><rect x="755.3" y="707.0" width="29.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="758.3" y="718.0">ja..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (38 samples, 2.51%)</title><rect x="755.3" y="691.0" width="29.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="758.3" y="702.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$$Lambda$91/1879667685.apply (38 samples, 2.51%)</title><rect x="755.3" y="675.0" width="29.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="758.3" y="686.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter.lambda$proxyRequest$4 (38 samples, 2.51%)</title><rect x="755.3" y="659.0" width="29.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="758.3" y="670.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.07%)</title><rect x="755.3" y="643.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="758.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.07%)</title><rect x="755.3" y="627.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="758.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$$Lambda$93/619842903.get$Lambda (1 samples, 0.07%)</title><rect x="755.3" y="611.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="758.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (37 samples, 2.45%)</title><rect x="756.1" y="643.0" width="28.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="759.1" y="654.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (35 samples, 2.31%)</title><rect x="757.6" y="627.0" width="27.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.6" y="638.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (34 samples, 2.25%)</title><rect x="757.6" y="611.0" width="26.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="760.6" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (34 samples, 2.25%)</title><rect x="757.6" y="595.0" width="26.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="760.6" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.07%)</title><rect x="757.6" y="579.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="760.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.07%)</title><rect x="757.6" y="563.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.07%)</title><rect x="757.6" y="547.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="760.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.07%)</title><rect x="757.6" y="531.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="760.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (33 samples, 2.18%)</title><rect x="758.4" y="579.0" width="25.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="761.4" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (33 samples, 2.18%)</title><rect x="758.4" y="563.0" width="25.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="761.4" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (33 samples, 2.18%)</title><rect x="758.4" y="547.0" width="25.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="761.4" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (33 samples, 2.18%)</title><rect x="758.4" y="531.0" width="25.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="761.4" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (32 samples, 2.12%)</title><rect x="759.2" y="515.0" width="25.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="762.2" y="526.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.33%)</title><rect x="759.2" y="499.0" width="3.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="762.2" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.07%)</title><rect x="759.2" y="483.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="762.2" y="494.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.07%)</title><rect x="760.0" y="483.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="763.0" y="494.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.13%)</title><rect x="760.8" y="483.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="763.8" y="494.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.07%)</title><rect x="762.3" y="483.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="765.3" y="494.0"></text>
</g>
<g>
<title>__pthread_cond_signal (27 samples, 1.79%)</title><rect x="763.1" y="499.0" width="21.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="766.1" y="510.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 1.79%)</title><rect x="763.1" y="483.0" width="21.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="766.1" y="494.0">e..</text>
</g>
<g>
<title>do_syscall_64 (27 samples, 1.79%)</title><rect x="763.1" y="467.0" width="21.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="766.1" y="478.0">d..</text>
</g>
<g>
<title>__se_sys_futex (25 samples, 1.65%)</title><rect x="763.9" y="451.0" width="19.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="766.9" y="462.0"></text>
</g>
<g>
<title>do_futex (25 samples, 1.65%)</title><rect x="763.9" y="435.0" width="19.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="766.9" y="446.0"></text>
</g>
<g>
<title>futex_wake (25 samples, 1.65%)</title><rect x="763.9" y="419.0" width="19.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="766.9" y="430.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.13%)</title><rect x="766.2" y="403.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="769.2" y="414.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.07%)</title><rect x="767.8" y="403.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="770.8" y="414.0"></text>
</g>
<g>
<title>wake_up_q (19 samples, 1.26%)</title><rect x="768.6" y="403.0" width="14.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="771.6" y="414.0"></text>
</g>
<g>
<title>try_to_wake_up (19 samples, 1.26%)</title><rect x="768.6" y="387.0" width="14.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="771.6" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (19 samples, 1.26%)</title><rect x="768.6" y="371.0" width="14.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="771.6" y="382.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.07%)</title><rect x="783.4" y="451.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="786.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.reject (1 samples, 0.07%)</title><rect x="784.2" y="611.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="787.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$AbortPolicy.rejectedExecution (1 samples, 0.07%)</title><rect x="784.2" y="595.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="787.2" y="606.0"></text>
</g>
<g>
<title>java/lang/Object.toString (1 samples, 0.07%)</title><rect x="784.2" y="579.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="787.2" y="590.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (1 samples, 0.07%)</title><rect x="784.2" y="563.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="787.2" y="574.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (1 samples, 0.07%)</title><rect x="784.2" y="547.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="787.2" y="558.0"></text>
</g>
<g>
<title>java/lang/Integer.formatUnsignedInt (1 samples, 0.07%)</title><rect x="784.2" y="531.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="787.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter.selectNodes (25 samples, 1.65%)</title><rect x="785.0" y="819.0" width="19.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="788.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter.getReplicasForNode (4 samples, 0.26%)</title><rect x="785.0" y="803.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="788.0" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="786.5" y="787.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="789.5" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="786.5" y="771.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="789.5" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.07%)</title><rect x="786.5" y="755.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="789.5" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.07%)</title><rect x="786.5" y="739.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="789.5" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.07%)</title><rect x="786.5" y="723.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="789.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.processEntityForService (1 samples, 0.07%)</title><rect x="787.3" y="787.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="790.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/topology/ConsistentHashTopology.selectNode (21 samples, 1.39%)</title><rect x="788.1" y="803.0" width="16.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="791.1" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/TreeRangeMap.get (8 samples, 0.53%)</title><rect x="788.1" y="787.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="791.1" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/TreeRangeMap.getEntry (8 samples, 0.53%)</title><rect x="788.1" y="771.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="791.1" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/TreeRangeMap$RangeMapEntry.contains (2 samples, 0.13%)</title><rect x="788.1" y="755.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="791.1" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Range.contains (2 samples, 0.13%)</title><rect x="788.1" y="739.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="791.1" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Cut$BelowValue.isLessThan (2 samples, 0.13%)</title><rect x="788.1" y="723.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.1" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Range.compareOrThrow (2 samples, 0.13%)</title><rect x="788.1" y="707.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="791.1" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.floorEntry (6 samples, 0.40%)</title><rect x="789.6" y="755.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="792.6" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFloorEntry (6 samples, 0.40%)</title><rect x="789.6" y="739.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="792.6" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (6 samples, 0.40%)</title><rect x="789.6" y="723.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="792.6" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Cut$BelowValue.compareTo (2 samples, 0.13%)</title><rect x="792.8" y="707.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.8" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Cut.compareTo (2 samples, 0.13%)</title><rect x="792.8" y="691.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/topology/ConsistentHashTopology.hash (13 samples, 0.86%)</title><rect x="794.3" y="787.0" width="10.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="797.3" y="798.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractByteHasher.putBytes (3 samples, 0.20%)</title><rect x="794.3" y="771.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="797.3" y="782.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.update (3 samples, 0.20%)</title><rect x="794.3" y="755.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="797.3" y="766.0"></text>
</g>
<g>
<title>java/security/MessageDigest.update (3 samples, 0.20%)</title><rect x="794.3" y="739.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="797.3" y="750.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineUpdate (3 samples, 0.20%)</title><rect x="794.3" y="723.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.3" y="734.0"></text>
</g>
<g>
<title>java/security/MessageDigestSpi.engineUpdate (3 samples, 0.20%)</title><rect x="794.3" y="707.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.3" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.array (1 samples, 0.07%)</title><rect x="794.3" y="691.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.3" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.arrayOffset (1 samples, 0.07%)</title><rect x="795.1" y="691.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="798.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.order (1 samples, 0.07%)</title><rect x="795.9" y="691.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="798.9" y="702.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (5 samples, 0.33%)</title><rect x="796.7" y="771.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.7" y="782.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction.newHasher (5 samples, 0.33%)</title><rect x="796.7" y="755.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="799.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (3 samples, 0.20%)</title><rect x="796.7" y="739.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="799.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (3 samples, 0.20%)</title><rect x="796.7" y="723.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.7" y="734.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractByteHasher.&lt;init&gt; (3 samples, 0.20%)</title><rect x="796.7" y="707.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="799.7" y="718.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHasher.&lt;init&gt; (2 samples, 0.13%)</title><rect x="796.7" y="691.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.7" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.07%)</title><rect x="798.2" y="691.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="801.2" y="702.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.clone (2 samples, 0.13%)</title><rect x="799.0" y="739.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="802.0" y="750.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.clone (2 samples, 0.13%)</title><rect x="799.0" y="723.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="802.0" y="734.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.clone (2 samples, 0.13%)</title><rect x="799.0" y="707.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="802.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.07%)</title><rect x="799.0" y="691.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="802.0" y="702.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.clone (1 samples, 0.07%)</title><rect x="799.8" y="691.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="802.8" y="702.0"></text>
</g>
<g>
<title>java/security/MessageDigestSpi.clone (1 samples, 0.07%)</title><rect x="799.8" y="675.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.8" y="686.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.hash (3 samples, 0.20%)</title><rect x="800.6" y="771.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="803.6" y="782.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (3 samples, 0.20%)</title><rect x="800.6" y="755.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="803.6" y="766.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (3 samples, 0.20%)</title><rect x="800.6" y="739.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="803.6" y="750.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (3 samples, 0.20%)</title><rect x="800.6" y="723.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="803.6" y="734.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (3 samples, 0.20%)</title><rect x="800.6" y="707.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="803.6" y="718.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implDigest (3 samples, 0.20%)</title><rect x="800.6" y="691.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="803.6" y="702.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.i2bBig (2 samples, 0.13%)</title><rect x="800.6" y="675.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="803.6" y="686.0"></text>
</g>
<g>
<title>sha256_implCompress (2 samples, 0.13%)</title><rect x="800.6" y="659.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="803.6" y="670.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompress (1 samples, 0.07%)</title><rect x="802.1" y="675.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="805.1" y="686.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompressCheck (1 samples, 0.07%)</title><rect x="802.1" y="659.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="805.1" y="670.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iBig64 (1 samples, 0.07%)</title><rect x="802.1" y="643.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="805.1" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.13%)</title><rect x="802.9" y="771.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="805.9" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.13%)</title><rect x="802.9" y="755.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="805.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.13%)</title><rect x="802.9" y="739.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="805.9" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.13%)</title><rect x="802.9" y="723.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="805.9" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="802.9" y="707.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="805.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.07%)</title><rect x="803.7" y="707.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="806.7" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="803.7" y="691.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="806.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (68 samples, 4.50%)</title><rect x="804.5" y="819.0" width="53.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="807.5" y="830.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (68 samples, 4.50%)</title><rect x="804.5" y="803.0" width="53.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.5" y="814.0">one/n..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.13%)</title><rect x="806.0" y="787.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="809.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.13%)</title><rect x="806.0" y="771.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="809.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.13%)</title><rect x="806.0" y="755.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="809.0" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.13%)</title><rect x="806.0" y="739.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="809.0" y="750.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.13%)</title><rect x="806.0" y="723.0" width="1.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="809.0" y="734.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.13%)</title><rect x="806.0" y="707.0" width="1.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="809.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (63 samples, 4.17%)</title><rect x="807.6" y="787.0" width="49.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="810.6" y="798.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.26%)</title><rect x="807.6" y="771.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="810.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.07%)</title><rect x="809.9" y="755.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="812.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.07%)</title><rect x="809.9" y="739.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="812.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.07%)</title><rect x="809.9" y="723.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="812.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.07%)</title><rect x="809.9" y="707.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="812.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (59 samples, 3.90%)</title><rect x="810.7" y="771.0" width="46.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="813.7" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (59 samples, 3.90%)</title><rect x="810.7" y="755.0" width="46.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="813.7" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (59 samples, 3.90%)</title><rect x="810.7" y="739.0" width="46.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.7" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (59 samples, 3.90%)</title><rect x="810.7" y="723.0" width="46.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="813.7" y="734.0">one/..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="811.5" y="707.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="814.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="811.5" y="691.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="814.5" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.07%)</title><rect x="811.5" y="675.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="814.5" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.07%)</title><rect x="811.5" y="659.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="814.5" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.07%)</title><rect x="811.5" y="643.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="814.5" y="654.0"></text>
</g>
<g>
<title>__send (57 samples, 3.77%)</title><rect x="812.3" y="707.0" width="44.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="815.3" y="718.0">__send</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.07%)</title><rect x="813.8" y="691.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="816.8" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (54 samples, 3.57%)</title><rect x="814.6" y="691.0" width="42.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="817.6" y="702.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (54 samples, 3.57%)</title><rect x="814.6" y="675.0" width="42.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="817.6" y="686.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (50 samples, 3.31%)</title><rect x="815.4" y="659.0" width="39.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="818.4" y="670.0">__x..</text>
</g>
<g>
<title>__sys_sendto (50 samples, 3.31%)</title><rect x="815.4" y="643.0" width="39.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="818.4" y="654.0">__s..</text>
</g>
<g>
<title>fput_many (1 samples, 0.07%)</title><rect x="816.2" y="627.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="819.2" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (48 samples, 3.17%)</title><rect x="817.0" y="627.0" width="37.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="820.0" y="638.0">soc..</text>
</g>
<g>
<title>tcp_sendmsg (47 samples, 3.11%)</title><rect x="817.7" y="611.0" width="36.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="820.7" y="622.0">tcp..</text>
</g>
<g>
<title>release_sock (1 samples, 0.07%)</title><rect x="818.5" y="595.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="821.5" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (45 samples, 2.98%)</title><rect x="819.3" y="595.0" width="35.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="822.3" y="606.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (35 samples, 2.31%)</title><rect x="822.4" y="579.0" width="27.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="825.4" y="590.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (35 samples, 2.31%)</title><rect x="822.4" y="563.0" width="27.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="825.4" y="574.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (34 samples, 2.25%)</title><rect x="822.4" y="547.0" width="26.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="825.4" y="558.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (34 samples, 2.25%)</title><rect x="822.4" y="531.0" width="26.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="825.4" y="542.0">_..</text>
</g>
<g>
<title>ip_local_out (1 samples, 0.07%)</title><rect x="822.4" y="515.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="825.4" y="526.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.07%)</title><rect x="822.4" y="499.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="825.4" y="510.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.07%)</title><rect x="822.4" y="483.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="825.4" y="494.0"></text>
</g>
<g>
<title>ip_output (33 samples, 2.18%)</title><rect x="823.2" y="515.0" width="25.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="826.2" y="526.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (33 samples, 2.18%)</title><rect x="823.2" y="499.0" width="25.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="826.2" y="510.0">i..</text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.20%)</title><rect x="824.8" y="483.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="827.8" y="494.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.07%)</title><rect x="825.5" y="467.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="828.5" y="478.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.07%)</title><rect x="825.5" y="451.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="828.5" y="462.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.07%)</title><rect x="825.5" y="435.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="828.5" y="446.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.07%)</title><rect x="825.5" y="419.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="828.5" y="430.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.07%)</title><rect x="825.5" y="403.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="828.5" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.07%)</title><rect x="826.3" y="467.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="829.3" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (28 samples, 1.85%)</title><rect x="827.1" y="483.0" width="21.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="830.1" y="494.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (27 samples, 1.79%)</title><rect x="827.1" y="467.0" width="21.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="830.1" y="478.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (27 samples, 1.79%)</title><rect x="827.1" y="451.0" width="21.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="830.1" y="462.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (27 samples, 1.79%)</title><rect x="827.1" y="435.0" width="21.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="830.1" y="446.0">_..</text>
</g>
<g>
<title>net_rx_action (26 samples, 1.72%)</title><rect x="827.9" y="419.0" width="20.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="830.9" y="430.0"></text>
</g>
<g>
<title>process_backlog (26 samples, 1.72%)</title><rect x="827.9" y="403.0" width="20.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="830.9" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (25 samples, 1.65%)</title><rect x="828.7" y="387.0" width="19.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="831.7" y="398.0"></text>
</g>
<g>
<title>ip_rcv (24 samples, 1.59%)</title><rect x="829.4" y="371.0" width="18.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="832.4" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver (23 samples, 1.52%)</title><rect x="829.4" y="355.0" width="18.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="832.4" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (22 samples, 1.46%)</title><rect x="830.2" y="339.0" width="17.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="833.2" y="350.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (21 samples, 1.39%)</title><rect x="831.0" y="323.0" width="16.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="834.0" y="334.0"></text>
</g>
<g>
<title>tcp_v4_rcv (21 samples, 1.39%)</title><rect x="831.0" y="307.0" width="16.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="834.0" y="318.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.26%)</title><rect x="831.0" y="291.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="834.0" y="302.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.13%)</title><rect x="834.1" y="291.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="837.1" y="302.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.07%)</title><rect x="834.1" y="275.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="837.1" y="286.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.07%)</title><rect x="834.9" y="275.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="837.9" y="286.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (15 samples, 0.99%)</title><rect x="835.7" y="291.0" width="11.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="838.7" y="302.0"></text>
</g>
<g>
<title>tcp_rcv_established (15 samples, 0.99%)</title><rect x="835.7" y="275.0" width="11.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="838.7" y="286.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.13%)</title><rect x="835.7" y="259.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="838.7" y="270.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.13%)</title><rect x="835.7" y="243.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="838.7" y="254.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.13%)</title><rect x="835.7" y="227.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="838.7" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.26%)</title><rect x="837.2" y="259.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="840.2" y="270.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.20%)</title><rect x="838.0" y="243.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="841.0" y="254.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.20%)</title><rect x="838.0" y="227.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="841.0" y="238.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.60%)</title><rect x="840.4" y="259.0" width="7.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="843.4" y="270.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.20%)</title><rect x="842.7" y="243.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="845.7" y="254.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.07%)</title><rect x="842.7" y="227.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="845.7" y="238.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.07%)</title><rect x="843.5" y="227.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="846.5" y="238.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.07%)</title><rect x="844.3" y="227.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="847.3" y="238.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.07%)</title><rect x="845.1" y="243.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="848.1" y="254.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.13%)</title><rect x="845.8" y="243.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="848.8" y="254.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.07%)</title><rect x="847.4" y="355.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="850.4" y="366.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.07%)</title><rect x="847.4" y="339.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="850.4" y="350.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.07%)</title><rect x="848.2" y="467.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="851.2" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.07%)</title><rect x="849.0" y="547.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="852.0" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.33%)</title><rect x="849.7" y="579.0" width="3.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="852.7" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.33%)</title><rect x="849.7" y="563.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="852.7" y="574.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.13%)</title><rect x="852.1" y="547.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="855.1" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.07%)</title><rect x="853.6" y="579.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="856.6" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.07%)</title><rect x="853.6" y="563.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="856.6" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.07%)</title><rect x="853.6" y="547.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="856.6" y="558.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.07%)</title><rect x="854.4" y="659.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="857.4" y="670.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.07%)</title><rect x="854.4" y="643.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="857.4" y="654.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.07%)</title><rect x="854.4" y="627.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="857.4" y="638.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.13%)</title><rect x="855.2" y="659.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="858.2" y="670.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.07%)</title><rect x="856.0" y="643.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="859.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.07%)</title><rect x="856.8" y="787.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="859.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.07%)</title><rect x="856.8" y="771.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="859.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.07%)</title><rect x="856.8" y="755.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="859.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntityRequestProcessor.preprocessRemote (1 samples, 0.07%)</title><rect x="857.5" y="819.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="860.5" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/RequestUtils.setRequestTimestamp (1 samples, 0.07%)</title><rect x="857.5" y="803.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="860.5" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1666612318.linkToTargetMethod (1 samples, 0.07%)</title><rect x="857.5" y="787.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="860.5" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1918994159.invoke (1 samples, 0.07%)</title><rect x="857.5" y="771.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="860.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.07%)</title><rect x="857.5" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="860.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.07%)</title><rect x="857.5" y="739.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="860.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.07%)</title><rect x="857.5" y="723.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="860.5" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="857.5" y="707.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="860.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/UpsertEntityRequestProcessor.processLocal (106 samples, 7.01%)</title><rect x="858.3" y="819.0" width="82.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="861.3" y="830.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.upsertRecord (105 samples, 6.94%)</title><rect x="859.1" y="803.0" width="81.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="862.1" y="814.0">ru/mail/p..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (104 samples, 6.88%)</title><rect x="859.1" y="787.0" width="81.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="862.1" y="798.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (104 samples, 6.88%)</title><rect x="859.1" y="771.0" width="81.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="862.1" y="782.0">org/rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (96 samples, 6.35%)</title><rect x="859.1" y="755.0" width="74.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="862.1" y="766.0">Java_org..</text>
</g>
<g>
<title>_init (1 samples, 0.07%)</title><rect x="859.9" y="739.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="862.9" y="750.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.07%)</title><rect x="860.7" y="739.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="863.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="861.4" y="739.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="864.4" y="750.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (92 samples, 6.08%)</title><rect x="862.2" y="739.0" width="71.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="865.2" y="750.0">rocksdb_..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.13%)</title><rect x="863.8" y="723.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="866.8" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.07%)</title><rect x="865.3" y="723.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="868.3" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.13%)</title><rect x="866.1" y="723.0" width="1.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="869.1" y="734.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.07%)</title><rect x="866.9" y="707.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="869.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (85 samples, 5.62%)</title><rect x="867.7" y="723.0" width="66.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="870.7" y="734.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (85 samples, 5.62%)</title><rect x="867.7" y="707.0" width="66.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="870.7" y="718.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (84 samples, 5.56%)</title><rect x="867.7" y="691.0" width="65.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="870.7" y="702.0">rocksdb..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.07%)</title><rect x="867.7" y="675.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="870.7" y="686.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.13%)</title><rect x="868.5" y="675.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="871.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.07%)</title><rect x="870.0" y="675.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="873.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (79 samples, 5.22%)</title><rect x="870.8" y="675.0" width="61.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="873.8" y="686.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.07%)</title><rect x="870.8" y="659.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="873.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (74 samples, 4.89%)</title><rect x="871.6" y="659.0" width="57.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="874.6" y="670.0">rocksd..</text>
</g>
<g>
<title>_init (2 samples, 0.13%)</title><rect x="877.1" y="643.0" width="1.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="880.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.07%)</title><rect x="878.6" y="643.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="881.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (22 samples, 1.46%)</title><rect x="879.4" y="643.0" width="17.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="882.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (20 samples, 1.32%)</title><rect x="880.2" y="627.0" width="15.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="883.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (19 samples, 1.26%)</title><rect x="881.0" y="611.0" width="14.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="884.0" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (1 samples, 0.07%)</title><rect x="881.7" y="595.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="884.7" y="606.0"></text>
</g>
<g>
<title>_init (1 samples, 0.07%)</title><rect x="882.5" y="595.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="885.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (16 samples, 1.06%)</title><rect x="883.3" y="595.0" width="12.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="886.3" y="606.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.07%)</title><rect x="883.3" y="579.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="886.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (15 samples, 0.99%)</title><rect x="884.1" y="579.0" width="11.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="887.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (15 samples, 0.99%)</title><rect x="884.1" y="563.0" width="11.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="887.1" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="884.1" y="547.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="887.1" y="558.0"></text>
</g>
<g>
<title>__write (13 samples, 0.86%)</title><rect x="884.9" y="547.0" width="10.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="887.9" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.73%)</title><rect x="886.4" y="531.0" width="8.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="889.4" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.73%)</title><rect x="886.4" y="515.0" width="8.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="889.4" y="526.0"></text>
</g>
<g>
<title>ksys_write (9 samples, 0.60%)</title><rect x="886.4" y="499.0" width="7.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="889.4" y="510.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.07%)</title><rect x="887.2" y="483.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="890.2" y="494.0"></text>
</g>
<g>
<title>vfs_write (7 samples, 0.46%)</title><rect x="888.0" y="483.0" width="5.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="891.0" y="494.0"></text>
</g>
<g>
<title>new_sync_write (6 samples, 0.40%)</title><rect x="888.8" y="467.0" width="4.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="891.8" y="478.0"></text>
</g>
<g>
<title>generic_file_write_iter (6 samples, 0.40%)</title><rect x="888.8" y="451.0" width="4.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="891.8" y="462.0"></text>
</g>
<g>
<title>__generic_file_write_iter (5 samples, 0.33%)</title><rect x="889.5" y="435.0" width="3.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="892.5" y="446.0"></text>
</g>
<g>
<title>generic_perform_write (5 samples, 0.33%)</title><rect x="889.5" y="419.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="892.5" y="430.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_r11 (1 samples, 0.07%)</title><rect x="889.5" y="403.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="892.5" y="414.0"></text>
</g>
<g>
<title>shmem_getpage_gfp.isra.0 (3 samples, 0.20%)</title><rect x="890.3" y="403.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="893.3" y="414.0"></text>
</g>
<g>
<title>find_lock_entry (1 samples, 0.07%)</title><rect x="891.1" y="387.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="894.1" y="398.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.07%)</title><rect x="891.1" y="371.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="894.1" y="382.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.07%)</title><rect x="891.1" y="355.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="894.1" y="366.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.07%)</title><rect x="891.1" y="339.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="894.1" y="350.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.07%)</title><rect x="891.9" y="387.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="894.9" y="398.0"></text>
</g>
<g>
<title>activate_page (1 samples, 0.07%)</title><rect x="891.9" y="371.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="894.9" y="382.0"></text>
</g>
<g>
<title>shmem_write_end (1 samples, 0.07%)</title><rect x="892.7" y="403.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="895.7" y="414.0"></text>
</g>
<g>
<title>__set_page_dirty_no_writeback (1 samples, 0.07%)</title><rect x="892.7" y="387.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="895.7" y="398.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.13%)</title><rect x="893.4" y="499.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="896.4" y="510.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.07%)</title><rect x="894.2" y="483.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="897.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="895.0" y="547.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="898.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (1 samples, 0.07%)</title><rect x="895.8" y="627.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="898.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (41 samples, 2.71%)</title><rect x="896.6" y="643.0" width="32.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="899.6" y="654.0">ro..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (40 samples, 2.65%)</title><rect x="897.3" y="627.0" width="31.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="900.3" y="638.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (39 samples, 2.58%)</title><rect x="897.3" y="611.0" width="30.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="900.3" y="622.0">ro..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (1 samples, 0.07%)</title><rect x="897.3" y="595.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="900.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (38 samples, 2.51%)</title><rect x="898.1" y="595.0" width="29.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="901.1" y="606.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (3 samples, 0.20%)</title><rect x="898.9" y="579.0" width="2.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="901.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (33 samples, 2.18%)</title><rect x="901.2" y="579.0" width="25.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="904.2" y="590.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (2 samples, 0.13%)</title><rect x="902.0" y="563.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="905.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.07%)</title><rect x="902.8" y="547.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="905.8" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (28 samples, 1.85%)</title><rect x="903.6" y="563.0" width="21.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="906.6" y="574.0">b..</text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (28 samples, 1.85%)</title><rect x="903.6" y="547.0" width="21.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="906.6" y="558.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (8 samples, 0.53%)</title><rect x="918.4" y="531.0" width="6.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="921.4" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="918.4" y="515.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="921.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (7 samples, 0.46%)</title><rect x="919.2" y="515.0" width="5.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="922.2" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.07%)</title><rect x="921.5" y="499.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="924.5" y="510.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.07%)</title><rect x="921.5" y="483.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="924.5" y="494.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.13%)</title><rect x="922.3" y="499.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="925.3" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.07%)</title><rect x="923.9" y="499.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="926.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.07%)</title><rect x="924.7" y="531.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="927.7" y="542.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.07%)</title><rect x="924.7" y="515.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="927.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (1 samples, 0.07%)</title><rect x="925.4" y="563.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="928.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.07%)</title><rect x="926.2" y="563.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="929.2" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (1 samples, 0.07%)</title><rect x="926.2" y="547.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="929.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.07%)</title><rect x="927.0" y="579.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="930.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.07%)</title><rect x="927.8" y="611.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="930.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (1 samples, 0.07%)</title><rect x="928.6" y="643.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="931.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.07%)</title><rect x="928.6" y="627.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="931.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="928.6" y="611.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="931.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.07%)</title><rect x="928.6" y="595.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="931.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.07%)</title><rect x="928.6" y="579.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="931.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.07%)</title><rect x="928.6" y="563.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="931.6" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.07%)</title><rect x="928.6" y="547.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="931.6" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (1 samples, 0.07%)</title><rect x="928.6" y="531.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="931.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.07%)</title><rect x="929.3" y="659.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="932.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.07%)</title><rect x="930.1" y="659.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="933.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.07%)</title><rect x="930.9" y="659.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="933.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.07%)</title><rect x="931.7" y="659.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="934.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="932.5" y="675.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="935.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.07%)</title><rect x="932.5" y="659.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="935.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="933.2" y="691.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="936.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="934.0" y="755.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="937.0" y="766.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.07%)</title><rect x="934.0" y="739.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="937.0" y="750.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.07%)</title><rect x="934.8" y="739.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="937.8" y="750.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.13%)</title><rect x="935.6" y="755.0" width="1.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="938.6" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.20%)</title><rect x="937.1" y="755.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="940.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.13%)</title><rect x="937.9" y="739.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="940.9" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.13%)</title><rect x="937.9" y="723.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="940.9" y="734.0"></text>
</g>
<g>
<title>__se_sys_futex (2 samples, 0.13%)</title><rect x="937.9" y="707.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="940.9" y="718.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.13%)</title><rect x="937.9" y="691.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="940.9" y="702.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.13%)</title><rect x="937.9" y="675.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="940.9" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.07%)</title><rect x="937.9" y="659.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="940.9" y="670.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.07%)</title><rect x="938.7" y="659.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="941.7" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.07%)</title><rect x="938.7" y="643.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="941.7" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.07%)</title><rect x="938.7" y="627.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="941.7" y="638.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.07%)</title><rect x="939.5" y="755.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="942.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (1 samples, 0.07%)</title><rect x="940.3" y="787.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="943.3" y="798.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (293 samples, 19.38%)</title><rect x="941.0" y="915.0" width="228.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="944.0" y="926.0">one/nio/server/SelectorThread...</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (61 samples, 4.03%)</title><rect x="944.9" y="899.0" width="47.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.9" y="910.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (56 samples, 3.70%)</title><rect x="948.8" y="883.0" width="43.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="951.8" y="894.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.20%)</title><rect x="956.7" y="867.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="959.7" y="878.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.20%)</title><rect x="959.0" y="867.0" width="2.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="962.0" y="878.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (5 samples, 0.33%)</title><rect x="961.3" y="867.0" width="3.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="964.3" y="878.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.07%)</title><rect x="965.2" y="867.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="968.2" y="878.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.07%)</title><rect x="966.0" y="867.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="969.0" y="878.0"></text>
</g>
<g>
<title>epoll_wait (33 samples, 2.18%)</title><rect x="966.8" y="867.0" width="25.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="969.8" y="878.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 1.39%)</title><rect x="976.2" y="851.0" width="16.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="979.2" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 1.39%)</title><rect x="976.2" y="835.0" width="16.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="979.2" y="846.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (15 samples, 0.99%)</title><rect x="979.3" y="819.0" width="11.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="982.3" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (15 samples, 0.99%)</title><rect x="979.3" y="803.0" width="11.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="982.3" y="814.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.13%)</title><rect x="979.3" y="787.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="982.3" y="798.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.07%)</title><rect x="980.1" y="771.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="983.1" y="782.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.07%)</title><rect x="980.1" y="755.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="983.1" y="766.0"></text>
</g>
<g>
<title>ep_poll (13 samples, 0.86%)</title><rect x="980.8" y="787.0" width="10.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="983.8" y="798.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (8 samples, 0.53%)</title><rect x="981.6" y="771.0" width="6.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="984.6" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.13%)</title><rect x="982.4" y="755.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="985.4" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.13%)</title><rect x="982.4" y="739.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="985.4" y="750.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.13%)</title><rect x="982.4" y="723.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="985.4" y="734.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.13%)</title><rect x="982.4" y="707.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="985.4" y="718.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.07%)</title><rect x="983.2" y="691.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="986.2" y="702.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.13%)</title><rect x="984.0" y="755.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="987.0" y="766.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.20%)</title><rect x="985.5" y="755.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="988.5" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.26%)</title><rect x="987.9" y="771.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="990.9" y="782.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.26%)</title><rect x="987.9" y="755.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="990.9" y="766.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.13%)</title><rect x="989.4" y="739.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="992.4" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.07%)</title><rect x="990.2" y="723.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="993.2" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.07%)</title><rect x="990.2" y="707.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="993.2" y="718.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.13%)</title><rect x="991.0" y="819.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="994.0" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (227 samples, 15.01%)</title><rect x="992.6" y="899.0" width="177.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="995.6" y="910.0">one/nio/net/Session.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (226 samples, 14.95%)</title><rect x="993.3" y="883.0" width="176.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="996.3" y="894.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (171 samples, 11.31%)</title><rect x="993.3" y="867.0" width="133.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="996.3" y="878.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (132 samples, 8.73%)</title><rect x="994.9" y="851.0" width="103.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="997.9" y="862.0">one/nio/http..</text>
</g>
<g>
<title>java/util/LinkedList.addLast (2 samples, 0.13%)</title><rect x="994.9" y="835.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="997.9" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="995.7" y="819.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="998.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (130 samples, 8.60%)</title><rect x="996.5" y="835.0" width="101.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="999.5" y="846.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (123 samples, 8.13%)</title><rect x="998.0" y="819.0" width="96.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1001.0" y="830.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.66%)</title><rect x="998.8" y="803.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1001.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="1001.9" y="787.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1004.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.07%)</title><rect x="1001.9" y="771.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1004.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.07%)</title><rect x="1001.9" y="755.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1004.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.13%)</title><rect x="1002.7" y="787.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1005.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.13%)</title><rect x="1002.7" y="771.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1005.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.20%)</title><rect x="1004.3" y="787.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1007.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.entity (112 samples, 7.41%)</title><rect x="1006.6" y="803.0" width="87.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1009.6" y="814.0">ru/mail/po..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1883705344.linkToTargetMethod (2 samples, 0.13%)</title><rect x="1006.6" y="787.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1009.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.13%)</title><rect x="1006.6" y="771.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1009.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$73/2122379680.get$Lambda (2 samples, 0.13%)</title><rect x="1006.6" y="755.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1009.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.13%)</title><rect x="1006.6" y="739.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1009.6" y="750.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (91 samples, 6.02%)</title><rect x="1008.2" y="787.0" width="71.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1011.2" y="798.0">one/nio/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (87 samples, 5.75%)</title><rect x="1011.3" y="771.0" width="67.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1014.3" y="782.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.13%)</title><rect x="1011.3" y="755.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1014.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.13%)</title><rect x="1011.3" y="739.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1014.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.13%)</title><rect x="1011.3" y="723.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1014.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.reject (2 samples, 0.13%)</title><rect x="1012.8" y="755.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1015.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$AbortPolicy.rejectedExecution (2 samples, 0.13%)</title><rect x="1012.8" y="739.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1015.8" y="750.0"></text>
</g>
<g>
<title>java/lang/Object.toString (1 samples, 0.07%)</title><rect x="1012.8" y="723.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1015.8" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (1 samples, 0.07%)</title><rect x="1012.8" y="707.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1015.8" y="718.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (1 samples, 0.07%)</title><rect x="1012.8" y="691.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1015.8" y="702.0"></text>
</g>
<g>
<title>java/lang/Integer.formatUnsignedInt (1 samples, 0.07%)</title><rect x="1012.8" y="675.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1015.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1013.6" y="723.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1016.6" y="734.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (83 samples, 5.49%)</title><rect x="1014.4" y="755.0" width="64.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1017.4" y="766.0">one/nio..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (83 samples, 5.49%)</title><rect x="1014.4" y="739.0" width="64.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1017.4" y="750.0">one/nio..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (83 samples, 5.49%)</title><rect x="1014.4" y="723.0" width="64.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1017.4" y="734.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (83 samples, 5.49%)</title><rect x="1014.4" y="707.0" width="64.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1017.4" y="718.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (81 samples, 5.36%)</title><rect x="1014.4" y="691.0" width="63.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1017.4" y="702.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (81 samples, 5.36%)</title><rect x="1014.4" y="675.0" width="63.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1017.4" y="686.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (79 samples, 5.22%)</title><rect x="1016.0" y="659.0" width="61.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1019.0" y="670.0">jdk/in..</text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.53%)</title><rect x="1016.0" y="643.0" width="6.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1019.0" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.07%)</title><rect x="1017.5" y="627.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1020.5" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.07%)</title><rect x="1018.3" y="627.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1021.3" y="638.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (3 samples, 0.20%)</title><rect x="1019.1" y="627.0" width="2.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1022.1" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.07%)</title><rect x="1021.4" y="627.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1024.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="1022.2" y="643.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1025.2" y="654.0"></text>
</g>
<g>
<title>update_get_addr (2 samples, 0.13%)</title><rect x="1022.2" y="627.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1025.2" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (67 samples, 4.43%)</title><rect x="1023.8" y="643.0" width="52.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1026.8" y="654.0">__pth..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (66 samples, 4.37%)</title><rect x="1024.6" y="627.0" width="51.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1027.6" y="638.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (66 samples, 4.37%)</title><rect x="1024.6" y="611.0" width="51.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1027.6" y="622.0">do_sy..</text>
</g>
<g>
<title>__se_sys_futex (61 samples, 4.03%)</title><rect x="1025.3" y="595.0" width="47.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1028.3" y="606.0">__se..</text>
</g>
<g>
<title>do_futex (60 samples, 3.97%)</title><rect x="1026.1" y="579.0" width="46.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1029.1" y="590.0">do_f..</text>
</g>
<g>
<title>futex_wake (59 samples, 3.90%)</title><rect x="1026.9" y="563.0" width="46.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1029.9" y="574.0">fute..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.07%)</title><rect x="1027.7" y="547.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1030.7" y="558.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.20%)</title><rect x="1028.5" y="547.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1031.5" y="558.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.07%)</title><rect x="1030.0" y="531.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1033.0" y="542.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.07%)</title><rect x="1030.8" y="547.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1033.8" y="558.0"></text>
</g>
<g>
<title>wake_up_q (53 samples, 3.51%)</title><rect x="1031.6" y="547.0" width="41.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1034.6" y="558.0">wak..</text>
</g>
<g>
<title>try_to_wake_up (53 samples, 3.51%)</title><rect x="1031.6" y="531.0" width="41.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1034.6" y="542.0">try..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (53 samples, 3.51%)</title><rect x="1031.6" y="515.0" width="41.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1034.6" y="526.0">_ra..</text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.07%)</title><rect x="1072.9" y="595.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1075.9" y="606.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.07%)</title><rect x="1073.7" y="595.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1076.7" y="606.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.07%)</title><rect x="1073.7" y="579.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1076.7" y="590.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.13%)</title><rect x="1074.5" y="595.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1077.5" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="1076.1" y="643.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1079.1" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.07%)</title><rect x="1076.8" y="643.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1079.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (2 samples, 0.13%)</title><rect x="1077.6" y="691.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1080.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.parseEntityArguments (19 samples, 1.26%)</title><rect x="1079.2" y="787.0" width="14.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1082.2" y="798.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.07%)</title><rect x="1079.2" y="771.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1082.2" y="782.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.07%)</title><rect x="1079.2" y="755.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1082.2" y="766.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (1 samples, 0.07%)</title><rect x="1079.2" y="739.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1082.2" y="750.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (5 samples, 0.33%)</title><rect x="1080.0" y="771.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1083.0" y="782.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (5 samples, 0.33%)</title><rect x="1080.0" y="755.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1083.0" y="766.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.reset (5 samples, 0.33%)</title><rect x="1080.0" y="739.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1083.0" y="750.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.getTextLength (1 samples, 0.07%)</title><rect x="1083.1" y="723.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1086.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.07%)</title><rect x="1083.1" y="707.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1086.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/RequestUtils.getRequestTimestamp (8 samples, 0.53%)</title><rect x="1083.9" y="771.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1086.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.53%)</title><rect x="1083.9" y="755.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1086.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.33%)</title><rect x="1086.2" y="739.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1089.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.33%)</title><rect x="1086.2" y="723.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1089.2" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="1089.3" y="707.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1092.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/RequestUtils.isRequestFromService (5 samples, 0.33%)</title><rect x="1090.1" y="771.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1093.1" y="782.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="1091.7" y="755.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1094.7" y="766.0"></text>
</g>
<g>
<title>java/lang/Boolean.parseBoolean (1 samples, 0.07%)</title><rect x="1092.4" y="755.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1095.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.07%)</title><rect x="1092.4" y="739.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1095.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.07%)</title><rect x="1092.4" y="723.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1095.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.07%)</title><rect x="1092.4" y="707.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1095.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.07%)</title><rect x="1093.2" y="755.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1096.2" y="766.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="1094.0" y="819.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1097.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.07%)</title><rect x="1094.8" y="819.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1097.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.07%)</title><rect x="1095.6" y="819.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.13%)</title><rect x="1096.3" y="819.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1099.3" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.13%)</title><rect x="1096.3" y="803.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1099.3" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.13%)</title><rect x="1096.3" y="787.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1099.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (11 samples, 0.73%)</title><rect x="1097.9" y="851.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1100.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.13%)</title><rect x="1097.9" y="835.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1100.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.13%)</title><rect x="1097.9" y="819.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1100.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.13%)</title><rect x="1097.9" y="803.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1100.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.13%)</title><rect x="1097.9" y="787.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1100.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="1098.7" y="771.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1101.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.33%)</title><rect x="1099.5" y="835.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1102.5" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.33%)</title><rect x="1099.5" y="819.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1102.5" y="830.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.07%)</title><rect x="1102.6" y="803.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1105.6" y="814.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="1102.6" y="787.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1105.6" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.07%)</title><rect x="1102.6" y="771.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1105.6" y="782.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.07%)</title><rect x="1102.6" y="755.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1105.6" y="766.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.07%)</title><rect x="1102.6" y="739.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1105.6" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.07%)</title><rect x="1102.6" y="723.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1105.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.26%)</title><rect x="1103.4" y="835.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1106.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.07%)</title><rect x="1106.5" y="851.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1109.5" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 1.65%)</title><rect x="1107.3" y="851.0" width="19.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1110.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.40%)</title><rect x="1122.1" y="835.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1125.1" y="846.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.07%)</title><rect x="1126.0" y="819.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1129.0" y="830.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="1126.0" y="803.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1129.0" y="814.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.07%)</title><rect x="1126.0" y="787.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1129.0" y="798.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.07%)</title><rect x="1126.0" y="771.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1129.0" y="782.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.07%)</title><rect x="1126.0" y="755.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1129.0" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.07%)</title><rect x="1126.0" y="739.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1129.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (55 samples, 3.64%)</title><rect x="1126.8" y="867.0" width="42.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1129.8" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (53 samples, 3.51%)</title><rect x="1128.3" y="851.0" width="41.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1131.3" y="862.0">one..</text>
</g>
<g>
<title>[unknown] (7 samples, 0.46%)</title><rect x="1130.7" y="835.0" width="5.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1133.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.46%)</title><rect x="1130.7" y="819.0" width="5.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1133.7" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.40%)</title><rect x="1130.7" y="803.0" width="4.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1133.7" y="814.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (2 samples, 0.13%)</title><rect x="1131.5" y="787.0" width="1.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1134.5" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.20%)</title><rect x="1133.0" y="787.0" width="2.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1136.0" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.20%)</title><rect x="1133.0" y="771.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1136.0" y="782.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.07%)</title><rect x="1135.4" y="803.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1138.4" y="814.0"></text>
</g>
<g>
<title>recv (43 samples, 2.84%)</title><rect x="1136.2" y="835.0" width="33.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1139.2" y="846.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 2.84%)</title><rect x="1136.2" y="819.0" width="33.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1139.2" y="830.0">en..</text>
</g>
<g>
<title>do_syscall_64 (43 samples, 2.84%)</title><rect x="1136.2" y="803.0" width="33.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1139.2" y="814.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (39 samples, 2.58%)</title><rect x="1138.5" y="787.0" width="30.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1141.5" y="798.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (37 samples, 2.45%)</title><rect x="1140.1" y="771.0" width="28.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1143.1" y="782.0">__..</text>
</g>
<g>
<title>fput_many (1 samples, 0.07%)</title><rect x="1142.4" y="755.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1145.4" y="766.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.13%)</title><rect x="1143.2" y="755.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1146.2" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (27 samples, 1.79%)</title><rect x="1144.7" y="755.0" width="21.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1147.7" y="766.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (27 samples, 1.79%)</title><rect x="1144.7" y="739.0" width="21.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1147.7" y="750.0">t..</text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.40%)</title><rect x="1145.5" y="723.0" width="4.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1148.5" y="734.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.40%)</title><rect x="1145.5" y="707.0" width="4.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1148.5" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (5 samples, 0.33%)</title><rect x="1146.3" y="691.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1149.3" y="702.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.20%)</title><rect x="1146.3" y="675.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1149.3" y="686.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.13%)</title><rect x="1148.6" y="675.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1151.6" y="686.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.07%)</title><rect x="1150.2" y="723.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1153.2" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.07%)</title><rect x="1150.2" y="707.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1153.2" y="718.0"></text>
</g>
<g>
<title>ns_to_timespec64 (2 samples, 0.13%)</title><rect x="1151.0" y="723.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1154.0" y="734.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.13%)</title><rect x="1152.5" y="723.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1155.5" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.13%)</title><rect x="1152.5" y="707.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1155.5" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (11 samples, 0.73%)</title><rect x="1154.1" y="723.0" width="8.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1157.1" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (10 samples, 0.66%)</title><rect x="1154.9" y="707.0" width="7.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1157.9" y="718.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.07%)</title><rect x="1155.7" y="691.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1158.7" y="702.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.07%)</title><rect x="1155.7" y="675.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1158.7" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.07%)</title><rect x="1155.7" y="659.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1158.7" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (8 samples, 0.53%)</title><rect x="1156.4" y="691.0" width="6.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1159.4" y="702.0"></text>
</g>
<g>
<title>__check_object_size (6 samples, 0.40%)</title><rect x="1158.0" y="675.0" width="4.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1161.0" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.26%)</title><rect x="1158.8" y="659.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1161.8" y="670.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.07%)</title><rect x="1161.9" y="659.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1164.9" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.13%)</title><rect x="1162.7" y="723.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1165.7" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.13%)</title><rect x="1162.7" y="707.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1165.7" y="718.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.07%)</title><rect x="1163.5" y="691.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1166.5" y="702.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.07%)</title><rect x="1163.5" y="675.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1166.5" y="686.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (2 samples, 0.13%)</title><rect x="1164.2" y="723.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1167.2" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.26%)</title><rect x="1165.8" y="755.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1168.8" y="766.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.20%)</title><rect x="1166.6" y="739.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1169.6" y="750.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.13%)</title><rect x="1167.4" y="723.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1170.4" y="734.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.07%)</title><rect x="1168.9" y="787.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1171.9" y="798.0"></text>
</g>
<g>
<title>start_thread (26 samples, 1.72%)</title><rect x="1169.7" y="915.0" width="20.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1172.7" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (26 samples, 1.72%)</title><rect x="1169.7" y="899.0" width="20.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1172.7" y="910.0"></text>
</g>
<g>
<title>JavaThread::run() (26 samples, 1.72%)</title><rect x="1169.7" y="883.0" width="20.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.7" y="894.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (26 samples, 1.72%)</title><rect x="1169.7" y="867.0" width="20.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1172.7" y="878.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (26 samples, 1.72%)</title><rect x="1169.7" y="851.0" width="20.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1172.7" y="862.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (26 samples, 1.72%)</title><rect x="1169.7" y="835.0" width="20.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.7" y="846.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (26 samples, 1.72%)</title><rect x="1169.7" y="819.0" width="20.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1172.7" y="830.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (26 samples, 1.72%)</title><rect x="1169.7" y="803.0" width="20.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1172.7" y="814.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (18 samples, 1.19%)</title><rect x="1169.7" y="787.0" width="14.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1172.7" y="798.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.07%)</title><rect x="1169.7" y="771.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1172.7" y="782.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (1 samples, 0.07%)</title><rect x="1169.7" y="755.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.7" y="766.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (1 samples, 0.07%)</title><rect x="1170.5" y="771.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.5" y="782.0"></text>
</g>
<g>
<title>PhaseBlockLayout::find_edges() (1 samples, 0.07%)</title><rect x="1170.5" y="755.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.5" y="766.0"></text>
</g>
<g>
<title>Block::succ_prob(unsigned int) (1 samples, 0.07%)</title><rect x="1170.5" y="739.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.5" y="750.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.13%)</title><rect x="1171.3" y="771.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1174.3" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.13%)</title><rect x="1171.3" y="755.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1174.3" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.07%)</title><rect x="1171.3" y="739.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1174.3" y="750.0"></text>
</g>
<g>
<title>rRegLOper::type() const (1 samples, 0.07%)</title><rect x="1171.3" y="723.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1174.3" y="734.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.07%)</title><rect x="1172.1" y="739.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.1" y="750.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.07%)</title><rect x="1172.1" y="723.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1175.1" y="734.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.07%)</title><rect x="1172.1" y="707.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1175.1" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (14 samples, 0.93%)</title><rect x="1172.8" y="771.0" width="11.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.8" y="782.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (2 samples, 0.13%)</title><rect x="1172.8" y="755.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.8" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (1 samples, 0.07%)</title><rect x="1174.4" y="755.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.4" y="766.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (1 samples, 0.07%)</title><rect x="1174.4" y="739.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1177.4" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.13%)</title><rect x="1175.2" y="755.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1178.2" y="766.0"></text>
</g>
<g>
<title>loadNNode::rule() const (1 samples, 0.07%)</title><rect x="1176.0" y="739.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1179.0" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (4 samples, 0.26%)</title><rect x="1176.7" y="755.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1179.7" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.07%)</title><rect x="1176.7" y="739.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1179.7" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.13%)</title><rect x="1177.5" y="739.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.5" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.07%)</title><rect x="1179.1" y="739.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.1" y="750.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.07%)</title><rect x="1179.1" y="723.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.1" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.13%)</title><rect x="1179.9" y="755.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.9" y="766.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (1 samples, 0.07%)</title><rect x="1179.9" y="739.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1182.9" y="750.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (1 samples, 0.07%)</title><rect x="1180.6" y="739.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.6" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.07%)</title><rect x="1181.4" y="755.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.4" y="766.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.07%)</title><rect x="1182.2" y="755.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.2" y="766.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (1 samples, 0.07%)</title><rect x="1182.2" y="739.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.2" y="750.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.07%)</title><rect x="1183.0" y="755.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.0" y="766.0"></text>
</g>
<g>
<title>Compile::Optimize() (6 samples, 0.40%)</title><rect x="1183.8" y="787.0" width="4.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.8" y="798.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.07%)</title><rect x="1183.8" y="771.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.8" y="782.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.07%)</title><rect x="1183.8" y="755.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.8" y="766.0"></text>
</g>
<g>
<title>JVMState::interpreter_frame_size() const (1 samples, 0.07%)</title><rect x="1183.8" y="739.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.8" y="750.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.07%)</title><rect x="1184.5" y="771.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.5" y="782.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.07%)</title><rect x="1184.5" y="755.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.5" y="766.0"></text>
</g>
<g>
<title>LoadNode::bottom_type() const (1 samples, 0.07%)</title><rect x="1184.5" y="739.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.5" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (3 samples, 0.20%)</title><rect x="1185.3" y="771.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.3" y="782.0"></text>
</g>
<g>
<title>HaltNode::is_CFG() const (1 samples, 0.07%)</title><rect x="1185.3" y="755.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.3" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.07%)</title><rect x="1186.1" y="755.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.1" y="766.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.07%)</title><rect x="1186.1" y="739.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.1" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.07%)</title><rect x="1186.9" y="755.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.9" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.07%)</title><rect x="1186.9" y="739.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.9" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.07%)</title><rect x="1186.9" y="723.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.9" y="734.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.07%)</title><rect x="1187.7" y="771.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.7" y="782.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.07%)</title><rect x="1187.7" y="755.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.7" y="766.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.07%)</title><rect x="1187.7" y="739.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.7" y="750.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.07%)</title><rect x="1187.7" y="723.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.7" y="734.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.07%)</title><rect x="1187.7" y="707.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.7" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.13%)</title><rect x="1188.4" y="787.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.4" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.13%)</title><rect x="1188.4" y="771.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.4" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.13%)</title><rect x="1188.4" y="755.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.4" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.13%)</title><rect x="1188.4" y="739.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.4" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.13%)</title><rect x="1188.4" y="723.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.4" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.13%)</title><rect x="1188.4" y="707.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.4" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.13%)</title><rect x="1188.4" y="691.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.4" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.13%)</title><rect x="1188.4" y="675.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.4" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.13%)</title><rect x="1188.4" y="659.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.4" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.13%)</title><rect x="1188.4" y="643.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.4" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.13%)</title><rect x="1188.4" y="627.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.4" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.13%)</title><rect x="1188.4" y="611.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.4" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.13%)</title><rect x="1188.4" y="595.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.4" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.13%)</title><rect x="1188.4" y="579.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.4" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.13%)</title><rect x="1188.4" y="563.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.4" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1188.4" y="547.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.4" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1188.4" y="531.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.4" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1188.4" y="515.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.4" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1188.4" y="499.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.4" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1188.4" y="483.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.4" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1188.4" y="467.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.4" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1188.4" y="451.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.4" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1188.4" y="435.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.4" y="446.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1188.4" y="419.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.4" y="430.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1188.4" y="403.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.4" y="414.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1188.4" y="387.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.4" y="398.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1188.4" y="371.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.4" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1188.4" y="355.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.4" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1188.4" y="339.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.4" y="350.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1188.4" y="323.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.4" y="334.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1188.4" y="307.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.4" y="318.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1188.4" y="291.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.4" y="302.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1188.4" y="275.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.4" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1188.4" y="259.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.4" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1188.4" y="243.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.4" y="254.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1188.4" y="227.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.4" y="238.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1188.4" y="211.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.4" y="222.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1188.4" y="195.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.4" y="206.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1188.4" y="179.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.4" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1188.4" y="163.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.4" y="174.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1188.4" y="147.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.4" y="158.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.07%)</title><rect x="1188.4" y="131.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.4" y="142.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.07%)</title><rect x="1188.4" y="115.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.4" y="126.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.07%)</title><rect x="1188.4" y="99.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.4" y="110.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.07%)</title><rect x="1188.4" y="83.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.4" y="94.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.07%)</title><rect x="1188.4" y="67.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.4" y="78.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.07%)</title><rect x="1188.4" y="51.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.4" y="62.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.07%)</title><rect x="1188.4" y="35.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1191.4" y="46.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.07%)</title><rect x="1189.2" y="547.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.2" y="558.0"></text>
</g>
<g>
<title>Parse::ensure_phi(int, bool) (1 samples, 0.07%)</title><rect x="1189.2" y="531.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.2" y="542.0"></text>
</g>
<g>
<title>PhiNode::make(Node*, Node*, Type const*, TypePtr const*) (1 samples, 0.07%)</title><rect x="1189.2" y="515.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.2" y="526.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.07%)</title><rect x="1189.2" y="499.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.2" y="510.0"></text>
</g>
<g>
<title>_init (1 samples, 0.07%)</title><rect x="1189.2" y="483.0" width="0.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1192.2" y="494.0"></text>
</g>
</g>
</svg>
