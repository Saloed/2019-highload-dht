<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="789"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="789"> </text>
<g id="frames">
<g>
<title>all (1,319 samples, 100.00%)</title><rect x="10.0" y="755.0" width="1180.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="13.0" y="766.0">all</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.45%)</title><rect x="10.0" y="739.0" width="5.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.38%)</title><rect x="10.9" y="723.0" width="4.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.9" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.38%)</title><rect x="10.9" y="707.0" width="4.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.9" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.38%)</title><rect x="10.9" y="691.0" width="4.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.9" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (1 samples, 0.08%)</title><rect x="10.9" y="675.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.9" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.15%)</title><rect x="11.8" y="675.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="14.8" y="686.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.08%)</title><rect x="11.8" y="659.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="14.8" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.08%)</title><rect x="12.7" y="659.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="15.7" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.08%)</title><rect x="12.7" y="643.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.7" y="654.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.08%)</title><rect x="12.7" y="627.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.7" y="638.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.08%)</title><rect x="12.7" y="611.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="15.7" y="622.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.08%)</title><rect x="12.7" y="595.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.7" y="606.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.08%)</title><rect x="12.7" y="579.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="15.7" y="590.0"></text>
</g>
<g>
<title>G1Policy::predict_yg_surv_rate(int, SurvRateGroup*) const (1 samples, 0.08%)</title><rect x="12.7" y="563.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.7" y="574.0"></text>
</g>
<g>
<title>__memset_avx2_erms (2 samples, 0.15%)</title><rect x="13.6" y="675.0" width="1.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="16.6" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.08%)</title><rect x="15.4" y="739.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="18.4" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.08%)</title><rect x="15.4" y="723.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="18.4" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.08%)</title><rect x="15.4" y="707.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="18.4" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.08%)</title><rect x="15.4" y="691.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="18.4" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.08%)</title><rect x="15.4" y="675.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="18.4" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.08%)</title><rect x="15.4" y="659.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="18.4" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.23%)</title><rect x="16.3" y="739.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="19.3" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.23%)</title><rect x="16.3" y="723.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="19.3" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.15%)</title><rect x="17.2" y="707.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="20.2" y="718.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.08%)</title><rect x="17.2" y="691.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="20.2" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.08%)</title><rect x="18.1" y="691.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="21.1" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.08%)</title><rect x="18.1" y="675.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="21.1" y="686.0"></text>
</g>
<g>
<title>PerfEvents::destroyForThread(int) (1 samples, 0.08%)</title><rect x="18.9" y="739.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="21.9" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.23%)</title><rect x="19.8" y="739.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="22.8" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.23%)</title><rect x="19.8" y="723.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="22.8" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.15%)</title><rect x="19.8" y="707.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="22.8" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (2 samples, 0.15%)</title><rect x="19.8" y="691.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="22.8" y="702.0"></text>
</g>
<g>
<title>jfr_is_event_enabled(JfrEventId) (1 samples, 0.08%)</title><rect x="21.6" y="707.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="24.6" y="718.0"></text>
</g>
<g>
<title>[not_walkable_Java] (16 samples, 1.21%)</title><rect x="22.5" y="739.0" width="14.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="25.5" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.23%)</title><rect x="22.5" y="723.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="25.5" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (3 samples, 0.23%)</title><rect x="22.5" y="707.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="25.5" y="718.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.23%)</title><rect x="22.5" y="691.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="25.5" y="702.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (2 samples, 0.15%)</title><rect x="22.5" y="675.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="25.5" y="686.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.08%)</title><rect x="24.3" y="675.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="27.3" y="686.0"></text>
</g>
<g>
<title>__clock_gettime (13 samples, 0.99%)</title><rect x="25.2" y="723.0" width="11.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="28.2" y="734.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.15%)</title><rect x="25.2" y="707.0" width="1.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="28.2" y="718.0"></text>
</g>
<g>
<title>clock_gettime (11 samples, 0.83%)</title><rect x="27.0" y="707.0" width="9.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="30.0" y="718.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.30%)</title><rect x="33.3" y="691.0" width="3.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="36.3" y="702.0"></text>
</g>
<g>
<title>[unknown_Java] (28 samples, 2.12%)</title><rect x="36.8" y="739.0" width="25.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="39.8" y="750.0">[..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="54.7" y="723.0" width="0.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="57.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="54.7" y="707.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="57.7" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.08%)</title><rect x="54.7" y="691.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="57.7" y="702.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.23%)</title><rect x="55.6" y="723.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="58.6" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.23%)</title><rect x="58.3" y="723.0" width="2.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="61.3" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.23%)</title><rect x="58.3" y="707.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="61.3" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.23%)</title><rect x="58.3" y="691.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="61.3" y="702.0"></text>
</g>
<g>
<title>__se_sys_futex (3 samples, 0.23%)</title><rect x="58.3" y="675.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="61.3" y="686.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.23%)</title><rect x="58.3" y="659.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="61.3" y="670.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.23%)</title><rect x="58.3" y="643.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="61.3" y="654.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.23%)</title><rect x="58.3" y="627.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="61.3" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.23%)</title><rect x="58.3" y="611.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="61.3" y="622.0"></text>
</g>
<g>
<title>___preempt_schedule (1 samples, 0.08%)</title><rect x="58.3" y="595.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="61.3" y="606.0"></text>
</g>
<g>
<title>preempt_schedule (1 samples, 0.08%)</title><rect x="58.3" y="579.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="61.3" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.15%)</title><rect x="59.2" y="595.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="62.2" y="606.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.08%)</title><rect x="61.0" y="723.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="64.0" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,013 samples, 76.80%)</title><rect x="61.9" y="739.0" width="906.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="64.9" y="750.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,013 samples, 76.80%)</title><rect x="61.9" y="723.0" width="906.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.9" y="734.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,013 samples, 76.80%)</title><rect x="61.9" y="707.0" width="906.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.9" y="718.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (305 samples, 23.12%)</title><rect x="64.6" y="691.0" width="272.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.6" y="702.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (40 samples, 3.03%)</title><rect x="66.4" y="675.0" width="35.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.4" y="686.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (40 samples, 3.03%)</title><rect x="66.4" y="659.0" width="35.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.4" y="670.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (40 samples, 3.03%)</title><rect x="66.4" y="643.0" width="35.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.4" y="654.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (38 samples, 2.88%)</title><rect x="68.2" y="627.0" width="33.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="71.2" y="638.0">jd..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.08%)</title><rect x="68.2" y="611.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="71.2" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.15%)</title><rect x="69.0" y="611.0" width="1.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="72.0" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.08%)</title><rect x="69.0" y="595.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="72.0" y="606.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.08%)</title><rect x="69.9" y="595.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="72.9" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_signal (35 samples, 2.65%)</title><rect x="70.8" y="611.0" width="31.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="73.8" y="622.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 2.65%)</title><rect x="70.8" y="595.0" width="31.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="73.8" y="606.0">en..</text>
</g>
<g>
<title>do_syscall_64 (35 samples, 2.65%)</title><rect x="70.8" y="579.0" width="31.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="73.8" y="590.0">do..</text>
</g>
<g>
<title>__se_sys_futex (30 samples, 2.27%)</title><rect x="74.4" y="563.0" width="26.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="77.4" y="574.0">_..</text>
</g>
<g>
<title>do_futex (29 samples, 2.20%)</title><rect x="75.3" y="547.0" width="26.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="78.3" y="558.0">d..</text>
</g>
<g>
<title>futex_wake (29 samples, 2.20%)</title><rect x="75.3" y="531.0" width="26.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="78.3" y="542.0">f..</text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.08%)</title><rect x="75.3" y="515.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="78.3" y="526.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.08%)</title><rect x="75.3" y="499.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="78.3" y="510.0"></text>
</g>
<g>
<title>wake_up_q (28 samples, 2.12%)</title><rect x="76.2" y="515.0" width="25.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="79.2" y="526.0">w..</text>
</g>
<g>
<title>try_to_wake_up (28 samples, 2.12%)</title><rect x="76.2" y="499.0" width="25.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="79.2" y="510.0">t..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (28 samples, 2.12%)</title><rect x="76.2" y="483.0" width="25.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="79.2" y="494.0">_..</text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.08%)</title><rect x="101.3" y="563.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="104.3" y="574.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.08%)</title><rect x="101.3" y="547.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="104.3" y="558.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.08%)</title><rect x="101.3" y="531.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="104.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.08%)</title><rect x="102.1" y="675.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$$Lambda$93/619842903.call (262 samples, 19.86%)</title><rect x="103.0" y="675.0" width="234.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="106.0" y="686.0">ru/mail/polis/service/saloed/Cl..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter.lambda$proxyRequest$3 (262 samples, 19.86%)</title><rect x="103.0" y="659.0" width="234.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="106.0" y="670.0">ru/mail/polis/service/saloed/Cl..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter.proxySingleRequest (262 samples, 19.86%)</title><rect x="103.0" y="643.0" width="234.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="106.0" y="654.0">ru/mail/polis/service/saloed/Cl..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (262 samples, 19.86%)</title><rect x="103.0" y="627.0" width="234.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="106.0" y="638.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (262 samples, 19.86%)</title><rect x="103.0" y="611.0" width="234.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.0" y="622.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.45%)</title><rect x="106.6" y="595.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.30%)</title><rect x="108.4" y="579.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="111.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.15%)</title><rect x="109.3" y="563.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="112.3" y="574.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.08%)</title><rect x="110.2" y="547.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="113.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.08%)</title><rect x="111.1" y="563.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="114.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (53 samples, 4.02%)</title><rect x="112.0" y="595.0" width="47.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="115.0" y="606.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (52 samples, 3.94%)</title><rect x="112.9" y="579.0" width="46.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.9" y="590.0">one/..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="112.9" y="563.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="115.9" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="112.9" y="547.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="115.9" y="558.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.08%)</title><rect x="112.9" y="531.0" width="0.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="115.9" y="542.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.08%)</title><rect x="112.9" y="515.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="115.9" y="526.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.08%)</title><rect x="113.8" y="563.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="116.8" y="574.0"></text>
</g>
<g>
<title>recv (50 samples, 3.79%)</title><rect x="114.7" y="563.0" width="44.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="117.7" y="574.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 3.56%)</title><rect x="117.4" y="547.0" width="42.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="120.4" y="558.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (47 samples, 3.56%)</title><rect x="117.4" y="531.0" width="42.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="120.4" y="542.0">do_s..</text>
</g>
<g>
<title>__x64_sys_recvfrom (44 samples, 3.34%)</title><rect x="119.1" y="515.0" width="39.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="122.1" y="526.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (44 samples, 3.34%)</title><rect x="119.1" y="499.0" width="39.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="122.1" y="510.0">__s..</text>
</g>
<g>
<title>inet6_recvmsg (44 samples, 3.34%)</title><rect x="119.1" y="483.0" width="39.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="122.1" y="494.0">ine..</text>
</g>
<g>
<title>tcp_recvmsg (44 samples, 3.34%)</title><rect x="119.1" y="467.0" width="39.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="122.1" y="478.0">tcp..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.08%)</title><rect x="119.1" y="451.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="122.1" y="462.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (38 samples, 2.88%)</title><rect x="120.0" y="451.0" width="34.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="123.0" y="462.0">__..</text>
</g>
<g>
<title>__ip_queue_xmit (38 samples, 2.88%)</title><rect x="120.0" y="435.0" width="34.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="123.0" y="446.0">__..</text>
</g>
<g>
<title>ip_local_out (1 samples, 0.08%)</title><rect x="120.0" y="419.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="123.0" y="430.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.08%)</title><rect x="120.0" y="403.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="123.0" y="414.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.08%)</title><rect x="120.0" y="387.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="123.0" y="398.0"></text>
</g>
<g>
<title>ip_output (37 samples, 2.81%)</title><rect x="120.9" y="419.0" width="33.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="123.9" y="430.0">ip..</text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.08%)</title><rect x="122.7" y="403.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="125.7" y="414.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.08%)</title><rect x="122.7" y="387.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="125.7" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (33 samples, 2.50%)</title><rect x="123.6" y="403.0" width="29.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="126.6" y="414.0">ip..</text>
</g>
<g>
<title>__dev_queue_xmit (11 samples, 0.83%)</title><rect x="123.6" y="387.0" width="9.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="126.6" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.61%)</title><rect x="123.6" y="371.0" width="7.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="126.6" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (8 samples, 0.61%)</title><rect x="123.6" y="355.0" width="7.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="126.6" y="366.0"></text>
</g>
<g>
<title>__sock_wfree (1 samples, 0.08%)</title><rect x="125.4" y="339.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="128.4" y="350.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.38%)</title><rect x="126.3" y="339.0" width="4.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="129.3" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.38%)</title><rect x="126.3" y="323.0" width="4.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="129.3" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.30%)</title><rect x="126.3" y="307.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="129.3" y="318.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.08%)</title><rect x="129.9" y="307.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="132.9" y="318.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (1 samples, 0.08%)</title><rect x="130.8" y="371.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="133.8" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.15%)</title><rect x="131.7" y="371.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="134.7" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (22 samples, 1.67%)</title><rect x="133.5" y="387.0" width="19.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="136.5" y="398.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.08%)</title><rect x="133.5" y="371.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="136.5" y="382.0"></text>
</g>
<g>
<title>do_softirq.part.0 (21 samples, 1.59%)</title><rect x="134.4" y="371.0" width="18.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="137.4" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (21 samples, 1.59%)</title><rect x="134.4" y="355.0" width="18.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="137.4" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (21 samples, 1.59%)</title><rect x="134.4" y="339.0" width="18.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="137.4" y="350.0"></text>
</g>
<g>
<title>net_rx_action (18 samples, 1.36%)</title><rect x="137.0" y="323.0" width="16.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="140.0" y="334.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.08%)</title><rect x="138.8" y="307.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="141.8" y="318.0"></text>
</g>
<g>
<title>process_backlog (15 samples, 1.14%)</title><rect x="139.7" y="307.0" width="13.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="142.7" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (14 samples, 1.06%)</title><rect x="140.6" y="291.0" width="12.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="143.6" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.15%)</title><rect x="140.6" y="275.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="143.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv (12 samples, 0.91%)</title><rect x="142.4" y="275.0" width="10.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="145.4" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver (12 samples, 0.91%)</title><rect x="142.4" y="259.0" width="10.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="145.4" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (11 samples, 0.83%)</title><rect x="143.3" y="243.0" width="9.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="146.3" y="254.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (11 samples, 0.83%)</title><rect x="143.3" y="227.0" width="9.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="146.3" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (10 samples, 0.76%)</title><rect x="144.2" y="211.0" width="8.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="147.2" y="222.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.15%)</title><rect x="146.0" y="195.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="149.0" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 0.38%)</title><rect x="147.8" y="195.0" width="4.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="150.8" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 0.38%)</title><rect x="147.8" y="179.0" width="4.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="150.8" y="190.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.08%)</title><rect x="147.8" y="163.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="150.8" y="174.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.30%)</title><rect x="148.7" y="163.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="151.7" y="174.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.08%)</title><rect x="149.6" y="147.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="152.6" y="158.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.15%)</title><rect x="150.5" y="147.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="153.5" y="158.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb.isra.0 (1 samples, 0.08%)</title><rect x="152.2" y="195.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="155.2" y="206.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.08%)</title><rect x="153.1" y="403.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="156.1" y="414.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.08%)</title><rect x="153.1" y="387.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="156.1" y="398.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.08%)</title><rect x="154.0" y="451.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="157.0" y="462.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.08%)</title><rect x="154.0" y="435.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="157.0" y="446.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.08%)</title><rect x="154.0" y="419.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="157.0" y="430.0"></text>
</g>
<g>
<title>sk_wait_data (4 samples, 0.30%)</title><rect x="154.9" y="451.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="157.9" y="462.0"></text>
</g>
<g>
<title>wait_woken (4 samples, 0.30%)</title><rect x="154.9" y="435.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="157.9" y="446.0"></text>
</g>
<g>
<title>schedule_timeout (4 samples, 0.30%)</title><rect x="154.9" y="419.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="157.9" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.08%)</title><rect x="157.6" y="403.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="160.6" y="414.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.08%)</title><rect x="158.5" y="515.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="161.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (18 samples, 1.36%)</title><rect x="159.4" y="595.0" width="16.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.38%)</title><rect x="161.2" y="579.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="164.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.30%)</title><rect x="161.2" y="563.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="164.2" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.30%)</title><rect x="161.2" y="547.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="164.2" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="164.8" y="563.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="167.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (6 samples, 0.45%)</title><rect x="165.7" y="579.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="168.7" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.38%)</title><rect x="166.6" y="563.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="169.6" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.38%)</title><rect x="166.6" y="547.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="169.6" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.08%)</title><rect x="171.0" y="579.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="174.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.30%)</title><rect x="171.9" y="579.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="174.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.30%)</title><rect x="171.9" y="563.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.30%)</title><rect x="171.9" y="547.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="174.9" y="558.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.08%)</title><rect x="174.6" y="531.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="177.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (23 samples, 1.74%)</title><rect x="175.5" y="595.0" width="20.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="178.5" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.15%)</title><rect x="179.1" y="579.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="182.1" y="590.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.08%)</title><rect x="180.0" y="563.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="183.0" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="180.0" y="547.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="183.0" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (13 samples, 0.99%)</title><rect x="180.9" y="579.0" width="11.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="183.9" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.15%)</title><rect x="182.7" y="563.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="185.7" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.23%)</title><rect x="184.5" y="563.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="187.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.08%)</title><rect x="186.2" y="547.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="189.2" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.45%)</title><rect x="187.1" y="563.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="190.1" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.38%)</title><rect x="188.0" y="547.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="191.0" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.23%)</title><rect x="188.0" y="531.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.15%)</title><rect x="188.9" y="515.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.9" y="526.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (2 samples, 0.15%)</title><rect x="190.7" y="531.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="193.7" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.30%)</title><rect x="192.5" y="579.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="195.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.23%)</title><rect x="193.4" y="563.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.08%)</title><rect x="195.2" y="547.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.2" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.08%)</title><rect x="196.1" y="595.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="199.1" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (27 samples, 2.05%)</title><rect x="197.0" y="595.0" width="24.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="200.0" y="606.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (1 samples, 0.08%)</title><rect x="197.0" y="579.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="200.0" y="590.0"></text>
</g>
<g>
<title>__GI___setsockopt (26 samples, 1.97%)</title><rect x="197.9" y="579.0" width="23.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="200.9" y="590.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 1.74%)</title><rect x="200.6" y="563.0" width="20.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="203.6" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 1.74%)</title><rect x="200.6" y="547.0" width="20.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="203.6" y="558.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (14 samples, 1.06%)</title><rect x="204.1" y="531.0" width="12.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="207.1" y="542.0"></text>
</g>
<g>
<title>__sys_setsockopt (14 samples, 1.06%)</title><rect x="204.1" y="515.0" width="12.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="207.1" y="526.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (1 samples, 0.08%)</title><rect x="207.7" y="499.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="210.7" y="510.0"></text>
</g>
<g>
<title>sock_setsockopt (6 samples, 0.45%)</title><rect x="208.6" y="499.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="211.6" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.15%)</title><rect x="208.6" y="483.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="211.6" y="494.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.08%)</title><rect x="208.6" y="467.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="211.6" y="478.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.08%)</title><rect x="209.5" y="467.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="212.5" y="478.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.15%)</title><rect x="210.4" y="483.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="213.4" y="494.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.15%)</title><rect x="210.4" y="467.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="213.4" y="478.0"></text>
</g>
<g>
<title>sock_set_timeout (2 samples, 0.15%)</title><rect x="212.2" y="483.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="215.2" y="494.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.08%)</title><rect x="213.1" y="467.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="216.1" y="478.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.23%)</title><rect x="214.0" y="499.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="217.0" y="510.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.23%)</title><rect x="214.0" y="483.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="217.0" y="494.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.15%)</title><rect x="214.9" y="467.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="217.9" y="478.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.15%)</title><rect x="216.7" y="531.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="219.7" y="542.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.15%)</title><rect x="216.7" y="515.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="219.7" y="526.0"></text>
</g>
<g>
<title>syscall_trace_enter (3 samples, 0.23%)</title><rect x="218.4" y="531.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="221.4" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (122 samples, 9.25%)</title><rect x="221.1" y="595.0" width="109.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="224.1" y="606.0">one/nio/net/N..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (3 samples, 0.23%)</title><rect x="221.1" y="579.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="224.1" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.08%)</title><rect x="221.1" y="563.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="224.1" y="574.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.15%)</title><rect x="222.0" y="563.0" width="1.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="225.0" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.08%)</title><rect x="222.9" y="547.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="225.9" y="558.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.15%)</title><rect x="223.8" y="579.0" width="1.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="226.8" y="590.0"></text>
</g>
<g>
<title>__send (117 samples, 8.87%)</title><rect x="225.6" y="579.0" width="104.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="228.6" y="590.0">__send</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.15%)</title><rect x="228.3" y="563.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="231.3" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (112 samples, 8.49%)</title><rect x="230.1" y="563.0" width="100.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="233.1" y="574.0">entry_SYSCAL..</text>
</g>
<g>
<title>do_syscall_64 (112 samples, 8.49%)</title><rect x="230.1" y="547.0" width="100.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="233.1" y="558.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (108 samples, 8.19%)</title><rect x="232.8" y="531.0" width="96.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="235.8" y="542.0">__x64_sys_s..</text>
</g>
<g>
<title>__sys_sendto (108 samples, 8.19%)</title><rect x="232.8" y="515.0" width="96.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="235.8" y="526.0">__sys_sendto</text>
</g>
<g>
<title>import_single_range (1 samples, 0.08%)</title><rect x="233.7" y="499.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="236.7" y="510.0"></text>
</g>
<g>
<title>sock_sendmsg (105 samples, 7.96%)</title><rect x="234.5" y="499.0" width="94.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="237.5" y="510.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (2 samples, 0.15%)</title><rect x="234.5" y="483.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="237.5" y="494.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.08%)</title><rect x="235.4" y="467.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="238.4" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (103 samples, 7.81%)</title><rect x="236.3" y="483.0" width="92.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="239.3" y="494.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (2 samples, 0.15%)</title><rect x="236.3" y="467.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="239.3" y="478.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.08%)</title><rect x="236.3" y="451.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="239.3" y="462.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.08%)</title><rect x="236.3" y="435.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="239.3" y="446.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.08%)</title><rect x="237.2" y="451.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="240.2" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (101 samples, 7.66%)</title><rect x="238.1" y="467.0" width="90.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="241.1" y="478.0">tcp_sendms..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.23%)</title><rect x="239.0" y="451.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="242.0" y="462.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.23%)</title><rect x="239.0" y="435.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="242.0" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (82 samples, 6.22%)</title><rect x="241.7" y="451.0" width="73.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="244.7" y="462.0">__tcp_pu..</text>
</g>
<g>
<title>tcp_write_xmit (82 samples, 6.22%)</title><rect x="241.7" y="435.0" width="73.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="244.7" y="446.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_transmit_skb (77 samples, 5.84%)</title><rect x="242.6" y="419.0" width="68.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="245.6" y="430.0">__tcp_t..</text>
</g>
<g>
<title>__ip_queue_xmit (74 samples, 5.61%)</title><rect x="243.5" y="403.0" width="66.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="246.5" y="414.0">__ip_qu..</text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.08%)</title><rect x="243.5" y="387.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="246.5" y="398.0"></text>
</g>
<g>
<title>ip_output (73 samples, 5.53%)</title><rect x="244.4" y="387.0" width="65.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="247.4" y="398.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (72 samples, 5.46%)</title><rect x="245.3" y="371.0" width="64.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="248.3" y="382.0">ip_fini..</text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.61%)</title><rect x="248.0" y="355.0" width="7.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="251.0" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.61%)</title><rect x="248.0" y="339.0" width="7.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="251.0" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (8 samples, 0.61%)</title><rect x="248.0" y="323.0" width="7.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="251.0" y="334.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.23%)</title><rect x="248.0" y="307.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="251.0" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.23%)</title><rect x="248.0" y="291.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="251.0" y="302.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.08%)</title><rect x="248.9" y="275.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="251.9" y="286.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.08%)</title><rect x="249.8" y="275.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="252.8" y="286.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.08%)</title><rect x="250.7" y="307.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="253.7" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (4 samples, 0.30%)</title><rect x="251.5" y="307.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="254.5" y="318.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (61 samples, 4.62%)</title><rect x="255.1" y="355.0" width="54.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="258.1" y="366.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (60 samples, 4.55%)</title><rect x="255.1" y="339.0" width="53.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="258.1" y="350.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (59 samples, 4.47%)</title><rect x="256.0" y="323.0" width="52.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="259.0" y="334.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (59 samples, 4.47%)</title><rect x="256.0" y="307.0" width="52.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="259.0" y="318.0">__sof..</text>
</g>
<g>
<title>net_rx_action (56 samples, 4.25%)</title><rect x="258.7" y="291.0" width="50.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="261.7" y="302.0">net_r..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.08%)</title><rect x="258.7" y="275.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="261.7" y="286.0"></text>
</g>
<g>
<title>process_backlog (55 samples, 4.17%)</title><rect x="259.6" y="275.0" width="49.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="262.6" y="286.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (53 samples, 4.02%)</title><rect x="261.4" y="259.0" width="47.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="264.4" y="270.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.08%)</title><rect x="261.4" y="243.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="264.4" y="254.0"></text>
</g>
<g>
<title>ip_rcv (52 samples, 3.94%)</title><rect x="262.3" y="243.0" width="46.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="265.3" y="254.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (51 samples, 3.87%)</title><rect x="263.2" y="227.0" width="45.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="266.2" y="238.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (51 samples, 3.87%)</title><rect x="263.2" y="211.0" width="45.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="266.2" y="222.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (50 samples, 3.79%)</title><rect x="264.1" y="195.0" width="44.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="267.1" y="206.0">ip_p..</text>
</g>
<g>
<title>tcp_v4_rcv (48 samples, 3.64%)</title><rect x="265.9" y="179.0" width="42.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="268.9" y="190.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.23%)</title><rect x="266.8" y="163.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="269.8" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.08%)</title><rect x="268.5" y="147.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="271.5" y="158.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.08%)</title><rect x="269.4" y="163.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="272.4" y="174.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.08%)</title><rect x="270.3" y="163.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="273.3" y="174.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.08%)</title><rect x="270.3" y="147.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="273.3" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (42 samples, 3.18%)</title><rect x="271.2" y="163.0" width="37.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="274.2" y="174.0">tcp..</text>
</g>
<g>
<title>tcp_rcv_established (41 samples, 3.11%)</title><rect x="272.1" y="147.0" width="36.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="275.1" y="158.0">tcp..</text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.30%)</title><rect x="272.1" y="131.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="275.1" y="142.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.30%)</title><rect x="272.1" y="115.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="275.1" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.30%)</title><rect x="272.1" y="99.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="275.1" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (29 samples, 2.20%)</title><rect x="275.7" y="131.0" width="25.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="278.7" y="142.0">s..</text>
</g>
<g>
<title>__wake_up_common_lock (29 samples, 2.20%)</title><rect x="275.7" y="115.0" width="25.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="278.7" y="126.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (29 samples, 2.20%)</title><rect x="275.7" y="99.0" width="25.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="278.7" y="110.0">_..</text>
</g>
<g>
<title>tcp_ack (6 samples, 0.45%)</title><rect x="301.6" y="131.0" width="5.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="304.6" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.15%)</title><rect x="303.4" y="115.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="306.4" y="126.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.08%)</title><rect x="304.3" y="99.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="307.3" y="110.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.08%)</title><rect x="305.2" y="115.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="308.2" y="126.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.08%)</title><rect x="306.1" y="115.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="309.1" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.08%)</title><rect x="307.0" y="131.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="310.0" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.08%)</title><rect x="307.9" y="131.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="310.9" y="142.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.08%)</title><rect x="308.8" y="339.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="311.8" y="350.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.08%)</title><rect x="309.7" y="403.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="312.7" y="414.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.08%)</title><rect x="310.6" y="403.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="313.6" y="414.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.08%)</title><rect x="311.5" y="419.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="314.5" y="430.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.08%)</title><rect x="312.4" y="419.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="315.4" y="430.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.15%)</title><rect x="313.3" y="419.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="316.3" y="430.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.15%)</title><rect x="313.3" y="403.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="316.3" y="414.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.15%)</title><rect x="313.3" y="387.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="316.3" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.15%)</title><rect x="313.3" y="371.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="316.3" y="382.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.15%)</title><rect x="315.1" y="451.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="318.1" y="462.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.15%)</title><rect x="315.1" y="435.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="318.1" y="446.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.15%)</title><rect x="315.1" y="419.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="318.1" y="430.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.08%)</title><rect x="316.9" y="451.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="319.9" y="462.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.08%)</title><rect x="316.9" y="435.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="319.9" y="446.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.53%)</title><rect x="317.7" y="451.0" width="6.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="320.7" y="462.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.53%)</title><rect x="317.7" y="435.0" width="6.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="320.7" y="446.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.15%)</title><rect x="318.6" y="419.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="321.6" y="430.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.15%)</title><rect x="318.6" y="403.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="321.6" y="414.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.08%)</title><rect x="319.5" y="387.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="322.5" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.30%)</title><rect x="320.4" y="419.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="323.4" y="430.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.08%)</title><rect x="324.0" y="451.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="327.0" y="462.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.15%)</title><rect x="324.9" y="451.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="327.9" y="462.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.15%)</title><rect x="324.9" y="435.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="327.9" y="446.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.08%)</title><rect x="325.8" y="419.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="328.8" y="430.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.15%)</title><rect x="326.7" y="451.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="329.7" y="462.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.08%)</title><rect x="328.5" y="499.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="331.5" y="510.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.08%)</title><rect x="328.5" y="483.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="331.5" y="494.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.08%)</title><rect x="328.5" y="467.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="331.5" y="478.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.08%)</title><rect x="329.4" y="531.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="332.4" y="542.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.08%)</title><rect x="329.4" y="515.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="332.4" y="526.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (5 samples, 0.38%)</title><rect x="330.3" y="595.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.3" y="606.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (5 samples, 0.38%)</title><rect x="330.3" y="579.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="333.3" y="590.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (3 samples, 0.23%)</title><rect x="332.1" y="563.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="335.1" y="574.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (3 samples, 0.23%)</title><rect x="334.7" y="595.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="337.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.08%)</title><rect x="334.7" y="579.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="337.7" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Socket.connect (1 samples, 0.08%)</title><rect x="335.6" y="579.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.08%)</title><rect x="335.6" y="563.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="338.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Socket.create (1 samples, 0.08%)</title><rect x="336.5" y="579.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="339.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.08%)</title><rect x="337.4" y="691.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="340.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.08%)</title><rect x="337.4" y="675.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="340.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (4 samples, 0.30%)</title><rect x="338.3" y="691.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.30%)</title><rect x="338.3" y="675.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="341.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$73/2122379680.run (2 samples, 0.15%)</title><rect x="340.1" y="659.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="343.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (144 samples, 10.92%)</title><rect x="341.9" y="691.0" width="128.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="344.9" y="702.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (60 samples, 4.55%)</title><rect x="343.7" y="675.0" width="53.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="346.7" y="686.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.dequeue (3 samples, 0.23%)</title><rect x="343.7" y="659.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="346.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.08%)</title><rect x="346.4" y="659.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="349.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (34 samples, 2.58%)</title><rect x="347.3" y="659.0" width="30.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="350.3" y="670.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (4 samples, 0.30%)</title><rect x="348.2" y="643.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="351.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (2 samples, 0.15%)</title><rect x="351.7" y="643.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="354.7" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.15%)</title><rect x="351.7" y="627.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="354.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.15%)</title><rect x="353.5" y="643.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="356.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.15%)</title><rect x="353.5" y="627.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="356.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.15%)</title><rect x="353.5" y="611.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="356.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.08%)</title><rect x="355.3" y="643.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="358.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (24 samples, 1.82%)</title><rect x="356.2" y="643.0" width="21.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.2" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (24 samples, 1.82%)</title><rect x="356.2" y="627.0" width="21.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="359.2" y="638.0">j..</text>
</g>
<g>
<title>Unsafe_Park (16 samples, 1.21%)</title><rect x="358.0" y="611.0" width="14.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="361.0" y="622.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.15%)</title><rect x="358.0" y="595.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="361.0" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.45%)</title><rect x="359.8" y="595.0" width="5.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="362.8" y="606.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (4 samples, 0.30%)</title><rect x="360.7" y="579.0" width="3.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="363.7" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.08%)</title><rect x="364.3" y="579.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="367.3" y="590.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.08%)</title><rect x="365.2" y="595.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="368.2" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.15%)</title><rect x="366.1" y="595.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="369.1" y="606.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (1 samples, 0.08%)</title><rect x="367.8" y="595.0" width="0.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="370.8" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.23%)</title><rect x="368.7" y="595.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="371.7" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.15%)</title><rect x="369.6" y="579.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="372.6" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.15%)</title><rect x="369.6" y="563.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="372.6" y="574.0"></text>
</g>
<g>
<title>__se_sys_futex (2 samples, 0.15%)</title><rect x="369.6" y="547.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="372.6" y="558.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.15%)</title><rect x="369.6" y="531.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="372.6" y="542.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.15%)</title><rect x="369.6" y="515.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="372.6" y="526.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.08%)</title><rect x="370.5" y="499.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="373.5" y="510.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.08%)</title><rect x="371.4" y="595.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="374.4" y="606.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.45%)</title><rect x="372.3" y="611.0" width="5.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="375.3" y="622.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (6 samples, 0.45%)</title><rect x="372.3" y="595.0" width="5.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="375.3" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.45%)</title><rect x="372.3" y="579.0" width="5.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="375.3" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.45%)</title><rect x="372.3" y="563.0" width="5.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="375.3" y="574.0"></text>
</g>
<g>
<title>__se_sys_futex (5 samples, 0.38%)</title><rect x="372.3" y="547.0" width="4.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="375.3" y="558.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.38%)</title><rect x="372.3" y="531.0" width="4.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="375.3" y="542.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.38%)</title><rect x="372.3" y="515.0" width="4.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="375.3" y="526.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.15%)</title><rect x="373.2" y="499.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="376.2" y="510.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.08%)</title><rect x="374.1" y="483.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="377.1" y="494.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.08%)</title><rect x="374.1" y="467.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="377.1" y="478.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.08%)</title><rect x="374.1" y="451.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="377.1" y="462.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.08%)</title><rect x="374.1" y="435.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="377.1" y="446.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.08%)</title><rect x="374.1" y="419.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="377.1" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.08%)</title><rect x="374.1" y="403.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="377.1" y="414.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.15%)</title><rect x="375.0" y="499.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="378.0" y="510.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.08%)</title><rect x="375.9" y="483.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="378.9" y="494.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.08%)</title><rect x="376.8" y="547.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="379.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (22 samples, 1.67%)</title><rect x="377.7" y="659.0" width="19.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="380.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (22 samples, 1.67%)</title><rect x="377.7" y="643.0" width="19.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="380.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (22 samples, 1.67%)</title><rect x="377.7" y="627.0" width="19.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="380.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (22 samples, 1.67%)</title><rect x="377.7" y="611.0" width="19.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="380.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (21 samples, 1.59%)</title><rect x="378.6" y="595.0" width="18.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="381.6" y="606.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.38%)</title><rect x="378.6" y="579.0" width="4.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="381.6" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.08%)</title><rect x="378.6" y="563.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="381.6" y="574.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.23%)</title><rect x="379.5" y="563.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="382.5" y="574.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.08%)</title><rect x="382.2" y="563.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="385.2" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 1.21%)</title><rect x="383.1" y="579.0" width="14.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="386.1" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 1.14%)</title><rect x="383.9" y="563.0" width="13.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="386.9" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 1.14%)</title><rect x="383.9" y="547.0" width="13.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="386.9" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (12 samples, 0.91%)</title><rect x="383.9" y="531.0" width="10.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="386.9" y="542.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.83%)</title><rect x="384.8" y="515.0" width="9.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="387.8" y="526.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.83%)</title><rect x="384.8" y="499.0" width="9.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="387.8" y="510.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.08%)</title><rect x="384.8" y="483.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="387.8" y="494.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.08%)</title><rect x="385.7" y="483.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="388.7" y="494.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.68%)</title><rect x="386.6" y="483.0" width="8.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="389.6" y="494.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.68%)</title><rect x="386.6" y="467.0" width="8.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="389.6" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.68%)</title><rect x="386.6" y="451.0" width="8.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="389.6" y="462.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.08%)</title><rect x="394.7" y="531.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="397.7" y="542.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.08%)</title><rect x="395.6" y="531.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="398.6" y="542.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.08%)</title><rect x="395.6" y="515.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="398.6" y="526.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.08%)</title><rect x="396.5" y="531.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="399.5" y="542.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.08%)</title><rect x="396.5" y="515.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="399.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (81 samples, 6.14%)</title><rect x="397.4" y="675.0" width="72.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="400.4" y="686.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (79 samples, 5.99%)</title><rect x="397.4" y="659.0" width="70.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="400.4" y="670.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (2 samples, 0.15%)</title><rect x="397.4" y="643.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.15%)</title><rect x="397.4" y="627.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="400.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (76 samples, 5.76%)</title><rect x="399.2" y="643.0" width="67.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="402.2" y="654.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (72 samples, 5.46%)</title><rect x="402.7" y="627.0" width="64.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="405.7" y="638.0">java/ut..</text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.23%)</title><rect x="411.7" y="611.0" width="2.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="414.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (56 samples, 4.25%)</title><rect x="414.4" y="611.0" width="50.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.4" y="622.0">jdk/i..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.08%)</title><rect x="418.8" y="595.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="421.8" y="606.0"></text>
</g>
<g>
<title>Unsafe_Park (28 samples, 2.12%)</title><rect x="419.7" y="595.0" width="25.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="422.7" y="606.0">U..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.15%)</title><rect x="421.5" y="579.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="424.5" y="590.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.15%)</title><rect x="423.3" y="579.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="426.3" y="590.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 0.76%)</title><rect x="425.1" y="579.0" width="8.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="428.1" y="590.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.08%)</title><rect x="430.5" y="563.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="433.5" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.15%)</title><rect x="431.4" y="563.0" width="1.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="434.4" y="574.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.08%)</title><rect x="433.2" y="563.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="436.2" y="574.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (11 samples, 0.83%)</title><rect x="434.0" y="579.0" width="9.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="437.0" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.61%)</title><rect x="436.7" y="563.0" width="7.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="439.7" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.61%)</title><rect x="436.7" y="547.0" width="7.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="439.7" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (5 samples, 0.38%)</title><rect x="438.5" y="531.0" width="4.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="441.5" y="542.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.38%)</title><rect x="438.5" y="515.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="441.5" y="526.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.38%)</title><rect x="438.5" y="499.0" width="4.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="441.5" y="510.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.08%)</title><rect x="442.1" y="483.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="445.1" y="494.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.08%)</title><rect x="443.0" y="531.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="446.0" y="542.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.08%)</title><rect x="443.9" y="579.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="446.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 1.59%)</title><rect x="444.8" y="595.0" width="18.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="447.8" y="606.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.08%)</title><rect x="444.8" y="579.0" width="0.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="447.8" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (18 samples, 1.36%)</title><rect x="445.7" y="579.0" width="16.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="448.7" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 1.21%)</title><rect x="447.5" y="563.0" width="14.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="450.5" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 1.21%)</title><rect x="447.5" y="547.0" width="14.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="450.5" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (11 samples, 0.83%)</title><rect x="451.0" y="531.0" width="9.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="454.0" y="542.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.68%)</title><rect x="452.8" y="515.0" width="8.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="455.8" y="526.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.61%)</title><rect x="453.7" y="499.0" width="7.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="456.7" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (8 samples, 0.61%)</title><rect x="453.7" y="483.0" width="7.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="456.7" y="494.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (4 samples, 0.30%)</title><rect x="454.6" y="467.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="457.6" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.30%)</title><rect x="454.6" y="451.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="457.6" y="462.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.08%)</title><rect x="458.2" y="467.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="461.2" y="478.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.15%)</title><rect x="459.1" y="467.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="462.1" y="478.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.08%)</title><rect x="460.9" y="531.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="463.9" y="542.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.08%)</title><rect x="461.8" y="579.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="464.8" y="590.0"></text>
</g>
<g>
<title>_pthread_cleanup_pop (1 samples, 0.08%)</title><rect x="462.7" y="579.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="465.7" y="590.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.08%)</title><rect x="463.6" y="595.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="466.6" y="606.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (3 samples, 0.23%)</title><rect x="464.5" y="611.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="467.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.clean (1 samples, 0.08%)</title><rect x="467.1" y="643.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="470.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeUnit.toNanos (2 samples, 0.15%)</title><rect x="468.0" y="659.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (1 samples, 0.08%)</title><rect x="469.8" y="675.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$73/2122379680.run (556 samples, 42.15%)</title><rect x="470.7" y="691.0" width="497.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="473.7" y="702.0">ru/mail/polis/service/saloed/ServiceImpl$$Lambda$73/2122379680.run</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0 (556 samples, 42.15%)</title><rect x="470.7" y="675.0" width="497.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="473.7" y="686.0">ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$0</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.processEntityForService (263 samples, 19.94%)</title><rect x="470.7" y="659.0" width="235.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="473.7" y="670.0">ru/mail/polis/service/saloed/Se..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (140 samples, 10.61%)</title><rect x="472.5" y="643.0" width="125.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="475.5" y="654.0">ru/mail/polis/s..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (139 samples, 10.54%)</title><rect x="473.4" y="627.0" width="124.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.4" y="638.0">one/nio/http/Ht..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.08%)</title><rect x="477.9" y="611.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="480.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.08%)</title><rect x="477.9" y="595.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.08%)</title><rect x="477.9" y="579.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (131 samples, 9.93%)</title><rect x="478.8" y="611.0" width="117.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="481.8" y="622.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.08%)</title><rect x="478.8" y="595.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="481.8" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (130 samples, 9.86%)</title><rect x="479.7" y="595.0" width="116.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="482.7" y="606.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/Session.write (130 samples, 9.86%)</title><rect x="479.7" y="579.0" width="116.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="482.7" y="590.0">one/nio/net/Se..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.08%)</title><rect x="479.7" y="563.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="482.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (129 samples, 9.78%)</title><rect x="480.6" y="563.0" width="115.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="483.6" y="574.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (129 samples, 9.78%)</title><rect x="480.6" y="547.0" width="115.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="483.6" y="558.0">one/nio/net/Na..</text>
</g>
<g>
<title>[unknown] (5 samples, 0.38%)</title><rect x="480.6" y="531.0" width="4.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="483.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.38%)</title><rect x="480.6" y="515.0" width="4.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="483.6" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.30%)</title><rect x="480.6" y="499.0" width="3.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="483.6" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.30%)</title><rect x="480.6" y="483.0" width="3.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="483.6" y="494.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.08%)</title><rect x="480.6" y="467.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="483.6" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (3 samples, 0.23%)</title><rect x="481.5" y="467.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="484.5" y="478.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.08%)</title><rect x="484.1" y="499.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="487.1" y="510.0"></text>
</g>
<g>
<title>__send (124 samples, 9.40%)</title><rect x="485.0" y="531.0" width="111.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="488.0" y="542.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (122 samples, 9.25%)</title><rect x="486.8" y="515.0" width="109.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="489.8" y="526.0">entry_SYSCALL..</text>
</g>
<g>
<title>do_syscall_64 (122 samples, 9.25%)</title><rect x="486.8" y="499.0" width="109.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="489.8" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (117 samples, 8.87%)</title><rect x="490.4" y="483.0" width="104.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="493.4" y="494.0">__x64_sys_se..</text>
</g>
<g>
<title>__sys_sendto (117 samples, 8.87%)</title><rect x="490.4" y="467.0" width="104.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="493.4" y="478.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (117 samples, 8.87%)</title><rect x="490.4" y="451.0" width="104.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="493.4" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (2 samples, 0.15%)</title><rect x="490.4" y="435.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="493.4" y="446.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.08%)</title><rect x="491.3" y="419.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="494.3" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (115 samples, 8.72%)</title><rect x="492.2" y="435.0" width="102.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="495.2" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (115 samples, 8.72%)</title><rect x="492.2" y="419.0" width="102.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="495.2" y="430.0">tcp_sendmsg_..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.08%)</title><rect x="499.4" y="403.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="502.4" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.08%)</title><rect x="499.4" y="387.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="502.4" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (88 samples, 6.67%)</title><rect x="500.3" y="403.0" width="78.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="503.3" y="414.0">__tcp_pus..</text>
</g>
<g>
<title>tcp_write_xmit (88 samples, 6.67%)</title><rect x="500.3" y="387.0" width="78.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="503.3" y="398.0">tcp_write..</text>
</g>
<g>
<title>__tcp_transmit_skb (76 samples, 5.76%)</title><rect x="502.0" y="371.0" width="68.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="505.0" y="382.0">__tcp_t..</text>
</g>
<g>
<title>__ip_queue_xmit (70 samples, 5.31%)</title><rect x="502.9" y="355.0" width="62.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="505.9" y="366.0">__ip_q..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.08%)</title><rect x="502.9" y="339.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="505.9" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.08%)</title><rect x="502.9" y="323.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="505.9" y="334.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.08%)</title><rect x="503.8" y="339.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="506.8" y="350.0"></text>
</g>
<g>
<title>ip_output (68 samples, 5.16%)</title><rect x="504.7" y="339.0" width="60.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="507.7" y="350.0">ip_out..</text>
</g>
<g>
<title>ip_finish_output2 (67 samples, 5.08%)</title><rect x="505.6" y="323.0" width="60.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="508.6" y="334.0">ip_fin..</text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.38%)</title><rect x="506.5" y="307.0" width="4.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="509.5" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.15%)</title><rect x="507.4" y="291.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="510.4" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.15%)</title><rect x="507.4" y="275.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="510.4" y="286.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.15%)</title><rect x="507.4" y="259.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="510.4" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.15%)</title><rect x="507.4" y="243.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="510.4" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.15%)</title><rect x="507.4" y="227.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="510.4" y="238.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (2 samples, 0.15%)</title><rect x="509.2" y="291.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="512.2" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (61 samples, 4.62%)</title><rect x="511.0" y="307.0" width="54.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="514.0" y="318.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (61 samples, 4.62%)</title><rect x="511.0" y="291.0" width="54.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="514.0" y="302.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (60 samples, 4.55%)</title><rect x="511.9" y="275.0" width="53.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="514.9" y="286.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (60 samples, 4.55%)</title><rect x="511.9" y="259.0" width="53.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="514.9" y="270.0">__sof..</text>
</g>
<g>
<title>net_rx_action (59 samples, 4.47%)</title><rect x="512.8" y="243.0" width="52.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="515.8" y="254.0">net_r..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.08%)</title><rect x="513.7" y="227.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="516.7" y="238.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.08%)</title><rect x="514.6" y="227.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="517.6" y="238.0"></text>
</g>
<g>
<title>process_backlog (56 samples, 4.25%)</title><rect x="515.5" y="227.0" width="50.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="518.5" y="238.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (52 samples, 3.94%)</title><rect x="519.0" y="211.0" width="46.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="522.0" y="222.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.08%)</title><rect x="519.9" y="195.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="522.9" y="206.0"></text>
</g>
<g>
<title>ip_rcv (50 samples, 3.79%)</title><rect x="520.8" y="195.0" width="44.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="523.8" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (48 samples, 3.64%)</title><rect x="521.7" y="179.0" width="43.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="524.7" y="190.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (48 samples, 3.64%)</title><rect x="521.7" y="163.0" width="43.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="524.7" y="174.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (48 samples, 3.64%)</title><rect x="521.7" y="147.0" width="43.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="524.7" y="158.0">ip_p..</text>
</g>
<g>
<title>tcp_v4_rcv (48 samples, 3.64%)</title><rect x="521.7" y="131.0" width="43.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="524.7" y="142.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.15%)</title><rect x="522.6" y="115.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="525.6" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.15%)</title><rect x="524.4" y="115.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="527.4" y="126.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.08%)</title><rect x="525.3" y="99.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="528.3" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (43 samples, 3.26%)</title><rect x="526.2" y="115.0" width="38.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="529.2" y="126.0">tcp..</text>
</g>
<g>
<title>tcp_rcv_established (43 samples, 3.26%)</title><rect x="526.2" y="99.0" width="38.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="529.2" y="110.0">tcp..</text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.08%)</title><rect x="528.9" y="83.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="531.9" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.23%)</title><rect x="529.8" y="83.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="532.8" y="94.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.23%)</title><rect x="529.8" y="67.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="532.8" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.15%)</title><rect x="529.8" y="51.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="532.8" y="62.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.08%)</title><rect x="531.6" y="51.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="534.6" y="62.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.08%)</title><rect x="531.6" y="35.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="534.6" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (29 samples, 2.20%)</title><rect x="532.5" y="83.0" width="25.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="535.5" y="94.0">s..</text>
</g>
<g>
<title>__wake_up_common_lock (28 samples, 2.12%)</title><rect x="533.4" y="67.0" width="25.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="536.4" y="78.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (26 samples, 1.97%)</title><rect x="535.1" y="51.0" width="23.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="538.1" y="62.0">_..</text>
</g>
<g>
<title>tcp_ack (3 samples, 0.23%)</title><rect x="558.4" y="83.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="561.4" y="94.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.15%)</title><rect x="558.4" y="67.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="561.4" y="78.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.08%)</title><rect x="559.3" y="51.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="562.3" y="62.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.08%)</title><rect x="560.2" y="67.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="563.2" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.08%)</title><rect x="561.1" y="83.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="564.1" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.08%)</title><rect x="562.0" y="83.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="565.0" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.08%)</title><rect x="562.9" y="83.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="565.9" y="94.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.08%)</title><rect x="562.9" y="67.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="565.9" y="78.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.08%)</title><rect x="562.9" y="51.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="565.9" y="62.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.08%)</title><rect x="563.8" y="83.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="566.8" y="94.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.08%)</title><rect x="564.7" y="179.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="567.7" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.08%)</title><rect x="564.7" y="163.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="567.7" y="174.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.15%)</title><rect x="565.6" y="355.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="568.6" y="366.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.08%)</title><rect x="567.3" y="355.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="570.3" y="366.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.08%)</title><rect x="568.2" y="355.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="571.2" y="366.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.08%)</title><rect x="569.1" y="355.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="572.1" y="366.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.15%)</title><rect x="570.0" y="371.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="573.0" y="382.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.15%)</title><rect x="570.0" y="355.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="573.0" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.30%)</title><rect x="571.8" y="371.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="574.8" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.08%)</title><rect x="572.7" y="355.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="575.7" y="366.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.08%)</title><rect x="572.7" y="339.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="575.7" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.08%)</title><rect x="572.7" y="323.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="575.7" y="334.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.0 (1 samples, 0.08%)</title><rect x="573.6" y="355.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="576.6" y="366.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.08%)</title><rect x="574.5" y="355.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="577.5" y="366.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.30%)</title><rect x="575.4" y="371.0" width="3.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="578.4" y="382.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.08%)</title><rect x="577.2" y="355.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="580.2" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.08%)</title><rect x="578.1" y="355.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="581.1" y="366.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.08%)</title><rect x="578.1" y="339.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="581.1" y="350.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.23%)</title><rect x="579.0" y="403.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="582.0" y="414.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.15%)</title><rect x="579.9" y="387.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="582.9" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (11 samples, 0.83%)</title><rect x="581.7" y="403.0" width="9.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="584.7" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (10 samples, 0.76%)</title><rect x="582.6" y="387.0" width="8.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="585.6" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (4 samples, 0.30%)</title><rect x="585.2" y="371.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="588.2" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.30%)</title><rect x="585.2" y="355.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="588.2" y="366.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.15%)</title><rect x="587.0" y="339.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="590.0" y="350.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.23%)</title><rect x="588.8" y="371.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="591.8" y="382.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.08%)</title><rect x="590.6" y="355.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="593.6" y="366.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.08%)</title><rect x="591.5" y="403.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="594.5" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.23%)</title><rect x="592.4" y="403.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="595.4" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.15%)</title><rect x="593.3" y="387.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="596.3" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.15%)</title><rect x="593.3" y="371.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="596.3" y="382.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.08%)</title><rect x="595.1" y="483.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="598.1" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.08%)</title><rect x="596.0" y="611.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="599.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.08%)</title><rect x="596.0" y="595.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="599.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.08%)</title><rect x="596.0" y="579.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getMethod (1 samples, 0.08%)</title><rect x="596.9" y="611.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="599.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/GetEntityRequestProcessor.makeResponseForService (4 samples, 0.30%)</title><rect x="597.8" y="643.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/timestamp/RecordWithTimestamp.toRawBytes (4 samples, 0.30%)</title><rect x="597.8" y="627.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="600.8" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.08%)</title><rect x="597.8" y="611.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.8" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="597.8" y="595.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="600.8" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="597.8" y="579.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.8" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.08%)</title><rect x="598.7" y="611.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="601.7" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.08%)</title><rect x="598.7" y="595.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="601.7" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putLong (2 samples, 0.15%)</title><rect x="599.6" y="611.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="602.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putLongUnaligned (2 samples, 0.15%)</title><rect x="599.6" y="595.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="602.6" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="599.6" y="579.0" width="0.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="602.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (1 samples, 0.08%)</title><rect x="600.4" y="579.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="603.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/GetEntityRequestProcessor.processLocal (116 samples, 8.79%)</title><rect x="601.3" y="643.0" width="103.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="604.3" y="654.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.getRecord (116 samples, 8.79%)</title><rect x="601.3" y="627.0" width="103.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="604.3" y="638.0">ru/mail/poli..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (110 samples, 8.34%)</title><rect x="603.1" y="611.0" width="98.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.1" y="622.0">org/rocksdb/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (110 samples, 8.34%)</title><rect x="603.1" y="595.0" width="98.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="606.1" y="606.0">org/rocksdb/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (82 samples, 6.22%)</title><rect x="603.1" y="579.0" width="73.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="606.1" y="590.0">Java_org..</text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (3 samples, 0.23%)</title><rect x="603.1" y="563.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="606.1" y="574.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="605.8" y="563.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="608.8" y="574.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.08%)</title><rect x="606.7" y="563.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="609.7" y="574.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.08%)</title><rect x="607.6" y="563.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="610.6" y="574.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.08%)</title><rect x="608.5" y="563.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="611.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.08%)</title><rect x="609.4" y="563.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="612.4" y="574.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (74 samples, 5.61%)</title><rect x="610.3" y="563.0" width="66.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="613.3" y="574.0">rocksdb..</text>
</g>
<g>
<title>_init (1 samples, 0.08%)</title><rect x="611.2" y="547.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="614.2" y="558.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.08%)</title><rect x="612.1" y="547.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="615.1" y="558.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.08%)</title><rect x="612.1" y="531.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="615.1" y="542.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.08%)</title><rect x="613.0" y="547.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="616.0" y="558.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.08%)</title><rect x="613.0" y="531.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="616.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (60 samples, 4.55%)</title><rect x="613.9" y="547.0" width="53.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="616.9" y="558.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (60 samples, 4.55%)</title><rect x="613.9" y="531.0" width="53.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="616.9" y="542.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (60 samples, 4.55%)</title><rect x="613.9" y="515.0" width="53.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="616.9" y="526.0">rocks..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.08%)</title><rect x="613.9" y="499.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="616.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.08%)</title><rect x="614.8" y="499.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="617.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.08%)</title><rect x="615.7" y="499.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="618.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (57 samples, 4.32%)</title><rect x="616.6" y="499.0" width="50.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="619.6" y="510.0">rocks..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.08%)</title><rect x="619.2" y="483.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="622.2" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.15%)</title><rect x="620.1" y="483.0" width="1.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="623.1" y="494.0"></text>
</g>
<g>
<title>_init (1 samples, 0.08%)</title><rect x="621.9" y="483.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="624.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (3 samples, 0.23%)</title><rect x="622.8" y="483.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="625.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.08%)</title><rect x="624.6" y="467.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="627.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.08%)</title><rect x="624.6" y="451.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="627.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.08%)</title><rect x="625.5" y="483.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="628.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.08%)</title><rect x="626.4" y="483.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="629.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (43 samples, 3.26%)</title><rect x="627.3" y="483.0" width="38.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="630.3" y="494.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (41 samples, 3.11%)</title><rect x="628.2" y="467.0" width="36.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="631.2" y="478.0">/tm..</text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (1 samples, 0.08%)</title><rect x="630.0" y="451.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="633.0" y="462.0"></text>
</g>
<g>
<title>_init (1 samples, 0.08%)</title><rect x="630.9" y="451.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="633.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (33 samples, 2.50%)</title><rect x="631.8" y="451.0" width="29.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="634.8" y="462.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (1 samples, 0.08%)</title><rect x="652.3" y="435.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="655.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 0.68%)</title><rect x="653.2" y="435.0" width="8.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="656.2" y="446.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (1 samples, 0.08%)</title><rect x="654.1" y="419.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="657.1" y="430.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (4 samples, 0.30%)</title><rect x="655.0" y="419.0" width="3.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="658.0" y="430.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.15%)</title><rect x="658.6" y="419.0" width="1.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="661.6" y="430.0"></text>
</g>
<g>
<title>_init (1 samples, 0.08%)</title><rect x="660.4" y="419.0" width="0.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="663.4" y="430.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (4 samples, 0.30%)</title><rect x="661.3" y="451.0" width="3.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="664.3" y="462.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.08%)</title><rect x="664.9" y="467.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="667.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (2 samples, 0.15%)</title><rect x="665.8" y="483.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="668.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.08%)</title><rect x="667.5" y="547.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="670.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (9 samples, 0.68%)</title><rect x="668.4" y="547.0" width="8.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="671.4" y="558.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.15%)</title><rect x="668.4" y="531.0" width="1.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="671.4" y="542.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.08%)</title><rect x="668.4" y="515.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="671.4" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.08%)</title><rect x="669.3" y="515.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="672.3" y="526.0"></text>
</g>
<g>
<title>jni_NewByteArray (7 samples, 0.53%)</title><rect x="670.2" y="531.0" width="6.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="673.2" y="542.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.08%)</title><rect x="672.0" y="515.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="675.0" y="526.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.30%)</title><rect x="672.9" y="515.0" width="3.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="675.9" y="526.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.08%)</title><rect x="674.7" y="499.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="677.7" y="510.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.08%)</title><rect x="674.7" y="483.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="677.7" y="494.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.08%)</title><rect x="674.7" y="467.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="677.7" y="478.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.08%)</title><rect x="675.6" y="499.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="678.6" y="510.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.83%)</title><rect x="676.5" y="579.0" width="9.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="679.5" y="590.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.08%)</title><rect x="676.5" y="563.0" width="0.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="679.5" y="574.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (8 samples, 0.61%)</title><rect x="677.4" y="563.0" width="7.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="680.4" y="574.0"></text>
</g>
<g>
<title>update_get_addr (2 samples, 0.15%)</title><rect x="684.5" y="563.0" width="1.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="687.5" y="574.0"></text>
</g>
<g>
<title>__GI___libc_malloc (5 samples, 0.38%)</title><rect x="686.3" y="579.0" width="4.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="689.3" y="590.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (7 samples, 0.53%)</title><rect x="690.8" y="579.0" width="6.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="693.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.15%)</title><rect x="697.1" y="579.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="700.1" y="590.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (3 samples, 0.23%)</title><rect x="698.9" y="579.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="701.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (4 samples, 0.30%)</title><rect x="701.5" y="611.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="704.5" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.15%)</title><rect x="701.5" y="595.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.5" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.15%)</title><rect x="701.5" y="579.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="704.5" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="702.4" y="563.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="705.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.08%)</title><rect x="703.3" y="595.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="706.3" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="703.3" y="579.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="703.3" y="563.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="706.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.shiftArrayInplace (1 samples, 0.08%)</title><rect x="704.2" y="595.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/UpsertEntityRequestProcessor.processLocal (1 samples, 0.08%)</title><rect x="705.1" y="643.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="708.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.processEntityForUser (293 samples, 22.21%)</title><rect x="706.0" y="659.0" width="262.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.0" y="670.0">ru/mail/polis/service/saloed/Servic..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.15%)</title><rect x="715.0" y="643.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="718.0" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.08%)</title><rect x="716.7" y="643.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.7" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (25 samples, 1.90%)</title><rect x="717.6" y="643.0" width="22.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.6" y="654.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (25 samples, 1.90%)</title><rect x="717.6" y="627.0" width="22.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.6" y="638.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (1 samples, 0.08%)</title><rect x="717.6" y="611.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="720.6" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (24 samples, 1.82%)</title><rect x="718.5" y="611.0" width="21.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="721.5" y="622.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (23 samples, 1.74%)</title><rect x="718.5" y="595.0" width="20.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="721.5" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (21 samples, 1.59%)</title><rect x="719.4" y="579.0" width="18.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.4" y="590.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.15%)</title><rect x="719.4" y="563.0" width="1.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="722.4" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (4 samples, 0.30%)</title><rect x="721.2" y="563.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="724.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.23%)</title><rect x="722.1" y="547.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="725.1" y="558.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.15%)</title><rect x="723.0" y="531.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="726.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (6 samples, 0.45%)</title><rect x="724.8" y="563.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="727.8" y="574.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.15%)</title><rect x="727.5" y="547.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="730.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (1 samples, 0.08%)</title><rect x="729.3" y="547.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$23/1891502635.get (1 samples, 0.08%)</title><rect x="729.3" y="531.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="732.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Streams$ConcatSpliterator.forEachRemaining (9 samples, 0.68%)</title><rect x="730.2" y="563.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.forEachRemaining (8 samples, 0.61%)</title><rect x="730.2" y="547.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="733.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (8 samples, 0.61%)</title><rect x="730.2" y="531.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6 samples, 0.45%)</title><rect x="730.2" y="515.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="733.2" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (5 samples, 0.38%)</title><rect x="730.2" y="499.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.38%)</title><rect x="730.2" y="483.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="733.2" y="494.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.08%)</title><rect x="730.2" y="467.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="733.2" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$114/1278788686.accept (1 samples, 0.08%)</title><rect x="731.1" y="467.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="734.1" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.08%)</title><rect x="731.1" y="451.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="734.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$112/1370875703.test (1 samples, 0.08%)</title><rect x="731.1" y="435.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="734.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$110/486975771.apply (3 samples, 0.23%)</title><rect x="732.0" y="467.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="735.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$processEntityForUser$3 (1 samples, 0.08%)</title><rect x="733.7" y="451.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/GetEntityRequestProcessor.obtainRemoteResult (1 samples, 0.08%)</title><rect x="733.7" y="435.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/timestamp/RecordWithTimestamp.fromBytes (1 samples, 0.08%)</title><rect x="733.7" y="419.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.7" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.08%)</title><rect x="733.7" y="403.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="736.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.08%)</title><rect x="733.7" y="387.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="736.7" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="733.7" y="371.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="736.7" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="733.7" y="355.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="736.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1 samples, 0.08%)</title><rect x="734.6" y="499.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="737.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.15%)</title><rect x="735.5" y="515.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="738.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (2 samples, 0.15%)</title><rect x="735.5" y="499.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="738.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.&lt;init&gt; (2 samples, 0.15%)</title><rect x="735.5" y="483.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="738.5" y="494.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (2 samples, 0.15%)</title><rect x="735.5" y="467.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.5" y="478.0"></text>
</g>
<g>
<title>java/util/stream/Streams$StreamBuilderImpl.forEachRemaining (1 samples, 0.08%)</title><rect x="737.3" y="547.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.08%)</title><rect x="737.3" y="531.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$112/1370875703.test (1 samples, 0.08%)</title><rect x="737.3" y="515.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="740.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.08%)</title><rect x="738.2" y="579.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.2" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.08%)</title><rect x="738.2" y="563.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="741.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (1 samples, 0.08%)</title><rect x="739.1" y="595.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="742.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (1 samples, 0.08%)</title><rect x="739.1" y="579.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="742.1" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (4 samples, 0.30%)</title><rect x="740.0" y="643.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="743.0" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findAny (3 samples, 0.23%)</title><rect x="743.6" y="643.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.6" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.23%)</title><rect x="743.6" y="627.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="746.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.23%)</title><rect x="743.6" y="611.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="746.6" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.23%)</title><rect x="743.6" y="595.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.23%)</title><rect x="743.6" y="579.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.6" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (3 samples, 0.23%)</title><rect x="743.6" y="563.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="746.6" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (1 samples, 0.08%)</title><rect x="744.5" y="547.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="747.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.08%)</title><rect x="745.4" y="547.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="748.4" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (1 samples, 0.08%)</title><rect x="746.3" y="643.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="749.3" y="654.0"></text>
</g>
<g>
<title>java/util/stream/Stream.concat (2 samples, 0.15%)</title><rect x="747.2" y="643.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="750.2" y="654.0"></text>
</g>
<g>
<title>java/util/stream/Streams$ConcatSpliterator$OfRef.&lt;init&gt; (2 samples, 0.15%)</title><rect x="747.2" y="627.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/Streams$ConcatSpliterator.&lt;init&gt; (2 samples, 0.15%)</title><rect x="747.2" y="611.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.2" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.estimateSize (2 samples, 0.15%)</title><rect x="747.2" y="595.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.2" y="606.0"></text>
</g>
<g>
<title>java/util/stream/Stream.of (1 samples, 0.08%)</title><rect x="749.0" y="643.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="752.0" y="654.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="749.8" y="643.0" width="0.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="752.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter.obtainResponses (52 samples, 3.94%)</title><rect x="750.7" y="643.0" width="46.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.7" y="654.0">ru/m..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="750.7" y="627.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="753.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="750.7" y="611.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$$Lambda$96/814390560.get$Lambda (1 samples, 0.08%)</title><rect x="750.7" y="595.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$$Lambda$96/814390560.&lt;init&gt; (1 samples, 0.08%)</title><rect x="750.7" y="579.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="753.7" y="590.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.23%)</title><rect x="751.6" y="627.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="754.6" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (1 samples, 0.08%)</title><rect x="751.6" y="611.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="754.6" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.15%)</title><rect x="752.5" y="611.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="755.5" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (2 samples, 0.15%)</title><rect x="752.5" y="595.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="755.5" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.15%)</title><rect x="752.5" y="579.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="755.5" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.15%)</title><rect x="752.5" y="563.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="755.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (48 samples, 3.64%)</title><rect x="754.3" y="627.0" width="43.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="757.3" y="638.0">java..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (48 samples, 3.64%)</title><rect x="754.3" y="611.0" width="43.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="757.3" y="622.0">java..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.getOpFlags (1 samples, 0.08%)</title><rect x="754.3" y="595.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.3" y="606.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.08%)</title><rect x="754.3" y="579.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="757.3" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (47 samples, 3.56%)</title><rect x="755.2" y="595.0" width="42.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="758.2" y="606.0">java..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (46 samples, 3.49%)</title><rect x="756.1" y="579.0" width="41.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="759.1" y="590.0">jav..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (45 samples, 3.41%)</title><rect x="757.0" y="563.0" width="40.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="760.0" y="574.0">jav..</text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (41 samples, 3.11%)</title><rect x="757.0" y="547.0" width="36.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="760.0" y="558.0">jav..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (41 samples, 3.11%)</title><rect x="757.0" y="531.0" width="36.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="760.0" y="542.0">jav..</text>
</g>
<g>
<title>itable stub (1 samples, 0.08%)</title><rect x="759.7" y="515.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="762.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (10 samples, 0.76%)</title><rect x="760.6" y="515.0" width="8.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="763.6" y="526.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.08%)</title><rect x="762.4" y="499.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="765.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (6 samples, 0.45%)</title><rect x="763.3" y="499.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="766.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (2 samples, 0.15%)</title><rect x="765.1" y="483.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="768.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$24/597190999.accept (2 samples, 0.15%)</title><rect x="765.1" y="467.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="768.1" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.15%)</title><rect x="765.1" y="451.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="768.1" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.15%)</title><rect x="765.1" y="435.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="768.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.15%)</title><rect x="765.1" y="419.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="768.1" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.15%)</title><rect x="765.1" y="403.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="768.1" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (2 samples, 0.15%)</title><rect x="765.1" y="387.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="768.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$$Lambda$105/1998710437.apply (2 samples, 0.15%)</title><rect x="766.8" y="483.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="769.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$$Lambda$103/841186949.test (1 samples, 0.08%)</title><rect x="768.6" y="499.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="771.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$$Lambda$96/814390560.apply (27 samples, 2.05%)</title><rect x="769.5" y="515.0" width="24.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="772.5" y="526.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter.obtainResponse (27 samples, 2.05%)</title><rect x="769.5" y="499.0" width="24.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="772.5" y="510.0">r..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.get (27 samples, 2.05%)</title><rect x="769.5" y="483.0" width="24.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="772.5" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.awaitDone (26 samples, 1.97%)</title><rect x="769.5" y="467.0" width="23.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="772.5" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (20 samples, 1.52%)</title><rect x="774.9" y="451.0" width="17.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="777.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (20 samples, 1.52%)</title><rect x="774.9" y="435.0" width="17.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="777.9" y="446.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.30%)</title><rect x="774.9" y="419.0" width="3.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="777.9" y="430.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.08%)</title><rect x="774.9" y="403.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="777.9" y="414.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.08%)</title><rect x="775.8" y="403.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="778.8" y="414.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.15%)</title><rect x="776.7" y="403.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="779.7" y="414.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 1.21%)</title><rect x="778.5" y="419.0" width="14.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="781.5" y="430.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (15 samples, 1.14%)</title><rect x="778.5" y="403.0" width="13.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="781.5" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.99%)</title><rect x="780.3" y="387.0" width="11.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="783.3" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.99%)</title><rect x="780.3" y="371.0" width="11.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="783.3" y="382.0"></text>
</g>
<g>
<title>__se_sys_futex (11 samples, 0.83%)</title><rect x="781.2" y="355.0" width="9.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="784.2" y="366.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.83%)</title><rect x="781.2" y="339.0" width="9.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="784.2" y="350.0"></text>
</g>
<g>
<title>futex_wait (10 samples, 0.76%)</title><rect x="782.1" y="323.0" width="8.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="785.1" y="334.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 0.38%)</title><rect x="782.9" y="307.0" width="4.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="785.9" y="318.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (4 samples, 0.30%)</title><rect x="782.9" y="291.0" width="3.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="785.9" y="302.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.23%)</title><rect x="782.9" y="275.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="785.9" y="286.0"></text>
</g>
<g>
<title>lock_hrtimer_base.isra.0 (1 samples, 0.08%)</title><rect x="785.6" y="275.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="788.6" y="286.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.08%)</title><rect x="786.5" y="291.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="789.5" y="302.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.08%)</title><rect x="786.5" y="275.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="789.5" y="286.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.23%)</title><rect x="787.4" y="307.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="790.4" y="318.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.08%)</title><rect x="789.2" y="291.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="792.2" y="302.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.08%)</title><rect x="790.1" y="307.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="793.1" y="318.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.08%)</title><rect x="791.0" y="355.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="794.0" y="366.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.08%)</title><rect x="791.9" y="403.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="794.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.report (1 samples, 0.08%)</title><rect x="792.8" y="467.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="795.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (3 samples, 0.23%)</title><rect x="793.7" y="547.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="796.7" y="558.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.08%)</title><rect x="793.7" y="531.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="796.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (2 samples, 0.15%)</title><rect x="794.6" y="531.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="797.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.08%)</title><rect x="796.4" y="547.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="799.4" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.08%)</title><rect x="796.4" y="531.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="799.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.08%)</title><rect x="796.4" y="515.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="799.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/Sink.end (1 samples, 0.08%)</title><rect x="796.4" y="499.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="799.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter.proxyRequest (31 samples, 2.35%)</title><rect x="797.3" y="643.0" width="27.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="800.3" y="654.0">r..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (31 samples, 2.35%)</title><rect x="797.3" y="627.0" width="27.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="800.3" y="638.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (31 samples, 2.35%)</title><rect x="797.3" y="611.0" width="27.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="800.3" y="622.0">j..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (31 samples, 2.35%)</title><rect x="797.3" y="595.0" width="27.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="800.3" y="606.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (31 samples, 2.35%)</title><rect x="797.3" y="579.0" width="27.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="800.3" y="590.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (31 samples, 2.35%)</title><rect x="797.3" y="563.0" width="27.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="800.3" y="574.0">j..</text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (30 samples, 2.27%)</title><rect x="797.3" y="547.0" width="26.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="800.3" y="558.0">j..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (30 samples, 2.27%)</title><rect x="797.3" y="531.0" width="26.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="800.3" y="542.0">j..</text>
</g>
<g>
<title>itable stub (1 samples, 0.08%)</title><rect x="797.3" y="515.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="800.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (28 samples, 2.12%)</title><rect x="798.2" y="515.0" width="25.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="801.2" y="526.0">j..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (3 samples, 0.23%)</title><rect x="798.2" y="499.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="801.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$24/597190999.accept (3 samples, 0.23%)</title><rect x="798.2" y="483.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="801.2" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.23%)</title><rect x="798.2" y="467.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="801.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.23%)</title><rect x="798.2" y="451.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="801.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.23%)</title><rect x="798.2" y="435.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="801.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.23%)</title><rect x="798.2" y="419.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="801.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (3 samples, 0.23%)</title><rect x="798.2" y="403.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="801.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$$Lambda$91/1879667685.apply (25 samples, 1.90%)</title><rect x="800.8" y="499.0" width="22.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="803.8" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter.lambda$proxyRequest$4 (24 samples, 1.82%)</title><rect x="801.7" y="483.0" width="21.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="804.7" y="494.0">r..</text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (24 samples, 1.82%)</title><rect x="801.7" y="467.0" width="21.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="804.7" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (23 samples, 1.74%)</title><rect x="802.6" y="451.0" width="20.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="805.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (23 samples, 1.74%)</title><rect x="802.6" y="435.0" width="20.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="805.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (21 samples, 1.59%)</title><rect x="802.6" y="419.0" width="18.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="805.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (21 samples, 1.59%)</title><rect x="802.6" y="403.0" width="18.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="805.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (21 samples, 1.59%)</title><rect x="802.6" y="387.0" width="18.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="805.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (21 samples, 1.59%)</title><rect x="802.6" y="371.0" width="18.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (21 samples, 1.59%)</title><rect x="802.6" y="355.0" width="18.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="805.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (21 samples, 1.59%)</title><rect x="802.6" y="339.0" width="18.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.6" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.15%)</title><rect x="803.5" y="323.0" width="1.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="806.5" y="334.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.08%)</title><rect x="803.5" y="307.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="806.5" y="318.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.08%)</title><rect x="804.4" y="307.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="807.4" y="318.0"></text>
</g>
<g>
<title>__pthread_cond_signal (18 samples, 1.36%)</title><rect x="805.3" y="323.0" width="16.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="808.3" y="334.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 1.36%)</title><rect x="805.3" y="307.0" width="16.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="808.3" y="318.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 1.36%)</title><rect x="805.3" y="291.0" width="16.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="808.3" y="302.0"></text>
</g>
<g>
<title>__se_sys_futex (17 samples, 1.29%)</title><rect x="806.2" y="275.0" width="15.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="809.2" y="286.0"></text>
</g>
<g>
<title>do_futex (17 samples, 1.29%)</title><rect x="806.2" y="259.0" width="15.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="809.2" y="270.0"></text>
</g>
<g>
<title>futex_wake (17 samples, 1.29%)</title><rect x="806.2" y="243.0" width="15.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="809.2" y="254.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 1.21%)</title><rect x="807.1" y="227.0" width="14.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="810.1" y="238.0"></text>
</g>
<g>
<title>try_to_wake_up (16 samples, 1.21%)</title><rect x="807.1" y="211.0" width="14.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="810.1" y="222.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (16 samples, 1.21%)</title><rect x="807.1" y="195.0" width="14.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="810.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.15%)</title><rect x="821.4" y="419.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="824.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.15%)</title><rect x="821.4" y="403.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="824.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.08%)</title><rect x="821.4" y="387.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.08%)</title><rect x="821.4" y="371.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="824.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.08%)</title><rect x="822.3" y="387.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="825.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter$$Lambda$90/735996970.test (1 samples, 0.08%)</title><rect x="823.2" y="515.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="826.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.08%)</title><rect x="824.1" y="547.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="827.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.08%)</title><rect x="824.1" y="531.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="827.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Sink.end (1 samples, 0.08%)</title><rect x="824.1" y="515.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="827.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter.selectNodes (12 samples, 0.91%)</title><rect x="825.0" y="643.0" width="10.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="828.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter.getReplicasForNode (1 samples, 0.08%)</title><rect x="825.0" y="627.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="828.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/topology/ConsistentHashTopology.selectNode (11 samples, 0.83%)</title><rect x="825.9" y="627.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="828.9" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/TreeRangeMap.get (5 samples, 0.38%)</title><rect x="825.9" y="611.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="828.9" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/TreeRangeMap.getEntry (5 samples, 0.38%)</title><rect x="825.9" y="595.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="828.9" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/TreeRangeMap$RangeMapEntry.contains (2 samples, 0.15%)</title><rect x="825.9" y="579.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="828.9" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Range.contains (2 samples, 0.15%)</title><rect x="825.9" y="563.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="828.9" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Cut$BelowValue.isLessThan (1 samples, 0.08%)</title><rect x="826.8" y="547.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="829.8" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.floorEntry (3 samples, 0.23%)</title><rect x="827.7" y="579.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="830.7" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFloorEntry (3 samples, 0.23%)</title><rect x="827.7" y="563.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="830.7" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (3 samples, 0.23%)</title><rect x="827.7" y="547.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="830.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Cut$BelowValue.compareTo (2 samples, 0.15%)</title><rect x="828.6" y="531.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="831.6" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Cut.compareTo (2 samples, 0.15%)</title><rect x="828.6" y="515.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="831.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/topology/ConsistentHashTopology.hash (6 samples, 0.45%)</title><rect x="830.4" y="611.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="833.4" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (4 samples, 0.30%)</title><rect x="830.4" y="595.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="833.4" y="606.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction.newHasher (4 samples, 0.30%)</title><rect x="830.4" y="579.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="833.4" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (2 samples, 0.15%)</title><rect x="830.4" y="563.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="833.4" y="574.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (2 samples, 0.15%)</title><rect x="830.4" y="547.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="833.4" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.order (1 samples, 0.08%)</title><rect x="831.3" y="531.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="834.3" y="542.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.clone (2 samples, 0.15%)</title><rect x="832.2" y="563.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="835.2" y="574.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.clone (2 samples, 0.15%)</title><rect x="832.2" y="547.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="835.2" y="558.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.clone (2 samples, 0.15%)</title><rect x="832.2" y="531.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="835.2" y="542.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.clone (2 samples, 0.15%)</title><rect x="832.2" y="515.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="835.2" y="526.0"></text>
</g>
<g>
<title>java/security/MessageDigestSpi.clone (2 samples, 0.15%)</title><rect x="832.2" y="499.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="835.2" y="510.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.15%)</title><rect x="832.2" y="483.0" width="1.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="835.2" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.08%)</title><rect x="833.9" y="595.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="836.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.08%)</title><rect x="833.9" y="579.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="836.9" y="590.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.08%)</title><rect x="834.8" y="595.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="837.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (69 samples, 5.23%)</title><rect x="835.7" y="643.0" width="61.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="838.7" y="654.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (69 samples, 5.23%)</title><rect x="835.7" y="627.0" width="61.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="838.7" y="638.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.08%)</title><rect x="836.6" y="611.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="839.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.08%)</title><rect x="836.6" y="595.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="839.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.08%)</title><rect x="836.6" y="579.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="839.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (66 samples, 5.00%)</title><rect x="837.5" y="611.0" width="59.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="840.5" y="622.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.30%)</title><rect x="837.5" y="595.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="840.5" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.15%)</title><rect x="839.3" y="579.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="842.3" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.15%)</title><rect x="839.3" y="563.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="842.3" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.15%)</title><rect x="839.3" y="547.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="842.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.15%)</title><rect x="839.3" y="531.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="842.3" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (62 samples, 4.70%)</title><rect x="841.1" y="595.0" width="55.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="844.1" y="606.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (62 samples, 4.70%)</title><rect x="841.1" y="579.0" width="55.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="844.1" y="590.0">one/n..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="841.1" y="563.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="844.1" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.08%)</title><rect x="841.1" y="547.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="844.1" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (60 samples, 4.55%)</title><rect x="842.0" y="563.0" width="53.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="845.0" y="574.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (60 samples, 4.55%)</title><rect x="842.0" y="547.0" width="53.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="845.0" y="558.0">one/n..</text>
</g>
<g>
<title>[unknown] (4 samples, 0.30%)</title><rect x="842.9" y="531.0" width="3.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="845.9" y="542.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.30%)</title><rect x="842.9" y="515.0" width="3.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="845.9" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.30%)</title><rect x="842.9" y="499.0" width="3.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="845.9" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.08%)</title><rect x="843.8" y="483.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="846.8" y="494.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.08%)</title><rect x="844.7" y="483.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="847.7" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.08%)</title><rect x="845.6" y="483.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="848.6" y="494.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.08%)</title><rect x="845.6" y="467.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="848.6" y="478.0"></text>
</g>
<g>
<title>__send (55 samples, 4.17%)</title><rect x="846.5" y="531.0" width="49.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="849.5" y="542.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (55 samples, 4.17%)</title><rect x="846.5" y="515.0" width="49.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="849.5" y="526.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (55 samples, 4.17%)</title><rect x="846.5" y="499.0" width="49.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="849.5" y="510.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_sendto (53 samples, 4.02%)</title><rect x="847.4" y="483.0" width="47.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="850.4" y="494.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (53 samples, 4.02%)</title><rect x="847.4" y="467.0" width="47.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="850.4" y="478.0">__sy..</text>
</g>
<g>
<title>sock_sendmsg (50 samples, 3.79%)</title><rect x="847.4" y="451.0" width="44.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="850.4" y="462.0">sock..</text>
</g>
<g>
<title>tcp_sendmsg (50 samples, 3.79%)</title><rect x="847.4" y="435.0" width="44.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="850.4" y="446.0">tcp_..</text>
</g>
<g>
<title>tcp_sendmsg_locked (50 samples, 3.79%)</title><rect x="847.4" y="419.0" width="44.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="850.4" y="430.0">tcp_..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.08%)</title><rect x="850.0" y="403.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="853.0" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.08%)</title><rect x="850.0" y="387.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="853.0" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (38 samples, 2.88%)</title><rect x="850.9" y="403.0" width="34.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="853.9" y="414.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (38 samples, 2.88%)</title><rect x="850.9" y="387.0" width="34.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="853.9" y="398.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (36 samples, 2.73%)</title><rect x="850.9" y="371.0" width="32.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="853.9" y="382.0">__..</text>
</g>
<g>
<title>__ip_queue_xmit (34 samples, 2.58%)</title><rect x="851.8" y="355.0" width="30.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="854.8" y="366.0">__..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.08%)</title><rect x="851.8" y="339.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="854.8" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.08%)</title><rect x="851.8" y="323.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="854.8" y="334.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.08%)</title><rect x="852.7" y="339.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="855.7" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.08%)</title><rect x="852.7" y="323.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="855.7" y="334.0"></text>
</g>
<g>
<title>ip_output (32 samples, 2.43%)</title><rect x="853.6" y="339.0" width="28.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="856.6" y="350.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (31 samples, 2.35%)</title><rect x="854.5" y="323.0" width="27.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="857.5" y="334.0">i..</text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.53%)</title><rect x="856.3" y="307.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="859.3" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.23%)</title><rect x="859.0" y="291.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="862.0" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.23%)</title><rect x="859.0" y="275.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="862.0" y="286.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.23%)</title><rect x="859.0" y="259.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="862.0" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.23%)</title><rect x="859.0" y="243.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="862.0" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.08%)</title><rect x="859.0" y="227.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="862.0" y="238.0"></text>
</g>
<g>
<title>ktime_get_with_offset (2 samples, 0.15%)</title><rect x="859.9" y="227.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="862.9" y="238.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.08%)</title><rect x="861.7" y="291.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="864.7" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (22 samples, 1.67%)</title><rect x="862.6" y="307.0" width="19.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="865.6" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (21 samples, 1.59%)</title><rect x="862.6" y="291.0" width="18.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="865.6" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (20 samples, 1.52%)</title><rect x="863.5" y="275.0" width="17.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="866.5" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (20 samples, 1.52%)</title><rect x="863.5" y="259.0" width="17.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="866.5" y="270.0"></text>
</g>
<g>
<title>net_rx_action (20 samples, 1.52%)</title><rect x="863.5" y="243.0" width="17.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="866.5" y="254.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.08%)</title><rect x="863.5" y="227.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="866.5" y="238.0"></text>
</g>
<g>
<title>process_backlog (19 samples, 1.44%)</title><rect x="864.4" y="227.0" width="17.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="867.4" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (18 samples, 1.36%)</title><rect x="865.3" y="211.0" width="16.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="868.3" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.08%)</title><rect x="865.3" y="195.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="868.3" y="206.0"></text>
</g>
<g>
<title>ip_rcv (17 samples, 1.29%)</title><rect x="866.1" y="195.0" width="15.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="869.1" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (15 samples, 1.14%)</title><rect x="867.0" y="179.0" width="13.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="870.0" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (15 samples, 1.14%)</title><rect x="867.0" y="163.0" width="13.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="870.0" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (15 samples, 1.14%)</title><rect x="867.0" y="147.0" width="13.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="870.0" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (15 samples, 1.14%)</title><rect x="867.0" y="131.0" width="13.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="870.0" y="142.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.15%)</title><rect x="867.9" y="115.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="870.9" y="126.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.08%)</title><rect x="867.9" y="99.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="870.9" y="110.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.08%)</title><rect x="868.8" y="99.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="871.8" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (12 samples, 0.91%)</title><rect x="869.7" y="115.0" width="10.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="872.7" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (12 samples, 0.91%)</title><rect x="869.7" y="99.0" width="10.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="872.7" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.38%)</title><rect x="870.6" y="83.0" width="4.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="873.6" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.30%)</title><rect x="871.5" y="67.0" width="3.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="874.5" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.30%)</title><rect x="871.5" y="51.0" width="3.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="874.5" y="62.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.45%)</title><rect x="875.1" y="83.0" width="5.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="878.1" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.08%)</title><rect x="876.0" y="67.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="879.0" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.08%)</title><rect x="876.0" y="51.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="879.0" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.15%)</title><rect x="876.9" y="67.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="879.9" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.08%)</title><rect x="877.8" y="51.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="880.8" y="62.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.08%)</title><rect x="878.7" y="67.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="881.7" y="78.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.08%)</title><rect x="879.6" y="67.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="882.6" y="78.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.08%)</title><rect x="880.5" y="179.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="883.5" y="190.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.08%)</title><rect x="881.4" y="291.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="884.4" y="302.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.08%)</title><rect x="882.3" y="355.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="885.3" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.15%)</title><rect x="883.1" y="371.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="886.1" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.15%)</title><rect x="883.1" y="355.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="886.1" y="366.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.15%)</title><rect x="883.1" y="339.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="886.1" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.08%)</title><rect x="884.0" y="323.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="887.0" y="334.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.23%)</title><rect x="884.9" y="403.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="887.9" y="414.0"></text>
</g>
<g>
<title>copyin (3 samples, 0.23%)</title><rect x="884.9" y="387.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="887.9" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.23%)</title><rect x="884.9" y="371.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="887.9" y="382.0"></text>
</g>
<g>
<title>sk_page_frag_refill (4 samples, 0.30%)</title><rect x="887.6" y="403.0" width="3.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="890.6" y="414.0"></text>
</g>
<g>
<title>skb_page_frag_refill (4 samples, 0.30%)</title><rect x="887.6" y="387.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="890.6" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.08%)</title><rect x="891.2" y="403.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="894.2" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.08%)</title><rect x="891.2" y="387.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="894.2" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.08%)</title><rect x="891.2" y="371.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="894.2" y="382.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.23%)</title><rect x="892.1" y="451.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="895.1" y="462.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.23%)</title><rect x="892.1" y="435.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="895.1" y="446.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.15%)</title><rect x="893.0" y="419.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="896.0" y="430.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.08%)</title><rect x="894.8" y="483.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="897.8" y="494.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.08%)</title><rect x="895.7" y="563.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="898.7" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.08%)</title><rect x="896.6" y="611.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="899.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/EntityRequestProcessor.preprocessRemote (3 samples, 0.23%)</title><rect x="897.5" y="643.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="900.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/RequestUtils.setRequestTimestamp (3 samples, 0.23%)</title><rect x="897.5" y="627.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="900.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1666612318.linkToTargetMethod (3 samples, 0.23%)</title><rect x="897.5" y="611.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="900.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1918994159.invoke (3 samples, 0.23%)</title><rect x="897.5" y="595.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="897.5" y="579.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="900.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.08%)</title><rect x="897.5" y="563.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="900.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.08%)</title><rect x="897.5" y="547.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="900.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/258977001.invokeStatic (2 samples, 0.15%)</title><rect x="898.4" y="579.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="901.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.15%)</title><rect x="898.4" y="563.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="901.4" y="574.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (2 samples, 0.15%)</title><rect x="898.4" y="547.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="901.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/GetEntityRequestProcessor.makeResponseForUser (3 samples, 0.23%)</title><rect x="900.1" y="643.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="903.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (2 samples, 0.15%)</title><rect x="900.1" y="627.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="903.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.15%)</title><rect x="900.1" y="611.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="903.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (2 samples, 0.15%)</title><rect x="900.1" y="595.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="903.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.15%)</title><rect x="900.1" y="579.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="903.1" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.15%)</title><rect x="900.1" y="563.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="903.1" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (2 samples, 0.15%)</title><rect x="900.1" y="547.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="903.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.15%)</title><rect x="900.1" y="531.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="903.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.08%)</title><rect x="900.1" y="515.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="903.1" y="526.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.08%)</title><rect x="900.1" y="499.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="903.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/GetEntityRequestProcessor$$Lambda$115/1397066461.apply (1 samples, 0.08%)</title><rect x="901.0" y="515.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="904.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (1 samples, 0.08%)</title><rect x="901.9" y="627.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="904.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (1 samples, 0.08%)</title><rect x="901.9" y="611.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="904.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.08%)</title><rect x="901.9" y="595.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="904.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.08%)</title><rect x="901.9" y="579.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="904.9" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.08%)</title><rect x="901.9" y="563.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="904.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.08%)</title><rect x="901.9" y="547.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="904.9" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (1 samples, 0.08%)</title><rect x="901.9" y="531.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="904.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (1 samples, 0.08%)</title><rect x="901.9" y="515.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="904.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/processor/entity/GetEntityRequestProcessor.processLocal (72 samples, 5.46%)</title><rect x="902.8" y="643.0" width="64.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="905.8" y="654.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.getRecord (68 samples, 5.16%)</title><rect x="906.4" y="627.0" width="60.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="909.4" y="638.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (67 samples, 5.08%)</title><rect x="906.4" y="611.0" width="59.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="909.4" y="622.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (67 samples, 5.08%)</title><rect x="906.4" y="595.0" width="59.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="909.4" y="606.0">org/ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (52 samples, 3.94%)</title><rect x="908.2" y="579.0" width="46.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="911.2" y="590.0">Java..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.08%)</title><rect x="909.1" y="563.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="912.1" y="574.0"></text>
</g>
<g>
<title>_init (1 samples, 0.08%)</title><rect x="910.0" y="563.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="913.0" y="574.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (3 samples, 0.23%)</title><rect x="910.9" y="563.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="913.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.08%)</title><rect x="913.6" y="563.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="916.6" y="574.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (43 samples, 3.26%)</title><rect x="914.5" y="563.0" width="38.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="917.5" y="574.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (39 samples, 2.96%)</title><rect x="915.4" y="547.0" width="34.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="918.4" y="558.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (39 samples, 2.96%)</title><rect x="915.4" y="531.0" width="34.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="918.4" y="542.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (39 samples, 2.96%)</title><rect x="915.4" y="515.0" width="34.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="918.4" y="526.0">ro..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.08%)</title><rect x="915.4" y="499.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="918.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (38 samples, 2.88%)</title><rect x="916.2" y="499.0" width="34.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="919.2" y="510.0">ro..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.08%)</title><rect x="918.0" y="483.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="921.0" y="494.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.08%)</title><rect x="918.9" y="483.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="921.9" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.08%)</title><rect x="919.8" y="483.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="922.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (2 samples, 0.15%)</title><rect x="920.7" y="483.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="923.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.08%)</title><rect x="921.6" y="467.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="924.6" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.08%)</title><rect x="921.6" y="451.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="924.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.08%)</title><rect x="922.5" y="483.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="925.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.08%)</title><rect x="923.4" y="483.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="926.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.08%)</title><rect x="923.4" y="467.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="926.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.08%)</title><rect x="923.4" y="451.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="926.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (28 samples, 2.12%)</title><rect x="924.3" y="483.0" width="25.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="927.3" y="494.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (25 samples, 1.90%)</title><rect x="926.1" y="467.0" width="22.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="929.1" y="478.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (1 samples, 0.08%)</title><rect x="927.0" y="451.0" width="0.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="930.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (22 samples, 1.67%)</title><rect x="927.9" y="451.0" width="19.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="930.9" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4475582942006977204.so (1 samples, 0.08%)</title><rect x="939.5" y="435.0" width="0.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="942.5" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.15%)</title><rect x="940.4" y="435.0" width="1.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="943.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.45%)</title><rect x="942.2" y="435.0" width="5.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="945.2" y="446.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.15%)</title><rect x="943.1" y="419.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="946.1" y="430.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.08%)</title><rect x="944.9" y="419.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="947.9" y="430.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (2 samples, 0.15%)</title><rect x="945.8" y="419.0" width="1.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="948.8" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.08%)</title><rect x="947.6" y="451.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="950.6" y="462.0"></text>
</g>
<g>
<title>_init (1 samples, 0.08%)</title><rect x="948.5" y="467.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="951.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.08%)</title><rect x="949.3" y="483.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="952.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (3 samples, 0.23%)</title><rect x="950.2" y="547.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="953.2" y="558.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.23%)</title><rect x="950.2" y="531.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="953.2" y="542.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.15%)</title><rect x="951.1" y="515.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="954.1" y="526.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.08%)</title><rect x="952.0" y="499.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="955.0" y="510.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.08%)</title><rect x="952.0" y="483.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="955.0" y="494.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.08%)</title><rect x="952.0" y="467.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="955.0" y="478.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.08%)</title><rect x="952.9" y="563.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="955.9" y="574.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.08%)</title><rect x="953.8" y="563.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="956.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.38%)</title><rect x="954.7" y="579.0" width="4.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="957.7" y="590.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (5 samples, 0.38%)</title><rect x="954.7" y="563.0" width="4.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="957.7" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="958.3" y="547.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="961.3" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="958.3" y="531.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="961.3" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="958.3" y="515.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="961.3" y="526.0"></text>
</g>
<g>
<title>__GI___libc_malloc (3 samples, 0.23%)</title><rect x="959.2" y="579.0" width="2.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="962.2" y="590.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (3 samples, 0.23%)</title><rect x="961.9" y="579.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="964.9" y="590.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.08%)</title><rect x="964.6" y="579.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="967.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.08%)</title><rect x="965.5" y="579.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="968.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (1 samples, 0.08%)</title><rect x="966.3" y="611.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="969.3" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.08%)</title><rect x="966.3" y="595.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="969.3" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.08%)</title><rect x="966.3" y="579.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="969.3" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="966.3" y="563.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="969.3" y="574.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineUpdate (1 samples, 0.08%)</title><rect x="967.2" y="643.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="970.2" y="654.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (248 samples, 18.80%)</title><rect x="968.1" y="739.0" width="221.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="971.1" y="750.0">one/nio/server/SelectorThread..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (49 samples, 3.71%)</title><rect x="970.8" y="723.0" width="43.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="973.8" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (42 samples, 3.18%)</title><rect x="977.1" y="707.0" width="37.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="980.1" y="718.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.08%)</title><rect x="982.4" y="691.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="985.4" y="702.0"></text>
</g>
<g>
<title>__clock_gettime (4 samples, 0.30%)</title><rect x="983.3" y="691.0" width="3.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="986.3" y="702.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.08%)</title><rect x="986.0" y="675.0" width="0.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="989.0" y="686.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.08%)</title><rect x="986.0" y="659.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="989.0" y="670.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.08%)</title><rect x="986.9" y="691.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="989.9" y="702.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.08%)</title><rect x="987.8" y="691.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="990.8" y="702.0"></text>
</g>
<g>
<title>epoll_wait (29 samples, 2.20%)</title><rect x="988.7" y="691.0" width="26.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="991.7" y="702.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 1.59%)</title><rect x="995.9" y="675.0" width="18.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="998.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 1.59%)</title><rect x="995.9" y="659.0" width="18.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="998.9" y="670.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (14 samples, 1.06%)</title><rect x="1000.3" y="643.0" width="12.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1003.3" y="654.0"></text>
</g>
<g>
<title>do_epoll_wait (13 samples, 0.99%)</title><rect x="1001.2" y="627.0" width="11.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1004.2" y="638.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.15%)</title><rect x="1002.1" y="611.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1005.1" y="622.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.15%)</title><rect x="1002.1" y="595.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1005.1" y="606.0"></text>
</g>
<g>
<title>ep_poll (10 samples, 0.76%)</title><rect x="1003.9" y="611.0" width="9.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1006.9" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (5 samples, 0.38%)</title><rect x="1005.7" y="595.0" width="4.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1008.7" y="606.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (1 samples, 0.08%)</title><rect x="1005.7" y="579.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1008.7" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.23%)</title><rect x="1006.6" y="579.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1009.6" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (3 samples, 0.23%)</title><rect x="1006.6" y="563.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1009.6" y="574.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.23%)</title><rect x="1006.6" y="547.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1009.6" y="558.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.15%)</title><rect x="1007.5" y="531.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1010.5" y="542.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.08%)</title><rect x="1009.3" y="579.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1012.3" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.23%)</title><rect x="1010.2" y="595.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1013.2" y="606.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.15%)</title><rect x="1011.1" y="579.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1014.1" y="590.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.08%)</title><rect x="1012.0" y="563.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1015.0" y="574.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.15%)</title><rect x="1012.9" y="643.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1015.9" y="654.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.15%)</title><rect x="1012.9" y="627.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1015.9" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (196 samples, 14.86%)</title><rect x="1014.7" y="723.0" width="175.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1017.7" y="734.0">one/nio/net/Session.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (195 samples, 14.78%)</title><rect x="1015.5" y="707.0" width="174.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1018.5" y="718.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (132 samples, 10.01%)</title><rect x="1015.5" y="691.0" width="118.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1018.5" y="702.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (119 samples, 9.02%)</title><rect x="1015.5" y="675.0" width="106.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1018.5" y="686.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (119 samples, 9.02%)</title><rect x="1015.5" y="659.0" width="106.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1018.5" y="670.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (117 samples, 8.87%)</title><rect x="1015.5" y="643.0" width="104.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1018.5" y="654.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.53%)</title><rect x="1015.5" y="627.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1018.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.08%)</title><rect x="1019.1" y="611.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1022.1" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.08%)</title><rect x="1019.1" y="595.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1022.1" y="606.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.08%)</title><rect x="1019.1" y="579.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1022.1" y="590.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.15%)</title><rect x="1020.0" y="611.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1023.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.08%)</title><rect x="1020.9" y="595.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1023.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.08%)</title><rect x="1020.9" y="579.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1023.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.08%)</title><rect x="1020.9" y="563.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1023.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.entity (110 samples, 8.34%)</title><rect x="1021.8" y="627.0" width="98.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1024.8" y="638.0">ru/mail/poli..</text>
</g>
<g>
<title>com/google/common/collect/RegularImmutableMap.get (1 samples, 0.08%)</title><rect x="1023.6" y="611.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1026.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/RegularImmutableMap.get (1 samples, 0.08%)</title><rect x="1023.6" y="595.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1026.6" y="606.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (87 samples, 6.60%)</title><rect x="1024.5" y="611.0" width="77.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1027.5" y="622.0">one/nio/s..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (87 samples, 6.60%)</title><rect x="1024.5" y="595.0" width="77.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1027.5" y="606.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (1 samples, 0.08%)</title><rect x="1024.5" y="579.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1027.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.08%)</title><rect x="1024.5" y="563.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1027.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.08%)</title><rect x="1024.5" y="547.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1027.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.08%)</title><rect x="1024.5" y="531.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1027.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1 samples, 0.08%)</title><rect x="1024.5" y="515.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1027.5" y="526.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (86 samples, 6.52%)</title><rect x="1025.4" y="579.0" width="76.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1028.4" y="590.0">one/nio/..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (86 samples, 6.52%)</title><rect x="1025.4" y="563.0" width="76.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1028.4" y="574.0">one/nio/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (86 samples, 6.52%)</title><rect x="1025.4" y="547.0" width="76.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1028.4" y="558.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (86 samples, 6.52%)</title><rect x="1025.4" y="531.0" width="76.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1028.4" y="542.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (86 samples, 6.52%)</title><rect x="1025.4" y="515.0" width="76.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1028.4" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (86 samples, 6.52%)</title><rect x="1025.4" y="499.0" width="76.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1028.4" y="510.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (81 samples, 6.14%)</title><rect x="1029.9" y="483.0" width="72.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1032.9" y="494.0">jdk/inte..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (2 samples, 0.15%)</title><rect x="1030.8" y="467.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1033.8" y="478.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.08%)</title><rect x="1032.5" y="467.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1035.5" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark (12 samples, 0.91%)</title><rect x="1033.4" y="467.0" width="10.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1036.4" y="478.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.15%)</title><rect x="1034.3" y="451.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1037.3" y="462.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.08%)</title><rect x="1036.1" y="451.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1039.1" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.08%)</title><rect x="1037.0" y="451.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1040.0" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.15%)</title><rect x="1037.9" y="451.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1040.9" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.08%)</title><rect x="1039.7" y="451.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1042.7" y="462.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (3 samples, 0.23%)</title><rect x="1040.6" y="451.0" width="2.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1043.6" y="462.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.08%)</title><rect x="1043.3" y="451.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1046.3" y="462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1044.2" y="467.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1047.2" y="478.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.08%)</title><rect x="1044.2" y="451.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1047.2" y="462.0"></text>
</g>
<g>
<title>__pthread_cond_signal (64 samples, 4.85%)</title><rect x="1045.1" y="467.0" width="57.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1048.1" y="478.0">__pthr..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (61 samples, 4.62%)</title><rect x="1047.8" y="451.0" width="54.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1050.8" y="462.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (61 samples, 4.62%)</title><rect x="1047.8" y="435.0" width="54.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1050.8" y="446.0">do_sy..</text>
</g>
<g>
<title>__se_sys_futex (55 samples, 4.17%)</title><rect x="1051.3" y="419.0" width="49.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1054.3" y="430.0">__se_..</text>
</g>
<g>
<title>do_futex (53 samples, 4.02%)</title><rect x="1053.1" y="403.0" width="47.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1056.1" y="414.0">do_f..</text>
</g>
<g>
<title>futex_wake (53 samples, 4.02%)</title><rect x="1053.1" y="387.0" width="47.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1056.1" y="398.0">fute..</text>
</g>
<g>
<title>hash_futex (1 samples, 0.08%)</title><rect x="1054.0" y="371.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1057.0" y="382.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.15%)</title><rect x="1054.9" y="371.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1057.9" y="382.0"></text>
</g>
<g>
<title>wake_up_q (49 samples, 3.71%)</title><rect x="1056.7" y="371.0" width="43.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1059.7" y="382.0">wake..</text>
</g>
<g>
<title>try_to_wake_up (49 samples, 3.71%)</title><rect x="1056.7" y="355.0" width="43.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1059.7" y="366.0">try_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (49 samples, 3.71%)</title><rect x="1056.7" y="339.0" width="43.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1059.7" y="350.0">_raw..</text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.08%)</title><rect x="1100.5" y="419.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1103.5" y="430.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.08%)</title><rect x="1101.4" y="419.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1104.4" y="430.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.08%)</title><rect x="1101.4" y="403.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1104.4" y="414.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.08%)</title><rect x="1101.4" y="387.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1104.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.parseEntityArguments (20 samples, 1.52%)</title><rect x="1102.3" y="611.0" width="17.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1105.3" y="622.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (7 samples, 0.53%)</title><rect x="1107.7" y="595.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1110.7" y="606.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (5 samples, 0.38%)</title><rect x="1109.5" y="579.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1112.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1111.3" y="563.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1114.3" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.08%)</title><rect x="1111.3" y="547.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1114.3" y="558.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (2 samples, 0.15%)</title><rect x="1112.2" y="563.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1115.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.15%)</title><rect x="1112.2" y="547.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1115.2" y="558.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (1 samples, 0.08%)</title><rect x="1114.0" y="595.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1117.0" y="606.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (1 samples, 0.08%)</title><rect x="1114.0" y="579.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1117.0" y="590.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.reset (1 samples, 0.08%)</title><rect x="1114.0" y="563.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1117.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ClusterNodeRouter.getNodesAmount (3 samples, 0.23%)</title><rect x="1114.9" y="595.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1117.9" y="606.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.15%)</title><rect x="1115.7" y="579.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1118.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/request/RequestUtils.isRequestFromService (3 samples, 0.23%)</title><rect x="1117.5" y="595.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1120.5" y="606.0"></text>
</g>
<g>
<title>java/lang/Boolean.parseBoolean (3 samples, 0.23%)</title><rect x="1117.5" y="579.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1120.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.23%)</title><rect x="1117.5" y="563.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1120.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.23%)</title><rect x="1117.5" y="547.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1120.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.23%)</title><rect x="1117.5" y="531.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1120.5" y="542.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.08%)</title><rect x="1119.3" y="515.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.3" y="526.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.08%)</title><rect x="1119.3" y="499.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1122.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.15%)</title><rect x="1120.2" y="643.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1123.2" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.15%)</title><rect x="1120.2" y="627.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1123.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.68%)</title><rect x="1122.0" y="675.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1125.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.30%)</title><rect x="1122.0" y="659.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1125.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.15%)</title><rect x="1123.8" y="643.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1126.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.15%)</title><rect x="1123.8" y="627.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1126.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.08%)</title><rect x="1124.7" y="611.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1127.7" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.23%)</title><rect x="1125.6" y="659.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1128.6" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.23%)</title><rect x="1125.6" y="643.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1128.6" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.15%)</title><rect x="1128.3" y="659.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1131.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.15%)</title><rect x="1130.1" y="675.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1133.1" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.08%)</title><rect x="1131.0" y="659.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1134.0" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.08%)</title><rect x="1131.0" y="643.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1134.0" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.08%)</title><rect x="1131.0" y="627.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1134.0" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.08%)</title><rect x="1131.0" y="611.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1134.0" y="622.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (1 samples, 0.08%)</title><rect x="1131.0" y="595.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1134.0" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.15%)</title><rect x="1131.8" y="675.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1134.8" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.15%)</title><rect x="1131.8" y="659.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1134.8" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (63 samples, 4.78%)</title><rect x="1133.6" y="691.0" width="56.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1136.6" y="702.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (59 samples, 4.47%)</title><rect x="1136.3" y="675.0" width="52.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1139.3" y="686.0">one/n..</text>
</g>
<g>
<title>[unknown] (11 samples, 0.83%)</title><rect x="1137.2" y="659.0" width="9.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1140.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.83%)</title><rect x="1137.2" y="643.0" width="9.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1140.2" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (8 samples, 0.61%)</title><rect x="1137.2" y="627.0" width="7.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1140.2" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.08%)</title><rect x="1138.1" y="611.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1141.1" y="622.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (3 samples, 0.23%)</title><rect x="1139.0" y="611.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1142.0" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.23%)</title><rect x="1141.7" y="611.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1144.7" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.08%)</title><rect x="1143.5" y="595.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1146.5" y="606.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.15%)</title><rect x="1144.4" y="627.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1147.4" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.08%)</title><rect x="1146.2" y="627.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1149.2" y="638.0"></text>
</g>
<g>
<title>recv (47 samples, 3.56%)</title><rect x="1147.1" y="659.0" width="42.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1150.1" y="670.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 3.41%)</title><rect x="1148.8" y="643.0" width="40.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1151.8" y="654.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (45 samples, 3.41%)</title><rect x="1148.8" y="627.0" width="40.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1151.8" y="638.0">do_..</text>
</g>
<g>
<title>__x64_sys_recvfrom (40 samples, 3.03%)</title><rect x="1152.4" y="611.0" width="35.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1155.4" y="622.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (38 samples, 2.88%)</title><rect x="1154.2" y="595.0" width="34.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1157.2" y="606.0">__..</text>
</g>
<g>
<title>import_single_range (1 samples, 0.08%)</title><rect x="1155.1" y="579.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1158.1" y="590.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.08%)</title><rect x="1155.1" y="563.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1158.1" y="574.0"></text>
</g>
<g>
<title>inet6_recvmsg (31 samples, 2.35%)</title><rect x="1156.0" y="579.0" width="27.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1159.0" y="590.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (31 samples, 2.35%)</title><rect x="1156.0" y="563.0" width="27.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1159.0" y="574.0">t..</text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.38%)</title><rect x="1158.7" y="547.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1161.7" y="558.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.38%)</title><rect x="1158.7" y="531.0" width="4.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1161.7" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (5 samples, 0.38%)</title><rect x="1158.7" y="515.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1161.7" y="526.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.23%)</title><rect x="1158.7" y="499.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1161.7" y="510.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.15%)</title><rect x="1161.4" y="499.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1164.4" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.08%)</title><rect x="1163.2" y="547.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1166.2" y="558.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.08%)</title><rect x="1164.1" y="547.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1167.1" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.08%)</title><rect x="1164.1" y="531.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1167.1" y="542.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.08%)</title><rect x="1164.1" y="515.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1167.1" y="526.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (13 samples, 0.99%)</title><rect x="1165.0" y="547.0" width="11.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1168.0" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (13 samples, 0.99%)</title><rect x="1165.0" y="531.0" width="11.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1168.0" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.08%)</title><rect x="1169.4" y="515.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1172.4" y="526.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.08%)</title><rect x="1169.4" y="499.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1172.4" y="510.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.08%)</title><rect x="1169.4" y="483.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1172.4" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.53%)</title><rect x="1170.3" y="515.0" width="6.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1173.3" y="526.0"></text>
</g>
<g>
<title>__check_object_size (6 samples, 0.45%)</title><rect x="1171.2" y="499.0" width="5.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1174.2" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.30%)</title><rect x="1173.0" y="483.0" width="3.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1176.0" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.23%)</title><rect x="1176.6" y="547.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1179.6" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.15%)</title><rect x="1179.3" y="547.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1182.3" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.08%)</title><rect x="1180.2" y="531.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1183.2" y="542.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (3 samples, 0.23%)</title><rect x="1181.1" y="547.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1184.1" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.38%)</title><rect x="1183.7" y="579.0" width="4.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1186.7" y="590.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.38%)</title><rect x="1183.7" y="563.0" width="4.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1186.7" y="574.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.30%)</title><rect x="1184.6" y="547.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1187.6" y="558.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.08%)</title><rect x="1188.2" y="611.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1191.2" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.08%)</title><rect x="1189.1" y="675.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.1" y="686.0"></text>
</g>
</g>
</svg>
