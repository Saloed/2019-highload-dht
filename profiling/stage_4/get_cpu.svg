<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="773"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="773"> </text>
<g id="frames">
<g>
<title>all (3,175 samples, 100.00%)</title><rect x="10.0" y="739.0" width="1180.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="13.0" y="750.0">all</text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.03%)</title><rect x="10.0" y="723.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="10.4" y="723.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.4" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (22 samples, 0.69%)</title><rect x="10.7" y="723.0" width="8.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.7" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.06%)</title><rect x="11.1" y="707.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.1" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.06%)</title><rect x="11.1" y="691.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="14.1" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.06%)</title><rect x="11.1" y="675.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.1" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="11.1" y="659.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="14.1" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="11.1" y="643.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.1" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.03%)</title><rect x="11.5" y="659.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="14.5" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (19 samples, 0.60%)</title><rect x="11.9" y="707.0" width="7.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="14.9" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (18 samples, 0.57%)</title><rect x="11.9" y="691.0" width="6.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.9" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (18 samples, 0.57%)</title><rect x="11.9" y="675.0" width="6.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="14.9" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (3 samples, 0.09%)</title><rect x="12.2" y="659.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.2" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.06%)</title><rect x="12.2" y="643.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="15.2" y="654.0"></text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 0.03%)</title><rect x="12.6" y="627.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.6" y="638.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit_prologue() (1 samples, 0.03%)</title><rect x="12.6" y="611.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="15.6" y="622.0"></text>
</g>
<g>
<title>VM_GC_Operation::doit_prologue() (1 samples, 0.03%)</title><rect x="12.6" y="595.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.6" y="606.0"></text>
</g>
<g>
<title>Monitor::lock() (1 samples, 0.03%)</title><rect x="12.6" y="579.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.6" y="590.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.03%)</title><rect x="13.0" y="643.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="16.0" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (8 samples, 0.25%)</title><rect x="13.3" y="659.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="16.3" y="670.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.03%)</title><rect x="13.3" y="643.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="16.3" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (3 samples, 0.09%)</title><rect x="13.7" y="643.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="16.7" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.06%)</title><rect x="14.1" y="627.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="17.1" y="638.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (2 samples, 0.06%)</title><rect x="14.1" y="611.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="17.1" y="622.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (2 samples, 0.06%)</title><rect x="14.1" y="595.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="17.1" y="606.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (2 samples, 0.06%)</title><rect x="14.1" y="579.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.1" y="590.0"></text>
</g>
<g>
<title>G1Analytics::predict_card_num(unsigned long, bool) const (1 samples, 0.03%)</title><rect x="14.1" y="563.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="17.1" y="574.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.03%)</title><rect x="14.5" y="563.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.5" y="574.0"></text>
</g>
<g>
<title>G1Policy::predict_yg_surv_rate(int, SurvRateGroup*) const (1 samples, 0.03%)</title><rect x="14.5" y="547.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="17.5" y="558.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (4 samples, 0.13%)</title><rect x="14.8" y="643.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="17.8" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.03%)</title><rect x="15.2" y="627.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="18.2" y="638.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="15.2" y="611.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="18.2" y="622.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (2 samples, 0.06%)</title><rect x="15.6" y="627.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="18.6" y="638.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.09%)</title><rect x="16.3" y="659.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="19.3" y="670.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.03%)</title><rect x="17.4" y="659.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="20.4" y="670.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.03%)</title><rect x="17.8" y="659.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="20.8" y="670.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.03%)</title><rect x="18.2" y="659.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="21.2" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="18.5" y="691.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="21.5" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.13%)</title><rect x="18.9" y="723.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="21.9" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.13%)</title><rect x="18.9" y="707.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="21.9" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.13%)</title><rect x="18.9" y="691.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="21.9" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.13%)</title><rect x="18.9" y="675.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="21.9" y="686.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (2 samples, 0.06%)</title><rect x="18.9" y="659.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="21.9" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.06%)</title><rect x="19.7" y="659.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="22.7" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="19.7" y="643.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="22.7" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.06%)</title><rect x="19.7" y="627.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="22.7" y="638.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.03%)</title><rect x="19.7" y="611.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="22.7" y="622.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.03%)</title><rect x="19.7" y="595.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="22.7" y="606.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_region(unsigned long, bool, bool) (1 samples, 0.03%)</title><rect x="19.7" y="579.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="22.7" y="590.0"></text>
</g>
<g>
<title>MasterFreeRegionListMtSafeChecker::check() (1 samples, 0.03%)</title><rect x="19.7" y="563.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="22.7" y="574.0"></text>
</g>
<g>
<title>Monitor::owned_by_self() const (1 samples, 0.03%)</title><rect x="19.7" y="547.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="22.7" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.03%)</title><rect x="19.7" y="531.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="22.7" y="542.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.03%)</title><rect x="20.0" y="611.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="23.0" y="622.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.03%)</title><rect x="20.0" y="595.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="23.0" y="606.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.03%)</title><rect x="20.0" y="579.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="23.0" y="590.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.03%)</title><rect x="20.0" y="563.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="23.0" y="574.0"></text>
</g>
<g>
<title>G1Analytics::predict_rs_scan_time_ms(unsigned long, bool) const (1 samples, 0.03%)</title><rect x="20.0" y="547.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="23.0" y="558.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.16%)</title><rect x="20.4" y="723.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="23.4" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.16%)</title><rect x="20.4" y="707.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="23.4" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.16%)</title><rect x="20.4" y="691.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="23.4" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.13%)</title><rect x="20.4" y="675.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="23.4" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.09%)</title><rect x="20.4" y="659.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="23.4" y="670.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.03%)</title><rect x="20.8" y="643.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="23.8" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="21.1" y="643.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="24.1" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="21.1" y="627.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="24.1" y="638.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.03%)</title><rect x="21.1" y="611.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="24.1" y="622.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.03%)</title><rect x="21.1" y="595.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="24.1" y="606.0"></text>
</g>
<g>
<title>OtherRegionsTable::clear_fcc() (1 samples, 0.03%)</title><rect x="21.1" y="579.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="24.1" y="590.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.03%)</title><rect x="21.5" y="659.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="24.5" y="670.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="21.9" y="675.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="24.9" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.22%)</title><rect x="22.3" y="723.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="25.3" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="22.3" y="707.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="25.3" y="718.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.19%)</title><rect x="22.6" y="707.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="25.6" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="22.6" y="691.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="25.6" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (1 samples, 0.03%)</title><rect x="22.6" y="675.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="25.6" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (5 samples, 0.16%)</title><rect x="23.0" y="691.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="26.0" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (4 samples, 0.13%)</title><rect x="23.4" y="675.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="26.4" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (3 samples, 0.09%)</title><rect x="23.4" y="659.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="26.4" y="670.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.03%)</title><rect x="24.5" y="659.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="27.5" y="670.0"></text>
</g>
<g>
<title>[not_walkable] (1 samples, 0.03%)</title><rect x="24.9" y="723.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="27.9" y="734.0"></text>
</g>
<g>
<title>[not_walkable_Java] (61 samples, 1.92%)</title><rect x="25.2" y="723.0" width="22.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="28.2" y="734.0">[..</text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.03%)</title><rect x="25.2" y="707.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="28.2" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.06%)</title><rect x="25.6" y="707.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="28.6" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.03%)</title><rect x="25.6" y="691.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="28.6" y="702.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.03%)</title><rect x="25.6" y="675.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="28.6" y="686.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.03%)</title><rect x="25.6" y="659.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="28.6" y="670.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="26.0" y="691.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="29.0" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="26.4" y="707.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="29.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="26.7" y="707.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="29.7" y="718.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.03%)</title><rect x="26.7" y="691.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="29.7" y="702.0"></text>
</g>
<g>
<title>__clock_gettime (56 samples, 1.76%)</title><rect x="27.1" y="707.0" width="20.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="30.1" y="718.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.06%)</title><rect x="27.1" y="691.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="30.1" y="702.0"></text>
</g>
<g>
<title>clock_gettime (54 samples, 1.70%)</title><rect x="27.8" y="691.0" width="20.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="30.8" y="702.0"></text>
</g>
<g>
<title>[vdso] (44 samples, 1.39%)</title><rect x="31.6" y="675.0" width="16.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="34.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="47.9" y="723.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="50.9" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.06%)</title><rect x="47.9" y="707.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="50.9" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="47.9" y="691.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="50.9" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.06%)</title><rect x="47.9" y="675.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="50.9" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="48.3" y="659.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="51.3" y="670.0"></text>
</g>
<g>
<title>[unknown_Java] (62 samples, 1.95%)</title><rect x="48.7" y="723.0" width="23.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="51.7" y="734.0">[..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="66.5" y="707.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="69.5" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.06%)</title><rect x="66.5" y="691.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="69.5" y="702.0"></text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.16%)</title><rect x="67.2" y="707.0" width="1.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="70.2" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.13%)</title><rect x="69.1" y="707.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="72.1" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.09%)</title><rect x="69.5" y="691.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="72.5" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.09%)</title><rect x="69.5" y="675.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="72.5" y="686.0"></text>
</g>
<g>
<title>__se_sys_futex (2 samples, 0.06%)</title><rect x="69.8" y="659.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="72.8" y="670.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.06%)</title><rect x="69.8" y="643.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="72.8" y="654.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.06%)</title><rect x="69.8" y="627.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="72.8" y="638.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.06%)</title><rect x="69.8" y="611.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="72.8" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.06%)</title><rect x="69.8" y="595.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="72.8" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.06%)</title><rect x="69.8" y="579.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="72.8" y="590.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="70.6" y="707.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="73.6" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.06%)</title><rect x="71.0" y="707.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="74.0" y="718.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,993 samples, 62.77%)</title><rect x="71.7" y="723.0" width="740.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.7" y="734.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,993 samples, 62.77%)</title><rect x="71.7" y="707.0" width="740.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="74.7" y="718.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,993 samples, 62.77%)</title><rect x="71.7" y="691.0" width="740.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.7" y="702.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (8 samples, 0.25%)</title><rect x="73.9" y="675.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.25%)</title><rect x="73.9" y="659.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="76.9" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="76.5" y="643.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="79.5" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="76.5" y="627.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="79.5" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="76.5" y="611.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="79.5" y="622.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="76.5" y="595.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="79.5" y="606.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="76.5" y="579.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="79.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (238 samples, 7.50%)</title><rect x="76.9" y="675.0" width="88.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.9" y="686.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (238 samples, 7.50%)</title><rect x="76.9" y="659.0" width="88.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.9" y="670.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (234 samples, 7.37%)</title><rect x="78.4" y="643.0" width="87.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="81.4" y="654.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (54 samples, 1.70%)</title><rect x="79.5" y="627.0" width="20.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (54 samples, 1.70%)</title><rect x="79.5" y="611.0" width="20.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.5" y="622.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.06%)</title><rect x="83.6" y="595.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="86.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (40 samples, 1.26%)</title><rect x="84.3" y="595.0" width="14.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.3" y="606.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="84.3" y="579.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="87.3" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="84.7" y="579.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="87.7" y="590.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.06%)</title><rect x="85.1" y="579.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="88.1" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="85.4" y="563.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="88.4" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (36 samples, 1.13%)</title><rect x="85.8" y="579.0" width="13.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="88.8" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 1.13%)</title><rect x="85.8" y="563.0" width="13.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="88.8" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 1.13%)</title><rect x="85.8" y="547.0" width="13.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="88.8" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (34 samples, 1.07%)</title><rect x="86.2" y="531.0" width="12.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="89.2" y="542.0"></text>
</g>
<g>
<title>do_futex (33 samples, 1.04%)</title><rect x="86.6" y="515.0" width="12.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="89.6" y="526.0"></text>
</g>
<g>
<title>futex_wake (32 samples, 1.01%)</title><rect x="86.9" y="499.0" width="11.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="89.9" y="510.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.06%)</title><rect x="87.7" y="483.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="90.7" y="494.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="88.4" y="483.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="91.4" y="494.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.03%)</title><rect x="88.4" y="467.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="91.4" y="478.0"></text>
</g>
<g>
<title>wake_up_q (27 samples, 0.85%)</title><rect x="88.8" y="483.0" width="10.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="91.8" y="494.0"></text>
</g>
<g>
<title>try_to_wake_up (27 samples, 0.85%)</title><rect x="88.8" y="467.0" width="10.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="91.8" y="478.0"></text>
</g>
<g>
<title>___preempt_schedule (1 samples, 0.03%)</title><rect x="88.8" y="451.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="91.8" y="462.0"></text>
</g>
<g>
<title>preempt_schedule_common (1 samples, 0.03%)</title><rect x="88.8" y="435.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="91.8" y="446.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="88.8" y="419.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="91.8" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="89.2" y="451.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="92.2" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (25 samples, 0.79%)</title><rect x="89.5" y="451.0" width="9.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="92.5" y="462.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="98.8" y="531.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="101.8" y="542.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="99.2" y="595.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="102.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (177 samples, 5.57%)</title><rect x="99.6" y="627.0" width="65.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.6" y="638.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (170 samples, 5.35%)</title><rect x="102.2" y="611.0" width="63.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.2" y="622.0">java/ut..</text>
</g>
<g>
<title>__clock_gettime (9 samples, 0.28%)</title><rect x="111.1" y="595.0" width="3.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="114.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (133 samples, 4.19%)</title><rect x="114.4" y="595.0" width="49.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.4" y="606.0">jdk/i..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.09%)</title><rect x="115.9" y="579.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="118.9" y="590.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="117.0" y="579.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="120.0" y="590.0"></text>
</g>
<g>
<title>Unsafe_Park (44 samples, 1.39%)</title><rect x="117.4" y="579.0" width="16.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="120.4" y="590.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.09%)</title><rect x="119.3" y="563.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="122.3" y="574.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (13 samples, 0.41%)</title><rect x="120.4" y="563.0" width="4.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="123.4" y="574.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.09%)</title><rect x="121.9" y="547.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="124.9" y="558.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.06%)</title><rect x="123.0" y="547.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="126.0" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.06%)</title><rect x="123.7" y="547.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="126.7" y="558.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.06%)</title><rect x="124.5" y="547.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="127.5" y="558.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.06%)</title><rect x="125.2" y="563.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="128.2" y="574.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="126.0" y="563.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="129.0" y="574.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (5 samples, 0.16%)</title><rect x="126.3" y="563.0" width="1.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="129.3" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.03%)</title><rect x="128.2" y="563.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="131.2" y="574.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (6 samples, 0.19%)</title><rect x="128.6" y="563.0" width="2.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="131.6" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.16%)</title><rect x="128.9" y="547.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="131.9" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.16%)</title><rect x="128.9" y="531.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="131.9" y="542.0"></text>
</g>
<g>
<title>__se_sys_futex (2 samples, 0.06%)</title><rect x="129.3" y="515.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="132.3" y="526.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.06%)</title><rect x="129.3" y="499.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="132.3" y="510.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.06%)</title><rect x="129.3" y="483.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="132.3" y="494.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="129.7" y="467.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="132.7" y="478.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.06%)</title><rect x="130.0" y="515.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="133.0" y="526.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="130.0" y="499.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="133.0" y="510.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="130.4" y="499.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="133.4" y="510.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="130.4" y="483.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="133.4" y="494.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="130.4" y="467.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="133.4" y="478.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="130.4" y="451.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="133.4" y="462.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="130.4" y="435.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="133.4" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="130.4" y="419.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="133.4" y="430.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (3 samples, 0.09%)</title><rect x="130.8" y="563.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="133.8" y="574.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.06%)</title><rect x="131.9" y="563.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="134.9" y="574.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="132.6" y="563.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="135.6" y="574.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.06%)</title><rect x="133.0" y="563.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="136.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 2.43%)</title><rect x="133.8" y="579.0" width="28.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="136.8" y="590.0">[u..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (3 samples, 0.09%)</title><rect x="133.8" y="563.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="136.8" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (72 samples, 2.27%)</title><rect x="134.9" y="563.0" width="26.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="137.9" y="574.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (69 samples, 2.17%)</title><rect x="136.0" y="547.0" width="25.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="139.0" y="558.0">e..</text>
</g>
<g>
<title>do_syscall_64 (69 samples, 2.17%)</title><rect x="136.0" y="531.0" width="25.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="139.0" y="542.0">d..</text>
</g>
<g>
<title>__se_sys_futex (52 samples, 1.64%)</title><rect x="140.1" y="515.0" width="19.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="143.1" y="526.0"></text>
</g>
<g>
<title>do_futex (43 samples, 1.35%)</title><rect x="140.8" y="499.0" width="16.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="143.8" y="510.0"></text>
</g>
<g>
<title>futex_wait (42 samples, 1.32%)</title><rect x="141.2" y="483.0" width="15.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="144.2" y="494.0"></text>
</g>
<g>
<title>futex_wait_queue_me (32 samples, 1.01%)</title><rect x="141.6" y="467.0" width="11.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="144.6" y="478.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (21 samples, 0.66%)</title><rect x="142.3" y="451.0" width="7.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="145.3" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (18 samples, 0.57%)</title><rect x="142.3" y="435.0" width="6.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="145.3" y="446.0"></text>
</g>
<g>
<title>lock_hrtimer_base.isra.0 (3 samples, 0.09%)</title><rect x="149.0" y="435.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="152.0" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="149.7" y="419.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="152.7" y="430.0"></text>
</g>
<g>
<title>plist_add (3 samples, 0.09%)</title><rect x="150.1" y="451.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="153.1" y="462.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.19%)</title><rect x="151.2" y="451.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="154.2" y="462.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.09%)</title><rect x="152.3" y="435.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="155.3" y="446.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="152.7" y="419.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="155.7" y="430.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="152.7" y="403.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="155.7" y="414.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="152.7" y="387.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="155.7" y="398.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="152.7" y="371.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="155.7" y="382.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="152.7" y="355.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="155.7" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="152.7" y="339.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="155.7" y="350.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="153.1" y="419.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="156.1" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.03%)</title><rect x="153.1" y="403.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="156.1" y="414.0"></text>
</g>
<g>
<title>futex_wait_setup (6 samples, 0.19%)</title><rect x="153.5" y="467.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="156.5" y="478.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.03%)</title><rect x="154.9" y="451.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="157.9" y="462.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="155.3" y="451.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="158.3" y="462.0"></text>
</g>
<g>
<title>hrtimer_cancel (1 samples, 0.03%)</title><rect x="155.7" y="467.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="158.7" y="478.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (1 samples, 0.03%)</title><rect x="155.7" y="451.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="158.7" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="155.7" y="435.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="158.7" y="446.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.03%)</title><rect x="156.1" y="467.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="159.1" y="478.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (1 samples, 0.03%)</title><rect x="156.4" y="467.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="159.4" y="478.0"></text>
</g>
<g>
<title>get_timespec64 (7 samples, 0.22%)</title><rect x="156.8" y="499.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="159.8" y="510.0"></text>
</g>
<g>
<title>_copy_from_user (6 samples, 0.19%)</title><rect x="157.2" y="483.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="160.2" y="494.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.09%)</title><rect x="158.3" y="467.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="161.3" y="478.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.06%)</title><rect x="159.4" y="515.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="162.4" y="526.0"></text>
</g>
<g>
<title>syscall_trace_enter (4 samples, 0.13%)</title><rect x="160.1" y="515.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="163.1" y="526.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.06%)</title><rect x="160.9" y="499.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="163.9" y="510.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.03%)</title><rect x="161.6" y="563.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="164.6" y="574.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.03%)</title><rect x="162.0" y="563.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="165.0" y="574.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.09%)</title><rect x="162.4" y="579.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="165.4" y="590.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="162.4" y="563.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="165.4" y="574.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.06%)</title><rect x="162.7" y="563.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="165.7" y="574.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.06%)</title><rect x="162.7" y="547.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="165.7" y="558.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="163.5" y="579.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="166.5" y="590.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (3 samples, 0.09%)</title><rect x="163.9" y="595.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="166.9" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="165.0" y="595.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="168.0" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="165.0" y="579.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="168.0" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="165.0" y="563.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="168.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$70/1080066129.run (1,740 samples, 54.80%)</title><rect x="165.4" y="675.0" width="646.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.4" y="686.0">ru/mail/polis/service/saloed/ServiceImpl$$Lambda$70/1080066129.run</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$3 (1,739 samples, 54.77%)</title><rect x="165.7" y="659.0" width="646.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="168.7" y="670.0">ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$3</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/EntityRequestProcessor.makeUserResponse (3 samples, 0.09%)</title><rect x="167.2" y="643.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="170.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RecordWithTimestamp.fromBytes (2 samples, 0.06%)</title><rect x="167.2" y="627.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="170.2" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="167.6" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="170.6" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="167.6" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.6" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="167.6" y="579.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="170.6" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="167.6" y="563.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="170.6" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="167.6" y="547.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.6" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="167.6" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="170.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/EntityRequestProcessor.responseForUserGet (1 samples, 0.03%)</title><rect x="168.0" y="627.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="171.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArray (1 samples, 0.03%)</title><rect x="168.0" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="171.0" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="168.0" y="595.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.0" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="168.0" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="171.0" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="168.0" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="171.0" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="168.0" y="547.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="171.0" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="168.0" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="171.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/EntityRequestProcessor.processForService (272 samples, 8.57%)</title><rect x="168.3" y="643.0" width="101.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="171.3" y="654.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/EntityRequestProcessor.process (272 samples, 8.57%)</title><rect x="168.3" y="627.0" width="101.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="171.3" y="638.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.09%)</title><rect x="168.3" y="611.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="171.3" y="622.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="169.1" y="595.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="172.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RecordWithTimestamp.toRawBytes (1 samples, 0.03%)</title><rect x="169.4" y="611.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.4" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="169.4" y="595.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="172.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.getRecord (244 samples, 7.69%)</title><rect x="169.8" y="611.0" width="90.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="172.8" y="622.0">ru/mail/po..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (238 samples, 7.50%)</title><rect x="169.8" y="595.0" width="88.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.8" y="606.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (238 samples, 7.50%)</title><rect x="169.8" y="579.0" width="88.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="172.8" y="590.0">org/rocksd..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (208 samples, 6.55%)</title><rect x="170.2" y="563.0" width="77.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="173.2" y="574.0">Java_org_..</text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (4 samples, 0.13%)</title><rect x="170.9" y="547.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="173.9" y="558.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.03%)</title><rect x="172.4" y="547.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="175.4" y="558.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.03%)</title><rect x="172.8" y="547.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="175.8" y="558.0"></text>
</g>
<g>
<title>_init (2 samples, 0.06%)</title><rect x="173.2" y="547.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="176.2" y="558.0"></text>
</g>
<g>
<title>_int_free (3 samples, 0.09%)</title><rect x="173.9" y="547.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="176.9" y="558.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.09%)</title><rect x="175.0" y="547.0" width="1.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="178.0" y="558.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.03%)</title><rect x="176.1" y="547.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="179.1" y="558.0"></text>
</g>
<g>
<title>operator new(unsigned long) (6 samples, 0.19%)</title><rect x="176.5" y="547.0" width="2.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="179.5" y="558.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (3 samples, 0.09%)</title><rect x="178.7" y="547.0" width="1.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="181.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.03%)</title><rect x="179.8" y="547.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="182.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.06%)</title><rect x="180.2" y="547.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="183.2" y="558.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (175 samples, 5.51%)</title><rect x="181.0" y="547.0" width="65.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="184.0" y="558.0">rocksdb..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.06%)</title><rect x="182.4" y="531.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="185.4" y="542.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.03%)</title><rect x="183.2" y="531.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="186.2" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.03%)</title><rect x="183.6" y="531.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="186.6" y="542.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="183.9" y="531.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="186.9" y="542.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (6 samples, 0.19%)</title><rect x="184.3" y="531.0" width="2.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="187.3" y="542.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.03%)</title><rect x="184.7" y="515.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="187.7" y="526.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.06%)</title><rect x="185.0" y="515.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="188.0" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.06%)</title><rect x="185.8" y="515.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="188.8" y="526.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.09%)</title><rect x="186.5" y="531.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="189.5" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (3 samples, 0.09%)</title><rect x="186.5" y="515.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="189.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (134 samples, 4.22%)</title><rect x="187.7" y="531.0" width="49.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="190.7" y="542.0">rocks..</text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="187.7" y="515.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="190.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (133 samples, 4.19%)</title><rect x="188.0" y="515.0" width="49.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="191.0" y="526.0">rocks..</text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="188.0" y="499.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="191.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (131 samples, 4.13%)</title><rect x="188.4" y="499.0" width="48.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="191.4" y="510.0">rock..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="188.4" y="483.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="191.4" y="494.0"></text>
</g>
<g>
<title>_init (2 samples, 0.06%)</title><rect x="188.8" y="483.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="191.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (2 samples, 0.06%)</title><rect x="189.5" y="483.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="192.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (124 samples, 3.91%)</title><rect x="190.3" y="483.0" width="46.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="193.3" y="494.0">rock..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.09%)</title><rect x="192.5" y="467.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="195.5" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.03%)</title><rect x="193.2" y="451.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="196.2" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.09%)</title><rect x="193.6" y="467.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="196.6" y="478.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="194.7" y="467.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="197.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (13 samples, 0.41%)</title><rect x="195.1" y="467.0" width="4.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="198.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.06%)</title><rect x="195.5" y="451.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="198.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (2 samples, 0.06%)</title><rect x="196.2" y="451.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="199.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (6 samples, 0.19%)</title><rect x="196.9" y="451.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="199.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (2 samples, 0.06%)</title><rect x="199.2" y="451.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="202.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.06%)</title><rect x="199.2" y="435.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="202.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (4 samples, 0.13%)</title><rect x="199.9" y="467.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="202.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.06%)</title><rect x="199.9" y="451.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="202.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.03%)</title><rect x="199.9" y="435.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="202.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.03%)</title><rect x="200.3" y="435.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="203.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.03%)</title><rect x="200.7" y="451.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="203.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.03%)</title><rect x="201.0" y="451.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="204.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (89 samples, 2.80%)</title><rect x="201.4" y="467.0" width="33.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="204.4" y="478.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (84 samples, 2.65%)</title><rect x="202.5" y="451.0" width="31.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="205.5" y="462.0">/t..</text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (4 samples, 0.13%)</title><rect x="203.6" y="435.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="206.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (75 samples, 2.36%)</title><rect x="205.1" y="435.0" width="27.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="208.1" y="446.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (5 samples, 0.16%)</title><rect x="222.2" y="419.0" width="1.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="225.2" y="430.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.06%)</title><rect x="224.1" y="419.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="227.1" y="430.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="224.8" y="419.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="227.8" y="430.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="224.8" y="403.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="227.8" y="414.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="224.8" y="387.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="227.8" y="398.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="224.8" y="371.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="227.8" y="382.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.03%)</title><rect x="224.8" y="355.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="227.8" y="366.0"></text>
</g>
<g>
<title>__sk_destruct (1 samples, 0.03%)</title><rect x="224.8" y="339.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="227.8" y="350.0"></text>
</g>
<g>
<title>netlink_sock_destruct (1 samples, 0.03%)</title><rect x="224.8" y="323.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="227.8" y="334.0"></text>
</g>
<g>
<title>skb_queue_purge (1 samples, 0.03%)</title><rect x="224.8" y="307.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="227.8" y="318.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (21 samples, 0.66%)</title><rect x="225.2" y="419.0" width="7.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="228.2" y="430.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (2 samples, 0.06%)</title><rect x="227.8" y="403.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="230.8" y="414.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.09%)</title><rect x="228.5" y="403.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="231.5" y="414.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.03%)</title><rect x="229.3" y="387.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="232.3" y="398.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (5 samples, 0.16%)</title><rect x="229.6" y="403.0" width="1.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="232.6" y="414.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="231.5" y="403.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="234.5" y="414.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.03%)</title><rect x="231.9" y="403.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="234.9" y="414.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="232.2" y="403.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="235.2" y="414.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.03%)</title><rect x="232.6" y="403.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="235.6" y="414.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (1 samples, 0.03%)</title><rect x="233.0" y="435.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="236.0" y="446.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.03%)</title><rect x="233.4" y="435.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="236.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.03%)</title><rect x="233.7" y="451.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="236.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.03%)</title><rect x="234.1" y="451.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="237.1" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (2 samples, 0.06%)</title><rect x="234.5" y="467.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="237.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.03%)</title><rect x="235.2" y="467.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="238.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.03%)</title><rect x="235.6" y="467.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="238.6" y="478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="236.0" y="467.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="239.0" y="478.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="236.0" y="451.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="239.0" y="462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="236.0" y="435.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="239.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.03%)</title><rect x="236.3" y="483.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="239.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.03%)</title><rect x="236.7" y="483.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="239.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (1 samples, 0.03%)</title><rect x="237.1" y="499.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="240.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.06%)</title><rect x="237.5" y="531.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="240.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (20 samples, 0.63%)</title><rect x="238.2" y="531.0" width="7.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="241.2" y="542.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="238.2" y="515.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="241.2" y="526.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.03%)</title><rect x="238.6" y="515.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="241.6" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.03%)</title><rect x="238.9" y="515.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="241.9" y="526.0"></text>
</g>
<g>
<title>jni_NewByteArray (16 samples, 0.50%)</title><rect x="239.3" y="515.0" width="6.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="242.3" y="526.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.03%)</title><rect x="239.3" y="499.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="242.3" y="510.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="239.7" y="499.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="242.7" y="510.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.06%)</title><rect x="240.1" y="499.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="243.1" y="510.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="240.8" y="499.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="243.8" y="510.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (11 samples, 0.35%)</title><rect x="241.2" y="499.0" width="4.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="244.2" y="510.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.19%)</title><rect x="242.7" y="483.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="245.7" y="494.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.16%)</title><rect x="242.7" y="467.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="245.7" y="478.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.06%)</title><rect x="243.4" y="451.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="246.4" y="462.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.03%)</title><rect x="244.1" y="451.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="247.1" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="244.5" y="467.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="247.5" y="478.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="244.9" y="483.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="247.9" y="494.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="245.3" y="515.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="248.3" y="526.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="245.6" y="531.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="248.6" y="542.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (4 samples, 0.13%)</title><rect x="246.0" y="547.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="249.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="247.5" y="563.0" width="1.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="250.5" y="574.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (4 samples, 0.13%)</title><rect x="247.5" y="547.0" width="1.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="250.5" y="558.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.03%)</title><rect x="249.0" y="547.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="252.0" y="558.0"></text>
</g>
<g>
<title>__GI___libc_malloc (4 samples, 0.13%)</title><rect x="249.3" y="563.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="252.3" y="574.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.06%)</title><rect x="250.8" y="563.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="253.8" y="574.0"></text>
</g>
<g>
<title>_init (6 samples, 0.19%)</title><rect x="251.6" y="563.0" width="2.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="254.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (3 samples, 0.09%)</title><rect x="253.8" y="563.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="256.8" y="574.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (8 samples, 0.25%)</title><rect x="254.9" y="563.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="257.9" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="257.9" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="260.9" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="257.9" y="547.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="260.9" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="257.9" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="260.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (5 samples, 0.16%)</title><rect x="258.3" y="595.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.3" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.16%)</title><rect x="258.3" y="579.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="261.3" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.16%)</title><rect x="258.3" y="563.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="261.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.13%)</title><rect x="258.6" y="547.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="261.6" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.13%)</title><rect x="258.6" y="531.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="261.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="259.8" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="262.8" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="259.8" y="499.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RecordWithTimestamp.fromBytes (1 samples, 0.03%)</title><rect x="260.1" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="263.1" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="260.1" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="263.1" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="260.1" y="563.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="263.1" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="260.1" y="547.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="263.1" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="260.1" y="531.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="263.1" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="260.1" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="263.1" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="260.1" y="499.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="263.1" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="260.1" y="483.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="263.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.upsertRecord (24 samples, 0.76%)</title><rect x="260.5" y="611.0" width="8.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="263.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (7 samples, 0.22%)</title><rect x="260.9" y="595.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="263.9" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.06%)</title><rect x="260.9" y="579.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="263.9" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="261.2" y="563.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="264.2" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.09%)</title><rect x="261.6" y="579.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="264.6" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.09%)</title><rect x="261.6" y="563.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="264.6" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.09%)</title><rect x="261.6" y="547.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="264.6" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="262.4" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="265.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="262.4" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="265.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="262.4" y="499.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="265.4" y="510.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="262.4" y="483.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="265.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.shiftArrayInplace (2 samples, 0.06%)</title><rect x="262.7" y="579.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="265.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RecordWithTimestamp.toRawBytes (16 samples, 0.50%)</title><rect x="263.5" y="595.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="266.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.09%)</title><rect x="265.3" y="579.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="268.3" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.09%)</title><rect x="265.3" y="563.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="268.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.09%)</title><rect x="265.3" y="547.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="268.3" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.09%)</title><rect x="265.3" y="531.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="268.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.09%)</title><rect x="265.3" y="515.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="268.3" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.09%)</title><rect x="265.3" y="499.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.06%)</title><rect x="265.7" y="483.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="268.7" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="266.4" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="269.4" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="266.4" y="563.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="269.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="266.4" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="269.4" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="266.4" y="531.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="269.4" y="542.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="266.4" y="515.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="269.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="266.8" y="579.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="269.8" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="266.8" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="269.8" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putLong (1 samples, 0.03%)</title><rect x="267.2" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="270.2" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextPutIndex (1 samples, 0.03%)</title><rect x="267.2" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="270.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.proxy (1 samples, 0.03%)</title><rect x="267.6" y="579.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="270.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.setRequestTimestamp (3 samples, 0.09%)</title><rect x="267.9" y="579.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="270.9" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="268.7" y="563.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="271.7" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="268.7" y="547.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="271.7" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="268.7" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="271.7" y="542.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="268.7" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="271.7" y="526.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="268.7" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="271.7" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="269.0" y="579.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="272.0" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="269.0" y="563.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="272.0" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="269.0" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="272.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/EntityRequestProcessor.processForUser (152 samples, 4.79%)</title><rect x="269.4" y="643.0" width="56.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="272.4" y="654.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/EntityRequestProcessor.process (152 samples, 4.79%)</title><rect x="269.4" y="627.0" width="56.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.4" y="638.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.getRecord (140 samples, 4.41%)</title><rect x="269.8" y="611.0" width="52.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="272.8" y="622.0">ru/ma..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (135 samples, 4.25%)</title><rect x="269.8" y="595.0" width="50.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="272.8" y="606.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (135 samples, 4.25%)</title><rect x="269.8" y="579.0" width="50.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.8" y="590.0">org/r..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (107 samples, 3.37%)</title><rect x="270.2" y="563.0" width="39.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="273.2" y="574.0">Jav..</text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (2 samples, 0.06%)</title><rect x="271.3" y="547.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="274.3" y="558.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.06%)</title><rect x="272.0" y="547.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="275.0" y="558.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.03%)</title><rect x="272.8" y="547.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="275.8" y="558.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="272.8" y="531.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="275.8" y="542.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="272.8" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="275.8" y="526.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="272.8" y="499.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="275.8" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="272.8" y="483.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="275.8" y="494.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="272.8" y="467.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="275.8" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="272.8" y="451.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="275.8" y="462.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (99 samples, 3.12%)</title><rect x="273.1" y="547.0" width="36.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="276.1" y="558.0">roc..</text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="273.9" y="531.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="276.9" y="542.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.03%)</title><rect x="274.2" y="531.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="277.2" y="542.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.06%)</title><rect x="274.6" y="531.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="277.6" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.06%)</title><rect x="274.6" y="515.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="277.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (78 samples, 2.46%)</title><rect x="275.4" y="531.0" width="28.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="278.4" y="542.0">ro..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.03%)</title><rect x="275.4" y="515.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="278.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (76 samples, 2.39%)</title><rect x="275.7" y="515.0" width="28.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="278.7" y="526.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (76 samples, 2.39%)</title><rect x="275.7" y="499.0" width="28.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="278.7" y="510.0">ro..</text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="275.7" y="483.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="278.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (74 samples, 2.33%)</title><rect x="276.1" y="483.0" width="27.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="279.1" y="494.0">r..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="278.0" y="467.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="281.0" y="478.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.03%)</title><rect x="278.3" y="467.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="281.3" y="478.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="278.3" y="451.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="281.3" y="462.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="278.3" y="435.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="281.3" y="446.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="278.3" y="419.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="281.3" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="278.3" y="403.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="281.3" y="414.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="278.3" y="387.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="281.3" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="278.3" y="371.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="281.3" y="382.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.06%)</title><rect x="278.7" y="467.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="281.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (6 samples, 0.19%)</title><rect x="279.4" y="467.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="282.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (4 samples, 0.13%)</title><rect x="279.8" y="451.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="282.8" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="280.6" y="435.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="283.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.03%)</title><rect x="280.9" y="435.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="283.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.03%)</title><rect x="281.3" y="451.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="284.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.03%)</title><rect x="281.3" y="435.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="284.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.03%)</title><rect x="281.7" y="467.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="284.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (57 samples, 1.80%)</title><rect x="282.1" y="467.0" width="21.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="285.1" y="478.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (55 samples, 1.73%)</title><rect x="282.4" y="451.0" width="20.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="285.4" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (2 samples, 0.06%)</title><rect x="282.8" y="435.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="285.8" y="446.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="283.5" y="435.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="286.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (50 samples, 1.57%)</title><rect x="283.9" y="435.0" width="18.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="286.9" y="446.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (2 samples, 0.06%)</title><rect x="293.9" y="419.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="296.9" y="430.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.09%)</title><rect x="294.7" y="419.0" width="1.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="297.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (18 samples, 0.57%)</title><rect x="295.8" y="419.0" width="6.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="298.8" y="430.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (1 samples, 0.03%)</title><rect x="298.0" y="403.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="301.0" y="414.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="298.4" y="403.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="301.4" y="414.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (5 samples, 0.16%)</title><rect x="298.8" y="403.0" width="1.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="301.8" y="414.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.06%)</title><rect x="300.6" y="403.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="303.6" y="414.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.03%)</title><rect x="301.4" y="403.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="304.4" y="414.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="301.7" y="403.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="304.7" y="414.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="302.1" y="403.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="305.1" y="414.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.03%)</title><rect x="302.1" y="387.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="305.1" y="398.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="302.1" y="371.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="305.1" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="302.1" y="355.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="305.1" y="366.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="302.1" y="339.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="305.1" y="350.0"></text>
</g>
<g>
<title>rtl8169_poll	[r8169] (1 samples, 0.03%)</title><rect x="302.1" y="323.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="305.1" y="334.0"></text>
</g>
<g>
<title>napi_complete_done (1 samples, 0.03%)</title><rect x="302.1" y="307.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="305.1" y="318.0"></text>
</g>
<g>
<title>napi_gro_flush (1 samples, 0.03%)</title><rect x="302.1" y="291.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="305.1" y="302.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="302.1" y="275.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="305.1" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.03%)</title><rect x="302.1" y="259.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="305.1" y="270.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="302.1" y="243.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="305.1" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="302.1" y="227.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="305.1" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.03%)</title><rect x="302.1" y="211.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="305.1" y="222.0"></text>
</g>
<g>
<title>tcp_v4_early_demux (1 samples, 0.03%)</title><rect x="302.1" y="195.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="305.1" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="302.1" y="179.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="305.1" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="302.1" y="163.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="305.1" y="174.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.03%)</title><rect x="302.5" y="435.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="305.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.03%)</title><rect x="302.9" y="451.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="305.9" y="462.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="302.9" y="435.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="305.9" y="446.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="302.9" y="419.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="305.9" y="430.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="302.9" y="403.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="305.9" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="302.9" y="387.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="305.9" y="398.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="302.9" y="371.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="305.9" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="302.9" y="355.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="305.9" y="366.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.03%)</title><rect x="303.2" y="467.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="306.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.03%)</title><rect x="303.6" y="483.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="306.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.03%)</title><rect x="304.0" y="515.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="307.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.03%)</title><rect x="304.3" y="531.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="307.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (14 samples, 0.44%)</title><rect x="304.7" y="531.0" width="5.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="307.7" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.03%)</title><rect x="305.1" y="515.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="308.1" y="526.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="305.5" y="515.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="308.5" y="526.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (2 samples, 0.06%)</title><rect x="305.8" y="515.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="308.8" y="526.0"></text>
</g>
<g>
<title>jni_NewByteArray (9 samples, 0.28%)</title><rect x="306.6" y="515.0" width="3.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="309.6" y="526.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.25%)</title><rect x="307.0" y="499.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="310.0" y="510.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.16%)</title><rect x="308.1" y="483.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="311.1" y="494.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.16%)</title><rect x="308.1" y="467.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="311.1" y="478.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%)</title><rect x="309.6" y="451.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="312.6" y="462.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.35%)</title><rect x="309.9" y="563.0" width="4.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="312.9" y="574.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (7 samples, 0.22%)</title><rect x="309.9" y="547.0" width="2.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="312.9" y="558.0"></text>
</g>
<g>
<title>update_get_addr (4 samples, 0.13%)</title><rect x="312.5" y="547.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="315.5" y="558.0"></text>
</g>
<g>
<title>__GI___libc_malloc (5 samples, 0.16%)</title><rect x="314.0" y="563.0" width="1.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="317.0" y="574.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (4 samples, 0.13%)</title><rect x="315.9" y="563.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="318.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.06%)</title><rect x="317.4" y="563.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="320.4" y="574.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (3 samples, 0.09%)</title><rect x="318.1" y="563.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="321.1" y="574.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.06%)</title><rect x="319.2" y="563.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="322.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (4 samples, 0.13%)</title><rect x="320.0" y="595.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="323.0" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="320.0" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="323.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.shiftArrayInplace (3 samples, 0.09%)</title><rect x="320.3" y="579.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RecordWithTimestamp.fromBytes (1 samples, 0.03%)</title><rect x="321.4" y="595.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="324.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.upsertRecord (4 samples, 0.13%)</title><rect x="321.8" y="611.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="324.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (1 samples, 0.03%)</title><rect x="321.8" y="595.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.8" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="321.8" y="579.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.8" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="321.8" y="563.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="321.8" y="547.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="324.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RecordWithTimestamp.toRawBytes (3 samples, 0.09%)</title><rect x="322.2" y="595.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="325.2" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.array (3 samples, 0.09%)</title><rect x="322.2" y="579.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="325.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/EntityRequestProcessor.responseForUserGet (1 samples, 0.03%)</title><rect x="322.9" y="563.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="325.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/EntityRequestProcessor.responseForUserGet (7 samples, 0.22%)</title><rect x="323.3" y="611.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="323.3" y="595.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArray (6 samples, 0.19%)</title><rect x="323.7" y="595.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="326.7" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.09%)</title><rect x="324.0" y="579.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="327.0" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.09%)</title><rect x="324.0" y="563.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="327.0" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.09%)</title><rect x="324.0" y="547.0" width="1.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="327.0" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.06%)</title><rect x="325.2" y="579.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="328.2" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="325.2" y="563.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="328.2" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="325.5" y="547.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="328.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.proxy (628 samples, 19.78%)</title><rect x="325.9" y="643.0" width="233.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.9" y="654.0">ru/mail/polis/service/saloed/Se..</text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.06%)</title><rect x="325.9" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="328.9" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="325.9" y="611.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="328.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.03%)</title><rect x="325.9" y="595.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="328.9" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="326.3" y="611.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="329.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (622 samples, 19.59%)</title><rect x="326.6" y="627.0" width="231.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="329.6" y="638.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (622 samples, 19.59%)</title><rect x="326.6" y="611.0" width="231.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="329.6" y="622.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (13 samples, 0.41%)</title><rect x="329.3" y="595.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="332.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="329.3" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="329.3" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="332.3" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.38%)</title><rect x="329.6" y="579.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="332.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.length (6 samples, 0.19%)</title><rect x="331.5" y="563.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="334.5" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="333.3" y="547.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="336.3" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="333.3" y="531.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="336.3" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="333.3" y="515.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="336.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="333.7" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="336.7" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (90 samples, 2.83%)</title><rect x="334.1" y="595.0" width="33.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="337.1" y="606.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (85 samples, 2.68%)</title><rect x="335.9" y="579.0" width="31.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="338.9" y="590.0">on..</text>
</g>
<g>
<title>[unknown] (4 samples, 0.13%)</title><rect x="337.1" y="563.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="340.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.13%)</title><rect x="337.1" y="547.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="340.1" y="558.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.09%)</title><rect x="337.1" y="531.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="340.1" y="542.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.09%)</title><rect x="337.1" y="515.0" width="1.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="340.1" y="526.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="337.8" y="499.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="340.8" y="510.0"></text>
</g>
<g>
<title>recv (1 samples, 0.03%)</title><rect x="338.2" y="531.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="341.2" y="542.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="338.5" y="563.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="341.5" y="574.0"></text>
</g>
<g>
<title>recv (77 samples, 2.43%)</title><rect x="338.9" y="563.0" width="28.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="341.9" y="574.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (75 samples, 2.36%)</title><rect x="339.7" y="547.0" width="27.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="342.7" y="558.0">e..</text>
</g>
<g>
<title>do_syscall_64 (75 samples, 2.36%)</title><rect x="339.7" y="531.0" width="27.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="342.7" y="542.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (68 samples, 2.14%)</title><rect x="341.1" y="515.0" width="25.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="344.1" y="526.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (67 samples, 2.11%)</title><rect x="341.5" y="499.0" width="24.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="344.5" y="510.0">_..</text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="341.9" y="483.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="344.9" y="494.0"></text>
</g>
<g>
<title>inet6_recvmsg (61 samples, 1.92%)</title><rect x="342.3" y="483.0" width="22.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="345.3" y="494.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (61 samples, 1.92%)</title><rect x="342.3" y="467.0" width="22.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="345.3" y="478.0">t..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="344.1" y="451.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="347.1" y="462.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.03%)</title><rect x="344.1" y="435.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="347.1" y="446.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (29 samples, 0.91%)</title><rect x="344.5" y="451.0" width="10.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="347.5" y="462.0"></text>
</g>
<g>
<title>__ip_queue_xmit (28 samples, 0.88%)</title><rect x="344.9" y="435.0" width="10.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="347.9" y="446.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.03%)</title><rect x="345.2" y="419.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="348.2" y="430.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.03%)</title><rect x="345.2" y="403.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="348.2" y="414.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.03%)</title><rect x="345.2" y="387.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="348.2" y="398.0"></text>
</g>
<g>
<title>ip_output (26 samples, 0.82%)</title><rect x="345.6" y="419.0" width="9.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="348.6" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (23 samples, 0.72%)</title><rect x="346.3" y="403.0" width="8.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="349.3" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.19%)</title><rect x="346.3" y="387.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="349.3" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="346.3" y="371.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="349.3" y="382.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="346.3" y="355.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="349.3" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.06%)</title><rect x="346.7" y="371.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="349.7" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.03%)</title><rect x="347.1" y="355.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="350.1" y="366.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.03%)</title><rect x="347.1" y="339.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="350.1" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.03%)</title><rect x="347.1" y="323.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="350.1" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.03%)</title><rect x="347.1" y="307.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="350.1" y="318.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.09%)</title><rect x="347.5" y="371.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="350.5" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (17 samples, 0.54%)</title><rect x="348.6" y="387.0" width="6.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="351.6" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.0 (17 samples, 0.54%)</title><rect x="348.6" y="371.0" width="6.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="351.6" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (17 samples, 0.54%)</title><rect x="348.6" y="355.0" width="6.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="351.6" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (17 samples, 0.54%)</title><rect x="348.6" y="339.0" width="6.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="351.6" y="350.0"></text>
</g>
<g>
<title>net_rx_action (14 samples, 0.44%)</title><rect x="349.7" y="323.0" width="5.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="352.7" y="334.0"></text>
</g>
<g>
<title>process_backlog (13 samples, 0.41%)</title><rect x="350.1" y="307.0" width="4.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="353.1" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (12 samples, 0.38%)</title><rect x="350.4" y="291.0" width="4.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="353.4" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="350.4" y="275.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="353.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv (11 samples, 0.35%)</title><rect x="350.8" y="275.0" width="4.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="353.8" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver (10 samples, 0.31%)</title><rect x="350.8" y="259.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="353.8" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (7 samples, 0.22%)</title><rect x="351.9" y="243.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="354.9" y="254.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (7 samples, 0.22%)</title><rect x="351.9" y="227.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="354.9" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (7 samples, 0.22%)</title><rect x="351.9" y="211.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="354.9" y="222.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="351.9" y="195.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="354.9" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (6 samples, 0.19%)</title><rect x="352.3" y="195.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="355.3" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (6 samples, 0.19%)</title><rect x="352.3" y="179.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="355.3" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="352.7" y="163.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="355.7" y="174.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="352.7" y="147.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="355.7" y="158.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="352.7" y="131.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="355.7" y="142.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.03%)</title><rect x="352.7" y="115.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="355.7" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="353.0" y="163.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="356.0" y="174.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.09%)</title><rect x="353.4" y="163.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="356.4" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="354.5" y="259.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="357.5" y="270.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.03%)</title><rect x="354.9" y="403.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="357.9" y="414.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="354.9" y="387.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="357.9" y="398.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="355.3" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="358.3" y="462.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="355.3" y="435.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="358.3" y="446.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.03%)</title><rect x="355.3" y="419.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="358.3" y="430.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.06%)</title><rect x="355.6" y="451.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="358.6" y="462.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="356.0" y="435.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="359.0" y="446.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="356.0" y="419.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="359.0" y="430.0"></text>
</g>
<g>
<title>sk_wait_data (17 samples, 0.54%)</title><rect x="356.4" y="451.0" width="6.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="359.4" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="357.1" y="435.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="360.1" y="446.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="357.1" y="419.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="360.1" y="430.0"></text>
</g>
<g>
<title>add_wait_queue (1 samples, 0.03%)</title><rect x="357.5" y="435.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="360.5" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="357.5" y="419.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="360.5" y="430.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.13%)</title><rect x="357.9" y="435.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="360.9" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.06%)</title><rect x="357.9" y="419.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="360.9" y="430.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="358.2" y="403.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="361.2" y="414.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.06%)</title><rect x="358.6" y="419.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="361.6" y="430.0"></text>
</g>
<g>
<title>wait_woken (9 samples, 0.28%)</title><rect x="359.4" y="435.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="362.4" y="446.0"></text>
</g>
<g>
<title>schedule_timeout (8 samples, 0.25%)</title><rect x="359.7" y="419.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="362.7" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.13%)</title><rect x="359.7" y="403.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="362.7" y="414.0"></text>
</g>
<g>
<title>init_timer_key (1 samples, 0.03%)</title><rect x="361.2" y="403.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="364.2" y="414.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.03%)</title><rect x="361.6" y="403.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="364.6" y="414.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.06%)</title><rect x="362.0" y="403.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="365.0" y="414.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.06%)</title><rect x="362.0" y="387.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="365.0" y="398.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="362.3" y="371.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="365.3" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.03%)</title><rect x="362.3" y="355.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="365.3" y="366.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.06%)</title><rect x="362.7" y="451.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="365.7" y="462.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.06%)</title><rect x="362.7" y="435.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="365.7" y="446.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.06%)</title><rect x="362.7" y="419.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="365.7" y="430.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.06%)</title><rect x="362.7" y="403.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="365.7" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.06%)</title><rect x="362.7" y="387.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="365.7" y="398.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.06%)</title><rect x="363.4" y="451.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="366.4" y="462.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (2 samples, 0.06%)</title><rect x="364.2" y="451.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="367.2" y="462.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.13%)</title><rect x="364.9" y="483.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="367.9" y="494.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="365.7" y="467.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="368.7" y="478.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="366.0" y="451.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="369.0" y="462.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.03%)</title><rect x="366.4" y="515.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="369.4" y="526.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.06%)</title><rect x="366.8" y="515.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="369.8" y="526.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="367.2" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="370.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (77 samples, 2.43%)</title><rect x="367.5" y="595.0" width="28.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="370.5" y="606.0">on..</text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.13%)</title><rect x="368.3" y="579.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="371.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.22%)</title><rect x="369.8" y="579.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="372.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="369.8" y="563.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="372.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.19%)</title><rect x="370.1" y="563.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="373.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="370.5" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="373.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.13%)</title><rect x="370.9" y="547.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="373.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.09%)</title><rect x="371.2" y="531.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="374.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (30 samples, 0.94%)</title><rect x="372.4" y="579.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="375.4" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1 samples, 0.03%)</title><rect x="375.3" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="378.3" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.66%)</title><rect x="375.7" y="563.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="378.7" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.63%)</title><rect x="376.1" y="547.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="379.1" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.16%)</title><rect x="383.5" y="579.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.03%)</title><rect x="385.0" y="563.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="388.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (12 samples, 0.38%)</title><rect x="385.4" y="579.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="388.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (15 samples, 0.47%)</title><rect x="389.8" y="579.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="392.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.13%)</title><rect x="391.3" y="563.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="394.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.13%)</title><rect x="391.3" y="547.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="394.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.22%)</title><rect x="392.8" y="563.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="395.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.22%)</title><rect x="392.8" y="547.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="395.8" y="558.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.09%)</title><rect x="394.3" y="531.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="397.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.setBody (2 samples, 0.06%)</title><rect x="395.4" y="579.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="398.4" y="590.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="395.8" y="563.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="398.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (49 samples, 1.54%)</title><rect x="396.1" y="595.0" width="18.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="399.1" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.13%)</title><rect x="400.2" y="579.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="403.2" y="590.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.09%)</title><rect x="400.6" y="563.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="403.6" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="401.0" y="547.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="404.0" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (31 samples, 0.98%)</title><rect x="401.7" y="579.0" width="11.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="404.7" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.22%)</title><rect x="402.5" y="563.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="405.5" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.03%)</title><rect x="404.7" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="407.7" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (8 samples, 0.25%)</title><rect x="405.1" y="563.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="408.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.16%)</title><rect x="405.4" y="547.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="408.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.03%)</title><rect x="406.9" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="409.9" y="542.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="407.3" y="547.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="410.3" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="407.3" y="531.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="410.3" y="542.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="407.7" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="410.7" y="558.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.03%)</title><rect x="407.7" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="410.7" y="542.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="407.7" y="515.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="410.7" y="526.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="407.7" y="499.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="410.7" y="510.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="407.7" y="483.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="410.7" y="494.0"></text>
</g>
<g>
<title>rtl8169_poll	[r8169] (1 samples, 0.03%)</title><rect x="407.7" y="467.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="410.7" y="478.0"></text>
</g>
<g>
<title>napi_complete_done (1 samples, 0.03%)</title><rect x="407.7" y="451.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="410.7" y="462.0"></text>
</g>
<g>
<title>napi_gro_flush (1 samples, 0.03%)</title><rect x="407.7" y="435.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="410.7" y="446.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="407.7" y="419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="410.7" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.03%)</title><rect x="407.7" y="403.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="410.7" y="414.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="407.7" y="387.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="410.7" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="407.7" y="371.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="410.7" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="407.7" y="355.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="410.7" y="366.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.03%)</title><rect x="407.7" y="339.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="410.7" y="350.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="407.7" y="323.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="410.7" y="334.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="407.7" y="307.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="410.7" y="318.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="407.7" y="291.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="410.7" y="302.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="407.7" y="275.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="410.7" y="286.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="407.7" y="259.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="410.7" y="270.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="407.7" y="243.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="410.7" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (14 samples, 0.44%)</title><rect x="408.0" y="563.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="411.0" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (14 samples, 0.44%)</title><rect x="408.0" y="547.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="411.0" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (11 samples, 0.35%)</title><rect x="409.2" y="531.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="412.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (6 samples, 0.19%)</title><rect x="411.0" y="515.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="414.0" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.09%)</title><rect x="413.2" y="579.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="416.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.06%)</title><rect x="413.6" y="563.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.6" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.13%)</title><rect x="414.4" y="595.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.06%)</title><rect x="414.7" y="579.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="417.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.06%)</title><rect x="414.7" y="563.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="417.7" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="415.5" y="579.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="415.5" y="563.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="418.5" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (50 samples, 1.57%)</title><rect x="415.8" y="595.0" width="18.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="418.8" y="606.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (1 samples, 0.03%)</title><rect x="416.6" y="579.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="419.6" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="416.6" y="563.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="419.6" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="416.6" y="547.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="419.6" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="416.6" y="531.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="419.6" y="542.0"></text>
</g>
<g>
<title>__GI___setsockopt (47 samples, 1.48%)</title><rect x="417.0" y="579.0" width="17.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="420.0" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 1.29%)</title><rect x="419.2" y="563.0" width="15.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="422.2" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 1.29%)</title><rect x="419.2" y="547.0" width="15.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="422.2" y="558.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (28 samples, 0.88%)</title><rect x="421.0" y="531.0" width="10.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="424.0" y="542.0"></text>
</g>
<g>
<title>__sys_setsockopt (28 samples, 0.88%)</title><rect x="421.0" y="515.0" width="10.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="424.0" y="526.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (2 samples, 0.06%)</title><rect x="421.8" y="499.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="424.8" y="510.0"></text>
</g>
<g>
<title>sock_setsockopt (19 samples, 0.60%)</title><rect x="422.5" y="499.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="425.5" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="422.9" y="483.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="425.9" y="494.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="422.9" y="467.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="425.9" y="478.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.13%)</title><rect x="423.3" y="483.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="426.3" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.13%)</title><rect x="423.3" y="467.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="426.3" y="478.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="424.4" y="451.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="427.4" y="462.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.03%)</title><rect x="424.4" y="435.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="427.4" y="446.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.19%)</title><rect x="424.8" y="483.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="427.8" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="425.5" y="467.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="428.5" y="478.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.09%)</title><rect x="425.9" y="467.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="428.9" y="478.0"></text>
</g>
<g>
<title>sock_set_timeout (7 samples, 0.22%)</title><rect x="427.0" y="483.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="430.0" y="494.0"></text>
</g>
<g>
<title>_copy_from_user (3 samples, 0.09%)</title><rect x="428.5" y="467.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="431.5" y="478.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.09%)</title><rect x="428.5" y="451.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="431.5" y="462.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.16%)</title><rect x="429.6" y="499.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="432.6" y="510.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.16%)</title><rect x="429.6" y="483.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="432.6" y="494.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.16%)</title><rect x="429.6" y="467.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="432.6" y="478.0"></text>
</g>
<g>
<title>restore_regs_and_return_to_kernel (1 samples, 0.03%)</title><rect x="431.1" y="451.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="434.1" y="462.0"></text>
</g>
<g>
<title>preempt_schedule_irq (1 samples, 0.03%)</title><rect x="431.1" y="435.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="434.1" y="446.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="431.5" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="434.5" y="542.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="431.5" y="515.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="434.5" y="526.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="431.5" y="499.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="434.5" y="510.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (3 samples, 0.09%)</title><rect x="431.8" y="531.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="434.8" y="542.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="432.6" y="515.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="435.6" y="526.0"></text>
</g>
<g>
<title>syscall_trace_enter (4 samples, 0.13%)</title><rect x="432.9" y="531.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="435.9" y="542.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="433.7" y="515.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="436.7" y="526.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="434.1" y="515.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="437.1" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (327 samples, 10.30%)</title><rect x="434.4" y="595.0" width="121.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="437.4" y="606.0">one/nio/net/Nat..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (9 samples, 0.28%)</title><rect x="436.3" y="579.0" width="3.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="439.3" y="590.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="437.0" y="563.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="440.0" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.06%)</title><rect x="437.4" y="563.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="440.4" y="574.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.09%)</title><rect x="438.1" y="563.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="441.1" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.06%)</title><rect x="438.5" y="547.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="441.5" y="558.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="439.3" y="563.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="442.3" y="574.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="439.6" y="579.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="442.6" y="590.0"></text>
</g>
<g>
<title>__send (312 samples, 9.83%)</title><rect x="440.0" y="579.0" width="116.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="443.0" y="590.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (304 samples, 9.57%)</title><rect x="443.0" y="563.0" width="113.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="446.0" y="574.0">entry_SYSCALL_..</text>
</g>
<g>
<title>do_syscall_64 (304 samples, 9.57%)</title><rect x="443.0" y="547.0" width="113.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="446.0" y="558.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (299 samples, 9.42%)</title><rect x="444.1" y="531.0" width="111.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="447.1" y="542.0">__x64_sys_sen..</text>
</g>
<g>
<title>__sys_sendto (297 samples, 9.35%)</title><rect x="444.8" y="515.0" width="110.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="447.8" y="526.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (291 samples, 9.17%)</title><rect x="447.1" y="499.0" width="108.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="450.1" y="510.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (3 samples, 0.09%)</title><rect x="447.1" y="483.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="450.1" y="494.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.03%)</title><rect x="448.2" y="483.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="451.2" y="494.0"></text>
</g>
<g>
<title>tcp_sendmsg (287 samples, 9.04%)</title><rect x="448.6" y="483.0" width="106.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="451.6" y="494.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.06%)</title><rect x="448.6" y="467.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="451.6" y="478.0"></text>
</g>
<g>
<title>___preempt_schedule (1 samples, 0.03%)</title><rect x="448.9" y="451.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="451.9" y="462.0"></text>
</g>
<g>
<title>preempt_schedule_common (1 samples, 0.03%)</title><rect x="448.9" y="435.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="451.9" y="446.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="448.9" y="419.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="451.9" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.03%)</title><rect x="449.3" y="467.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="452.3" y="478.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="449.7" y="467.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="452.7" y="478.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="449.7" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="452.7" y="462.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="449.7" y="435.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="452.7" y="446.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.09%)</title><rect x="450.0" y="467.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="453.0" y="478.0"></text>
</g>
<g>
<title>__release_sock (3 samples, 0.09%)</title><rect x="450.0" y="451.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="453.0" y="462.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="450.0" y="435.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="453.0" y="446.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.06%)</title><rect x="450.4" y="435.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="453.4" y="446.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.06%)</title><rect x="450.4" y="419.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="453.4" y="430.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="450.4" y="403.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="453.4" y="414.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="450.4" y="387.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="453.4" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="450.4" y="371.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="453.4" y="382.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.03%)</title><rect x="450.8" y="403.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="453.8" y="414.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.03%)</title><rect x="450.8" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="453.8" y="398.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (280 samples, 8.82%)</title><rect x="451.2" y="467.0" width="104.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="454.2" y="478.0">tcp_sendmsg_..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.09%)</title><rect x="453.8" y="451.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="456.8" y="462.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="454.5" y="435.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="457.5" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (242 samples, 7.62%)</title><rect x="454.9" y="451.0" width="89.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="457.9" y="462.0">__tcp_push..</text>
</g>
<g>
<title>tcp_write_xmit (242 samples, 7.62%)</title><rect x="454.9" y="435.0" width="89.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="457.9" y="446.0">tcp_write_..</text>
</g>
<g>
<title>__tcp_transmit_skb (229 samples, 7.21%)</title><rect x="457.1" y="419.0" width="85.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="460.1" y="430.0">__tcp_tran..</text>
</g>
<g>
<title>__ip_queue_xmit (217 samples, 6.83%)</title><rect x="458.2" y="403.0" width="80.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="461.2" y="414.0">__ip_queu..</text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="458.2" y="387.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="461.2" y="398.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.03%)</title><rect x="458.6" y="387.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="461.6" y="398.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="458.6" y="371.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="461.6" y="382.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.03%)</title><rect x="459.0" y="387.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="462.0" y="398.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.09%)</title><rect x="459.3" y="387.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="462.3" y="398.0"></text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.09%)</title><rect x="459.3" y="371.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="462.3" y="382.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.03%)</title><rect x="460.1" y="355.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="463.1" y="366.0"></text>
</g>
<g>
<title>ip_output (211 samples, 6.65%)</title><rect x="460.4" y="387.0" width="78.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="463.4" y="398.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.06%)</title><rect x="460.8" y="371.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="463.8" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="461.2" y="355.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="464.2" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (202 samples, 6.36%)</title><rect x="461.6" y="371.0" width="75.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="464.6" y="382.0">ip_finis..</text>
</g>
<g>
<title>__dev_queue_xmit (17 samples, 0.54%)</title><rect x="462.3" y="355.0" width="6.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="465.3" y="366.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="463.0" y="339.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="466.0" y="350.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="463.0" y="323.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="466.0" y="334.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.03%)</title><rect x="463.4" y="339.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="466.4" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 0.31%)</title><rect x="463.8" y="339.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="466.8" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (9 samples, 0.28%)</title><rect x="464.2" y="323.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="467.2" y="334.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.06%)</title><rect x="464.2" y="307.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="467.2" y="318.0"></text>
</g>
<g>
<title>netif_rx (7 samples, 0.22%)</title><rect x="464.9" y="307.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="467.9" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (7 samples, 0.22%)</title><rect x="464.9" y="291.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="467.9" y="302.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.13%)</title><rect x="465.6" y="275.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="468.6" y="286.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.03%)</title><rect x="467.1" y="275.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="470.1" y="286.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.09%)</title><rect x="467.5" y="339.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="470.5" y="350.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="468.2" y="323.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="471.2" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (183 samples, 5.76%)</title><rect x="468.6" y="355.0" width="68.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="471.6" y="366.0">__local..</text>
</g>
<g>
<title>___preempt_schedule (1 samples, 0.03%)</title><rect x="468.6" y="339.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="471.6" y="350.0"></text>
</g>
<g>
<title>preempt_schedule_common (1 samples, 0.03%)</title><rect x="468.6" y="323.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="471.6" y="334.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="468.6" y="307.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="471.6" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (182 samples, 5.73%)</title><rect x="469.0" y="339.0" width="67.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="472.0" y="350.0">do_soft..</text>
</g>
<g>
<title>do_softirq_own_stack (180 samples, 5.67%)</title><rect x="469.7" y="323.0" width="66.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="472.7" y="334.0">do_soft..</text>
</g>
<g>
<title>__softirqentry_text_start (180 samples, 5.67%)</title><rect x="469.7" y="307.0" width="66.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="472.7" y="318.0">__softi..</text>
</g>
<g>
<title>net_rx_action (177 samples, 5.57%)</title><rect x="470.9" y="291.0" width="65.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="473.9" y="302.0">net_rx_..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="471.2" y="275.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="474.2" y="286.0"></text>
</g>
<g>
<title>process_backlog (175 samples, 5.51%)</title><rect x="471.6" y="275.0" width="65.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="474.6" y="286.0">process..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (173 samples, 5.45%)</title><rect x="472.3" y="259.0" width="64.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="475.3" y="270.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.09%)</title><rect x="472.7" y="243.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="475.7" y="254.0"></text>
</g>
<g>
<title>ip_rcv (169 samples, 5.32%)</title><rect x="473.8" y="243.0" width="62.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="476.8" y="254.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (161 samples, 5.07%)</title><rect x="474.6" y="227.0" width="59.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="477.6" y="238.0">ip_loc..</text>
</g>
<g>
<title>ip_local_deliver_finish (158 samples, 4.98%)</title><rect x="475.7" y="211.0" width="58.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="478.7" y="222.0">ip_loc..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (157 samples, 4.94%)</title><rect x="476.1" y="195.0" width="58.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="479.1" y="206.0">ip_pro..</text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.03%)</title><rect x="476.8" y="179.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="479.8" y="190.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.06%)</title><rect x="477.2" y="179.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="480.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (152 samples, 4.79%)</title><rect x="477.9" y="179.0" width="56.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="480.9" y="190.0">tcp_v4..</text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.31%)</title><rect x="480.5" y="163.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="483.5" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.06%)</title><rect x="483.5" y="147.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="486.5" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.16%)</title><rect x="484.2" y="163.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="487.2" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.13%)</title><rect x="484.6" y="147.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="487.6" y="158.0"></text>
</g>
<g>
<title>preempt_count_sub (2 samples, 0.06%)</title><rect x="485.3" y="131.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="488.3" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (129 samples, 4.06%)</title><rect x="486.1" y="163.0" width="47.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="489.1" y="174.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (128 samples, 4.03%)</title><rect x="486.5" y="147.0" width="47.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="489.5" y="158.0">tcp_..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="487.6" y="131.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="490.6" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.06%)</title><rect x="487.9" y="131.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="490.9" y="142.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.06%)</title><rect x="487.9" y="115.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="490.9" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="488.3" y="99.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="491.3" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (98 samples, 3.09%)</title><rect x="488.7" y="131.0" width="36.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="491.7" y="142.0">soc..</text>
</g>
<g>
<title>__wake_up_common_lock (96 samples, 3.02%)</title><rect x="489.4" y="115.0" width="35.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="492.4" y="126.0">__w..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (96 samples, 3.02%)</title><rect x="489.4" y="99.0" width="35.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="492.4" y="110.0">_ra..</text>
</g>
<g>
<title>tcp_ack (21 samples, 0.66%)</title><rect x="525.1" y="131.0" width="7.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="528.1" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.19%)</title><rect x="527.7" y="115.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="530.7" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="527.7" y="99.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="530.7" y="110.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="528.1" y="99.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="531.1" y="110.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="528.1" y="83.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="531.1" y="94.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.13%)</title><rect x="528.5" y="99.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="531.5" y="110.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.06%)</title><rect x="529.9" y="115.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="532.9" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="530.7" y="115.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="533.7" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.03%)</title><rect x="531.1" y="115.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="534.1" y="126.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.03%)</title><rect x="531.4" y="115.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="534.4" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.03%)</title><rect x="531.8" y="115.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="534.8" y="126.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="532.2" y="115.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="535.2" y="126.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.03%)</title><rect x="532.5" y="115.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="535.5" y="126.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.06%)</title><rect x="532.9" y="131.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="535.9" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.03%)</title><rect x="533.7" y="131.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="536.7" y="142.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.03%)</title><rect x="534.0" y="163.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="537.0" y="174.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (4 samples, 0.13%)</title><rect x="534.4" y="227.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="537.4" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.06%)</title><rect x="535.9" y="227.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="538.9" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.03%)</title><rect x="536.3" y="211.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="539.3" y="222.0"></text>
</g>
<g>
<title>ip_finish_output (6 samples, 0.19%)</title><rect x="536.6" y="371.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="539.6" y="382.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (6 samples, 0.19%)</title><rect x="536.6" y="355.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="539.6" y="366.0"></text>
</g>
<g>
<title>preempt_count_add (2 samples, 0.06%)</title><rect x="537.7" y="339.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="540.7" y="350.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.03%)</title><rect x="538.1" y="323.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="541.1" y="334.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="538.5" y="339.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="541.5" y="350.0"></text>
</g>
<g>
<title>__skb_clone (6 samples, 0.19%)</title><rect x="538.9" y="403.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="541.9" y="414.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.09%)</title><rect x="540.0" y="387.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="543.0" y="398.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.03%)</title><rect x="541.1" y="403.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="544.1" y="414.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="541.5" y="403.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="544.5" y="414.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.03%)</title><rect x="541.8" y="403.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="544.8" y="414.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.19%)</title><rect x="542.2" y="419.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="545.2" y="430.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.06%)</title><rect x="543.0" y="403.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="546.0" y="414.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.06%)</title><rect x="543.0" y="387.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="546.0" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.06%)</title><rect x="543.0" y="371.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="546.0" y="382.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.03%)</title><rect x="543.7" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="546.7" y="414.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="544.1" y="403.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="547.1" y="414.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="544.4" y="419.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="547.4" y="430.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.09%)</title><rect x="544.8" y="451.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="547.8" y="462.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.06%)</title><rect x="545.2" y="435.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="548.2" y="446.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.06%)</title><rect x="545.2" y="419.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="548.2" y="430.0"></text>
</g>
<g>
<title>sk_page_frag_refill (4 samples, 0.13%)</title><rect x="545.9" y="451.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="548.9" y="462.0"></text>
</g>
<g>
<title>skb_page_frag_refill (4 samples, 0.13%)</title><rect x="545.9" y="435.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="548.9" y="446.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (12 samples, 0.38%)</title><rect x="547.4" y="451.0" width="4.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="550.4" y="462.0"></text>
</g>
<g>
<title>__alloc_skb (10 samples, 0.31%)</title><rect x="548.2" y="435.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="551.2" y="446.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (5 samples, 0.16%)</title><rect x="548.5" y="419.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="551.5" y="430.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.16%)</title><rect x="548.5" y="403.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="551.5" y="414.0"></text>
</g>
<g>
<title>__slab_alloc.isra.0 (1 samples, 0.03%)</title><rect x="550.0" y="387.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="553.0" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.13%)</title><rect x="550.4" y="419.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="553.4" y="430.0"></text>
</g>
<g>
<title>__slab_alloc.isra.0 (2 samples, 0.06%)</title><rect x="551.1" y="403.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="554.1" y="414.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.06%)</title><rect x="551.9" y="451.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="554.9" y="462.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.03%)</title><rect x="552.6" y="451.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="555.6" y="462.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.16%)</title><rect x="553.0" y="451.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="556.0" y="462.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.13%)</title><rect x="553.4" y="435.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="556.4" y="446.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.06%)</title><rect x="554.1" y="419.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="557.1" y="430.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.03%)</title><rect x="554.8" y="451.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="557.8" y="462.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.03%)</title><rect x="555.2" y="531.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="558.2" y="542.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="555.2" y="515.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="558.2" y="526.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.03%)</title><rect x="555.6" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="558.6" y="542.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="555.6" y="515.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="558.6" y="526.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (5 samples, 0.16%)</title><rect x="556.0" y="595.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.0" y="606.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (4 samples, 0.13%)</title><rect x="556.3" y="579.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="559.3" y="590.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (4 samples, 0.13%)</title><rect x="556.3" y="563.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="559.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/Topology.isMe (3 samples, 0.09%)</title><rect x="557.8" y="627.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="560.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.03%)</title><rect x="558.2" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="561.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1 samples, 0.03%)</title><rect x="558.6" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="561.6" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="558.9" y="627.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="561.9" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="558.9" y="611.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="561.9" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="558.9" y="595.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="561.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (660 samples, 20.79%)</title><rect x="559.3" y="643.0" width="245.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="562.3" y="654.0">ru/mail/polis/service/saloed/Serv..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (660 samples, 20.79%)</title><rect x="559.3" y="627.0" width="245.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="562.3" y="638.0">one/nio/http/HttpSession.sendResp..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (11 samples, 0.35%)</title><rect x="562.6" y="611.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="565.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (11 samples, 0.35%)</title><rect x="562.6" y="595.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="565.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (11 samples, 0.35%)</title><rect x="562.6" y="579.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="565.6" y="590.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.13%)</title><rect x="564.1" y="563.0" width="1.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="567.1" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.09%)</title><rect x="565.6" y="563.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="568.6" y="574.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.09%)</title><rect x="565.6" y="547.0" width="1.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="568.6" y="558.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.09%)</title><rect x="565.6" y="531.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="568.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (633 samples, 19.94%)</title><rect x="566.7" y="611.0" width="235.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.7" y="622.0">one/nio/http/HttpSession.writeR..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (26 samples, 0.82%)</title><rect x="567.5" y="595.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.5" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="576.4" y="579.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="579.4" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (605 samples, 19.06%)</title><rect x="577.1" y="595.0" width="224.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="580.1" y="606.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (605 samples, 19.06%)</title><rect x="577.1" y="579.0" width="224.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="580.1" y="590.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (605 samples, 19.06%)</title><rect x="577.1" y="563.0" width="224.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="580.1" y="574.0">one/nio/net/Session$ArrayQueue..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="578.3" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.3" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (601 samples, 18.93%)</title><rect x="578.6" y="547.0" width="223.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="581.6" y="558.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="580.1" y="531.0" width="1.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="583.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="580.1" y="515.0" width="1.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="583.1" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.09%)</title><rect x="580.1" y="499.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="583.1" y="510.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="580.5" y="483.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="583.5" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="580.9" y="483.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="583.9" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.03%)</title><rect x="580.9" y="467.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="583.9" y="478.0"></text>
</g>
<g>
<title>__send (1 samples, 0.03%)</title><rect x="581.2" y="499.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="584.2" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="581.6" y="499.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="584.6" y="510.0"></text>
</g>
<g>
<title>__send (592 samples, 18.65%)</title><rect x="582.0" y="531.0" width="220.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="585.0" y="542.0">__send</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.09%)</title><rect x="586.4" y="515.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="589.4" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (577 samples, 18.17%)</title><rect x="587.5" y="515.0" width="214.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="590.5" y="526.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (577 samples, 18.17%)</title><rect x="587.5" y="499.0" width="214.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="590.5" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (554 samples, 17.45%)</title><rect x="593.9" y="483.0" width="205.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="596.9" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (553 samples, 17.42%)</title><rect x="594.2" y="467.0" width="205.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="597.2" y="478.0">__sys_sendto</text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="595.0" y="451.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="598.0" y="462.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="595.4" y="451.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="598.4" y="462.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="595.7" y="451.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="598.7" y="462.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.03%)</title><rect x="595.7" y="435.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="598.7" y="446.0"></text>
</g>
<g>
<title>sock_sendmsg (540 samples, 17.01%)</title><rect x="596.1" y="451.0" width="200.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="599.1" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.03%)</title><rect x="596.8" y="435.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="599.8" y="446.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.03%)</title><rect x="597.2" y="435.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="600.2" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg (536 samples, 16.88%)</title><rect x="597.6" y="435.0" width="199.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="600.6" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.06%)</title><rect x="597.6" y="419.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="600.6" y="430.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="598.0" y="403.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="601.0" y="414.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.09%)</title><rect x="598.3" y="419.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="601.3" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="598.7" y="403.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="601.7" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="599.1" y="403.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="602.1" y="414.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="599.1" y="387.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="602.1" y="398.0"></text>
</g>
<g>
<title>release_sock (10 samples, 0.31%)</title><rect x="599.4" y="419.0" width="3.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="602.4" y="430.0"></text>
</g>
<g>
<title>__release_sock (2 samples, 0.06%)</title><rect x="600.2" y="403.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="603.2" y="414.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.06%)</title><rect x="600.2" y="387.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="603.2" y="398.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.06%)</title><rect x="600.2" y="371.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="603.2" y="382.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="600.2" y="355.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="603.2" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="600.2" y="339.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="603.2" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="600.2" y="323.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="603.2" y="334.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.03%)</title><rect x="600.6" y="355.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="603.6" y="366.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.16%)</title><rect x="600.9" y="403.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="603.9" y="414.0"></text>
</g>
<g>
<title>preempt_count_add (3 samples, 0.09%)</title><rect x="601.7" y="387.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="604.7" y="398.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="602.8" y="403.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="605.8" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (521 samples, 16.41%)</title><rect x="603.2" y="419.0" width="193.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="606.2" y="430.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.13%)</title><rect x="606.1" y="403.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="609.1" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.09%)</title><rect x="606.1" y="387.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="609.1" y="398.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.03%)</title><rect x="607.2" y="387.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="610.2" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (436 samples, 13.73%)</title><rect x="607.6" y="403.0" width="162.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="610.6" y="414.0">__tcp_push_pending_fr..</text>
</g>
<g>
<title>tcp_write_xmit (436 samples, 13.73%)</title><rect x="607.6" y="387.0" width="162.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="610.6" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (398 samples, 12.54%)</title><rect x="612.1" y="371.0" width="147.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="615.1" y="382.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (367 samples, 11.56%)</title><rect x="617.3" y="355.0" width="136.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="620.3" y="366.0">__ip_queue_xmit</text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="618.0" y="339.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="621.0" y="350.0"></text>
</g>
<g>
<title>__sk_dst_check (7 samples, 0.22%)</title><rect x="618.4" y="339.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="621.4" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 0.16%)</title><rect x="619.1" y="323.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="622.1" y="334.0"></text>
</g>
<g>
<title>ip_copy_addrs (3 samples, 0.09%)</title><rect x="621.0" y="339.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="624.0" y="350.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 0.13%)</title><rect x="622.1" y="339.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="625.1" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.13%)</title><rect x="622.1" y="323.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="625.1" y="334.0"></text>
</g>
<g>
<title>ip_output (350 samples, 11.02%)</title><rect x="623.6" y="339.0" width="130.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="626.6" y="350.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (3 samples, 0.09%)</title><rect x="624.3" y="323.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="627.3" y="334.0"></text>
</g>
<g>
<title>ip_finish_output2 (335 samples, 10.55%)</title><rect x="625.5" y="323.0" width="124.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="628.5" y="334.0">ip_finish_output2</text>
</g>
<g>
<title>__dev_queue_xmit (37 samples, 1.17%)</title><rect x="627.7" y="307.0" width="13.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="630.7" y="318.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.09%)</title><rect x="629.9" y="291.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="632.9" y="302.0"></text>
</g>
<g>
<title>preempt_count_sub (3 samples, 0.09%)</title><rect x="629.9" y="275.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="632.9" y="286.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.03%)</title><rect x="631.0" y="291.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="634.0" y="302.0"></text>
</g>
<g>
<title>debug_smp_processor_id (1 samples, 0.03%)</title><rect x="631.4" y="291.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="634.4" y="302.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (21 samples, 0.66%)</title><rect x="631.8" y="291.0" width="7.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="634.8" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (19 samples, 0.60%)</title><rect x="632.5" y="275.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="635.5" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.03%)</title><rect x="632.9" y="259.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="635.9" y="270.0"></text>
</g>
<g>
<title>netif_rx (15 samples, 0.47%)</title><rect x="633.3" y="259.0" width="5.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="636.3" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (15 samples, 0.47%)</title><rect x="633.3" y="243.0" width="5.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="636.3" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (7 samples, 0.22%)</title><rect x="633.6" y="227.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="636.6" y="238.0"></text>
</g>
<g>
<title>ktime_get_with_offset (7 samples, 0.22%)</title><rect x="636.2" y="227.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="639.2" y="238.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.13%)</title><rect x="637.4" y="211.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="640.4" y="222.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.03%)</title><rect x="638.8" y="259.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="641.8" y="270.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.03%)</title><rect x="639.2" y="259.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="642.2" y="270.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (1 samples, 0.03%)</title><rect x="639.6" y="291.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="642.6" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.13%)</title><rect x="640.0" y="291.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="643.0" y="302.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="641.1" y="275.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="644.1" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (289 samples, 9.10%)</title><rect x="641.4" y="307.0" width="107.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="644.4" y="318.0">__local_bh_en..</text>
</g>
<g>
<title>do_softirq.part.0 (287 samples, 9.04%)</title><rect x="641.8" y="291.0" width="106.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="644.8" y="302.0">do_softirq.pa..</text>
</g>
<g>
<title>do_softirq_own_stack (284 samples, 8.94%)</title><rect x="642.9" y="275.0" width="105.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="645.9" y="286.0">do_softirq_ow..</text>
</g>
<g>
<title>__softirqentry_text_start (284 samples, 8.94%)</title><rect x="642.9" y="259.0" width="105.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="645.9" y="270.0">__softirqentr..</text>
</g>
<g>
<title>net_rx_action (274 samples, 8.63%)</title><rect x="646.6" y="243.0" width="101.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="649.6" y="254.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.06%)</title><rect x="650.0" y="227.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="653.0" y="238.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="650.7" y="227.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="653.7" y="238.0"></text>
</g>
<g>
<title>debug_smp_processor_id (2 samples, 0.06%)</title><rect x="651.1" y="227.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="654.1" y="238.0"></text>
</g>
<g>
<title>process_backlog (260 samples, 8.19%)</title><rect x="651.8" y="227.0" width="96.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="654.8" y="238.0">process_bac..</text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="655.6" y="211.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="658.6" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (249 samples, 7.84%)</title><rect x="655.9" y="211.0" width="92.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="658.9" y="222.0">__netif_rec..</text>
</g>
<g>
<title>__netif_receive_skb_core (7 samples, 0.22%)</title><rect x="655.9" y="195.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="658.9" y="206.0"></text>
</g>
<g>
<title>ip_rcv (242 samples, 7.62%)</title><rect x="658.5" y="195.0" width="90.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="661.5" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (230 samples, 7.24%)</title><rect x="660.0" y="179.0" width="85.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="663.0" y="190.0">ip_local_d..</text>
</g>
<g>
<title>ip_local_deliver_finish (224 samples, 7.06%)</title><rect x="662.3" y="163.0" width="83.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="665.3" y="174.0">ip_local_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (223 samples, 7.02%)</title><rect x="662.6" y="147.0" width="82.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="665.6" y="158.0">ip_protoc..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.06%)</title><rect x="663.7" y="131.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="666.7" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (218 samples, 6.87%)</title><rect x="664.5" y="131.0" width="81.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="667.5" y="142.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (18 samples, 0.57%)</title><rect x="668.9" y="115.0" width="6.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="671.9" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (6 samples, 0.19%)</title><rect x="673.4" y="99.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="676.4" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.06%)</title><rect x="675.6" y="115.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="678.6" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock (2 samples, 0.06%)</title><rect x="676.4" y="115.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="679.4" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (6 samples, 0.19%)</title><rect x="677.1" y="115.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="680.1" y="126.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.13%)</title><rect x="677.9" y="99.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="680.9" y="110.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="679.0" y="83.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="682.0" y="94.0"></text>
</g>
<g>
<title>tcp_add_backlog (1 samples, 0.03%)</title><rect x="679.3" y="115.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="682.3" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (174 samples, 5.48%)</title><rect x="679.7" y="115.0" width="64.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="682.7" y="126.0">tcp_v4_..</text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="679.7" y="99.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="682.7" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (173 samples, 5.45%)</title><rect x="680.1" y="99.0" width="64.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="683.1" y="110.0">tcp_rcv..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.06%)</title><rect x="682.3" y="83.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="685.3" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (17 samples, 0.54%)</title><rect x="683.1" y="83.0" width="6.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="686.1" y="94.0"></text>
</g>
<g>
<title>mod_timer (16 samples, 0.50%)</title><rect x="683.4" y="67.0" width="6.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="686.4" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.47%)</title><rect x="683.4" y="51.0" width="5.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="686.4" y="62.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.03%)</title><rect x="689.0" y="51.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="692.0" y="62.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="689.0" y="35.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="692.0" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (73 samples, 2.30%)</title><rect x="689.4" y="83.0" width="27.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="692.4" y="94.0">s..</text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="691.2" y="67.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="694.2" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (67 samples, 2.11%)</title><rect x="691.6" y="67.0" width="24.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="694.6" y="78.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (67 samples, 2.11%)</title><rect x="691.6" y="51.0" width="24.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="694.6" y="62.0">_..</text>
</g>
<g>
<title>tcp_ack (63 samples, 1.98%)</title><rect x="716.5" y="83.0" width="23.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="719.5" y="94.0">t..</text>
</g>
<g>
<title>__kfree_skb (17 samples, 0.54%)</title><rect x="725.1" y="67.0" width="6.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="728.1" y="78.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.06%)</title><rect x="725.1" y="51.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="728.1" y="62.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.13%)</title><rect x="725.8" y="51.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="728.8" y="62.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.06%)</title><rect x="727.3" y="51.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="730.3" y="62.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.06%)</title><rect x="727.3" y="35.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="730.3" y="46.0"></text>
</g>
<g>
<title>skb_release_data (9 samples, 0.28%)</title><rect x="728.0" y="51.0" width="3.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="731.0" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.06%)</title><rect x="731.4" y="67.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="734.4" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (3 samples, 0.09%)</title><rect x="732.1" y="67.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="735.1" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.16%)</title><rect x="733.2" y="67.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="736.2" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="734.7" y="51.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="737.7" y="62.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.03%)</title><rect x="735.1" y="67.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="738.1" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.09%)</title><rect x="735.5" y="67.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="738.5" y="78.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.03%)</title><rect x="736.6" y="67.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="739.6" y="78.0"></text>
</g>
<g>
<title>tcp_rack_advance (2 samples, 0.06%)</title><rect x="737.0" y="67.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="740.0" y="78.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.03%)</title><rect x="737.7" y="67.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="740.7" y="78.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.03%)</title><rect x="738.1" y="67.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="741.1" y="78.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="738.4" y="67.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="741.4" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (3 samples, 0.09%)</title><rect x="738.8" y="67.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="741.8" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (7 samples, 0.22%)</title><rect x="739.9" y="83.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="742.9" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.09%)</title><rect x="742.5" y="83.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="745.5" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="743.6" y="83.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="746.6" y="94.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="743.6" y="67.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="746.6" y="78.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.03%)</title><rect x="744.0" y="83.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="747.0" y="94.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb.isra.0 (2 samples, 0.06%)</title><rect x="744.4" y="115.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="747.4" y="126.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.03%)</title><rect x="745.1" y="115.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="748.1" y="126.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (5 samples, 0.16%)</title><rect x="745.5" y="179.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="748.5" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.09%)</title><rect x="747.4" y="179.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="750.4" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.03%)</title><rect x="748.1" y="163.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="751.1" y="174.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="748.5" y="291.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="751.5" y="302.0"></text>
</g>
<g>
<title>preempt_count_add (3 samples, 0.09%)</title><rect x="748.8" y="307.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="751.8" y="318.0"></text>
</g>
<g>
<title>ip_finish_output (10 samples, 0.31%)</title><rect x="750.0" y="323.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="753.0" y="334.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (9 samples, 0.28%)</title><rect x="750.3" y="307.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="753.3" y="318.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="752.9" y="291.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="755.9" y="302.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="753.3" y="291.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="756.3" y="302.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.16%)</title><rect x="753.7" y="355.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="756.7" y="366.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.06%)</title><rect x="754.8" y="339.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="757.8" y="350.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.03%)</title><rect x="755.5" y="355.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="758.5" y="366.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.03%)</title><rect x="755.9" y="355.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="758.9" y="366.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="756.3" y="355.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="759.3" y="366.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (4 samples, 0.13%)</title><rect x="756.7" y="355.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="759.7" y="366.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.06%)</title><rect x="758.1" y="355.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="761.1" y="366.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.03%)</title><rect x="758.9" y="355.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="761.9" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.03%)</title><rect x="759.3" y="355.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="762.3" y="366.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.03%)</title><rect x="759.6" y="355.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="762.6" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (20 samples, 0.63%)</title><rect x="760.0" y="371.0" width="7.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="763.0" y="382.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.03%)</title><rect x="761.1" y="355.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="764.1" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.22%)</title><rect x="761.5" y="355.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="764.5" y="366.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.22%)</title><rect x="761.5" y="339.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="764.5" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.13%)</title><rect x="762.6" y="323.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="765.6" y="334.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="763.7" y="307.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="766.7" y="318.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.06%)</title><rect x="764.1" y="355.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="767.1" y="366.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.0 (2 samples, 0.06%)</title><rect x="764.8" y="355.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="767.8" y="366.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.16%)</title><rect x="765.6" y="355.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="768.6" y="366.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.13%)</title><rect x="767.4" y="371.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="770.4" y="382.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="768.5" y="355.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="771.5" y="366.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (2 samples, 0.06%)</title><rect x="768.9" y="371.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="771.9" y="382.0"></text>
</g>
<g>
<title>_copy_from_iter_full (7 samples, 0.22%)</title><rect x="769.7" y="403.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="772.7" y="414.0"></text>
</g>
<g>
<title>copyin (6 samples, 0.19%)</title><rect x="769.7" y="387.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="772.7" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.19%)</title><rect x="769.7" y="371.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="772.7" y="382.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.03%)</title><rect x="771.9" y="387.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="774.9" y="398.0"></text>
</g>
<g>
<title>sk_page_frag_refill (6 samples, 0.19%)</title><rect x="772.3" y="403.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="775.3" y="414.0"></text>
</g>
<g>
<title>skb_page_frag_refill (4 samples, 0.13%)</title><rect x="773.0" y="387.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="776.0" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (33 samples, 1.04%)</title><rect x="774.5" y="403.0" width="12.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="777.5" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (32 samples, 1.01%)</title><rect x="774.9" y="387.0" width="11.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="777.9" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (8 samples, 0.25%)</title><rect x="777.5" y="371.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="780.5" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (8 samples, 0.25%)</title><rect x="777.5" y="355.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="780.5" y="366.0"></text>
</g>
<g>
<title>__slab_alloc.isra.0 (1 samples, 0.03%)</title><rect x="779.7" y="339.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="782.7" y="350.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.03%)</title><rect x="780.1" y="339.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="783.1" y="350.0"></text>
</g>
<g>
<title>__ksize (5 samples, 0.16%)</title><rect x="780.4" y="371.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="783.4" y="382.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (12 samples, 0.38%)</title><rect x="782.3" y="371.0" width="4.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="785.3" y="382.0"></text>
</g>
<g>
<title>__slab_alloc.isra.0 (3 samples, 0.09%)</title><rect x="785.6" y="355.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="788.6" y="366.0"></text>
</g>
<g>
<title>skb_entail (8 samples, 0.25%)</title><rect x="786.8" y="403.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="789.8" y="414.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.03%)</title><rect x="789.7" y="403.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="792.7" y="414.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.03%)</title><rect x="790.1" y="403.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="793.1" y="414.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.06%)</title><rect x="790.5" y="403.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="793.5" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (13 samples, 0.41%)</title><rect x="791.2" y="403.0" width="4.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="794.2" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (12 samples, 0.38%)</title><rect x="791.6" y="387.0" width="4.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="794.6" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (9 samples, 0.28%)</title><rect x="792.3" y="371.0" width="3.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="795.3" y="382.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.03%)</title><rect x="795.7" y="371.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="798.7" y="382.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="796.0" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="799.0" y="414.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.03%)</title><rect x="796.4" y="403.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="799.4" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.25%)</title><rect x="796.8" y="451.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="799.8" y="462.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="797.2" y="435.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="800.2" y="446.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.19%)</title><rect x="797.5" y="435.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="800.5" y="446.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.16%)</title><rect x="797.9" y="419.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="800.9" y="430.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (3 samples, 0.09%)</title><rect x="799.8" y="483.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="802.8" y="494.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.09%)</title><rect x="799.8" y="467.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="802.8" y="478.0"></text>
</g>
<g>
<title>mntput (1 samples, 0.03%)</title><rect x="800.5" y="451.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="803.5" y="462.0"></text>
</g>
<g>
<title>syscall_trace_enter (3 samples, 0.09%)</title><rect x="800.9" y="483.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="803.9" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.22%)</title><rect x="802.0" y="611.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="805.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.16%)</title><rect x="802.7" y="595.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="805.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.16%)</title><rect x="802.7" y="579.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="805.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.setRequestTimestamp (20 samples, 0.63%)</title><rect x="804.6" y="643.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="807.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/395748826.linkToTargetMethod (19 samples, 0.60%)</title><rect x="804.6" y="627.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/477819337.invoke (19 samples, 0.60%)</title><rect x="804.6" y="611.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="807.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.09%)</title><rect x="804.6" y="595.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="807.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.09%)</title><rect x="804.6" y="579.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="807.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1495977876.invokeStatic (11 samples, 0.35%)</title><rect x="805.7" y="595.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="808.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (11 samples, 0.35%)</title><rect x="805.7" y="579.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.7" y="590.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (11 samples, 0.35%)</title><rect x="805.7" y="563.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="808.7" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.06%)</title><rect x="809.1" y="547.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="812.1" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.06%)</title><rect x="809.1" y="531.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="812.1" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.06%)</title><rect x="809.1" y="515.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="812.1" y="526.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.06%)</title><rect x="809.1" y="499.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="812.1" y="510.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.06%)</title><rect x="809.1" y="483.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="812.1" y="494.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="809.4" y="467.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="812.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/956641499.invokeStatic (5 samples, 0.16%)</title><rect x="809.8" y="595.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="812.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (5 samples, 0.16%)</title><rect x="809.8" y="579.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="812.8" y="590.0"></text>
</g>
<g>
<title>java/lang/Long.stringSize (5 samples, 0.16%)</title><rect x="809.8" y="563.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="812.8" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="811.3" y="547.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="814.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.03%)</title><rect x="811.7" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="814.7" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="812.0" y="675.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="815.0" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="812.0" y="659.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="815.0" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="812.0" y="643.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="815.0" y="654.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,004 samples, 31.62%)</title><rect x="812.4" y="723.0" width="373.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="815.4" y="734.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.06%)</title><rect x="814.3" y="707.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="817.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.03%)</title><rect x="815.0" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="818.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (15 samples, 0.47%)</title><rect x="815.4" y="707.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="818.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (15 samples, 0.47%)</title><rect x="815.4" y="691.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="818.4" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (15 samples, 0.47%)</title><rect x="815.4" y="675.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="818.4" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.03%)</title><rect x="820.6" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.6" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (105 samples, 3.31%)</title><rect x="820.9" y="707.0" width="39.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="823.9" y="718.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (105 samples, 3.31%)</title><rect x="820.9" y="691.0" width="39.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="823.9" y="702.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.09%)</title><rect x="823.9" y="675.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="826.9" y="686.0"></text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.16%)</title><rect x="825.0" y="675.0" width="1.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="828.0" y="686.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.09%)</title><rect x="825.8" y="659.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="828.8" y="670.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="826.5" y="643.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="829.5" y="654.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.09%)</title><rect x="826.9" y="675.0" width="1.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="829.9" y="686.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (4 samples, 0.13%)</title><rect x="828.0" y="675.0" width="1.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="831.0" y="686.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="829.5" y="675.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="832.5" y="686.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.06%)</title><rect x="829.9" y="675.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="832.9" y="686.0"></text>
</g>
<g>
<title>epoll_wait (78 samples, 2.46%)</title><rect x="830.6" y="675.0" width="29.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="833.6" y="686.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (70 samples, 2.20%)</title><rect x="833.6" y="659.0" width="26.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="836.6" y="670.0">e..</text>
</g>
<g>
<title>do_syscall_64 (70 samples, 2.20%)</title><rect x="833.6" y="643.0" width="26.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="836.6" y="654.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (59 samples, 1.86%)</title><rect x="836.9" y="627.0" width="22.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="839.9" y="638.0">_..</text>
</g>
<g>
<title>do_epoll_wait (53 samples, 1.67%)</title><rect x="839.2" y="611.0" width="19.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="842.2" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="839.9" y="595.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="842.9" y="606.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="840.3" y="579.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="843.3" y="590.0"></text>
</g>
<g>
<title>ep_poll (48 samples, 1.51%)</title><rect x="840.6" y="595.0" width="17.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="843.6" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (2 samples, 0.06%)</title><rect x="843.2" y="579.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="846.2" y="590.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="843.6" y="563.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="846.6" y="574.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (34 samples, 1.07%)</title><rect x="844.0" y="579.0" width="12.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="847.0" y="590.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (7 samples, 0.22%)</title><rect x="844.4" y="563.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="847.4" y="574.0"></text>
</g>
<g>
<title>ep_send_events_proc (20 samples, 0.63%)</title><rect x="847.0" y="563.0" width="7.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="850.0" y="574.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (17 samples, 0.54%)</title><rect x="848.1" y="547.0" width="6.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="851.1" y="558.0"></text>
</g>
<g>
<title>sock_poll (16 samples, 0.50%)</title><rect x="848.5" y="531.0" width="5.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="851.5" y="542.0"></text>
</g>
<g>
<title>tcp_poll (8 samples, 0.25%)</title><rect x="851.4" y="515.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="854.4" y="526.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="853.3" y="499.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="856.3" y="510.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.06%)</title><rect x="853.7" y="499.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="856.7" y="510.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.09%)</title><rect x="854.4" y="563.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="857.4" y="574.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.09%)</title><rect x="855.5" y="563.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="858.5" y="574.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.16%)</title><rect x="856.6" y="579.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="859.6" y="590.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.13%)</title><rect x="857.0" y="563.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="860.0" y="574.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.13%)</title><rect x="857.0" y="547.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="860.0" y="558.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.09%)</title><rect x="857.4" y="531.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="860.4" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (3 samples, 0.09%)</title><rect x="857.4" y="515.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="860.4" y="526.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="858.5" y="595.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="861.5" y="606.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.06%)</title><rect x="858.9" y="627.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="861.9" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="859.6" y="675.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="862.6" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="859.6" y="659.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="862.6" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="859.6" y="643.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="862.6" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (871 samples, 27.43%)</title><rect x="860.0" y="707.0" width="323.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="863.0" y="718.0">one/nio/net/Session.process</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.09%)</title><rect x="865.2" y="691.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="868.2" y="702.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.03%)</title><rect x="865.2" y="675.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="868.2" y="686.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.06%)</title><rect x="865.5" y="675.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="868.5" y="686.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.03%)</title><rect x="865.5" y="659.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="868.5" y="670.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.03%)</title><rect x="865.9" y="659.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="868.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (854 samples, 26.90%)</title><rect x="866.3" y="691.0" width="317.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="869.3" y="702.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (599 samples, 18.87%)</title><rect x="866.3" y="675.0" width="222.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="869.3" y="686.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (543 samples, 17.10%)</title><rect x="873.0" y="659.0" width="201.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="876.0" y="670.0">one/nio/http/HttpSession.h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (539 samples, 16.98%)</title><rect x="874.5" y="643.0" width="200.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="877.5" y="654.0">one/nio/http/HttpServer.ha..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (520 samples, 16.38%)</title><rect x="876.0" y="627.0" width="193.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="879.0" y="638.0">RequestHandler1_entity.ha..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (18 samples, 0.57%)</title><rect x="876.3" y="611.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="879.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.16%)</title><rect x="878.9" y="595.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="881.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.16%)</title><rect x="878.9" y="579.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="881.9" y="590.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.13%)</title><rect x="879.3" y="563.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="882.3" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.09%)</title><rect x="880.8" y="595.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="883.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.09%)</title><rect x="881.9" y="595.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="884.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.09%)</title><rect x="881.9" y="579.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="884.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.09%)</title><rect x="881.9" y="563.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="884.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.09%)</title><rect x="881.9" y="547.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="884.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.entity (500 samples, 15.75%)</title><rect x="883.0" y="611.0" width="185.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="886.0" y="622.0">ru/mail/polis/service/sa..</text>
</g>
<g>
<title>com/google/common/collect/RegularImmutableMap.get (8 samples, 0.25%)</title><rect x="886.4" y="595.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="889.4" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/RegularImmutableMap.get (7 samples, 0.22%)</title><rect x="886.7" y="579.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="889.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Hashing.smear (1 samples, 0.03%)</title><rect x="887.8" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="890.8" y="574.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateLeft (1 samples, 0.03%)</title><rect x="887.8" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="890.8" y="558.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="888.2" y="563.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="891.2" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.06%)</title><rect x="888.6" y="563.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="891.6" y="574.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="888.6" y="547.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="891.6" y="558.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="889.0" y="547.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="892.0" y="558.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="889.0" y="531.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="892.0" y="542.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.06%)</title><rect x="889.3" y="595.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="892.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.06%)</title><rect x="889.3" y="579.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="892.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.03%)</title><rect x="889.7" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="892.7" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="889.7" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="892.7" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.22%)</title><rect x="890.1" y="595.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="893.1" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.22%)</title><rect x="890.1" y="579.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="893.1" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.19%)</title><rect x="890.4" y="563.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="893.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.19%)</title><rect x="890.4" y="547.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="893.4" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.19%)</title><rect x="890.4" y="531.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="893.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.13%)</title><rect x="890.4" y="515.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="893.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.13%)</title><rect x="890.4" y="499.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="893.4" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.13%)</title><rect x="890.4" y="483.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="893.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/Topology.findNode (2 samples, 0.06%)</title><rect x="891.2" y="467.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="894.2" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.06%)</title><rect x="891.9" y="515.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="894.9" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="892.3" y="499.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="895.3" y="510.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (360 samples, 11.34%)</title><rect x="892.7" y="595.0" width="133.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="895.7" y="606.0">one/nio/server/Se..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (360 samples, 11.34%)</title><rect x="892.7" y="579.0" width="133.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="895.7" y="590.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (3 samples, 0.09%)</title><rect x="892.7" y="563.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="895.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (3 samples, 0.09%)</title><rect x="892.7" y="547.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="895.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (3 samples, 0.09%)</title><rect x="892.7" y="531.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="895.7" y="542.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (357 samples, 11.24%)</title><rect x="893.8" y="563.0" width="132.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="896.8" y="574.0">one/nio/server/W..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (357 samples, 11.24%)</title><rect x="893.8" y="547.0" width="132.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="896.8" y="558.0">one/nio/server/W..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (357 samples, 11.24%)</title><rect x="893.8" y="531.0" width="132.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="896.8" y="542.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (355 samples, 11.18%)</title><rect x="894.5" y="515.0" width="132.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="897.5" y="526.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (329 samples, 10.36%)</title><rect x="894.5" y="499.0" width="122.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="897.5" y="510.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (329 samples, 10.36%)</title><rect x="894.5" y="483.0" width="122.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="897.5" y="494.0">java/util/concu..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (316 samples, 9.95%)</title><rect x="899.4" y="467.0" width="117.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="902.4" y="478.0">jdk/internal/m..</text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.06%)</title><rect x="899.7" y="451.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="902.7" y="462.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="900.5" y="451.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="903.5" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="900.9" y="451.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="903.9" y="462.0"></text>
</g>
<g>
<title>Unsafe_Unpark (46 samples, 1.45%)</title><rect x="901.2" y="451.0" width="17.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="904.2" y="462.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="903.1" y="435.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="906.1" y="446.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="903.5" y="435.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="906.5" y="446.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.06%)</title><rect x="903.8" y="435.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="906.8" y="446.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.03%)</title><rect x="904.6" y="435.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="907.6" y="446.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.13%)</title><rect x="904.9" y="435.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="907.9" y="446.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (13 samples, 0.41%)</title><rect x="906.4" y="435.0" width="4.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="909.4" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.03%)</title><rect x="910.9" y="419.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="913.9" y="430.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (7 samples, 0.22%)</title><rect x="911.3" y="435.0" width="2.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="914.3" y="446.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.03%)</title><rect x="913.9" y="435.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="916.9" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="914.2" y="435.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="917.2" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.03%)</title><rect x="914.6" y="435.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="917.6" y="446.0"></text>
</g>
<g>
<title>_init (2 samples, 0.06%)</title><rect x="915.0" y="435.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="918.0" y="446.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (3 samples, 0.09%)</title><rect x="915.7" y="435.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="918.7" y="446.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (4 samples, 0.13%)</title><rect x="916.8" y="435.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="919.8" y="446.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="918.3" y="451.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="921.3" y="462.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.03%)</title><rect x="918.3" y="435.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="921.3" y="446.0"></text>
</g>
<g>
<title>__pthread_cond_signal (262 samples, 8.25%)</title><rect x="918.7" y="451.0" width="97.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="921.7" y="462.0">__pthread_c..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="924.6" y="435.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="927.6" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (245 samples, 7.72%)</title><rect x="925.0" y="435.0" width="91.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="928.0" y="446.0">entry_SYSCA..</text>
</g>
<g>
<title>do_syscall_64 (245 samples, 7.72%)</title><rect x="925.0" y="419.0" width="91.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="928.0" y="430.0">do_syscall_64</text>
</g>
<g>
<title>__se_sys_futex (223 samples, 7.02%)</title><rect x="929.5" y="403.0" width="82.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="932.5" y="414.0">__se_sys_..</text>
</g>
<g>
<title>do_futex (218 samples, 6.87%)</title><rect x="931.3" y="387.0" width="81.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="934.3" y="398.0">do_futex</text>
</g>
<g>
<title>futex_wake (217 samples, 6.83%)</title><rect x="931.7" y="371.0" width="80.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="934.7" y="382.0">futex_wake</text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.06%)</title><rect x="935.0" y="355.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="938.0" y="366.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="935.4" y="339.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="938.4" y="350.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.03%)</title><rect x="935.4" y="323.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="938.4" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="935.8" y="355.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="938.8" y="366.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="935.8" y="339.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="938.8" y="350.0"></text>
</g>
<g>
<title>hash_futex (4 samples, 0.13%)</title><rect x="936.2" y="355.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="939.2" y="366.0"></text>
</g>
<g>
<title>mark_wake_futex (9 samples, 0.28%)</title><rect x="937.6" y="355.0" width="3.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="940.6" y="366.0"></text>
</g>
<g>
<title>__unqueue_futex (4 samples, 0.13%)</title><rect x="939.5" y="339.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="942.5" y="350.0"></text>
</g>
<g>
<title>wake_up_q (192 samples, 6.05%)</title><rect x="941.0" y="355.0" width="71.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="944.0" y="366.0">wake_up_q</text>
</g>
<g>
<title>try_to_wake_up (191 samples, 6.02%)</title><rect x="941.4" y="339.0" width="70.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="944.4" y="350.0">try_to_w..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (191 samples, 6.02%)</title><rect x="941.4" y="323.0" width="70.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="944.4" y="334.0">_raw_spi..</text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="1012.3" y="403.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1015.3" y="414.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="1012.7" y="403.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1015.7" y="414.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (4 samples, 0.13%)</title><rect x="1013.1" y="403.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1016.1" y="414.0"></text>
</g>
<g>
<title>__audit_syscall_exit (4 samples, 0.13%)</title><rect x="1013.1" y="387.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1016.1" y="398.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="1013.8" y="371.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1016.8" y="382.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.03%)</title><rect x="1014.2" y="371.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1017.2" y="382.0"></text>
</g>
<g>
<title>syscall_trace_enter (4 samples, 0.13%)</title><rect x="1014.6" y="403.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1017.6" y="414.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="1015.7" y="387.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1018.7" y="398.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="1016.1" y="451.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1019.1" y="462.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.03%)</title><rect x="1016.4" y="451.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1019.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (26 samples, 0.82%)</title><rect x="1016.8" y="499.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1019.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (23 samples, 0.72%)</title><rect x="1017.6" y="483.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1020.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (18 samples, 0.57%)</title><rect x="1019.0" y="467.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1022.0" y="478.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.22%)</title><rect x="1019.0" y="451.0" width="2.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1022.0" y="462.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.06%)</title><rect x="1019.0" y="435.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1022.0" y="446.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.06%)</title><rect x="1019.8" y="435.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1022.8" y="446.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.03%)</title><rect x="1020.2" y="419.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1023.2" y="430.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.03%)</title><rect x="1020.5" y="435.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1023.5" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1020.5" y="419.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1023.5" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1020.5" y="403.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1023.5" y="414.0"></text>
</g>
<g>
<title>restore_regs_and_return_to_kernel (1 samples, 0.03%)</title><rect x="1020.5" y="387.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1023.5" y="398.0"></text>
</g>
<g>
<title>preempt_schedule_irq (1 samples, 0.03%)</title><rect x="1020.5" y="371.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1023.5" y="382.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1020.9" y="435.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1023.9" y="446.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.03%)</title><rect x="1021.3" y="435.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1024.3" y="446.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.35%)</title><rect x="1021.6" y="451.0" width="4.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1024.6" y="462.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (11 samples, 0.35%)</title><rect x="1021.6" y="435.0" width="4.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1024.6" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.35%)</title><rect x="1021.6" y="419.0" width="4.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1024.6" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.35%)</title><rect x="1021.6" y="403.0" width="4.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1024.6" y="414.0"></text>
</g>
<g>
<title>__se_sys_futex (9 samples, 0.28%)</title><rect x="1022.0" y="387.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1025.0" y="398.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.28%)</title><rect x="1022.0" y="371.0" width="3.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1025.0" y="382.0"></text>
</g>
<g>
<title>futex_wait (9 samples, 0.28%)</title><rect x="1022.0" y="355.0" width="3.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1025.0" y="366.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 0.16%)</title><rect x="1022.0" y="339.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1025.0" y="350.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.06%)</title><rect x="1022.0" y="323.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1025.0" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.06%)</title><rect x="1022.0" y="307.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1025.0" y="318.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.03%)</title><rect x="1022.8" y="323.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1025.8" y="334.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.06%)</title><rect x="1023.1" y="323.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1026.1" y="334.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.06%)</title><rect x="1023.1" y="307.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1026.1" y="318.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="1023.5" y="291.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1026.5" y="302.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.03%)</title><rect x="1023.5" y="275.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1026.5" y="286.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.13%)</title><rect x="1023.9" y="339.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1026.9" y="350.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="1024.6" y="323.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1027.6" y="334.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.03%)</title><rect x="1025.0" y="323.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1028.0" y="334.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.03%)</title><rect x="1025.4" y="387.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1028.4" y="398.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="1025.7" y="467.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1028.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="1026.1" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1029.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.getRequestTimestamp (6 samples, 0.19%)</title><rect x="1026.5" y="595.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1029.5" y="606.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (2 samples, 0.06%)</title><rect x="1026.5" y="579.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1029.5" y="590.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (2 samples, 0.06%)</title><rect x="1026.5" y="563.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1029.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="1026.8" y="547.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1029.8" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.13%)</title><rect x="1027.2" y="579.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1030.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.09%)</title><rect x="1027.6" y="563.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1030.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.09%)</title><rect x="1027.6" y="547.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1030.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.isRequestFromService (4 samples, 0.13%)</title><rect x="1028.7" y="595.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1031.7" y="606.0"></text>
</g>
<g>
<title>java/lang/Boolean.parseBoolean (1 samples, 0.03%)</title><rect x="1029.1" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1032.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="1029.1" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1032.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="1029.1" y="547.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1032.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="1029.1" y="531.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1032.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.06%)</title><rect x="1029.4" y="579.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1032.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="1029.8" y="563.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1032.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="1029.8" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1032.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/Topology.findNode (104 samples, 3.28%)</title><rect x="1030.2" y="595.0" width="38.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1033.2" y="606.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/TreeRangeMap.get (51 samples, 1.61%)</title><rect x="1030.2" y="579.0" width="18.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1033.2" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/TreeRangeMap.getEntry (51 samples, 1.61%)</title><rect x="1030.2" y="563.0" width="18.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1033.2" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.floorEntry (51 samples, 1.61%)</title><rect x="1030.2" y="547.0" width="18.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1033.2" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFloorEntry (47 samples, 1.48%)</title><rect x="1031.7" y="531.0" width="17.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1034.7" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (46 samples, 1.45%)</title><rect x="1032.0" y="515.0" width="17.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1035.0" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Cut$BelowValue.compareTo (25 samples, 0.79%)</title><rect x="1039.9" y="499.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1042.9" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Cut.compareTo (20 samples, 0.63%)</title><rect x="1041.7" y="483.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1044.7" y="494.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="1048.8" y="467.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1051.8" y="478.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.03%)</title><rect x="1048.8" y="451.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1051.8" y="462.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1048.8" y="435.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1051.8" y="446.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1048.8" y="419.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1051.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/Topology.hash (53 samples, 1.67%)</title><rect x="1049.1" y="579.0" width="19.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1052.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (23 samples, 0.72%)</title><rect x="1049.1" y="563.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1052.1" y="574.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction.newHasher (23 samples, 0.72%)</title><rect x="1049.1" y="547.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1052.1" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (3 samples, 0.09%)</title><rect x="1054.0" y="531.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1057.0" y="542.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (3 samples, 0.09%)</title><rect x="1054.0" y="515.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1057.0" y="526.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractByteHasher.&lt;init&gt; (3 samples, 0.09%)</title><rect x="1054.0" y="499.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1057.0" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.09%)</title><rect x="1054.0" y="483.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1057.0" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFloorEntry (4 samples, 0.13%)</title><rect x="1055.1" y="531.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1058.1" y="542.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.09%)</title><rect x="1056.6" y="531.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1059.6" y="542.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.hash (30 samples, 0.94%)</title><rect x="1057.7" y="563.0" width="11.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1060.7" y="574.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (30 samples, 0.94%)</title><rect x="1057.7" y="547.0" width="11.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1060.7" y="558.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (30 samples, 0.94%)</title><rect x="1057.7" y="531.0" width="11.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1060.7" y="542.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (30 samples, 0.94%)</title><rect x="1057.7" y="515.0" width="11.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1060.7" y="526.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (30 samples, 0.94%)</title><rect x="1057.7" y="499.0" width="11.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1060.7" y="510.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implDigest (30 samples, 0.94%)</title><rect x="1057.7" y="483.0" width="11.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1060.7" y="494.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.i2bBig (8 samples, 0.25%)</title><rect x="1057.7" y="467.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1060.7" y="478.0"></text>
</g>
<g>
<title>sha256_implCompress (2 samples, 0.06%)</title><rect x="1058.4" y="451.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1061.4" y="462.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iBig64 (4 samples, 0.13%)</title><rect x="1059.2" y="451.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1062.2" y="462.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompress (22 samples, 0.69%)</title><rect x="1060.7" y="467.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1063.7" y="478.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompressCheck (22 samples, 0.69%)</title><rect x="1060.7" y="451.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1063.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (4 samples, 0.13%)</title><rect x="1064.8" y="435.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1067.8" y="446.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.16%)</title><rect x="1066.2" y="435.0" width="1.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1069.2" y="446.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iBig64 (2 samples, 0.06%)</title><rect x="1068.1" y="435.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1071.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/Topology.findNode (1 samples, 0.03%)</title><rect x="1068.8" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1071.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/Topology.hash (1 samples, 0.03%)</title><rect x="1068.8" y="595.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1071.8" y="606.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (1 samples, 0.03%)</title><rect x="1068.8" y="579.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1071.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction.newHasher (1 samples, 0.03%)</title><rect x="1068.8" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1071.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (15 samples, 0.47%)</title><rect x="1069.2" y="627.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1072.2" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.get (15 samples, 0.47%)</title><rect x="1069.2" y="611.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1072.2" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (12 samples, 0.38%)</title><rect x="1069.2" y="595.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1072.2" y="606.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (3 samples, 0.09%)</title><rect x="1069.6" y="579.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1072.6" y="590.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.25%)</title><rect x="1070.7" y="579.0" width="3.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1073.7" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.09%)</title><rect x="1073.7" y="595.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1076.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.09%)</title><rect x="1073.7" y="579.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1076.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.09%)</title><rect x="1073.7" y="563.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1076.7" y="574.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1074.4" y="547.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1077.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (17 samples, 0.54%)</title><rect x="1074.8" y="659.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1077.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.09%)</title><rect x="1077.0" y="643.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1080.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.09%)</title><rect x="1077.0" y="627.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1080.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.09%)</title><rect x="1077.0" y="611.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1080.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.09%)</title><rect x="1077.0" y="595.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1080.0" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1077.8" y="579.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1080.8" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1077.8" y="563.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1080.8" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1077.8" y="547.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1080.8" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.09%)</title><rect x="1078.1" y="643.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1081.1" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.09%)</title><rect x="1078.1" y="627.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1081.1" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (5 samples, 0.16%)</title><rect x="1079.2" y="643.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1082.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.03%)</title><rect x="1081.1" y="659.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1084.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (13 samples, 0.41%)</title><rect x="1081.5" y="659.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1084.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="1085.9" y="643.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1088.9" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="1085.9" y="627.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1088.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeaderCount (1 samples, 0.03%)</title><rect x="1086.3" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1089.3" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.19%)</title><rect x="1086.7" y="659.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1089.7" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.16%)</title><rect x="1087.1" y="643.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1090.1" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.06%)</title><rect x="1088.9" y="675.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1091.9" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (253 samples, 7.97%)</title><rect x="1089.7" y="675.0" width="94.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1092.7" y="686.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (230 samples, 7.24%)</title><rect x="1093.7" y="659.0" width="85.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1096.7" y="670.0">one/nio/ne..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.06%)</title><rect x="1097.1" y="643.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1100.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.76%)</title><rect x="1097.8" y="643.0" width="8.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1100.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.76%)</title><rect x="1097.8" y="627.0" width="8.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1100.8" y="638.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (18 samples, 0.57%)</title><rect x="1097.8" y="611.0" width="6.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1100.8" y="622.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (6 samples, 0.19%)</title><rect x="1098.6" y="595.0" width="2.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1101.6" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (9 samples, 0.28%)</title><rect x="1100.8" y="595.0" width="3.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1103.8" y="606.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.09%)</title><rect x="1102.3" y="579.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1105.3" y="590.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.06%)</title><rect x="1103.4" y="579.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1106.4" y="590.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="1104.1" y="595.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1107.1" y="606.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.09%)</title><rect x="1104.5" y="611.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1107.5" y="622.0"></text>
</g>
<g>
<title>recv (3 samples, 0.09%)</title><rect x="1105.6" y="611.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1108.6" y="622.0"></text>
</g>
<g>
<title>recv (195 samples, 6.14%)</title><rect x="1106.7" y="643.0" width="72.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1109.7" y="654.0">recv</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="1110.1" y="627.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1113.1" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (185 samples, 5.83%)</title><rect x="1110.5" y="627.0" width="68.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1113.5" y="638.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (185 samples, 5.83%)</title><rect x="1110.5" y="611.0" width="68.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1113.5" y="622.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_recvfrom (146 samples, 4.60%)</title><rect x="1120.9" y="595.0" width="54.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1123.9" y="606.0">__x64..</text>
</g>
<g>
<title>__sys_recvfrom (142 samples, 4.47%)</title><rect x="1122.4" y="579.0" width="52.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1125.4" y="590.0">__sys..</text>
</g>
<g>
<title>import_single_range (2 samples, 0.06%)</title><rect x="1125.3" y="563.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1128.3" y="574.0"></text>
</g>
<g>
<title>inet6_recvmsg (101 samples, 3.18%)</title><rect x="1126.1" y="563.0" width="37.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1129.1" y="574.0">ine..</text>
</g>
<g>
<title>tcp_recvmsg (96 samples, 3.02%)</title><rect x="1127.9" y="547.0" width="35.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1130.9" y="558.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (12 samples, 0.38%)</title><rect x="1137.2" y="531.0" width="4.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1140.2" y="542.0"></text>
</g>
<g>
<title>skb_release_all (11 samples, 0.35%)</title><rect x="1137.2" y="515.0" width="4.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1140.2" y="526.0"></text>
</g>
<g>
<title>skb_release_head_state (10 samples, 0.31%)</title><rect x="1137.6" y="499.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1140.6" y="510.0"></text>
</g>
<g>
<title>dst_release (6 samples, 0.19%)</title><rect x="1138.0" y="483.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1141.0" y="494.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.09%)</title><rect x="1140.2" y="483.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1143.2" y="494.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="1141.3" y="515.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1144.3" y="526.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.06%)</title><rect x="1141.7" y="531.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1144.7" y="542.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="1142.1" y="515.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1145.1" y="526.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.06%)</title><rect x="1142.4" y="531.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1145.4" y="542.0"></text>
</g>
<g>
<title>lock_sock_nested (7 samples, 0.22%)</title><rect x="1143.2" y="531.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1146.2" y="542.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.16%)</title><rect x="1143.9" y="515.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1146.9" y="526.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.03%)</title><rect x="1144.3" y="499.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1147.3" y="510.0"></text>
</g>
<g>
<title>preempt_count_add (3 samples, 0.09%)</title><rect x="1144.7" y="499.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1147.7" y="510.0"></text>
</g>
<g>
<title>ns_to_timespec64 (3 samples, 0.09%)</title><rect x="1145.8" y="531.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1148.8" y="542.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.13%)</title><rect x="1146.9" y="531.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1149.9" y="542.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.06%)</title><rect x="1146.9" y="515.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1149.9" y="526.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="1147.3" y="499.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1150.3" y="510.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.06%)</title><rect x="1147.6" y="515.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1150.6" y="526.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (25 samples, 0.79%)</title><rect x="1148.4" y="531.0" width="9.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1151.4" y="542.0"></text>
</g>
<g>
<title>__skb_datagram_iter (24 samples, 0.76%)</title><rect x="1148.7" y="515.0" width="9.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1151.7" y="526.0"></text>
</g>
<g>
<title>_copy_to_iter (8 samples, 0.25%)</title><rect x="1151.3" y="499.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1154.3" y="510.0"></text>
</g>
<g>
<title>copyout (7 samples, 0.22%)</title><rect x="1151.7" y="483.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1154.7" y="494.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.13%)</title><rect x="1152.5" y="467.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1155.5" y="478.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="1153.9" y="467.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1156.9" y="478.0"></text>
</g>
<g>
<title>simple_copy_to_iter (9 samples, 0.28%)</title><rect x="1154.3" y="499.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1157.3" y="510.0"></text>
</g>
<g>
<title>__check_object_size (9 samples, 0.28%)</title><rect x="1154.3" y="483.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1157.3" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (8 samples, 0.25%)</title><rect x="1154.7" y="467.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1157.7" y="478.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="1157.3" y="451.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1160.3" y="462.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.03%)</title><rect x="1157.3" y="435.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1160.3" y="446.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1157.3" y="419.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1160.3" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1157.3" y="403.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1160.3" y="414.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="1157.3" y="387.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1160.3" y="398.0"></text>
</g>
<g>
<title>rtl8169_poll	[r8169] (1 samples, 0.03%)</title><rect x="1157.3" y="371.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1160.3" y="382.0"></text>
</g>
<g>
<title>napi_complete_done (1 samples, 0.03%)</title><rect x="1157.3" y="355.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1160.3" y="366.0"></text>
</g>
<g>
<title>napi_gro_flush (1 samples, 0.03%)</title><rect x="1157.3" y="339.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1160.3" y="350.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="1157.3" y="323.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1160.3" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.03%)</title><rect x="1157.3" y="307.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1160.3" y="318.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="1157.3" y="291.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1160.3" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="1157.3" y="275.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1160.3" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="1157.3" y="259.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1160.3" y="270.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.03%)</title><rect x="1157.3" y="243.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1160.3" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="1157.3" y="227.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1160.3" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="1157.3" y="211.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1160.3" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="1157.3" y="195.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1160.3" y="206.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="1157.3" y="179.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1160.3" y="190.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="1157.3" y="163.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1160.3" y="174.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1157.3" y="147.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1160.3" y="158.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.13%)</title><rect x="1157.7" y="531.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1160.7" y="542.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.03%)</title><rect x="1158.8" y="515.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1161.8" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (11 samples, 0.35%)</title><rect x="1159.2" y="531.0" width="4.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1162.2" y="542.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.13%)</title><rect x="1161.8" y="515.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1164.8" y="526.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.09%)</title><rect x="1162.1" y="499.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1165.1" y="510.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.09%)</title><rect x="1162.1" y="483.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1165.1" y="494.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (1 samples, 0.03%)</title><rect x="1163.2" y="531.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1166.2" y="542.0"></text>
</g>
<g>
<title>sock_recvmsg (4 samples, 0.13%)</title><rect x="1163.6" y="563.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1166.6" y="574.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.06%)</title><rect x="1164.4" y="547.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1167.4" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (27 samples, 0.85%)</title><rect x="1165.1" y="563.0" width="10.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1168.1" y="574.0"></text>
</g>
<g>
<title>__fget_light (27 samples, 0.85%)</title><rect x="1165.1" y="547.0" width="10.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1168.1" y="558.0"></text>
</g>
<g>
<title>__fget (20 samples, 0.63%)</title><rect x="1167.7" y="531.0" width="7.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1170.7" y="542.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.06%)</title><rect x="1175.1" y="595.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1178.1" y="606.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.06%)</title><rect x="1175.1" y="579.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1178.1" y="590.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.03%)</title><rect x="1175.5" y="563.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1178.5" y="574.0"></text>
</g>
<g>
<title>syscall_trace_enter (9 samples, 0.28%)</title><rect x="1175.9" y="595.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1178.9" y="606.0"></text>
</g>
<g>
<title>__audit_syscall_entry (3 samples, 0.09%)</title><rect x="1177.4" y="579.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1180.4" y="590.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.06%)</title><rect x="1178.5" y="579.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1181.5" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (12 samples, 0.38%)</title><rect x="1179.2" y="659.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1182.2" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.03%)</title><rect x="1182.9" y="643.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1185.9" y="654.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="1183.3" y="643.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1186.3" y="654.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.03%)</title><rect x="1183.3" y="627.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1186.3" y="638.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1183.3" y="611.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1186.3" y="622.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1183.3" y="595.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1186.3" y="606.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="1183.3" y="579.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1186.3" y="590.0"></text>
</g>
<g>
<title>rtl8169_poll	[r8169] (1 samples, 0.03%)</title><rect x="1183.3" y="563.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1186.3" y="574.0"></text>
</g>
<g>
<title>napi_complete_done (1 samples, 0.03%)</title><rect x="1183.3" y="547.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1186.3" y="558.0"></text>
</g>
<g>
<title>napi_gro_flush (1 samples, 0.03%)</title><rect x="1183.3" y="531.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1186.3" y="542.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="1183.3" y="515.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1186.3" y="526.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.03%)</title><rect x="1183.3" y="499.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1186.3" y="510.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="1183.3" y="483.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1186.3" y="494.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="1183.3" y="467.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1186.3" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="1183.3" y="451.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1186.3" y="462.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.03%)</title><rect x="1183.3" y="435.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1186.3" y="446.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="1183.3" y="419.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1186.3" y="430.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="1183.3" y="403.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1186.3" y="414.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="1183.3" y="387.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1186.3" y="398.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="1183.3" y="371.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1186.3" y="382.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="1183.3" y="355.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1186.3" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1183.3" y="339.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1186.3" y="350.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.16%)</title><rect x="1183.7" y="707.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.7" y="718.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.13%)</title><rect x="1184.1" y="691.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1187.1" y="702.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.09%)</title><rect x="1184.4" y="675.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1187.4" y="686.0"></text>
</g>
<g>
<title>start_thread (12 samples, 0.38%)</title><rect x="1185.5" y="723.0" width="4.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1188.5" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (12 samples, 0.38%)</title><rect x="1185.5" y="707.0" width="4.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1188.5" y="718.0"></text>
</g>
<g>
<title>JavaThread::run() (11 samples, 0.35%)</title><rect x="1185.5" y="691.0" width="4.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.5" y="702.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (11 samples, 0.35%)</title><rect x="1185.5" y="675.0" width="4.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.5" y="686.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (11 samples, 0.35%)</title><rect x="1185.5" y="659.0" width="4.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.5" y="670.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (11 samples, 0.35%)</title><rect x="1185.5" y="643.0" width="4.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.5" y="654.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (11 samples, 0.35%)</title><rect x="1185.5" y="627.0" width="4.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.5" y="638.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (11 samples, 0.35%)</title><rect x="1185.5" y="611.0" width="4.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.5" y="622.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (6 samples, 0.19%)</title><rect x="1185.5" y="595.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.5" y="606.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.03%)</title><rect x="1185.5" y="579.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.5" y="590.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (1 samples, 0.03%)</title><rect x="1185.5" y="563.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.5" y="574.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.03%)</title><rect x="1185.5" y="547.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.5" y="558.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.03%)</title><rect x="1185.5" y="531.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1188.5" y="542.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.06%)</title><rect x="1185.9" y="579.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.9" y="590.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.06%)</title><rect x="1185.9" y="563.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.9" y="574.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.03%)</title><rect x="1185.9" y="547.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.9" y="558.0"></text>
</g>
<g>
<title>PhaseCFG::select(Block*, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, unsigned int, long*) (1 samples, 0.03%)</title><rect x="1185.9" y="531.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.9" y="542.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (1 samples, 0.03%)</title><rect x="1185.9" y="515.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.9" y="526.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.03%)</title><rect x="1186.3" y="547.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.3" y="558.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.03%)</title><rect x="1186.3" y="531.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.3" y="542.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (3 samples, 0.09%)</title><rect x="1186.7" y="579.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.7" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.03%)</title><rect x="1186.7" y="563.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.7" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.03%)</title><rect x="1186.7" y="547.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.7" y="558.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.03%)</title><rect x="1187.0" y="563.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.0" y="574.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.03%)</title><rect x="1187.0" y="547.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.0" y="558.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.03%)</title><rect x="1187.4" y="563.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.4" y="574.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.03%)</title><rect x="1187.4" y="547.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.4" y="558.0"></text>
</g>
<g>
<title>Compile::Optimize() (4 samples, 0.13%)</title><rect x="1187.8" y="595.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.8" y="606.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (3 samples, 0.09%)</title><rect x="1187.8" y="579.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.8" y="590.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.03%)</title><rect x="1187.8" y="563.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.8" y="574.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.03%)</title><rect x="1187.8" y="547.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.8" y="558.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.03%)</title><rect x="1188.1" y="563.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.1" y="574.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.03%)</title><rect x="1188.1" y="547.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.1" y="558.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.03%)</title><rect x="1188.1" y="531.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.1" y="542.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (1 samples, 0.03%)</title><rect x="1188.1" y="515.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.1" y="526.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.03%)</title><rect x="1188.1" y="499.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.1" y="510.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.03%)</title><rect x="1188.5" y="563.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.5" y="574.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.03%)</title><rect x="1188.5" y="547.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.5" y="558.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1188.5" y="531.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.5" y="542.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="1188.5" y="515.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.5" y="526.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.03%)</title><rect x="1188.5" y="499.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.5" y="510.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.03%)</title><rect x="1188.9" y="579.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.9" y="590.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.03%)</title><rect x="1188.9" y="563.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.9" y="574.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1188.9" y="547.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.9" y="558.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.03%)</title><rect x="1188.9" y="531.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.9" y="542.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.03%)</title><rect x="1188.9" y="515.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.9" y="526.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.03%)</title><rect x="1188.9" y="499.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.9" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1189.3" y="595.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.3" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1189.3" y="579.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.3" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1189.3" y="563.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.3" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1189.3" y="547.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.3" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1189.3" y="531.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.3" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1189.3" y="515.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.3" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1189.3" y="499.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.3" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1189.3" y="483.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.3" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1189.3" y="467.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.3" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1189.3" y="451.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.3" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1189.3" y="435.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.3" y="446.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1189.3" y="419.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.3" y="430.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1189.3" y="403.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.3" y="414.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="1189.3" y="387.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.3" y="398.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="1189.3" y="371.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.3" y="382.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1189.3" y="355.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.3" y="366.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1189.3" y="339.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.3" y="350.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.03%)</title><rect x="1189.3" y="323.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.3" y="334.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.03%)</title><rect x="1189.3" y="307.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.3" y="318.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, Thread*) (1 samples, 0.03%)</title><rect x="1189.3" y="291.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.3" y="302.0"></text>
</g>
<g>
<title>Reflection::verify_member_access(Klass const*, Klass const*, Klass const*, AccessFlags, bool, bool, Thread*) (1 samples, 0.03%)</title><rect x="1189.3" y="275.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.3" y="286.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.03%)</title><rect x="1189.6" y="691.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.6" y="702.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.03%)</title><rect x="1189.6" y="675.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.6" y="686.0"></text>
</g>
<g>
<title>__GI___sched_yield (1 samples, 0.03%)</title><rect x="1189.6" y="659.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1192.6" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1189.6" y="643.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1192.6" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1189.6" y="627.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1192.6" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.03%)</title><rect x="1189.6" y="611.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1192.6" y="622.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="1189.6" y="595.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1192.6" y="606.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="1189.6" y="579.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1192.6" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.03%)</title><rect x="1189.6" y="563.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1192.6" y="574.0"></text>
</g>
</g>
</svg>
