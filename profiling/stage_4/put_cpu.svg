<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="805"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="805"> </text>
<g id="frames">
<g>
<title>all (2,749 samples, 100.00%)</title><rect x="10.0" y="771.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="782.0">all</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (8 samples, 0.29%)</title><rect x="10.0" y="755.0" width="3.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.25%)</title><rect x="10.4" y="739.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.4" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.22%)</title><rect x="10.9" y="723.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.9" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.22%)</title><rect x="10.9" y="707.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.9" y="718.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned long, Thread*) (2 samples, 0.07%)</title><rect x="10.9" y="691.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.9" y="702.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (2 samples, 0.07%)</title><rect x="10.9" y="675.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.9" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (2 samples, 0.07%)</title><rect x="11.7" y="691.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.7" y="702.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.07%)</title><rect x="12.6" y="691.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.6" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="13.4" y="755.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="16.4" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="13.4" y="739.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="16.4" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="13.4" y="723.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="16.4" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="13.4" y="707.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="16.4" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="13.4" y="691.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.4" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.04%)</title><rect x="13.4" y="675.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="16.4" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.11%)</title><rect x="13.9" y="755.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.9" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="13.9" y="739.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="16.9" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.07%)</title><rect x="14.3" y="739.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="17.3" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.07%)</title><rect x="14.3" y="723.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.3" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.07%)</title><rect x="14.3" y="707.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="17.3" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.04%)</title><rect x="14.3" y="691.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="17.3" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="14.7" y="691.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.7" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.04%)</title><rect x="14.7" y="675.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.7" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.04%)</title><rect x="14.7" y="659.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.7" y="670.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.04%)</title><rect x="14.7" y="643.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.7" y="654.0"></text>
</g>
<g>
<title>PerfEvents::destroyForThread(int) (1 samples, 0.04%)</title><rect x="15.2" y="755.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="18.2" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.15%)</title><rect x="15.6" y="755.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="18.6" y="766.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.15%)</title><rect x="15.6" y="739.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="18.6" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (3 samples, 0.11%)</title><rect x="16.0" y="723.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="19.0" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.07%)</title><rect x="16.4" y="707.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="19.4" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (1 samples, 0.04%)</title><rect x="16.4" y="691.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="19.4" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.04%)</title><rect x="16.9" y="691.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="19.9" y="702.0"></text>
</g>
<g>
<title>[not_walkable_Java] (44 samples, 1.60%)</title><rect x="17.3" y="755.0" width="18.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="20.3" y="766.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.04%)</title><rect x="17.3" y="739.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="20.3" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.11%)</title><rect x="17.7" y="739.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="20.7" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (3 samples, 0.11%)</title><rect x="17.7" y="723.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="20.7" y="734.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.04%)</title><rect x="17.7" y="707.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="20.7" y="718.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="17.7" y="691.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="20.7" y="702.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.04%)</title><rect x="17.7" y="675.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="20.7" y="686.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.07%)</title><rect x="18.2" y="707.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="21.2" y="718.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.07%)</title><rect x="18.2" y="691.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="21.2" y="702.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="18.2" y="675.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="21.2" y="686.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.04%)</title><rect x="18.2" y="659.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="21.2" y="670.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.04%)</title><rect x="18.6" y="675.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="21.6" y="686.0"></text>
</g>
<g>
<title>__clock_gettime (40 samples, 1.46%)</title><rect x="19.0" y="739.0" width="17.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="22.0" y="750.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.18%)</title><rect x="19.0" y="723.0" width="2.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="22.0" y="734.0"></text>
</g>
<g>
<title>clock_gettime (35 samples, 1.27%)</title><rect x="21.2" y="723.0" width="15.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="24.2" y="734.0"></text>
</g>
<g>
<title>[vdso] (32 samples, 1.16%)</title><rect x="22.4" y="707.0" width="13.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="25.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="36.2" y="755.0" width="1.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="39.2" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.07%)</title><rect x="36.2" y="739.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="39.2" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="36.2" y="723.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="39.2" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="36.2" y="707.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="39.2" y="718.0"></text>
</g>
<g>
<title>__se_sys_futex (2 samples, 0.07%)</title><rect x="36.2" y="691.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="39.2" y="702.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.07%)</title><rect x="36.2" y="675.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="39.2" y="686.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.07%)</title><rect x="36.2" y="659.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="39.2" y="670.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="36.2" y="643.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="39.2" y="654.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.04%)</title><rect x="36.2" y="627.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="39.2" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="36.2" y="611.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="39.2" y="622.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.04%)</title><rect x="36.6" y="643.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="39.6" y="654.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="36.6" y="627.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="39.6" y="638.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.04%)</title><rect x="37.0" y="739.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="40.0" y="750.0"></text>
</g>
<g>
<title>open64 (1 samples, 0.04%)</title><rect x="37.5" y="739.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="40.5" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="37.5" y="723.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="40.5" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="37.5" y="707.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="40.5" y="718.0"></text>
</g>
<g>
<title>do_sys_open (1 samples, 0.04%)</title><rect x="37.5" y="691.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="40.5" y="702.0"></text>
</g>
<g>
<title>do_filp_open (1 samples, 0.04%)</title><rect x="37.5" y="675.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="40.5" y="686.0"></text>
</g>
<g>
<title>path_openat (1 samples, 0.04%)</title><rect x="37.5" y="659.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="40.5" y="670.0"></text>
</g>
<g>
<title>link_path_walk (1 samples, 0.04%)</title><rect x="37.5" y="643.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="40.5" y="654.0"></text>
</g>
<g>
<title>walk_component (1 samples, 0.04%)</title><rect x="37.5" y="627.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="40.5" y="638.0"></text>
</g>
<g>
<title>lookup_fast (1 samples, 0.04%)</title><rect x="37.5" y="611.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="40.5" y="622.0"></text>
</g>
<g>
<title>[unknown_Java] (55 samples, 2.00%)</title><rect x="37.9" y="755.0" width="23.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="40.9" y="766.0">[..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="55.5" y="739.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="58.5" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.07%)</title><rect x="55.5" y="723.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="58.5" y="734.0"></text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.18%)</title><rect x="56.4" y="739.0" width="2.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="59.4" y="750.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="58.1" y="723.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="61.1" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="58.1" y="707.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="61.1" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.07%)</title><rect x="58.5" y="739.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="61.5" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="58.5" y="723.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="61.5" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="58.5" y="707.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="61.5" y="718.0"></text>
</g>
<g>
<title>__se_sys_futex (2 samples, 0.07%)</title><rect x="58.5" y="691.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="61.5" y="702.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.07%)</title><rect x="58.5" y="675.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="61.5" y="686.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.07%)</title><rect x="58.5" y="659.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="61.5" y="670.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.07%)</title><rect x="58.5" y="643.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="61.5" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.07%)</title><rect x="58.5" y="627.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="61.5" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.07%)</title><rect x="58.5" y="611.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="61.5" y="622.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.15%)</title><rect x="59.4" y="739.0" width="1.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="62.4" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="61.1" y="739.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="64.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,796 samples, 65.33%)</title><rect x="61.5" y="755.0" width="770.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.5" y="766.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,796 samples, 65.33%)</title><rect x="61.5" y="739.0" width="770.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.5" y="750.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,796 samples, 65.33%)</title><rect x="61.5" y="723.0" width="770.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.5" y="734.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (5 samples, 0.18%)</title><rect x="63.2" y="707.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.18%)</title><rect x="63.2" y="691.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (189 samples, 6.88%)</title><rect x="65.4" y="707.0" width="81.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.4" y="718.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (189 samples, 6.88%)</title><rect x="65.4" y="691.0" width="81.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.4" y="702.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (188 samples, 6.84%)</title><rect x="65.8" y="675.0" width="80.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.8" y="686.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (37 samples, 1.35%)</title><rect x="65.8" y="659.0" width="15.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (37 samples, 1.35%)</title><rect x="65.8" y="643.0" width="15.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="68.8" y="654.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.07%)</title><rect x="70.5" y="627.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="73.5" y="638.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="71.4" y="627.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="74.4" y="638.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="71.4" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="74.4" y="622.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="71.4" y="595.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="74.4" y="606.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="71.4" y="579.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="74.4" y="590.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="71.4" y="563.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="74.4" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="71.4" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="74.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (22 samples, 0.80%)</title><rect x="71.8" y="627.0" width="9.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.8" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="71.8" y="611.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="74.8" y="622.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.04%)</title><rect x="71.8" y="595.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="74.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="72.2" y="611.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="75.2" y="622.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.04%)</title><rect x="72.2" y="595.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="75.2" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 0.73%)</title><rect x="72.7" y="611.0" width="8.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="75.7" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.65%)</title><rect x="73.5" y="595.0" width="7.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="76.5" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.65%)</title><rect x="73.5" y="579.0" width="7.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="76.5" y="590.0"></text>
</g>
<g>
<title>__se_sys_futex (16 samples, 0.58%)</title><rect x="74.4" y="563.0" width="6.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="77.4" y="574.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.55%)</title><rect x="74.8" y="547.0" width="6.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="77.8" y="558.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.55%)</title><rect x="74.8" y="531.0" width="6.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="77.8" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.04%)</title><rect x="75.2" y="515.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="78.2" y="526.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.04%)</title><rect x="75.7" y="515.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="78.7" y="526.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.44%)</title><rect x="76.1" y="515.0" width="5.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="79.1" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.40%)</title><rect x="76.5" y="499.0" width="4.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="79.5" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.40%)</title><rect x="76.5" y="483.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="79.5" y="494.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.04%)</title><rect x="81.3" y="627.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="84.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (151 samples, 5.49%)</title><rect x="81.7" y="659.0" width="64.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.7" y="670.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (145 samples, 5.27%)</title><rect x="83.4" y="643.0" width="62.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.4" y="654.0">java/u..</text>
</g>
<g>
<title>__clock_gettime (6 samples, 0.22%)</title><rect x="95.0" y="627.0" width="2.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="98.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (106 samples, 3.86%)</title><rect x="97.6" y="627.0" width="45.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.6" y="638.0">jdk/..</text>
</g>
<g>
<title>Unsafe_Park (34 samples, 1.24%)</title><rect x="100.1" y="611.0" width="14.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="103.1" y="622.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.07%)</title><rect x="101.9" y="595.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="104.9" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (11 samples, 0.40%)</title><rect x="102.7" y="595.0" width="4.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="105.7" y="606.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.07%)</title><rect x="104.9" y="579.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="107.9" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.11%)</title><rect x="105.7" y="579.0" width="1.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="108.7" y="590.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.04%)</title><rect x="107.0" y="579.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="110.0" y="590.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="107.4" y="595.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="110.4" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.07%)</title><rect x="107.9" y="595.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="110.9" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (4 samples, 0.15%)</title><rect x="108.7" y="595.0" width="1.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="111.7" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.15%)</title><rect x="108.7" y="579.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="111.7" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.15%)</title><rect x="108.7" y="563.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="111.7" y="574.0"></text>
</g>
<g>
<title>__se_sys_futex (2 samples, 0.07%)</title><rect x="109.2" y="547.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="112.2" y="558.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.07%)</title><rect x="109.2" y="531.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="112.2" y="542.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.07%)</title><rect x="109.2" y="515.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="112.2" y="526.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="109.6" y="499.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="112.6" y="510.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.04%)</title><rect x="109.6" y="483.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="112.6" y="494.0"></text>
</g>
<g>
<title>restore_regs_and_return_to_kernel (1 samples, 0.04%)</title><rect x="109.6" y="467.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="112.6" y="478.0"></text>
</g>
<g>
<title>preempt_schedule_irq (1 samples, 0.04%)</title><rect x="109.6" y="451.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="112.6" y="462.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="110.0" y="547.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="113.0" y="558.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.04%)</title><rect x="110.4" y="595.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="113.4" y="606.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.15%)</title><rect x="110.9" y="595.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="113.9" y="606.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.07%)</title><rect x="112.6" y="595.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="115.6" y="606.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.04%)</title><rect x="113.4" y="595.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="116.4" y="606.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.04%)</title><rect x="113.4" y="579.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="116.4" y="590.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="113.4" y="563.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="116.4" y="574.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="113.4" y="547.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="116.4" y="558.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.07%)</title><rect x="113.9" y="595.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="116.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 2.29%)</title><rect x="114.7" y="611.0" width="27.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="117.7" y="622.0">[..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.04%)</title><rect x="114.7" y="595.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="117.7" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (59 samples, 2.15%)</title><rect x="115.2" y="595.0" width="25.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="118.2" y="606.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (56 samples, 2.04%)</title><rect x="116.0" y="579.0" width="24.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="119.0" y="590.0">e..</text>
</g>
<g>
<title>do_syscall_64 (56 samples, 2.04%)</title><rect x="116.0" y="563.0" width="24.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="119.0" y="574.0">d..</text>
</g>
<g>
<title>__se_sys_futex (50 samples, 1.82%)</title><rect x="118.6" y="547.0" width="21.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="121.6" y="558.0">_..</text>
</g>
<g>
<title>do_futex (46 samples, 1.67%)</title><rect x="119.5" y="531.0" width="19.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="122.5" y="542.0"></text>
</g>
<g>
<title>futex_wait (46 samples, 1.67%)</title><rect x="119.5" y="515.0" width="19.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="122.5" y="526.0"></text>
</g>
<g>
<title>futex_wait_queue_me (29 samples, 1.05%)</title><rect x="120.7" y="499.0" width="12.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="123.7" y="510.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (21 samples, 0.76%)</title><rect x="121.2" y="483.0" width="9.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="124.2" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (21 samples, 0.76%)</title><rect x="121.2" y="467.0" width="9.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="124.2" y="478.0"></text>
</g>
<g>
<title>plist_add (3 samples, 0.11%)</title><rect x="130.2" y="483.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="133.2" y="494.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.15%)</title><rect x="131.5" y="483.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="134.5" y="494.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.11%)</title><rect x="131.5" y="467.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="134.5" y="478.0"></text>
</g>
<g>
<title>debug_smp_processor_id (1 samples, 0.04%)</title><rect x="131.9" y="451.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="134.9" y="462.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="132.3" y="451.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="135.3" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.04%)</title><rect x="132.3" y="435.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="135.3" y="446.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="132.8" y="467.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="135.8" y="478.0"></text>
</g>
<g>
<title>futex_wait_setup (13 samples, 0.47%)</title><rect x="133.2" y="499.0" width="5.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="136.2" y="510.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="134.9" y="483.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="137.9" y="494.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="134.9" y="467.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="137.9" y="478.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.04%)</title><rect x="134.9" y="451.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="137.9" y="462.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.07%)</title><rect x="135.3" y="483.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="138.3" y="494.0"></text>
</g>
<g>
<title>get_futex_value_locked (4 samples, 0.15%)</title><rect x="136.2" y="483.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="139.2" y="494.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.07%)</title><rect x="137.9" y="483.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="140.9" y="494.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.04%)</title><rect x="138.8" y="499.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="141.8" y="510.0"></text>
</g>
<g>
<title>get_timespec64 (2 samples, 0.07%)</title><rect x="139.2" y="531.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="142.2" y="542.0"></text>
</g>
<g>
<title>_copy_from_user (2 samples, 0.07%)</title><rect x="139.2" y="515.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="142.2" y="526.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="139.6" y="499.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="142.6" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="140.1" y="579.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="143.1" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="140.1" y="563.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="143.1" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="140.1" y="547.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="143.1" y="558.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="140.5" y="595.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="143.5" y="606.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.04%)</title><rect x="140.9" y="595.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="143.9" y="606.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.04%)</title><rect x="141.3" y="595.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="144.3" y="606.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="141.8" y="611.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="144.8" y="622.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="141.8" y="595.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="144.8" y="606.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="141.8" y="579.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="144.8" y="590.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.07%)</title><rect x="142.2" y="611.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="145.2" y="622.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (6 samples, 0.22%)</title><rect x="143.1" y="627.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="146.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.07%)</title><rect x="145.6" y="643.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="148.6" y="654.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="146.1" y="627.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="149.1" y="638.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="146.1" y="611.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="149.1" y="622.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="146.1" y="595.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="149.1" y="606.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="146.1" y="579.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="149.1" y="590.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="146.1" y="563.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="149.1" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="146.1" y="547.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="149.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl$$Lambda$70/1080066129.run (1,598 samples, 58.13%)</title><rect x="146.5" y="707.0" width="685.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="149.5" y="718.0">ru/mail/polis/service/saloed/ServiceImpl$$Lambda$70/1080066129.run</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$3 (1,596 samples, 58.06%)</title><rect x="147.4" y="691.0" width="685.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.4" y="702.0">ru/mail/polis/service/saloed/ServiceImpl.lambda$entity$3</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/EntityRequestProcessor.makeUserResponse (2 samples, 0.07%)</title><rect x="149.5" y="675.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/EntityRequestProcessor.process (5 samples, 0.18%)</title><rect x="150.4" y="675.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.4" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="152.1" y="659.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="155.1" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="152.1" y="643.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="155.1" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="152.1" y="627.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="155.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/EntityRequestProcessor.processForService (380 samples, 13.82%)</title><rect x="152.5" y="675.0" width="163.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="155.5" y="686.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/EntityRequestProcessor.process (380 samples, 13.82%)</title><rect x="152.5" y="659.0" width="163.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="155.5" y="670.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.upsertRecord (380 samples, 13.82%)</title><rect x="152.5" y="643.0" width="163.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.5" y="654.0">ru/mail/polis/dao/Roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (366 samples, 13.31%)</title><rect x="152.5" y="627.0" width="157.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.5" y="638.0">org/rocksdb/RocksDB...</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="155.5" y="611.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="158.5" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (358 samples, 13.02%)</title><rect x="155.9" y="611.0" width="153.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.9" y="622.0">org/rocksdb/RocksDB..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (313 samples, 11.39%)</title><rect x="157.2" y="595.0" width="134.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="160.2" y="606.0">Java_org_rocksdb_..</text>
</g>
<g>
<title>__GI___libc_malloc (3 samples, 0.11%)</title><rect x="160.7" y="579.0" width="1.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="163.7" y="590.0"></text>
</g>
<g>
<title>_init (2 samples, 0.07%)</title><rect x="162.0" y="579.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="165.0" y="590.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.15%)</title><rect x="162.8" y="579.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="165.8" y="590.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.04%)</title><rect x="164.5" y="579.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="167.5" y="590.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.07%)</title><rect x="165.0" y="579.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="168.0" y="590.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.04%)</title><rect x="165.8" y="579.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="168.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.11%)</title><rect x="166.2" y="579.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="169.2" y="590.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (289 samples, 10.51%)</title><rect x="167.5" y="579.0" width="124.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="170.5" y="590.0">rocksdb_put_hel..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.07%)</title><rect x="168.0" y="563.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="171.0" y="574.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="168.8" y="563.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="171.8" y="574.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (2 samples, 0.07%)</title><rect x="169.3" y="563.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="172.3" y="574.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.11%)</title><rect x="170.1" y="563.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="173.1" y="574.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="170.1" y="547.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="173.1" y="558.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="170.5" y="547.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="173.5" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="171.0" y="547.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="174.0" y="558.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.04%)</title><rect x="171.0" y="531.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="174.0" y="542.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.04%)</title><rect x="171.0" y="515.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="174.0" y="526.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="171.0" y="499.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="174.0" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="171.0" y="483.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="174.0" y="494.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.04%)</title><rect x="171.0" y="467.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="174.0" y="478.0"></text>
</g>
<g>
<title>rtl8169_poll	[r8169] (1 samples, 0.04%)</title><rect x="171.0" y="451.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="174.0" y="462.0"></text>
</g>
<g>
<title>napi_complete_done (1 samples, 0.04%)</title><rect x="171.0" y="435.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="174.0" y="446.0"></text>
</g>
<g>
<title>napi_gro_flush (1 samples, 0.04%)</title><rect x="171.0" y="419.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="174.0" y="430.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.04%)</title><rect x="171.0" y="403.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="174.0" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.04%)</title><rect x="171.0" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="174.0" y="398.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.04%)</title><rect x="171.0" y="371.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="174.0" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.04%)</title><rect x="171.0" y="355.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="174.0" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.04%)</title><rect x="171.0" y="339.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="174.0" y="350.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.04%)</title><rect x="171.0" y="323.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="174.0" y="334.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.04%)</title><rect x="171.0" y="307.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="174.0" y="318.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.04%)</title><rect x="171.0" y="291.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="174.0" y="302.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.04%)</title><rect x="171.0" y="275.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="174.0" y="286.0"></text>
</g>
<g>
<title>tcp_validate_incoming (1 samples, 0.04%)</title><rect x="171.0" y="259.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="174.0" y="270.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.04%)</title><rect x="171.0" y="243.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="174.0" y="254.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.04%)</title><rect x="171.0" y="227.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="174.0" y="238.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.04%)</title><rect x="171.0" y="211.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="174.0" y="222.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.04%)</title><rect x="171.0" y="195.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="174.0" y="206.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="171.0" y="179.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="174.0" y="190.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.22%)</title><rect x="171.4" y="563.0" width="2.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="174.4" y="574.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="172.7" y="547.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="175.7" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.07%)</title><rect x="173.1" y="547.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="176.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (266 samples, 9.68%)</title><rect x="174.0" y="563.0" width="114.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="177.0" y="574.0">rocksdb::DB::P..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.11%)</title><rect x="174.4" y="547.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="177.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (262 samples, 9.53%)</title><rect x="175.7" y="547.0" width="112.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="178.7" y="558.0">rocksdb::DBImp..</text>
</g>
<g>
<title>_init (2 samples, 0.07%)</title><rect x="175.7" y="531.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="178.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (259 samples, 9.42%)</title><rect x="176.5" y="531.0" width="111.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="179.5" y="542.0">rocksdb::DB::..</text>
</g>
<g>
<title>__libc_free (3 samples, 0.11%)</title><rect x="176.5" y="515.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="179.5" y="526.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.07%)</title><rect x="177.8" y="515.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="180.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.04%)</title><rect x="178.7" y="515.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="181.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (233 samples, 8.48%)</title><rect x="179.1" y="515.0" width="100.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="182.1" y="526.0">rocksdb::DBI..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="179.6" y="499.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="182.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.04%)</title><rect x="180.0" y="499.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="183.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (221 samples, 8.04%)</title><rect x="180.4" y="499.0" width="94.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="183.4" y="510.0">rocksdb::DB..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="188.6" y="483.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="191.6" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.04%)</title><rect x="188.6" y="467.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="191.6" y="478.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="189.0" y="483.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="192.0" y="494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="189.0" y="467.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="192.0" y="478.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="189.0" y="451.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="192.0" y="462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="189.0" y="435.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="192.0" y="446.0"></text>
</g>
<g>
<title>__GI___sched_yield (1 samples, 0.04%)</title><rect x="189.4" y="483.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="192.4" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="189.4" y="467.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="192.4" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="189.4" y="451.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="192.4" y="462.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.04%)</title><rect x="189.4" y="435.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="192.4" y="446.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="189.4" y="419.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="192.4" y="430.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="189.4" y="403.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="192.4" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.04%)</title><rect x="189.4" y="387.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="192.4" y="398.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="189.9" y="483.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="192.9" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.04%)</title><rect x="190.7" y="483.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="193.7" y="494.0"></text>
</g>
<g>
<title>_init (4 samples, 0.15%)</title><rect x="191.1" y="483.0" width="1.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="194.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (2 samples, 0.07%)</title><rect x="192.9" y="483.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="195.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (6 samples, 0.22%)</title><rect x="193.7" y="483.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="196.7" y="494.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="195.4" y="467.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="198.4" y="478.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.04%)</title><rect x="195.9" y="467.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="198.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.04%)</title><rect x="196.3" y="483.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="199.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (63 samples, 2.29%)</title><rect x="196.7" y="483.0" width="27.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="199.7" y="494.0">r..</text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="197.6" y="467.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="200.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (58 samples, 2.11%)</title><rect x="198.0" y="467.0" width="24.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="201.0" y="478.0">r..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (57 samples, 2.07%)</title><rect x="198.4" y="451.0" width="24.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="201.4" y="462.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (5 samples, 0.18%)</title><rect x="198.9" y="435.0" width="2.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="201.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="201.0" y="435.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="204.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.04%)</title><rect x="201.4" y="435.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="204.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (49 samples, 1.78%)</title><rect x="201.9" y="435.0" width="21.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="204.9" y="446.0">r..</text>
</g>
<g>
<title>rocksdb::PosixRandomRWFile::Flush() (1 samples, 0.04%)</title><rect x="202.3" y="419.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="205.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.04%)</title><rect x="202.7" y="419.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="205.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="203.2" y="419.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="206.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="203.6" y="419.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="206.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="203.6" y="403.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="206.6" y="414.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (42 samples, 1.53%)</title><rect x="204.0" y="419.0" width="18.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="207.0" y="430.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="204.0" y="403.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="207.0" y="414.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (40 samples, 1.46%)</title><rect x="204.4" y="403.0" width="17.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="207.4" y="414.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="205.7" y="387.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="208.7" y="398.0"></text>
</g>
<g>
<title>__write (35 samples, 1.27%)</title><rect x="206.2" y="387.0" width="15.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="209.2" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 1.16%)</title><rect x="207.5" y="371.0" width="13.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="210.5" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 1.16%)</title><rect x="207.5" y="355.0" width="13.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="210.5" y="366.0"></text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.07%)</title><rect x="208.3" y="339.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="211.3" y="350.0"></text>
</g>
<g>
<title>ksys_write (25 samples, 0.91%)</title><rect x="209.2" y="339.0" width="10.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="212.2" y="350.0"></text>
</g>
<g>
<title>__f_unlock_pos (1 samples, 0.04%)</title><rect x="209.6" y="323.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="212.6" y="334.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.07%)</title><rect x="210.0" y="323.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="213.0" y="334.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="210.0" y="307.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="213.0" y="318.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.07%)</title><rect x="210.0" y="291.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="213.0" y="302.0"></text>
</g>
<g>
<title>vfs_write (21 samples, 0.76%)</title><rect x="210.9" y="323.0" width="9.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="213.9" y="334.0"></text>
</g>
<g>
<title>__sb_end_write (1 samples, 0.04%)</title><rect x="211.3" y="307.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="214.3" y="318.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="211.3" y="291.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="214.3" y="302.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.04%)</title><rect x="211.7" y="307.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="214.7" y="318.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.07%)</title><rect x="212.2" y="307.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="215.2" y="318.0"></text>
</g>
<g>
<title>new_sync_write (16 samples, 0.58%)</title><rect x="213.0" y="307.0" width="6.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="216.0" y="318.0"></text>
</g>
<g>
<title>generic_file_write_iter (15 samples, 0.55%)</title><rect x="213.5" y="291.0" width="6.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="216.5" y="302.0"></text>
</g>
<g>
<title>__generic_file_write_iter (13 samples, 0.47%)</title><rect x="213.5" y="275.0" width="5.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="216.5" y="286.0"></text>
</g>
<g>
<title>generic_perform_write (13 samples, 0.47%)</title><rect x="213.5" y="259.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="216.5" y="270.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (2 samples, 0.07%)</title><rect x="213.5" y="243.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="216.5" y="254.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.07%)</title><rect x="214.3" y="243.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="217.3" y="254.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.04%)</title><rect x="214.8" y="227.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="217.8" y="238.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="214.8" y="211.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="217.8" y="222.0"></text>
</g>
<g>
<title>shmem_getpage_gfp.isra.0 (5 samples, 0.18%)</title><rect x="215.2" y="243.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="218.2" y="254.0"></text>
</g>
<g>
<title>find_lock_entry (2 samples, 0.07%)</title><rect x="216.5" y="227.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="219.5" y="238.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.07%)</title><rect x="216.5" y="211.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="219.5" y="222.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.07%)</title><rect x="216.5" y="195.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="219.5" y="206.0"></text>
</g>
<g>
<title>shmem_write_end (4 samples, 0.15%)</title><rect x="217.3" y="243.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="220.3" y="254.0"></text>
</g>
<g>
<title>__set_page_dirty_no_writeback (1 samples, 0.04%)</title><rect x="217.8" y="227.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="220.8" y="238.0"></text>
</g>
<g>
<title>set_page_dirty (2 samples, 0.07%)</title><rect x="218.2" y="227.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="221.2" y="238.0"></text>
</g>
<g>
<title>page_mapping (2 samples, 0.07%)</title><rect x="218.2" y="211.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="221.2" y="222.0"></text>
</g>
<g>
<title>generic_write_check_limits.isra.0 (2 samples, 0.07%)</title><rect x="219.0" y="275.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="222.0" y="286.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="219.9" y="339.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="222.9" y="350.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="219.9" y="323.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="222.9" y="334.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.07%)</title><rect x="220.3" y="339.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="223.3" y="350.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="220.3" y="323.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="223.3" y="334.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.04%)</title><rect x="220.8" y="323.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="223.8" y="334.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.04%)</title><rect x="221.2" y="387.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="224.2" y="398.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="221.6" y="403.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="224.6" y="414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="221.6" y="387.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="224.6" y="398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="221.6" y="371.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="224.6" y="382.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="221.6" y="355.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="224.6" y="366.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.07%)</title><rect x="222.0" y="419.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="225.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (1 samples, 0.04%)</title><rect x="222.9" y="467.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="225.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="223.3" y="467.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="226.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (3 samples, 0.11%)</title><rect x="223.8" y="483.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="226.8" y="494.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.04%)</title><rect x="224.2" y="467.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="227.2" y="478.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="224.6" y="467.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="227.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Clear() (1 samples, 0.04%)</title><rect x="225.1" y="483.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="228.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (2 samples, 0.07%)</title><rect x="225.5" y="483.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="228.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (93 samples, 3.38%)</title><rect x="226.3" y="483.0" width="40.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="229.3" y="494.0">roc..</text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="226.8" y="467.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="229.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (91 samples, 3.31%)</title><rect x="227.2" y="467.0" width="39.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="230.2" y="478.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (83 samples, 3.02%)</title><rect x="227.6" y="451.0" width="35.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="230.6" y="462.0">roc..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (1 samples, 0.04%)</title><rect x="227.6" y="435.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="230.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.04%)</title><rect x="228.1" y="435.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="231.1" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (81 samples, 2.95%)</title><rect x="228.5" y="435.0" width="34.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="231.5" y="446.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (2 samples, 0.07%)</title><rect x="228.5" y="419.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="231.5" y="430.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="229.3" y="419.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="232.3" y="430.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.04%)</title><rect x="229.8" y="419.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="232.8" y="430.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.04%)</title><rect x="230.2" y="419.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="233.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (75 samples, 2.73%)</title><rect x="230.6" y="419.0" width="32.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="233.6" y="430.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (4 samples, 0.15%)</title><rect x="233.2" y="403.0" width="1.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="236.2" y="414.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.04%)</title><rect x="233.6" y="387.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="236.6" y="398.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.04%)</title><rect x="233.6" y="371.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="236.6" y="382.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="233.6" y="355.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="236.6" y="366.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="233.6" y="339.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="236.6" y="350.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="233.6" y="323.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="236.6" y="334.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="233.6" y="307.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="236.6" y="318.0"></text>
</g>
<g>
<title>get_task_policy.part.0 (1 samples, 0.04%)</title><rect x="233.6" y="291.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="236.6" y="302.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.04%)</title><rect x="234.1" y="387.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="237.1" y="398.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.04%)</title><rect x="234.5" y="387.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="237.5" y="398.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (65 samples, 2.36%)</title><rect x="234.9" y="403.0" width="27.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="237.9" y="414.0">b..</text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (59 samples, 2.15%)</title><rect x="236.6" y="387.0" width="25.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="239.6" y="398.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (21 samples, 0.76%)</title><rect x="250.8" y="371.0" width="9.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="253.8" y="382.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="251.2" y="355.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="254.2" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (18 samples, 0.65%)</title><rect x="252.1" y="355.0" width="7.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="255.1" y="366.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (1 samples, 0.04%)</title><rect x="253.4" y="339.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="256.4" y="350.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="253.8" y="339.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="256.8" y="350.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.04%)</title><rect x="253.8" y="323.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="256.8" y="334.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (7 samples, 0.25%)</title><rect x="254.2" y="339.0" width="3.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="257.2" y="350.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.11%)</title><rect x="257.2" y="339.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="260.2" y="350.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.04%)</title><rect x="258.1" y="323.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="261.1" y="334.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.04%)</title><rect x="258.1" y="307.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="261.1" y="318.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="258.1" y="291.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="261.1" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="258.1" y="275.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="261.1" y="286.0"></text>
</g>
<g>
<title>_init (3 samples, 0.11%)</title><rect x="258.5" y="339.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="261.5" y="350.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.15%)</title><rect x="259.8" y="371.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="262.8" y="382.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.07%)</title><rect x="260.3" y="355.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="263.3" y="366.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="261.1" y="355.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="264.1" y="366.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="261.5" y="371.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="264.5" y="382.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="261.5" y="355.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="264.5" y="366.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="261.5" y="339.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="264.5" y="350.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 0.07%)</title><rect x="262.0" y="387.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="265.0" y="398.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.04%)</title><rect x="262.8" y="419.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="265.8" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.07%)</title><rect x="263.3" y="451.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="266.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (5 samples, 0.18%)</title><rect x="264.1" y="451.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="267.1" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (9 samples, 0.33%)</title><rect x="266.3" y="483.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="269.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (1 samples, 0.04%)</title><rect x="266.3" y="467.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="269.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (8 samples, 0.29%)</title><rect x="266.7" y="467.0" width="3.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="269.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.22%)</title><rect x="267.1" y="451.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="270.1" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (6 samples, 0.22%)</title><rect x="267.1" y="435.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="270.1" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (6 samples, 0.22%)</title><rect x="267.1" y="419.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="270.1" y="430.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (6 samples, 0.22%)</title><rect x="267.1" y="403.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="270.1" y="414.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (6 samples, 0.22%)</title><rect x="267.1" y="387.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="270.1" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (6 samples, 0.22%)</title><rect x="267.1" y="371.0" width="2.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="270.1" y="382.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="269.7" y="451.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="272.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (1 samples, 0.04%)</title><rect x="270.1" y="483.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="273.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (6 samples, 0.22%)</title><rect x="270.6" y="483.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="273.6" y="494.0"></text>
</g>
<g>
<title>std::condition_variable::condition_variable() (1 samples, 0.04%)</title><rect x="272.3" y="467.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="275.3" y="478.0"></text>
</g>
<g>
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;) (1 samples, 0.04%)</title><rect x="272.7" y="467.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="275.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.04%)</title><rect x="273.1" y="483.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="276.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.04%)</title><rect x="273.1" y="467.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="276.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (2 samples, 0.07%)</title><rect x="273.6" y="483.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="276.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.04%)</title><rect x="274.4" y="483.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="277.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.04%)</title><rect x="274.4" y="467.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="277.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::AssertHeld() (1 samples, 0.04%)</title><rect x="274.8" y="483.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="277.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.04%)</title><rect x="275.3" y="499.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="278.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1 samples, 0.04%)</title><rect x="275.7" y="499.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="278.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::HasMerge() const (1 samples, 0.04%)</title><rect x="276.1" y="499.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="279.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.07%)</title><rect x="276.6" y="499.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="279.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.07%)</title><rect x="277.4" y="499.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="280.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.04%)</title><rect x="278.3" y="499.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="281.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.04%)</title><rect x="278.7" y="499.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="281.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.04%)</title><rect x="279.1" y="515.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="282.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (4 samples, 0.15%)</title><rect x="279.6" y="515.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="282.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 0.33%)</title><rect x="281.3" y="515.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="284.3" y="526.0"></text>
</g>
<g>
<title>_init (2 samples, 0.07%)</title><rect x="281.3" y="499.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="284.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (3 samples, 0.11%)</title><rect x="282.1" y="499.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="285.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="283.4" y="499.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="286.4" y="510.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.04%)</title><rect x="283.9" y="483.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="286.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, int) (1 samples, 0.04%)</title><rect x="284.3" y="499.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="287.3" y="510.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="284.7" y="499.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="287.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="285.1" y="515.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="288.1" y="526.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.04%)</title><rect x="285.6" y="515.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="288.6" y="526.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (3 samples, 0.11%)</title><rect x="286.0" y="515.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="289.0" y="526.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (1 samples, 0.04%)</title><rect x="287.3" y="515.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="290.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="287.7" y="531.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="290.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (5 samples, 0.18%)</title><rect x="288.2" y="563.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="291.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="290.3" y="563.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="293.3" y="574.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="291.2" y="563.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="294.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.44%)</title><rect x="291.6" y="595.0" width="5.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="294.6" y="606.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (5 samples, 0.18%)</title><rect x="291.6" y="579.0" width="2.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="294.6" y="590.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.04%)</title><rect x="293.7" y="579.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="296.7" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="293.7" y="563.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="296.7" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="293.7" y="547.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="296.7" y="558.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="293.7" y="531.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="296.7" y="542.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="293.7" y="515.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="296.7" y="526.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.07%)</title><rect x="294.2" y="579.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="297.2" y="590.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.04%)</title><rect x="295.0" y="579.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="298.0" y="590.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="295.0" y="563.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="298.0" y="574.0"></text>
</g>
<g>
<title>update_get_addr (3 samples, 0.11%)</title><rect x="295.4" y="579.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="298.4" y="590.0"></text>
</g>
<g>
<title>__GI___libc_malloc (11 samples, 0.40%)</title><rect x="296.7" y="595.0" width="4.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="299.7" y="606.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.04%)</title><rect x="301.5" y="595.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="304.5" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.47%)</title><rect x="301.9" y="595.0" width="5.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="304.9" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.47%)</title><rect x="301.9" y="579.0" width="5.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="304.9" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.47%)</title><rect x="301.9" y="563.0" width="5.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="304.9" y="574.0"></text>
</g>
<g>
<title>__se_sys_futex (12 samples, 0.44%)</title><rect x="302.3" y="547.0" width="5.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="305.3" y="558.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.44%)</title><rect x="302.3" y="531.0" width="5.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="305.3" y="542.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.44%)</title><rect x="302.3" y="515.0" width="5.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="305.3" y="526.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.40%)</title><rect x="302.7" y="499.0" width="4.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="305.7" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.40%)</title><rect x="302.7" y="483.0" width="4.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="305.7" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.40%)</title><rect x="302.7" y="467.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="305.7" y="478.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.07%)</title><rect x="307.5" y="595.0" width="0.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="310.5" y="606.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="308.3" y="595.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="311.3" y="606.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (2 samples, 0.07%)</title><rect x="308.8" y="595.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="311.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (14 samples, 0.51%)</title><rect x="309.6" y="627.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="312.6" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.07%)</title><rect x="311.3" y="611.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="314.3" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1 samples, 0.04%)</title><rect x="312.2" y="611.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="315.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.shiftArrayInplace (7 samples, 0.25%)</title><rect x="312.6" y="611.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="315.6" y="622.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.07%)</title><rect x="314.8" y="595.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="317.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/EntityRequestProcessor.processForUser (188 samples, 6.84%)</title><rect x="315.6" y="675.0" width="80.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="318.6" y="686.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/saloed/EntityRequestProcessor.process (188 samples, 6.84%)</title><rect x="315.6" y="659.0" width="80.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.6" y="670.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAOImpl.upsertRecord (188 samples, 6.84%)</title><rect x="315.6" y="643.0" width="80.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.6" y="654.0">ru/mail/p..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (185 samples, 6.73%)</title><rect x="315.6" y="627.0" width="79.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="318.6" y="638.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (185 samples, 6.73%)</title><rect x="315.6" y="611.0" width="79.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="318.6" y="622.0">org/rocks..</text>
</g>
<g>
<title>JavaThread::check_special_condition_for_native_trans(JavaThread*) (1 samples, 0.04%)</title><rect x="315.6" y="595.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="318.6" y="606.0"></text>
</g>
<g>
<title>JavaThread::check_safepoint_and_suspend_for_native_trans(JavaThread*) (1 samples, 0.04%)</title><rect x="315.6" y="579.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="318.6" y="590.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.04%)</title><rect x="315.6" y="563.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="318.6" y="574.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="315.6" y="547.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="318.6" y="558.0"></text>
</g>
<g>
<title>Monitor::TrySpin(Thread*) [clone .part.23] (1 samples, 0.04%)</title><rect x="315.6" y="531.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="318.6" y="542.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (147 samples, 5.35%)</title><rect x="316.1" y="595.0" width="63.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="319.1" y="606.0">Java_or..</text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="316.1" y="579.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="319.1" y="590.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="316.5" y="579.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="319.5" y="590.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (145 samples, 5.27%)</title><rect x="316.9" y="579.0" width="62.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="319.9" y="590.0">rocksd..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.07%)</title><rect x="317.8" y="563.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="320.8" y="574.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="318.6" y="563.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="321.6" y="574.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.07%)</title><rect x="319.1" y="563.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="322.1" y="574.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="319.5" y="547.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="322.5" y="558.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.11%)</title><rect x="319.9" y="563.0" width="1.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="322.9" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.07%)</title><rect x="320.3" y="547.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="323.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (135 samples, 4.91%)</title><rect x="321.2" y="563.0" width="58.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="324.2" y="574.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="321.6" y="547.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="324.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (132 samples, 4.80%)</title><rect x="322.5" y="547.0" width="56.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="325.5" y="558.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (129 samples, 4.69%)</title><rect x="322.5" y="531.0" width="55.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="325.5" y="542.0">rocks..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.04%)</title><rect x="322.9" y="515.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="325.9" y="526.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="323.4" y="515.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="326.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (120 samples, 4.37%)</title><rect x="323.8" y="515.0" width="51.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="326.8" y="526.0">rocks..</text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="324.2" y="499.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="327.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.04%)</title><rect x="324.6" y="499.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="327.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (115 samples, 4.18%)</title><rect x="325.1" y="499.0" width="49.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="328.1" y="510.0">rocks..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="328.9" y="483.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="331.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.04%)</title><rect x="329.4" y="483.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="332.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.04%)</title><rect x="329.8" y="483.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="332.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (45 samples, 1.64%)</title><rect x="330.2" y="483.0" width="19.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="333.2" y="494.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="331.1" y="467.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="334.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.04%)</title><rect x="331.5" y="467.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="334.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (40 samples, 1.46%)</title><rect x="331.9" y="467.0" width="17.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="334.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (39 samples, 1.42%)</title><rect x="331.9" y="451.0" width="16.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="334.9" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (6 samples, 0.22%)</title><rect x="331.9" y="435.0" width="2.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="334.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="334.5" y="435.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="337.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (31 samples, 1.13%)</title><rect x="335.4" y="435.0" width="13.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="338.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::PosixRandomRWFile::Flush() (1 samples, 0.04%)</title><rect x="335.4" y="419.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="338.4" y="430.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.04%)</title><rect x="335.8" y="419.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="338.8" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="336.2" y="419.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="339.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (28 samples, 1.02%)</title><rect x="336.7" y="419.0" width="12.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="339.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (2 samples, 0.07%)</title><rect x="336.7" y="403.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="339.7" y="414.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (26 samples, 0.95%)</title><rect x="337.5" y="403.0" width="11.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="340.5" y="414.0"></text>
</g>
<g>
<title>__write (21 samples, 0.76%)</title><rect x="339.2" y="387.0" width="9.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="342.2" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.65%)</title><rect x="340.5" y="371.0" width="7.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="343.5" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.65%)</title><rect x="340.5" y="355.0" width="7.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="343.5" y="366.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.04%)</title><rect x="340.9" y="339.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="343.9" y="350.0"></text>
</g>
<g>
<title>restore_regs_and_return_to_kernel (1 samples, 0.04%)</title><rect x="340.9" y="323.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="343.9" y="334.0"></text>
</g>
<g>
<title>preempt_schedule_irq (1 samples, 0.04%)</title><rect x="340.9" y="307.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="343.9" y="318.0"></text>
</g>
<g>
<title>ksys_write (16 samples, 0.58%)</title><rect x="341.4" y="339.0" width="6.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="344.4" y="350.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.07%)</title><rect x="341.4" y="323.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="344.4" y="334.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="341.4" y="307.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="344.4" y="318.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="341.8" y="291.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="344.8" y="302.0"></text>
</g>
<g>
<title>vfs_write (14 samples, 0.51%)</title><rect x="342.2" y="323.0" width="6.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="345.2" y="334.0"></text>
</g>
<g>
<title>new_sync_write (12 samples, 0.44%)</title><rect x="343.1" y="307.0" width="5.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="346.1" y="318.0"></text>
</g>
<g>
<title>generic_file_write_iter (12 samples, 0.44%)</title><rect x="343.1" y="291.0" width="5.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="346.1" y="302.0"></text>
</g>
<g>
<title>__generic_file_write_iter (11 samples, 0.40%)</title><rect x="343.1" y="275.0" width="4.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="346.1" y="286.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.04%)</title><rect x="343.5" y="259.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="346.5" y="270.0"></text>
</g>
<g>
<title>generic_perform_write (9 samples, 0.33%)</title><rect x="344.0" y="259.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="347.0" y="270.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.07%)</title><rect x="344.8" y="243.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="347.8" y="254.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.04%)</title><rect x="344.8" y="227.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="347.8" y="238.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="344.8" y="211.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="347.8" y="222.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.04%)</title><rect x="345.2" y="227.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="348.2" y="238.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.04%)</title><rect x="345.7" y="243.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="348.7" y="254.0"></text>
</g>
<g>
<title>shmem_getpage_gfp.isra.0 (3 samples, 0.11%)</title><rect x="346.1" y="243.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="349.1" y="254.0"></text>
</g>
<g>
<title>find_lock_entry (3 samples, 0.11%)</title><rect x="346.1" y="227.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="349.1" y="238.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.11%)</title><rect x="346.1" y="211.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="349.1" y="222.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.04%)</title><rect x="347.0" y="195.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="350.0" y="206.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.04%)</title><rect x="347.0" y="179.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="350.0" y="190.0"></text>
</g>
<g>
<title>shmem_write_end (1 samples, 0.04%)</title><rect x="347.4" y="243.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="350.4" y="254.0"></text>
</g>
<g>
<title>__set_page_dirty_no_writeback (1 samples, 0.04%)</title><rect x="347.4" y="227.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="350.4" y="238.0"></text>
</g>
<g>
<title>down_write (1 samples, 0.04%)</title><rect x="347.8" y="275.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="350.8" y="286.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (1 samples, 0.04%)</title><rect x="348.2" y="387.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="351.2" y="398.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.04%)</title><rect x="348.7" y="451.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="351.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="349.1" y="467.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="352.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.04%)</title><rect x="349.5" y="483.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="352.5" y="494.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.04%)</title><rect x="349.5" y="467.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="352.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.04%)</title><rect x="350.0" y="483.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="353.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (35 samples, 1.27%)</title><rect x="350.4" y="483.0" width="15.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="353.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="350.8" y="467.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="353.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (33 samples, 1.20%)</title><rect x="351.3" y="467.0" width="14.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="354.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (33 samples, 1.20%)</title><rect x="351.3" y="451.0" width="14.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="354.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (33 samples, 1.20%)</title><rect x="351.3" y="435.0" width="14.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="354.3" y="446.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (1 samples, 0.04%)</title><rect x="352.5" y="419.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="355.5" y="430.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="352.5" y="403.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="355.5" y="414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="352.5" y="387.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="355.5" y="398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="352.5" y="371.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="355.5" y="382.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="352.5" y="355.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="355.5" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (29 samples, 1.05%)</title><rect x="353.0" y="419.0" width="12.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="356.0" y="430.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (27 samples, 0.98%)</title><rect x="353.0" y="403.0" width="11.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="356.0" y="414.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (24 samples, 0.87%)</title><rect x="353.8" y="387.0" width="10.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="356.8" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (10 samples, 0.36%)</title><rect x="358.5" y="371.0" width="4.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="361.5" y="382.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="358.5" y="355.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="361.5" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 0.33%)</title><rect x="359.0" y="355.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="362.0" y="366.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.07%)</title><rect x="361.1" y="339.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="364.1" y="350.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (2 samples, 0.07%)</title><rect x="361.1" y="323.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="364.1" y="334.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="362.0" y="339.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="365.0" y="350.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.04%)</title><rect x="362.4" y="339.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="365.4" y="350.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.11%)</title><rect x="362.8" y="371.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="365.8" y="382.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.07%)</title><rect x="363.3" y="355.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="366.3" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.04%)</title><rect x="364.1" y="387.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="367.1" y="398.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="364.1" y="371.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="367.1" y="382.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.07%)</title><rect x="364.6" y="403.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="367.6" y="414.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (11 samples, 0.40%)</title><rect x="365.4" y="483.0" width="4.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="368.4" y="494.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.04%)</title><rect x="365.4" y="467.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="368.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (9 samples, 0.33%)</title><rect x="365.8" y="467.0" width="3.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="368.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 0.33%)</title><rect x="365.8" y="451.0" width="3.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="368.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (9 samples, 0.33%)</title><rect x="365.8" y="435.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="368.8" y="446.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="365.8" y="419.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="368.8" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (7 samples, 0.25%)</title><rect x="366.3" y="419.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="369.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (6 samples, 0.22%)</title><rect x="366.7" y="403.0" width="2.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="369.7" y="414.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (6 samples, 0.22%)</title><rect x="366.7" y="387.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="369.7" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (6 samples, 0.22%)</title><rect x="366.7" y="371.0" width="2.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="369.7" y="382.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (5 samples, 0.18%)</title><rect x="367.1" y="355.0" width="2.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="370.1" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.18%)</title><rect x="367.1" y="339.0" width="2.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="370.1" y="350.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3130202822340505949.so (1 samples, 0.04%)</title><rect x="367.6" y="323.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="370.6" y="334.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (3 samples, 0.11%)</title><rect x="368.0" y="323.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="371.0" y="334.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="368.9" y="307.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="371.9" y="318.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="368.9" y="291.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="371.9" y="302.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="368.9" y="275.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="371.9" y="286.0"></text>
</g>
<g>
<title>std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (1 samples, 0.04%)</title><rect x="369.3" y="419.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="372.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.04%)</title><rect x="369.7" y="467.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="372.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (1 samples, 0.04%)</title><rect x="370.1" y="483.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="373.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.07%)</title><rect x="370.6" y="483.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="373.6" y="494.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.04%)</title><rect x="371.0" y="467.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="374.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.04%)</title><rect x="371.4" y="483.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="374.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.04%)</title><rect x="371.9" y="483.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="374.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.04%)</title><rect x="372.3" y="483.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="375.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (2 samples, 0.07%)</title><rect x="372.7" y="483.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="375.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (2 samples, 0.07%)</title><rect x="372.7" y="467.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="375.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.04%)</title><rect x="373.6" y="483.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="376.6" y="494.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.04%)</title><rect x="374.0" y="483.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="377.0" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="374.0" y="467.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="377.0" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="374.0" y="451.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="377.0" y="462.0"></text>
</g>
<g>
<title>__se_sys_clock_gettime (1 samples, 0.04%)</title><rect x="374.0" y="435.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="377.0" y="446.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (1 samples, 0.04%)</title><rect x="374.0" y="419.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="377.0" y="430.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.04%)</title><rect x="374.0" y="403.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="377.0" y="414.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="374.0" y="387.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="377.0" y="398.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::HasMerge() const (1 samples, 0.04%)</title><rect x="374.4" y="499.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="377.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.04%)</title><rect x="374.9" y="499.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="377.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="375.3" y="515.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="378.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="375.3" y="499.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="378.3" y="510.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.04%)</title><rect x="375.7" y="483.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="378.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.07%)</title><rect x="376.1" y="515.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="379.1" y="526.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.04%)</title><rect x="377.0" y="515.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="380.0" y="526.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.04%)</title><rect x="377.4" y="515.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="380.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.07%)</title><rect x="377.9" y="531.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="380.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.04%)</title><rect x="378.7" y="531.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="381.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.44%)</title><rect x="379.2" y="595.0" width="5.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="382.2" y="606.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="379.2" y="579.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="382.2" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.04%)</title><rect x="379.6" y="579.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="382.6" y="590.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (6 samples, 0.22%)</title><rect x="380.0" y="579.0" width="2.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="383.0" y="590.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (3 samples, 0.11%)</title><rect x="382.6" y="579.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="385.6" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.11%)</title><rect x="382.6" y="563.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="385.6" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.11%)</title><rect x="382.6" y="547.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="385.6" y="558.0"></text>
</g>
<g>
<title>__se_sys_futex (3 samples, 0.11%)</title><rect x="382.6" y="531.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="385.6" y="542.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.11%)</title><rect x="382.6" y="515.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="385.6" y="526.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.07%)</title><rect x="383.0" y="499.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="386.0" y="510.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.07%)</title><rect x="383.0" y="483.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="386.0" y="494.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="383.0" y="467.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="386.0" y="478.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.04%)</title><rect x="383.0" y="451.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="386.0" y="462.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.04%)</title><rect x="383.4" y="467.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="386.4" y="478.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.04%)</title><rect x="383.9" y="579.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="386.9" y="590.0"></text>
</g>
<g>
<title>__GI___libc_malloc (5 samples, 0.18%)</title><rect x="384.3" y="595.0" width="2.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="387.3" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.36%)</title><rect x="386.4" y="595.0" width="4.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="389.4" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.29%)</title><rect x="387.3" y="579.0" width="3.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="390.3" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.29%)</title><rect x="387.3" y="563.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="390.3" y="574.0"></text>
</g>
<g>
<title>__se_sys_futex (8 samples, 0.29%)</title><rect x="387.3" y="547.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="390.3" y="558.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.29%)</title><rect x="387.3" y="531.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="390.3" y="542.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.29%)</title><rect x="387.3" y="515.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="390.3" y="526.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.29%)</title><rect x="387.3" y="499.0" width="3.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="390.3" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.29%)</title><rect x="387.3" y="483.0" width="3.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="390.3" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.29%)</title><rect x="387.3" y="467.0" width="3.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="390.3" y="478.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (5 samples, 0.18%)</title><rect x="390.7" y="595.0" width="2.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="393.7" y="606.0"></text>
</g>
<g>
<title>_init (2 samples, 0.07%)</title><rect x="392.9" y="595.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="395.9" y="606.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (2 samples, 0.07%)</title><rect x="393.7" y="595.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="396.7" y="606.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.04%)</title><rect x="394.6" y="595.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="397.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.toArrayShifted (3 samples, 0.11%)</title><rect x="395.0" y="627.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="398.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.shiftArrayInplace (2 samples, 0.07%)</title><rect x="395.5" y="611.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="398.5" y="622.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="395.9" y="595.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="398.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.proxy (472 samples, 17.17%)</title><rect x="396.3" y="675.0" width="202.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="399.3" y="686.0">ru/mail/polis/service/salo..</text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.07%)</title><rect x="397.6" y="659.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.6" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="397.6" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="400.6" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="398.0" y="643.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="401.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.04%)</title><rect x="398.0" y="627.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="401.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.04%)</title><rect x="398.0" y="611.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="401.0" y="622.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="398.0" y="595.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="401.0" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="398.0" y="579.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="401.0" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="398.0" y="563.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="401.0" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="398.0" y="547.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="401.0" y="558.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="398.0" y="531.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="401.0" y="542.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="398.0" y="515.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="401.0" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="398.0" y="499.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="401.0" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.04%)</title><rect x="398.0" y="483.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="401.0" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (466 samples, 16.95%)</title><rect x="398.5" y="659.0" width="200.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="401.5" y="670.0">one/nio/http/HttpClient.in..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (464 samples, 16.88%)</title><rect x="399.3" y="643.0" width="199.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.3" y="654.0">one/nio/http/HttpClient.in..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.15%)</title><rect x="400.2" y="627.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="403.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="400.2" y="611.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="403.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.11%)</title><rect x="400.6" y="611.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="403.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (90 samples, 3.27%)</title><rect x="401.9" y="627.0" width="38.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="404.9" y="638.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (86 samples, 3.13%)</title><rect x="403.2" y="611.0" width="36.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="406.2" y="622.0">one..</text>
</g>
<g>
<title>[unknown] (11 samples, 0.40%)</title><rect x="404.5" y="595.0" width="4.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="407.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.40%)</title><rect x="404.5" y="579.0" width="4.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="407.5" y="590.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 0.36%)</title><rect x="404.5" y="563.0" width="4.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="407.5" y="574.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="404.9" y="547.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="407.9" y="558.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (5 samples, 0.18%)</title><rect x="405.3" y="547.0" width="2.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="408.3" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="407.1" y="531.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="410.1" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="407.1" y="515.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="410.1" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="407.1" y="499.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="410.1" y="510.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.11%)</title><rect x="407.5" y="547.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="410.5" y="558.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="408.8" y="563.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="411.8" y="574.0"></text>
</g>
<g>
<title>recv (72 samples, 2.62%)</title><rect x="409.2" y="595.0" width="30.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="412.2" y="606.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (69 samples, 2.51%)</title><rect x="410.5" y="579.0" width="29.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="413.5" y="590.0">en..</text>
</g>
<g>
<title>do_syscall_64 (69 samples, 2.51%)</title><rect x="410.5" y="563.0" width="29.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="413.5" y="574.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (61 samples, 2.22%)</title><rect x="413.1" y="547.0" width="26.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="416.1" y="558.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (59 samples, 2.15%)</title><rect x="413.9" y="531.0" width="25.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="416.9" y="542.0">_..</text>
</g>
<g>
<title>import_single_range (2 samples, 0.07%)</title><rect x="414.4" y="515.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="417.4" y="526.0"></text>
</g>
<g>
<title>inet6_recvmsg (52 samples, 1.89%)</title><rect x="415.2" y="515.0" width="22.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="418.2" y="526.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (50 samples, 1.82%)</title><rect x="416.1" y="499.0" width="21.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="419.1" y="510.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (34 samples, 1.24%)</title><rect x="416.5" y="483.0" width="14.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="419.5" y="494.0"></text>
</g>
<g>
<title>__ip_queue_xmit (34 samples, 1.24%)</title><rect x="416.5" y="467.0" width="14.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="419.5" y="478.0"></text>
</g>
<g>
<title>ip_output (34 samples, 1.24%)</title><rect x="416.5" y="451.0" width="14.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="419.5" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (3 samples, 0.11%)</title><rect x="416.5" y="435.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="419.5" y="446.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="417.4" y="419.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="420.4" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (30 samples, 1.09%)</title><rect x="417.8" y="435.0" width="12.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="420.8" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.29%)</title><rect x="419.1" y="419.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="422.1" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.11%)</title><rect x="419.9" y="403.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="422.9" y="414.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="420.8" y="387.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="423.8" y="398.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.04%)</title><rect x="420.8" y="371.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="423.8" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.11%)</title><rect x="421.2" y="403.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="424.2" y="414.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.04%)</title><rect x="422.1" y="387.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="425.1" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (19 samples, 0.69%)</title><rect x="422.5" y="419.0" width="8.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="425.5" y="430.0"></text>
</g>
<g>
<title>do_softirq.part.0 (18 samples, 0.65%)</title><rect x="422.5" y="403.0" width="7.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="425.5" y="414.0"></text>
</g>
<g>
<title>do_softirq_own_stack (17 samples, 0.62%)</title><rect x="422.9" y="387.0" width="7.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="425.9" y="398.0"></text>
</g>
<g>
<title>__softirqentry_text_start (17 samples, 0.62%)</title><rect x="422.9" y="371.0" width="7.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="425.9" y="382.0"></text>
</g>
<g>
<title>net_rx_action (16 samples, 0.58%)</title><rect x="423.4" y="355.0" width="6.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="426.4" y="366.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="424.2" y="339.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="427.2" y="350.0"></text>
</g>
<g>
<title>process_backlog (13 samples, 0.47%)</title><rect x="424.7" y="339.0" width="5.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="427.7" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (13 samples, 0.47%)</title><rect x="424.7" y="323.0" width="5.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="427.7" y="334.0"></text>
</g>
<g>
<title>ip_rcv (12 samples, 0.44%)</title><rect x="425.1" y="307.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="428.1" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver (11 samples, 0.40%)</title><rect x="425.5" y="291.0" width="4.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="428.5" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (10 samples, 0.36%)</title><rect x="425.9" y="275.0" width="4.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="428.9" y="286.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (10 samples, 0.36%)</title><rect x="425.9" y="259.0" width="4.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="428.9" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (9 samples, 0.33%)</title><rect x="426.4" y="243.0" width="3.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="429.4" y="254.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.04%)</title><rect x="426.8" y="227.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="429.8" y="238.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="427.2" y="227.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="430.2" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (6 samples, 0.22%)</title><rect x="427.7" y="227.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="430.7" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (6 samples, 0.22%)</title><rect x="427.7" y="211.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="430.7" y="222.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.15%)</title><rect x="427.7" y="195.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="430.7" y="206.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="428.5" y="179.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="431.5" y="190.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.04%)</title><rect x="428.9" y="179.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="431.9" y="190.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.07%)</title><rect x="429.4" y="195.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="432.4" y="206.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.07%)</title><rect x="429.4" y="179.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="432.4" y="190.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.07%)</title><rect x="429.4" y="163.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="432.4" y="174.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.04%)</title><rect x="430.2" y="403.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="433.2" y="414.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.04%)</title><rect x="430.7" y="435.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="433.7" y="446.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="431.1" y="483.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="434.1" y="494.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="431.5" y="483.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="434.5" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="431.5" y="467.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="434.5" y="478.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="431.5" y="451.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="434.5" y="462.0"></text>
</g>
<g>
<title>sk_wait_data (12 samples, 0.44%)</title><rect x="431.9" y="483.0" width="5.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="434.9" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.07%)</title><rect x="431.9" y="467.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="434.9" y="478.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="432.8" y="467.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="435.8" y="478.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="432.8" y="451.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="435.8" y="462.0"></text>
</g>
<g>
<title>wait_woken (9 samples, 0.33%)</title><rect x="433.2" y="467.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="436.2" y="478.0"></text>
</g>
<g>
<title>schedule_timeout (9 samples, 0.33%)</title><rect x="433.2" y="451.0" width="3.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="436.2" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.11%)</title><rect x="435.0" y="435.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="438.0" y="446.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.04%)</title><rect x="436.2" y="435.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="439.2" y="446.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="436.7" y="435.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="439.7" y="446.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="436.7" y="419.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="439.7" y="430.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="436.7" y="403.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="439.7" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.04%)</title><rect x="436.7" y="387.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="439.7" y="398.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.04%)</title><rect x="437.1" y="483.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="440.1" y="494.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.04%)</title><rect x="437.1" y="467.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="440.1" y="478.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.04%)</title><rect x="437.1" y="451.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="440.1" y="462.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.04%)</title><rect x="437.1" y="435.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="440.1" y="446.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="437.1" y="419.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="440.1" y="430.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.04%)</title><rect x="437.5" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="440.5" y="526.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.11%)</title><rect x="438.0" y="515.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="441.0" y="526.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.11%)</title><rect x="438.0" y="499.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="441.0" y="510.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.11%)</title><rect x="438.0" y="483.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="441.0" y="494.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.04%)</title><rect x="438.8" y="467.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="441.8" y="478.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="439.2" y="547.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="442.2" y="558.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="439.2" y="531.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="442.2" y="542.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="439.7" y="547.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="442.7" y="558.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="439.7" y="531.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="442.7" y="542.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (1 samples, 0.04%)</title><rect x="440.1" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="443.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (45 samples, 1.64%)</title><rect x="440.5" y="627.0" width="19.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="443.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="441.4" y="611.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="444.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.18%)</title><rect x="441.8" y="611.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="444.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.11%)</title><rect x="442.7" y="595.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="445.7" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.07%)</title><rect x="443.1" y="579.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="446.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.07%)</title><rect x="443.1" y="563.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="446.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (17 samples, 0.62%)</title><rect x="444.0" y="611.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="447.0" y="622.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="446.1" y="595.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="449.1" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.40%)</title><rect x="446.5" y="595.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="449.5" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.33%)</title><rect x="447.4" y="579.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.18%)</title><rect x="451.3" y="611.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="454.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (7 samples, 0.25%)</title><rect x="453.4" y="611.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="456.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (7 samples, 0.25%)</title><rect x="456.4" y="611.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.11%)</title><rect x="458.1" y="595.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.11%)</title><rect x="458.1" y="579.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="461.1" y="590.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.07%)</title><rect x="458.6" y="563.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="461.6" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="459.4" y="611.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="462.4" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="459.4" y="595.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="462.4" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="459.4" y="579.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="462.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (42 samples, 1.53%)</title><rect x="459.9" y="627.0" width="18.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="462.9" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.07%)</title><rect x="477.0" y="611.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="480.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.07%)</title><rect x="477.9" y="627.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="480.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.07%)</title><rect x="477.9" y="611.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.07%)</title><rect x="477.9" y="595.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="480.9" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (41 samples, 1.49%)</title><rect x="478.7" y="627.0" width="17.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="481.7" y="638.0"></text>
</g>
<g>
<title>__GI___setsockopt (41 samples, 1.49%)</title><rect x="478.7" y="611.0" width="17.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="481.7" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 1.16%)</title><rect x="482.6" y="595.0" width="13.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="485.6" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 1.16%)</title><rect x="482.6" y="579.0" width="13.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="485.6" y="590.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (25 samples, 0.91%)</title><rect x="483.9" y="563.0" width="10.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="486.9" y="574.0"></text>
</g>
<g>
<title>__sys_setsockopt (25 samples, 0.91%)</title><rect x="483.9" y="547.0" width="10.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="486.9" y="558.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (5 samples, 0.18%)</title><rect x="484.3" y="531.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="487.3" y="542.0"></text>
</g>
<g>
<title>bpf_prog_array_is_empty (1 samples, 0.04%)</title><rect x="486.0" y="515.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="489.0" y="526.0"></text>
</g>
<g>
<title>sock_setsockopt (10 samples, 0.36%)</title><rect x="486.5" y="531.0" width="4.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="489.5" y="542.0"></text>
</g>
<g>
<title>__get_user_4 (2 samples, 0.07%)</title><rect x="486.9" y="515.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="489.9" y="526.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.07%)</title><rect x="487.8" y="515.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="490.8" y="526.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="488.2" y="499.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="491.2" y="510.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="488.2" y="483.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="491.2" y="494.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.11%)</title><rect x="488.6" y="515.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="491.6" y="526.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.07%)</title><rect x="488.6" y="499.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="491.6" y="510.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="489.0" y="483.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="492.0" y="494.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.04%)</title><rect x="489.0" y="467.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="492.0" y="478.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="489.5" y="499.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="492.5" y="510.0"></text>
</g>
<g>
<title>sock_set_timeout (2 samples, 0.07%)</title><rect x="489.9" y="515.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="492.9" y="526.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.33%)</title><rect x="490.8" y="531.0" width="3.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="493.8" y="542.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.33%)</title><rect x="490.8" y="515.0" width="3.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="493.8" y="526.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.33%)</title><rect x="490.8" y="499.0" width="3.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="493.8" y="510.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (3 samples, 0.11%)</title><rect x="494.6" y="563.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="497.6" y="574.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.07%)</title><rect x="495.0" y="547.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="498.0" y="558.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="495.9" y="563.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="498.9" y="574.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="495.9" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="498.9" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (234 samples, 8.51%)</title><rect x="496.3" y="627.0" width="100.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.3" y="638.0">one/nio/net/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (3 samples, 0.11%)</title><rect x="497.2" y="611.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="500.2" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="497.6" y="595.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="500.6" y="606.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="498.1" y="595.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="501.1" y="606.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="498.5" y="611.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="501.5" y="622.0"></text>
</g>
<g>
<title>__send (228 samples, 8.29%)</title><rect x="498.9" y="611.0" width="97.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="501.9" y="622.0">__send</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="501.9" y="595.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="504.9" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (220 samples, 8.00%)</title><rect x="502.3" y="595.0" width="94.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="505.3" y="606.0">entry_SYSCA..</text>
</g>
<g>
<title>do_syscall_64 (220 samples, 8.00%)</title><rect x="502.3" y="579.0" width="94.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="505.3" y="590.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (217 samples, 7.89%)</title><rect x="502.8" y="563.0" width="93.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="505.8" y="574.0">__x64_sys_s..</text>
</g>
<g>
<title>__sys_sendto (217 samples, 7.89%)</title><rect x="502.8" y="547.0" width="93.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="505.8" y="558.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="503.2" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="506.2" y="542.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="503.6" y="531.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="506.6" y="542.0"></text>
</g>
<g>
<title>sock_sendmsg (214 samples, 7.78%)</title><rect x="504.1" y="531.0" width="91.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="507.1" y="542.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.04%)</title><rect x="504.5" y="515.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="507.5" y="526.0"></text>
</g>
<g>
<title>tcp_sendmsg (212 samples, 7.71%)</title><rect x="504.9" y="515.0" width="91.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="507.9" y="526.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.11%)</title><rect x="504.9" y="499.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="507.9" y="510.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.04%)</title><rect x="505.8" y="483.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="508.8" y="494.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.07%)</title><rect x="506.2" y="499.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="509.2" y="510.0"></text>
</g>
<g>
<title>__release_sock (2 samples, 0.07%)</title><rect x="506.2" y="483.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="509.2" y="494.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.07%)</title><rect x="506.2" y="467.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="509.2" y="478.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.07%)</title><rect x="506.2" y="451.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="509.2" y="462.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.04%)</title><rect x="506.2" y="435.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="509.2" y="446.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.04%)</title><rect x="506.2" y="419.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="509.2" y="430.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.04%)</title><rect x="506.2" y="403.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="509.2" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.04%)</title><rect x="506.2" y="387.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="509.2" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="506.2" y="371.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="509.2" y="382.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.04%)</title><rect x="506.2" y="355.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="509.2" y="366.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.04%)</title><rect x="506.2" y="339.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="509.2" y="350.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="506.2" y="323.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="509.2" y="334.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.04%)</title><rect x="506.2" y="307.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="509.2" y="318.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.04%)</title><rect x="506.2" y="291.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="509.2" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.04%)</title><rect x="506.2" y="275.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="509.2" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.04%)</title><rect x="506.2" y="259.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="509.2" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.04%)</title><rect x="506.2" y="243.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="509.2" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.04%)</title><rect x="506.2" y="227.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="509.2" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.04%)</title><rect x="506.2" y="211.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="509.2" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.04%)</title><rect x="506.2" y="195.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="509.2" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.04%)</title><rect x="506.2" y="179.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="509.2" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.04%)</title><rect x="506.2" y="163.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="509.2" y="174.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.04%)</title><rect x="506.2" y="147.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="509.2" y="158.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.04%)</title><rect x="506.2" y="131.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="509.2" y="142.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.04%)</title><rect x="506.6" y="435.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="509.6" y="446.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.04%)</title><rect x="506.6" y="419.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="509.6" y="430.0"></text>
</g>
<g>
<title>restore_regs_and_return_to_kernel (1 samples, 0.04%)</title><rect x="506.6" y="403.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="509.6" y="414.0"></text>
</g>
<g>
<title>preempt_schedule_irq (1 samples, 0.04%)</title><rect x="506.6" y="387.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="509.6" y="398.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="506.6" y="371.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="509.6" y="382.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (207 samples, 7.53%)</title><rect x="507.1" y="499.0" width="88.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="510.1" y="510.0">tcp_sendms..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.07%)</title><rect x="509.6" y="483.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="512.6" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="509.6" y="467.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="512.6" y="478.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.04%)</title><rect x="510.1" y="467.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="513.1" y="478.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (178 samples, 6.48%)</title><rect x="510.5" y="483.0" width="76.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="513.5" y="494.0">__tcp_pu..</text>
</g>
<g>
<title>tcp_write_xmit (177 samples, 6.44%)</title><rect x="510.9" y="467.0" width="76.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="513.9" y="478.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_transmit_skb (173 samples, 6.29%)</title><rect x="511.8" y="451.0" width="74.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="514.8" y="462.0">__tcp_tr..</text>
</g>
<g>
<title>__ip_queue_xmit (165 samples, 6.00%)</title><rect x="513.1" y="435.0" width="70.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="516.1" y="446.0">__ip_que..</text>
</g>
<g>
<title>ip_local_out (1 samples, 0.04%)</title><rect x="513.5" y="419.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="516.5" y="430.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="513.5" y="403.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="516.5" y="414.0"></text>
</g>
<g>
<title>ip_output (163 samples, 5.93%)</title><rect x="513.9" y="419.0" width="70.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="516.9" y="430.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.07%)</title><rect x="514.4" y="403.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="517.4" y="414.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="514.8" y="387.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="517.8" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (157 samples, 5.71%)</title><rect x="515.2" y="403.0" width="67.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="518.2" y="414.0">ip_fini..</text>
</g>
<g>
<title>__dev_queue_xmit (18 samples, 0.65%)</title><rect x="516.9" y="387.0" width="7.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="519.9" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="516.9" y="371.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="519.9" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (13 samples, 0.47%)</title><rect x="517.4" y="371.0" width="5.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="520.4" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (13 samples, 0.47%)</title><rect x="517.4" y="355.0" width="5.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="520.4" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.11%)</title><rect x="517.4" y="339.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="520.4" y="350.0"></text>
</g>
<g>
<title>netif_rx (8 samples, 0.29%)</title><rect x="518.7" y="339.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="521.7" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (8 samples, 0.29%)</title><rect x="518.7" y="323.0" width="3.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="521.7" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (6 samples, 0.22%)</title><rect x="518.7" y="307.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="521.7" y="318.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.04%)</title><rect x="521.2" y="307.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="524.2" y="318.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="521.7" y="307.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="524.7" y="318.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.07%)</title><rect x="522.1" y="339.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="525.1" y="350.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="523.0" y="371.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="526.0" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.07%)</title><rect x="523.4" y="371.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="526.4" y="382.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.04%)</title><rect x="524.2" y="371.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="527.2" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (134 samples, 4.87%)</title><rect x="524.7" y="387.0" width="57.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="527.7" y="398.0">__loca..</text>
</g>
<g>
<title>___preempt_schedule (1 samples, 0.04%)</title><rect x="524.7" y="371.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="527.7" y="382.0"></text>
</g>
<g>
<title>do_softirq.part.0 (133 samples, 4.84%)</title><rect x="525.1" y="371.0" width="57.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="528.1" y="382.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (129 samples, 4.69%)</title><rect x="526.8" y="355.0" width="55.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="529.8" y="366.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (129 samples, 4.69%)</title><rect x="526.8" y="339.0" width="55.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="529.8" y="350.0">__sof..</text>
</g>
<g>
<title>net_rx_action (125 samples, 4.55%)</title><rect x="528.5" y="323.0" width="53.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="531.5" y="334.0">net_r..</text>
</g>
<g>
<title>debug_smp_processor_id (1 samples, 0.04%)</title><rect x="529.0" y="307.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="532.0" y="318.0"></text>
</g>
<g>
<title>process_backlog (123 samples, 4.47%)</title><rect x="529.4" y="307.0" width="52.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="532.4" y="318.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (120 samples, 4.37%)</title><rect x="530.2" y="291.0" width="51.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="533.2" y="302.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.15%)</title><rect x="530.7" y="275.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="533.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv (115 samples, 4.18%)</title><rect x="532.4" y="275.0" width="49.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="535.4" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (111 samples, 4.04%)</title><rect x="532.8" y="259.0" width="47.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="535.8" y="270.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (109 samples, 3.97%)</title><rect x="533.7" y="243.0" width="46.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="536.7" y="254.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (109 samples, 3.97%)</title><rect x="533.7" y="227.0" width="46.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="536.7" y="238.0">ip_p..</text>
</g>
<g>
<title>tcp_v4_rcv (106 samples, 3.86%)</title><rect x="535.0" y="211.0" width="45.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="538.0" y="222.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.15%)</title><rect x="535.8" y="195.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="538.8" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.11%)</title><rect x="536.3" y="179.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="539.3" y="190.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.07%)</title><rect x="537.5" y="195.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="540.5" y="206.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="538.0" y="179.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="541.0" y="190.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.04%)</title><rect x="538.4" y="195.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="541.4" y="206.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.04%)</title><rect x="538.4" y="179.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="541.4" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.11%)</title><rect x="538.8" y="195.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="541.8" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.07%)</title><rect x="538.8" y="179.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="541.8" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.04%)</title><rect x="539.7" y="179.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="542.7" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (93 samples, 3.38%)</title><rect x="540.1" y="195.0" width="39.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="543.1" y="206.0">tcp..</text>
</g>
<g>
<title>tcp_rcv_established (92 samples, 3.35%)</title><rect x="540.5" y="179.0" width="39.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="543.5" y="190.0">tcp..</text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.07%)</title><rect x="541.4" y="163.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="544.4" y="174.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="541.8" y="147.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="544.8" y="158.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="541.8" y="131.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="544.8" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (75 samples, 2.73%)</title><rect x="542.3" y="163.0" width="32.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="545.3" y="174.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (73 samples, 2.66%)</title><rect x="542.7" y="147.0" width="31.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="545.7" y="158.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (73 samples, 2.66%)</title><rect x="542.7" y="131.0" width="31.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="545.7" y="142.0">_r..</text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.04%)</title><rect x="574.0" y="147.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="577.0" y="158.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.36%)</title><rect x="574.5" y="163.0" width="4.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="577.5" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.11%)</title><rect x="577.0" y="147.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="580.0" y="158.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.07%)</title><rect x="577.0" y="131.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="580.0" y="142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="577.9" y="131.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="580.9" y="142.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.04%)</title><rect x="578.3" y="147.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="581.3" y="158.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="578.8" y="163.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="581.8" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="579.2" y="163.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="582.2" y="174.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="579.2" y="147.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="582.2" y="158.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="579.2" y="131.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="582.2" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="579.6" y="163.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="582.6" y="174.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.04%)</title><rect x="580.0" y="195.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="583.0" y="206.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.04%)</title><rect x="580.0" y="179.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="583.0" y="190.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.07%)</title><rect x="580.5" y="259.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="583.5" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.04%)</title><rect x="581.3" y="259.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="584.3" y="270.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.04%)</title><rect x="581.8" y="291.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="584.8" y="302.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="582.2" y="387.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="585.2" y="398.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.11%)</title><rect x="582.6" y="403.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="585.6" y="414.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.11%)</title><rect x="582.6" y="387.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="585.6" y="398.0"></text>
</g>
<g>
<title>preempt_count_add (2 samples, 0.07%)</title><rect x="583.0" y="371.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="586.0" y="382.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="583.9" y="435.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="586.9" y="446.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="583.9" y="419.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="586.9" y="430.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="584.3" y="435.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="587.3" y="446.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.07%)</title><rect x="584.8" y="435.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="587.8" y="446.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="585.6" y="435.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="588.6" y="446.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="586.0" y="451.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="589.0" y="462.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="586.0" y="435.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="589.0" y="446.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="586.5" y="451.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="589.5" y="462.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.0 (1 samples, 0.04%)</title><rect x="586.5" y="435.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="589.5" y="446.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="586.9" y="483.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="589.9" y="494.0"></text>
</g>
<g>
<title>sk_page_frag_refill (5 samples, 0.18%)</title><rect x="587.3" y="483.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="590.3" y="494.0"></text>
</g>
<g>
<title>skb_page_frag_refill (5 samples, 0.18%)</title><rect x="587.3" y="467.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="590.3" y="478.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.25%)</title><rect x="589.5" y="483.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="592.5" y="494.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.25%)</title><rect x="589.5" y="467.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="592.5" y="478.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.07%)</title><rect x="589.9" y="451.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="592.9" y="462.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.07%)</title><rect x="589.9" y="435.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="592.9" y="446.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.07%)</title><rect x="589.9" y="419.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="592.9" y="430.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="590.8" y="451.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="593.8" y="462.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.11%)</title><rect x="591.2" y="451.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="594.2" y="462.0"></text>
</g>
<g>
<title>__slab_alloc.isra.0 (2 samples, 0.07%)</title><rect x="591.6" y="435.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="594.6" y="446.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="592.1" y="419.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="595.1" y="430.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="592.1" y="403.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="595.1" y="414.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="592.1" y="387.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="595.1" y="398.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="592.1" y="371.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="595.1" y="382.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.04%)</title><rect x="592.1" y="355.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="595.1" y="366.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.04%)</title><rect x="592.1" y="339.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="595.1" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.04%)</title><rect x="592.1" y="323.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="595.1" y="334.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.04%)</title><rect x="592.1" y="307.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="595.1" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.04%)</title><rect x="592.1" y="291.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="595.1" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.04%)</title><rect x="592.1" y="275.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="595.1" y="286.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.04%)</title><rect x="592.1" y="259.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="595.1" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.04%)</title><rect x="592.1" y="243.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="595.1" y="254.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb.isra.0 (1 samples, 0.04%)</title><rect x="592.1" y="227.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="595.1" y="238.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.07%)</title><rect x="592.5" y="483.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="595.5" y="494.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.04%)</title><rect x="592.9" y="467.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="595.9" y="478.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="593.3" y="483.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="596.3" y="494.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.18%)</title><rect x="593.8" y="483.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="596.8" y="494.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.11%)</title><rect x="594.6" y="467.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="597.6" y="478.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.11%)</title><rect x="594.6" y="451.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="597.6" y="462.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.07%)</title><rect x="595.9" y="563.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="598.9" y="574.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="596.4" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="599.4" y="558.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (4 samples, 0.15%)</title><rect x="596.8" y="627.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="599.8" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (1 samples, 0.04%)</title><rect x="597.6" y="611.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="600.6" y="622.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (1 samples, 0.04%)</title><rect x="597.6" y="595.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="600.6" y="606.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (1 samples, 0.04%)</title><rect x="598.1" y="611.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="601.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/Topology.isMe (1 samples, 0.04%)</title><rect x="598.5" y="659.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="601.5" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1 samples, 0.04%)</title><rect x="598.5" y="643.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="601.5" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="598.5" y="627.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="601.5" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="598.5" y="611.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="601.5" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="598.5" y="595.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="601.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.response (527 samples, 19.17%)</title><rect x="598.9" y="675.0" width="226.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="601.9" y="686.0">ru/mail/polis/service/saloed/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (526 samples, 19.13%)</title><rect x="598.9" y="659.0" width="225.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.9" y="670.0">one/nio/http/HttpSession.sendR..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.11%)</title><rect x="601.1" y="643.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="604.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.11%)</title><rect x="601.1" y="627.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="604.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.11%)</title><rect x="601.1" y="611.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="604.1" y="622.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="601.9" y="595.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="604.9" y="606.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="601.9" y="579.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="604.9" y="590.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="601.9" y="563.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="604.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (507 samples, 18.44%)</title><rect x="602.4" y="643.0" width="217.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="605.4" y="654.0">one/nio/http/HttpSession.writ..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (23 samples, 0.84%)</title><rect x="602.8" y="627.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="605.8" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="612.2" y="611.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="615.2" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (483 samples, 17.57%)</title><rect x="612.7" y="627.0" width="207.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="615.7" y="638.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (483 samples, 17.57%)</title><rect x="612.7" y="611.0" width="207.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="615.7" y="622.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (478 samples, 17.39%)</title><rect x="614.8" y="595.0" width="205.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="617.8" y="606.0">one/nio/net/Session$ArrayQu..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="615.2" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="618.2" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (476 samples, 17.32%)</title><rect x="615.7" y="579.0" width="204.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.7" y="590.0">one/nio/net/NativeSocket.wr..</text>
</g>
<g>
<title>[unknown] (10 samples, 0.36%)</title><rect x="617.8" y="563.0" width="4.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="620.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.36%)</title><rect x="617.8" y="547.0" width="4.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="620.8" y="558.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (9 samples, 0.33%)</title><rect x="617.8" y="531.0" width="3.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="620.8" y="542.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="618.2" y="515.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="621.2" y="526.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="618.7" y="515.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="621.7" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="619.1" y="515.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="622.1" y="526.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (2 samples, 0.07%)</title><rect x="619.5" y="515.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="622.5" y="526.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.11%)</title><rect x="620.4" y="515.0" width="1.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="623.4" y="526.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="620.8" y="499.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="623.8" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="621.2" y="499.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="624.2" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="621.7" y="531.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="624.7" y="542.0"></text>
</g>
<g>
<title>__send (461 samples, 16.77%)</title><rect x="622.1" y="563.0" width="197.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="625.1" y="574.0">__send</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.15%)</title><rect x="626.8" y="547.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="629.8" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (446 samples, 16.22%)</title><rect x="628.5" y="547.0" width="191.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="631.5" y="558.0">entry_SYSCALL_64_after_hw..</text>
</g>
<g>
<title>do_syscall_64 (446 samples, 16.22%)</title><rect x="628.5" y="531.0" width="191.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="631.5" y="542.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (434 samples, 15.79%)</title><rect x="630.7" y="515.0" width="186.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="633.7" y="526.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (431 samples, 15.68%)</title><rect x="632.0" y="499.0" width="185.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="635.0" y="510.0">__sys_sendto</text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="633.3" y="483.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="636.3" y="494.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="633.7" y="483.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="636.7" y="494.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="634.1" y="483.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="637.1" y="494.0"></text>
</g>
<g>
<title>sock_sendmsg (414 samples, 15.06%)</title><rect x="634.6" y="483.0" width="177.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="637.6" y="494.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (3 samples, 0.11%)</title><rect x="634.6" y="467.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="637.6" y="478.0"></text>
</g>
<g>
<title>inet_send_prepare (3 samples, 0.11%)</title><rect x="634.6" y="451.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="637.6" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (411 samples, 14.95%)</title><rect x="635.8" y="467.0" width="176.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="638.8" y="478.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="636.3" y="451.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="639.3" y="462.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.07%)</title><rect x="636.7" y="451.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="639.7" y="462.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="636.7" y="435.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="639.7" y="446.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="636.7" y="419.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="639.7" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.04%)</title><rect x="637.1" y="435.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="640.1" y="446.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.04%)</title><rect x="637.1" y="419.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="640.1" y="430.0"></text>
</g>
<g>
<title>release_sock (7 samples, 0.25%)</title><rect x="637.6" y="451.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="640.6" y="462.0"></text>
</g>
<g>
<title>__release_sock (3 samples, 0.11%)</title><rect x="637.6" y="435.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="640.6" y="446.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.07%)</title><rect x="638.0" y="419.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="641.0" y="430.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.07%)</title><rect x="638.0" y="403.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="641.0" y="414.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="638.0" y="387.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="641.0" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="638.0" y="371.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="641.0" y="382.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.04%)</title><rect x="638.0" y="355.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="641.0" y="366.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.04%)</title><rect x="638.4" y="387.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="641.4" y="398.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.04%)</title><rect x="638.4" y="371.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="641.4" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="638.4" y="355.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="641.4" y="366.0"></text>
</g>
<g>
<title>tcp_release_cb (4 samples, 0.15%)</title><rect x="638.8" y="435.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="641.8" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (400 samples, 14.55%)</title><rect x="640.6" y="451.0" width="171.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="643.6" y="462.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.11%)</title><rect x="644.4" y="435.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="647.4" y="446.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.11%)</title><rect x="644.4" y="419.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="647.4" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (334 samples, 12.15%)</title><rect x="645.7" y="435.0" width="143.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="648.7" y="446.0">__tcp_push_pending..</text>
</g>
<g>
<title>tcp_write_xmit (333 samples, 12.11%)</title><rect x="646.1" y="419.0" width="143.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="649.1" y="430.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (307 samples, 11.17%)</title><rect x="649.6" y="403.0" width="131.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="652.6" y="414.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (289 samples, 10.51%)</title><rect x="652.2" y="387.0" width="124.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="655.2" y="398.0">__ip_queue_xmit</text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.04%)</title><rect x="653.9" y="371.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="656.9" y="382.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.07%)</title><rect x="654.3" y="371.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="657.3" y="382.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="654.7" y="355.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="657.7" y="366.0"></text>
</g>
<g>
<title>ip_copy_addrs (2 samples, 0.07%)</title><rect x="655.2" y="371.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="658.2" y="382.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 0.18%)</title><rect x="656.0" y="371.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="659.0" y="382.0"></text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.07%)</title><rect x="657.3" y="355.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="660.3" y="366.0"></text>
</g>
<g>
<title>ip_output (275 samples, 10.00%)</title><rect x="658.2" y="371.0" width="118.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="661.2" y="382.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (4 samples, 0.15%)</title><rect x="659.9" y="355.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="662.9" y="366.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.11%)</title><rect x="660.3" y="339.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="663.3" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (261 samples, 9.49%)</title><rect x="661.6" y="355.0" width="112.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="664.6" y="366.0">ip_finish_outp..</text>
</g>
<g>
<title>__dev_queue_xmit (26 samples, 0.95%)</title><rect x="664.2" y="339.0" width="11.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="667.2" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (12 samples, 0.44%)</title><rect x="666.7" y="323.0" width="5.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="669.7" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (10 samples, 0.36%)</title><rect x="667.6" y="307.0" width="4.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="670.6" y="318.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.11%)</title><rect x="668.0" y="291.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="671.0" y="302.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.22%)</title><rect x="669.3" y="291.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="672.3" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (6 samples, 0.22%)</title><rect x="669.3" y="275.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="672.3" y="286.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.18%)</title><rect x="669.3" y="259.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="672.3" y="270.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.04%)</title><rect x="671.5" y="259.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="674.5" y="270.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="671.5" y="243.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="674.5" y="254.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (3 samples, 0.11%)</title><rect x="671.9" y="323.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="674.9" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.15%)</title><rect x="673.2" y="323.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="676.2" y="334.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.04%)</title><rect x="674.5" y="307.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="677.5" y="318.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.04%)</title><rect x="674.9" y="323.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="677.9" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (228 samples, 8.29%)</title><rect x="675.3" y="339.0" width="97.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="678.3" y="350.0">__local_bh_..</text>
</g>
<g>
<title>do_softirq.part.0 (228 samples, 8.29%)</title><rect x="675.3" y="323.0" width="97.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="678.3" y="334.0">do_softirq...</text>
</g>
<g>
<title>do_softirq_own_stack (222 samples, 8.08%)</title><rect x="677.9" y="307.0" width="95.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="680.9" y="318.0">do_softirq_..</text>
</g>
<g>
<title>__softirqentry_text_start (222 samples, 8.08%)</title><rect x="677.9" y="291.0" width="95.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="680.9" y="302.0">__softirqen..</text>
</g>
<g>
<title>net_rx_action (214 samples, 7.78%)</title><rect x="681.3" y="275.0" width="91.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="684.3" y="286.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (207 samples, 7.53%)</title><rect x="684.3" y="259.0" width="88.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="687.3" y="270.0">process_ba..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (197 samples, 7.17%)</title><rect x="687.8" y="243.0" width="84.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="690.8" y="254.0">__netif_re..</text>
</g>
<g>
<title>__netif_receive_skb_core (7 samples, 0.25%)</title><rect x="688.2" y="227.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="691.2" y="238.0"></text>
</g>
<g>
<title>ip_rcv (189 samples, 6.88%)</title><rect x="691.2" y="227.0" width="81.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="694.2" y="238.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (181 samples, 6.58%)</title><rect x="692.5" y="211.0" width="77.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="695.5" y="222.0">ip_local_..</text>
</g>
<g>
<title>ip_local_deliver_finish (180 samples, 6.55%)</title><rect x="692.9" y="195.0" width="77.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="695.9" y="206.0">ip_local_..</text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.04%)</title><rect x="693.4" y="179.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="696.4" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (178 samples, 6.48%)</title><rect x="693.8" y="179.0" width="76.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="696.8" y="190.0">ip_proto..</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="693.8" y="163.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="696.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (177 samples, 6.44%)</title><rect x="694.2" y="163.0" width="76.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="697.2" y="174.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.36%)</title><rect x="697.2" y="147.0" width="4.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="700.2" y="158.0"></text>
</g>
<g>
<title>inet_ehashfn (4 samples, 0.15%)</title><rect x="699.8" y="131.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="702.8" y="142.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.04%)</title><rect x="701.5" y="147.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="704.5" y="158.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.07%)</title><rect x="701.9" y="147.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="704.9" y="158.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.04%)</title><rect x="702.8" y="147.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="705.8" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.18%)</title><rect x="703.2" y="147.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="706.2" y="158.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.07%)</title><rect x="704.1" y="131.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="707.1" y="142.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.04%)</title><rect x="705.0" y="131.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="708.0" y="142.0"></text>
</g>
<g>
<title>tcp_add_backlog (2 samples, 0.07%)</title><rect x="705.4" y="147.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="708.4" y="158.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.04%)</title><rect x="705.4" y="131.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="708.4" y="142.0"></text>
</g>
<g>
<title>skb_condense (1 samples, 0.04%)</title><rect x="705.8" y="131.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="708.8" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (149 samples, 5.42%)</title><rect x="706.2" y="147.0" width="64.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="709.2" y="158.0">tcp_v4_..</text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.07%)</title><rect x="706.7" y="131.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="709.7" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (146 samples, 5.31%)</title><rect x="707.5" y="131.0" width="62.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="710.5" y="142.0">tcp_rc..</text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.04%)</title><rect x="708.4" y="115.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="711.4" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (13 samples, 0.47%)</title><rect x="708.8" y="115.0" width="5.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="711.8" y="126.0"></text>
</g>
<g>
<title>mod_timer (12 samples, 0.44%)</title><rect x="709.2" y="99.0" width="5.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="712.2" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.36%)</title><rect x="709.7" y="83.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="712.7" y="94.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.04%)</title><rect x="714.0" y="83.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="717.0" y="94.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.04%)</title><rect x="714.0" y="67.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="717.0" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (57 samples, 2.07%)</title><rect x="714.4" y="115.0" width="24.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="717.4" y="126.0">s..</text>
</g>
<g>
<title>__wake_up_common_lock (54 samples, 1.96%)</title><rect x="715.7" y="99.0" width="23.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="718.7" y="110.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (53 samples, 1.93%)</title><rect x="716.1" y="83.0" width="22.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="719.1" y="94.0">_..</text>
</g>
<g>
<title>tcp_ack (63 samples, 2.29%)</title><rect x="738.9" y="115.0" width="27.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="741.9" y="126.0">t..</text>
</g>
<g>
<title>__kfree_skb (16 samples, 0.58%)</title><rect x="747.0" y="99.0" width="6.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="750.0" y="110.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.15%)</title><rect x="747.0" y="83.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="750.0" y="94.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.15%)</title><rect x="748.7" y="83.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="751.7" y="94.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="750.5" y="83.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="753.5" y="94.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="750.5" y="67.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="753.5" y="78.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 0.25%)</title><rect x="750.9" y="83.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="753.9" y="94.0"></text>
</g>
<g>
<title>bictcp_acked (5 samples, 0.18%)</title><rect x="753.9" y="99.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="756.9" y="110.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.07%)</title><rect x="756.0" y="99.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="759.0" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.22%)</title><rect x="756.9" y="99.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="759.9" y="110.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.07%)</title><rect x="758.6" y="83.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="761.6" y="94.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (8 samples, 0.29%)</title><rect x="759.5" y="99.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="762.5" y="110.0"></text>
</g>
<g>
<title>tcp_chrono_stop (2 samples, 0.07%)</title><rect x="762.9" y="99.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="765.9" y="110.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.04%)</title><rect x="763.8" y="99.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="766.8" y="110.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.04%)</title><rect x="764.2" y="99.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="767.2" y="110.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.04%)</title><rect x="764.6" y="99.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="767.6" y="110.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="765.0" y="99.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="768.0" y="110.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.04%)</title><rect x="765.5" y="99.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="768.5" y="110.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.11%)</title><rect x="765.9" y="115.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="768.9" y="126.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.15%)</title><rect x="767.2" y="115.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="770.2" y="126.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="768.9" y="115.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="771.9" y="126.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="768.9" y="99.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="771.9" y="110.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.07%)</title><rect x="769.3" y="115.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="772.3" y="126.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.07%)</title><rect x="770.2" y="211.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="773.2" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.11%)</title><rect x="771.1" y="211.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="774.1" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.04%)</title><rect x="771.9" y="195.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="774.9" y="206.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.04%)</title><rect x="772.3" y="243.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="775.3" y="254.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.04%)</title><rect x="772.8" y="243.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="775.8" y="254.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="773.2" y="339.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="776.2" y="350.0"></text>
</g>
<g>
<title>ip_finish_output (6 samples, 0.22%)</title><rect x="773.6" y="355.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="776.6" y="366.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (6 samples, 0.22%)</title><rect x="773.6" y="339.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="776.6" y="350.0"></text>
</g>
<g>
<title>preempt_count_add (2 samples, 0.07%)</title><rect x="775.3" y="323.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="778.3" y="334.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.07%)</title><rect x="776.2" y="387.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="779.2" y="398.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="776.6" y="371.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="779.6" y="382.0"></text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.11%)</title><rect x="777.1" y="387.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="780.1" y="398.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.04%)</title><rect x="778.4" y="387.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="781.4" y="398.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.04%)</title><rect x="778.8" y="387.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="781.8" y="398.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="779.2" y="387.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="782.2" y="398.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.04%)</title><rect x="779.6" y="387.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="782.6" y="398.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.07%)</title><rect x="780.1" y="387.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="783.1" y="398.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.04%)</title><rect x="780.9" y="387.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="783.9" y="398.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.18%)</title><rect x="781.4" y="403.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="784.4" y="414.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.11%)</title><rect x="782.2" y="387.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="785.2" y="398.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (8 samples, 0.29%)</title><rect x="783.5" y="403.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="786.5" y="414.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.04%)</title><rect x="784.4" y="387.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="787.4" y="398.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.15%)</title><rect x="784.8" y="387.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="787.8" y="398.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.15%)</title><rect x="784.8" y="371.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="787.8" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.15%)</title><rect x="784.8" y="355.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="787.8" y="366.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.0 (1 samples, 0.04%)</title><rect x="786.5" y="387.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="789.5" y="398.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.04%)</title><rect x="786.5" y="371.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="789.5" y="382.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.15%)</title><rect x="786.9" y="403.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="789.9" y="414.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.04%)</title><rect x="788.7" y="403.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="791.7" y="414.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.15%)</title><rect x="789.1" y="435.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="792.1" y="446.0"></text>
</g>
<g>
<title>copyin (4 samples, 0.15%)</title><rect x="789.1" y="419.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="792.1" y="430.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.15%)</title><rect x="789.1" y="403.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="792.1" y="414.0"></text>
</g>
<g>
<title>sk_page_frag_refill (7 samples, 0.25%)</title><rect x="790.8" y="435.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="793.8" y="446.0"></text>
</g>
<g>
<title>skb_page_frag_refill (6 samples, 0.22%)</title><rect x="791.2" y="419.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="794.2" y="430.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="793.4" y="403.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="796.4" y="414.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="793.4" y="387.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="796.4" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (31 samples, 1.13%)</title><rect x="793.8" y="435.0" width="13.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="796.8" y="446.0"></text>
</g>
<g>
<title>__alloc_skb (28 samples, 1.02%)</title><rect x="795.1" y="419.0" width="12.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="798.1" y="430.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (6 samples, 0.22%)</title><rect x="801.1" y="403.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="804.1" y="414.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.22%)</title><rect x="801.1" y="387.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="804.1" y="398.0"></text>
</g>
<g>
<title>__slab_alloc.isra.0 (1 samples, 0.04%)</title><rect x="803.2" y="371.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="806.2" y="382.0"></text>
</g>
<g>
<title>__ksize (4 samples, 0.15%)</title><rect x="803.7" y="403.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="806.7" y="414.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.15%)</title><rect x="805.4" y="403.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="808.4" y="414.0"></text>
</g>
<g>
<title>__slab_alloc.isra.0 (1 samples, 0.04%)</title><rect x="806.3" y="387.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="809.3" y="398.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.04%)</title><rect x="806.7" y="387.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="809.7" y="398.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.07%)</title><rect x="807.1" y="435.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="810.1" y="446.0"></text>
</g>
<g>
<title>tcp_push (3 samples, 0.11%)</title><rect x="808.0" y="435.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="811.0" y="446.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="809.3" y="435.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="812.3" y="446.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.07%)</title><rect x="809.7" y="435.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="812.7" y="446.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="810.1" y="419.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="813.1" y="430.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="810.1" y="403.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="813.1" y="414.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.11%)</title><rect x="810.5" y="435.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="813.5" y="446.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.04%)</title><rect x="811.8" y="435.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="814.8" y="446.0"></text>
</g>
<g>
<title>sockfd_lookup_light (11 samples, 0.40%)</title><rect x="812.3" y="483.0" width="4.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="815.3" y="494.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.40%)</title><rect x="812.3" y="467.0" width="4.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="815.3" y="478.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.33%)</title><rect x="813.1" y="451.0" width="3.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="816.1" y="462.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (4 samples, 0.15%)</title><rect x="817.0" y="515.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="820.0" y="526.0"></text>
</g>
<g>
<title>__audit_syscall_exit (4 samples, 0.15%)</title><rect x="817.0" y="499.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="820.0" y="510.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.07%)</title><rect x="817.8" y="483.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="820.8" y="494.0"></text>
</g>
<g>
<title>syscall_trace_enter (3 samples, 0.11%)</title><rect x="818.7" y="515.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="821.7" y="526.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="819.1" y="499.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="822.1" y="510.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.04%)</title><rect x="819.6" y="499.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="822.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.40%)</title><rect x="820.0" y="643.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="823.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.33%)</title><rect x="820.8" y="627.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="823.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.33%)</title><rect x="820.8" y="611.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="823.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/EntityRequestProcessor.process (1 samples, 0.04%)</title><rect x="824.7" y="659.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.setRequestFromService (1 samples, 0.04%)</title><rect x="825.1" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="828.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.04%)</title><rect x="825.1" y="659.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="828.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.setRequestTimestamp (1 samples, 0.04%)</title><rect x="825.1" y="643.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="828.1" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="825.1" y="627.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="828.1" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="825.1" y="611.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="828.1" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="825.1" y="595.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="828.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.setRequestTimestamp (14 samples, 0.51%)</title><rect x="825.6" y="675.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="828.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/395748826.linkToTargetMethod (13 samples, 0.47%)</title><rect x="825.6" y="659.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/477819337.invoke (13 samples, 0.47%)</title><rect x="825.6" y="643.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1495977876.invokeStatic (7 samples, 0.25%)</title><rect x="825.6" y="627.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="828.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (7 samples, 0.25%)</title><rect x="825.6" y="611.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="828.6" y="622.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (7 samples, 0.25%)</title><rect x="825.6" y="595.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="828.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/956641499.invokeStatic (5 samples, 0.18%)</title><rect x="828.6" y="627.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="831.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (5 samples, 0.18%)</title><rect x="828.6" y="611.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.6" y="622.0"></text>
</g>
<g>
<title>java/lang/Long.stringSize (5 samples, 0.18%)</title><rect x="828.6" y="595.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="831.6" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="829.9" y="579.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="832.9" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="830.3" y="579.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="833.3" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="830.3" y="563.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="833.3" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="830.3" y="547.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="833.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1022308509.invoke (1 samples, 0.04%)</title><rect x="830.7" y="627.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="833.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="830.7" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="833.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.04%)</title><rect x="830.7" y="595.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="833.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.04%)</title><rect x="830.7" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="833.7" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.04%)</title><rect x="831.1" y="659.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="834.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/Topology.isMe (2 samples, 0.07%)</title><rect x="831.6" y="675.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="834.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.07%)</title><rect x="831.6" y="659.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="834.6" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="832.0" y="643.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="835.0" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="832.0" y="627.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="835.0" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="832.0" y="611.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="835.0" y="622.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (812 samples, 29.54%)</title><rect x="832.4" y="755.0" width="348.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.4" y="766.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.04%)</title><rect x="835.0" y="739.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="838.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (11 samples, 0.40%)</title><rect x="835.4" y="739.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="838.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (11 samples, 0.40%)</title><rect x="835.4" y="723.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="838.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (11 samples, 0.40%)</title><rect x="835.4" y="707.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="838.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.04%)</title><rect x="839.7" y="691.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="842.7" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (88 samples, 3.20%)</title><rect x="840.2" y="739.0" width="37.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="843.2" y="750.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (87 samples, 3.16%)</title><rect x="840.6" y="723.0" width="37.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="843.6" y="734.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.04%)</title><rect x="844.0" y="707.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="847.0" y="718.0"></text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.18%)</title><rect x="844.5" y="707.0" width="2.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="847.5" y="718.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.07%)</title><rect x="845.7" y="691.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="848.7" y="702.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.07%)</title><rect x="845.7" y="675.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="848.7" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.15%)</title><rect x="846.6" y="707.0" width="1.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="849.6" y="718.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.04%)</title><rect x="848.3" y="707.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="851.3" y="718.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.11%)</title><rect x="848.7" y="707.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="851.7" y="718.0"></text>
</g>
<g>
<title>epoll_wait (65 samples, 2.36%)</title><rect x="850.0" y="707.0" width="27.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="853.0" y="718.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (56 samples, 2.04%)</title><rect x="853.9" y="691.0" width="24.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="856.9" y="702.0">e..</text>
</g>
<g>
<title>do_syscall_64 (56 samples, 2.04%)</title><rect x="853.9" y="675.0" width="24.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="856.9" y="686.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (39 samples, 1.42%)</title><rect x="859.1" y="659.0" width="16.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="862.1" y="670.0"></text>
</g>
<g>
<title>do_epoll_wait (39 samples, 1.42%)</title><rect x="859.1" y="643.0" width="16.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="862.1" y="654.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.18%)</title><rect x="859.1" y="627.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="862.1" y="638.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.15%)</title><rect x="859.5" y="611.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="862.5" y="622.0"></text>
</g>
<g>
<title>ep_poll (34 samples, 1.24%)</title><rect x="861.2" y="627.0" width="14.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="864.2" y="638.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (23 samples, 0.84%)</title><rect x="862.9" y="611.0" width="9.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="865.9" y="622.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (8 samples, 0.29%)</title><rect x="862.9" y="595.0" width="3.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="865.9" y="606.0"></text>
</g>
<g>
<title>ep_send_events_proc (15 samples, 0.55%)</title><rect x="866.3" y="595.0" width="6.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="869.3" y="606.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (12 samples, 0.44%)</title><rect x="867.6" y="579.0" width="5.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="870.6" y="590.0"></text>
</g>
<g>
<title>sock_poll (11 samples, 0.40%)</title><rect x="868.1" y="563.0" width="4.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="871.1" y="574.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.22%)</title><rect x="870.2" y="547.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="873.2" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.07%)</title><rect x="871.9" y="531.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="874.9" y="542.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.25%)</title><rect x="872.8" y="611.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="875.8" y="622.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.18%)</title><rect x="873.6" y="595.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="876.6" y="606.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.11%)</title><rect x="874.5" y="579.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="877.5" y="590.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="875.8" y="659.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="878.8" y="670.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="875.8" y="643.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="878.8" y="654.0"></text>
</g>
<g>
<title>syscall_trace_enter (4 samples, 0.15%)</title><rect x="876.2" y="659.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="879.2" y="670.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.07%)</title><rect x="877.1" y="643.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="880.1" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (702 samples, 25.54%)</title><rect x="877.9" y="739.0" width="301.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="880.9" y="750.0">one/nio/net/Session.process</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.11%)</title><rect x="881.4" y="723.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="884.4" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (3 samples, 0.11%)</title><rect x="881.4" y="707.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="884.4" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (1 samples, 0.04%)</title><rect x="881.4" y="691.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="884.4" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.84] (2 samples, 0.07%)</title><rect x="881.8" y="691.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="884.8" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (691 samples, 25.14%)</title><rect x="882.7" y="723.0" width="296.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="885.7" y="734.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (473 samples, 17.21%)</title><rect x="882.7" y="707.0" width="203.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="885.7" y="718.0">one/nio/http/HttpSession.pr..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (417 samples, 15.17%)</title><rect x="883.1" y="691.0" width="179.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="886.1" y="702.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>java/util/LinkedList.addLast (7 samples, 0.25%)</title><rect x="883.5" y="675.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="886.5" y="686.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="884.8" y="659.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="887.8" y="670.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="885.2" y="659.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="888.2" y="670.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="885.7" y="659.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="888.7" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="886.1" y="659.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (409 samples, 14.88%)</title><rect x="886.5" y="675.0" width="175.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="889.5" y="686.0">one/nio/http/HttpServer..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (396 samples, 14.41%)</title><rect x="887.4" y="659.0" width="170.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="890.4" y="670.0">RequestHandler1_entity..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (11 samples, 0.40%)</title><rect x="887.4" y="643.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="890.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="888.7" y="627.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="891.7" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="888.7" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="891.7" y="622.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="889.1" y="627.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="892.1" y="638.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (6 samples, 0.22%)</title><rect x="889.5" y="627.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="892.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="891.2" y="611.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="894.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="891.2" y="595.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="894.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.07%)</title><rect x="891.2" y="579.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="894.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.entity (385 samples, 14.01%)</title><rect x="892.1" y="643.0" width="165.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="895.1" y="654.0">ru/mail/polis/service..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (272 samples, 9.89%)</title><rect x="893.4" y="627.0" width="116.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="896.4" y="638.0">one/nio/server..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (272 samples, 9.89%)</title><rect x="893.4" y="611.0" width="116.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="896.4" y="622.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (1 samples, 0.04%)</title><rect x="893.4" y="595.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="896.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1 samples, 0.04%)</title><rect x="893.4" y="579.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="896.4" y="590.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (271 samples, 9.86%)</title><rect x="893.8" y="595.0" width="116.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="896.8" y="606.0">one/nio/server..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (271 samples, 9.86%)</title><rect x="893.8" y="579.0" width="116.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="896.8" y="590.0">one/nio/server..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (271 samples, 9.86%)</title><rect x="893.8" y="563.0" width="116.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="896.8" y="574.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (262 samples, 9.53%)</title><rect x="896.8" y="547.0" width="112.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="899.8" y="558.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (237 samples, 8.62%)</title><rect x="896.8" y="531.0" width="101.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="899.8" y="542.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (237 samples, 8.62%)</title><rect x="896.8" y="515.0" width="101.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="899.8" y="526.0">java/util/co..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (232 samples, 8.44%)</title><rect x="899.0" y="499.0" width="99.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="902.0" y="510.0">jdk/internal..</text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.07%)</title><rect x="899.4" y="483.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="902.4" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (2 samples, 0.07%)</title><rect x="900.3" y="483.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="903.3" y="494.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="901.1" y="483.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="904.1" y="494.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.04%)</title><rect x="901.5" y="483.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="904.5" y="494.0"></text>
</g>
<g>
<title>Unsafe_Unpark (25 samples, 0.91%)</title><rect x="902.0" y="483.0" width="10.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="905.0" y="494.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="902.4" y="467.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="905.4" y="478.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.07%)</title><rect x="902.8" y="467.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="905.8" y="478.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.07%)</title><rect x="903.7" y="467.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="906.7" y="478.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.22%)</title><rect x="904.6" y="467.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="907.6" y="478.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.07%)</title><rect x="907.1" y="467.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="910.1" y="478.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (5 samples, 0.18%)</title><rect x="908.0" y="467.0" width="2.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="911.0" y="478.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.04%)</title><rect x="910.1" y="467.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="913.1" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.04%)</title><rect x="910.6" y="467.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="913.6" y="478.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.04%)</title><rect x="911.0" y="467.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="914.0" y="478.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.07%)</title><rect x="911.4" y="467.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="914.4" y="478.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.04%)</title><rect x="912.3" y="467.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="915.3" y="478.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="912.7" y="483.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="915.7" y="494.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.04%)</title><rect x="912.7" y="467.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="915.7" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (193 samples, 7.02%)</title><rect x="913.1" y="483.0" width="82.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="916.1" y="494.0">__pthread..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (175 samples, 6.37%)</title><rect x="920.9" y="467.0" width="75.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="923.9" y="478.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (175 samples, 6.37%)</title><rect x="920.9" y="451.0" width="75.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="923.9" y="462.0">do_sysca..</text>
</g>
<g>
<title>__se_sys_futex (160 samples, 5.82%)</title><rect x="925.6" y="435.0" width="68.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="928.6" y="446.0">__se_sy..</text>
</g>
<g>
<title>do_futex (159 samples, 5.78%)</title><rect x="926.0" y="419.0" width="68.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="929.0" y="430.0">do_futex</text>
</g>
<g>
<title>futex_wake (158 samples, 5.75%)</title><rect x="926.4" y="403.0" width="67.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="929.4" y="414.0">futex_w..</text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.07%)</title><rect x="931.6" y="387.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="934.6" y="398.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.04%)</title><rect x="932.0" y="371.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="935.0" y="382.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.11%)</title><rect x="932.5" y="387.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="935.5" y="398.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.04%)</title><rect x="933.7" y="387.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="936.7" y="398.0"></text>
</g>
<g>
<title>mark_wake_futex (7 samples, 0.25%)</title><rect x="934.2" y="387.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="937.2" y="398.0"></text>
</g>
<g>
<title>__unqueue_futex (2 samples, 0.07%)</title><rect x="936.3" y="371.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="939.3" y="382.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.04%)</title><rect x="937.2" y="387.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="940.2" y="398.0"></text>
</g>
<g>
<title>wake_up_q (132 samples, 4.80%)</title><rect x="937.6" y="387.0" width="56.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="940.6" y="398.0">wake_u..</text>
</g>
<g>
<title>try_to_wake_up (132 samples, 4.80%)</title><rect x="937.6" y="371.0" width="56.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="940.6" y="382.0">try_to..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.04%)</title><rect x="938.0" y="355.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="941.0" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (130 samples, 4.73%)</title><rect x="938.5" y="355.0" width="55.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="941.5" y="366.0">_raw_..</text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.04%)</title><rect x="993.8" y="339.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="996.8" y="350.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.04%)</title><rect x="993.8" y="323.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="996.8" y="334.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="993.8" y="307.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="996.8" y="318.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="993.8" y="291.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="996.8" y="302.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.04%)</title><rect x="993.8" y="275.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="996.8" y="286.0"></text>
</g>
<g>
<title>rtl8169_poll	[r8169] (1 samples, 0.04%)</title><rect x="993.8" y="259.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="996.8" y="270.0"></text>
</g>
<g>
<title>napi_complete_done (1 samples, 0.04%)</title><rect x="993.8" y="243.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="996.8" y="254.0"></text>
</g>
<g>
<title>napi_gro_flush (1 samples, 0.04%)</title><rect x="993.8" y="227.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="996.8" y="238.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.04%)</title><rect x="993.8" y="211.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="996.8" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.04%)</title><rect x="993.8" y="195.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="996.8" y="206.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.04%)</title><rect x="993.8" y="179.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="996.8" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.04%)</title><rect x="993.8" y="163.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="996.8" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.04%)</title><rect x="993.8" y="147.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="996.8" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.04%)</title><rect x="993.8" y="131.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="996.8" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.04%)</title><rect x="993.8" y="115.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="996.8" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.04%)</title><rect x="993.8" y="99.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="996.8" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.04%)</title><rect x="993.8" y="83.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="996.8" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.04%)</title><rect x="993.8" y="67.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="996.8" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.04%)</title><rect x="993.8" y="51.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="996.8" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="993.8" y="35.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="996.8" y="46.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (3 samples, 0.11%)</title><rect x="994.3" y="435.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="997.3" y="446.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.11%)</title><rect x="994.3" y="419.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="997.3" y="430.0"></text>
</g>
<g>
<title>mntput (1 samples, 0.04%)</title><rect x="994.3" y="403.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="997.3" y="414.0"></text>
</g>
<g>
<title>path_put (2 samples, 0.07%)</title><rect x="994.7" y="403.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="997.7" y="414.0"></text>
</g>
<g>
<title>dput (1 samples, 0.04%)</title><rect x="995.1" y="387.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="998.1" y="398.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="995.6" y="435.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="998.6" y="446.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="995.6" y="419.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="998.6" y="430.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.18%)</title><rect x="996.0" y="483.0" width="2.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="999.0" y="494.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="998.1" y="483.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1001.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (24 samples, 0.87%)</title><rect x="998.6" y="531.0" width="10.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1001.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (20 samples, 0.73%)</title><rect x="1000.3" y="515.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1003.3" y="526.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="1002.8" y="499.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1005.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.44%)</title><rect x="1003.3" y="499.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1006.3" y="510.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.15%)</title><rect x="1003.3" y="483.0" width="1.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1006.3" y="494.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="1003.3" y="467.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1006.3" y="478.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="1003.7" y="467.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1006.7" y="478.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.04%)</title><rect x="1004.1" y="467.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1007.1" y="478.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.04%)</title><rect x="1004.6" y="467.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1007.6" y="478.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.29%)</title><rect x="1005.0" y="483.0" width="3.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1008.0" y="494.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (7 samples, 0.25%)</title><rect x="1005.0" y="467.0" width="3.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1008.0" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.25%)</title><rect x="1005.0" y="451.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1008.0" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.25%)</title><rect x="1005.0" y="435.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1008.0" y="446.0"></text>
</g>
<g>
<title>__se_sys_futex (7 samples, 0.25%)</title><rect x="1005.0" y="419.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1008.0" y="430.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.18%)</title><rect x="1005.0" y="403.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1008.0" y="414.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.18%)</title><rect x="1005.0" y="387.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1008.0" y="398.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.11%)</title><rect x="1005.0" y="371.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1008.0" y="382.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (3 samples, 0.11%)</title><rect x="1005.0" y="355.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1008.0" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.11%)</title><rect x="1005.0" y="339.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1008.0" y="350.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.07%)</title><rect x="1006.3" y="371.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1009.3" y="382.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="1006.7" y="355.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1009.7" y="366.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.04%)</title><rect x="1006.7" y="339.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1009.7" y="350.0"></text>
</g>
<g>
<title>get_timespec64 (2 samples, 0.07%)</title><rect x="1007.1" y="403.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1010.1" y="414.0"></text>
</g>
<g>
<title>_copy_from_user (2 samples, 0.07%)</title><rect x="1007.1" y="387.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1010.1" y="398.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.07%)</title><rect x="1007.1" y="371.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1010.1" y="382.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.04%)</title><rect x="1008.0" y="467.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1011.0" y="478.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.04%)</title><rect x="1008.4" y="499.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1011.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.clean (1 samples, 0.04%)</title><rect x="1008.9" y="531.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1011.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/Topology.findNode (2 samples, 0.07%)</title><rect x="1009.3" y="547.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1012.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.getRequestTimestamp (14 samples, 0.51%)</title><rect x="1010.1" y="627.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1013.1" y="638.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1013.6" y="611.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1016.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.18%)</title><rect x="1014.0" y="611.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1017.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.11%)</title><rect x="1014.9" y="595.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1017.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.11%)</title><rect x="1014.9" y="579.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1017.9" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1015.7" y="563.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1018.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/ServiceImpl.isRequestFromService (15 samples, 0.55%)</title><rect x="1016.2" y="627.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1019.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1017.0" y="611.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1020.0" y="622.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="1017.0" y="595.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1020.0" y="606.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="1017.4" y="611.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1020.4" y="622.0"></text>
</g>
<g>
<title>java/lang/Boolean.parseBoolean (2 samples, 0.07%)</title><rect x="1017.9" y="611.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1020.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.07%)</title><rect x="1017.9" y="595.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1020.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.07%)</title><rect x="1017.9" y="579.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1020.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.07%)</title><rect x="1017.9" y="563.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1020.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.33%)</title><rect x="1018.7" y="611.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1021.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.18%)</title><rect x="1020.4" y="595.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1023.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.18%)</title><rect x="1020.4" y="579.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1023.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/Topology.findNode (81 samples, 2.95%)</title><rect x="1022.6" y="627.0" width="34.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1025.6" y="638.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/TreeRangeMap.get (42 samples, 1.53%)</title><rect x="1022.6" y="611.0" width="18.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1025.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/TreeRangeMap.getEntry (42 samples, 1.53%)</title><rect x="1022.6" y="595.0" width="18.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1025.6" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.floorEntry (42 samples, 1.53%)</title><rect x="1022.6" y="579.0" width="18.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1025.6" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFloorEntry (40 samples, 1.46%)</title><rect x="1023.5" y="563.0" width="17.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1026.5" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (38 samples, 1.38%)</title><rect x="1023.9" y="547.0" width="16.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1026.9" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Cut$BelowValue.compareTo (17 samples, 0.62%)</title><rect x="1032.9" y="531.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1035.9" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Cut.compareTo (13 samples, 0.47%)</title><rect x="1034.6" y="515.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1037.6" y="526.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.04%)</title><rect x="1040.2" y="547.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1043.2" y="558.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.04%)</title><rect x="1040.2" y="531.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1043.2" y="542.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1040.2" y="515.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1043.2" y="526.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1040.2" y="499.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1043.2" y="510.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.04%)</title><rect x="1040.2" y="483.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1043.2" y="494.0"></text>
</g>
<g>
<title>rtl8169_poll	[r8169] (1 samples, 0.04%)</title><rect x="1040.2" y="467.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1043.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/saloed/Topology.hash (39 samples, 1.42%)</title><rect x="1040.6" y="611.0" width="16.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1043.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (23 samples, 0.84%)</title><rect x="1040.6" y="595.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1043.6" y="606.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction.newHasher (23 samples, 0.84%)</title><rect x="1040.6" y="579.0" width="9.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1043.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (6 samples, 0.22%)</title><rect x="1046.2" y="563.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1049.2" y="574.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (6 samples, 0.22%)</title><rect x="1046.2" y="547.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1049.2" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractByteHasher.&lt;init&gt; (6 samples, 0.22%)</title><rect x="1046.2" y="531.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1049.2" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.22%)</title><rect x="1046.2" y="515.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1049.2" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFloorEntry (1 samples, 0.04%)</title><rect x="1048.8" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1051.8" y="574.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.11%)</title><rect x="1049.2" y="563.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1052.2" y="574.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.hash (16 samples, 0.58%)</title><rect x="1050.5" y="595.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1053.5" y="606.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (16 samples, 0.58%)</title><rect x="1050.5" y="579.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1053.5" y="590.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (16 samples, 0.58%)</title><rect x="1050.5" y="563.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1053.5" y="574.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (16 samples, 0.58%)</title><rect x="1050.5" y="547.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1053.5" y="558.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (16 samples, 0.58%)</title><rect x="1050.5" y="531.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1053.5" y="542.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implDigest (16 samples, 0.58%)</title><rect x="1050.5" y="515.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1053.5" y="526.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.i2bBig (5 samples, 0.18%)</title><rect x="1050.5" y="499.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1053.5" y="510.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iBig64 (1 samples, 0.04%)</title><rect x="1052.2" y="483.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1055.2" y="494.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompress (11 samples, 0.40%)</title><rect x="1052.6" y="499.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1055.6" y="510.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompressCheck (11 samples, 0.40%)</title><rect x="1052.6" y="483.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1055.6" y="494.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="1054.8" y="467.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1057.8" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.18%)</title><rect x="1055.2" y="467.0" width="2.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1058.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (11 samples, 0.40%)</title><rect x="1057.4" y="659.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1060.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.get (11 samples, 0.40%)</title><rect x="1057.4" y="643.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1060.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (8 samples, 0.29%)</title><rect x="1057.4" y="627.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1060.4" y="638.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (3 samples, 0.11%)</title><rect x="1057.4" y="611.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1060.4" y="622.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.18%)</title><rect x="1058.7" y="611.0" width="2.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1061.7" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.11%)</title><rect x="1060.8" y="627.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1063.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.11%)</title><rect x="1060.8" y="611.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1063.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.11%)</title><rect x="1060.8" y="595.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1063.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (12 samples, 0.44%)</title><rect x="1062.1" y="691.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1065.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.07%)</title><rect x="1062.1" y="675.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1065.1" y="686.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="1062.1" y="659.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1065.1" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="1062.1" y="643.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1065.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.07%)</title><rect x="1062.1" y="627.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1065.1" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="1062.5" y="611.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1065.5" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.29%)</title><rect x="1062.9" y="675.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1065.9" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.29%)</title><rect x="1062.9" y="659.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1065.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1065.9" y="643.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1068.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1065.9" y="627.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1068.9" y="638.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.04%)</title><rect x="1065.9" y="611.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1068.9" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1065.9" y="595.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1068.9" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1065.9" y="579.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1068.9" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1065.9" y="563.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1068.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.07%)</title><rect x="1066.4" y="675.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1069.4" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.25%)</title><rect x="1067.2" y="691.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1070.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.15%)</title><rect x="1068.5" y="675.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1071.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.15%)</title><rect x="1068.5" y="659.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1071.5" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 1.31%)</title><rect x="1070.2" y="691.0" width="15.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1073.2" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.44%)</title><rect x="1080.5" y="675.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1083.5" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (218 samples, 7.93%)</title><rect x="1085.7" y="707.0" width="93.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1088.7" y="718.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (197 samples, 7.17%)</title><rect x="1090.0" y="691.0" width="84.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1093.0" y="702.0">one/nio/ne..</text>
</g>
<g>
<title>[unknown] (19 samples, 0.69%)</title><rect x="1092.1" y="675.0" width="8.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1095.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.69%)</title><rect x="1092.1" y="659.0" width="8.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1095.1" y="670.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (12 samples, 0.44%)</title><rect x="1092.1" y="643.0" width="5.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1095.1" y="654.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.11%)</title><rect x="1092.6" y="627.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1095.6" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="1093.8" y="627.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1096.8" y="638.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="1094.3" y="627.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1097.3" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.22%)</title><rect x="1094.7" y="627.0" width="2.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1097.7" y="638.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.07%)</title><rect x="1095.1" y="611.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1098.1" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (3 samples, 0.11%)</title><rect x="1096.0" y="611.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1099.0" y="622.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.15%)</title><rect x="1097.3" y="643.0" width="1.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1100.3" y="654.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="1099.0" y="643.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1102.0" y="654.0"></text>
</g>
<g>
<title>recv (2 samples, 0.07%)</title><rect x="1099.4" y="643.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1102.4" y="654.0"></text>
</g>
<g>
<title>recv (173 samples, 6.29%)</title><rect x="1100.3" y="675.0" width="74.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1103.3" y="686.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (163 samples, 5.93%)</title><rect x="1104.6" y="659.0" width="69.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1107.6" y="670.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (163 samples, 5.93%)</title><rect x="1104.6" y="643.0" width="69.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1107.6" y="654.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_recvfrom (134 samples, 4.87%)</title><rect x="1115.3" y="627.0" width="57.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1118.3" y="638.0">__x64_..</text>
</g>
<g>
<title>__sys_recvfrom (134 samples, 4.87%)</title><rect x="1115.3" y="611.0" width="57.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1118.3" y="622.0">__sys_..</text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="1117.5" y="595.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1120.5" y="606.0"></text>
</g>
<g>
<title>import_single_range (4 samples, 0.15%)</title><rect x="1117.9" y="595.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1120.9" y="606.0"></text>
</g>
<g>
<title>inet6_recvmsg (99 samples, 3.60%)</title><rect x="1119.6" y="595.0" width="42.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1122.6" y="606.0">inet..</text>
</g>
<g>
<title>tcp_recvmsg (98 samples, 3.56%)</title><rect x="1120.0" y="579.0" width="42.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1123.0" y="590.0">tcp_..</text>
</g>
<g>
<title>__kfree_skb (14 samples, 0.51%)</title><rect x="1128.2" y="563.0" width="6.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1131.2" y="574.0"></text>
</g>
<g>
<title>skb_release_all (8 samples, 0.29%)</title><rect x="1128.6" y="547.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1131.6" y="558.0"></text>
</g>
<g>
<title>skb_release_head_state (8 samples, 0.29%)</title><rect x="1128.6" y="531.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1131.6" y="542.0"></text>
</g>
<g>
<title>dst_release (5 samples, 0.18%)</title><rect x="1128.6" y="515.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1131.6" y="526.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.11%)</title><rect x="1130.8" y="515.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1133.8" y="526.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.18%)</title><rect x="1132.1" y="547.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1135.1" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (10 samples, 0.36%)</title><rect x="1134.2" y="563.0" width="4.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1137.2" y="574.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.04%)</title><rect x="1135.9" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1138.9" y="558.0"></text>
</g>
<g>
<title>preempt_count_sub (5 samples, 0.18%)</title><rect x="1136.3" y="547.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1139.3" y="558.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="1138.5" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1141.5" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.18%)</title><rect x="1138.9" y="563.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1141.9" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.15%)</title><rect x="1139.3" y="547.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1142.3" y="558.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.04%)</title><rect x="1140.6" y="531.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1143.6" y="542.0"></text>
</g>
<g>
<title>ns_to_timespec64 (4 samples, 0.15%)</title><rect x="1141.1" y="563.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1144.1" y="574.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.22%)</title><rect x="1142.8" y="563.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1145.8" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.11%)</title><rect x="1142.8" y="547.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1145.8" y="558.0"></text>
</g>
<g>
<title>preempt_count_add (2 samples, 0.07%)</title><rect x="1143.2" y="531.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1146.2" y="542.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.11%)</title><rect x="1144.1" y="547.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1147.1" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (31 samples, 1.13%)</title><rect x="1145.4" y="563.0" width="13.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1148.4" y="574.0"></text>
</g>
<g>
<title>__skb_datagram_iter (30 samples, 1.09%)</title><rect x="1145.8" y="547.0" width="12.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1148.8" y="558.0"></text>
</g>
<g>
<title>_copy_to_iter (7 samples, 0.25%)</title><rect x="1147.9" y="531.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1150.9" y="542.0"></text>
</g>
<g>
<title>copyout (6 samples, 0.22%)</title><rect x="1148.4" y="515.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1151.4" y="526.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.18%)</title><rect x="1148.8" y="499.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1151.8" y="510.0"></text>
</g>
<g>
<title>simple_copy_to_iter (18 samples, 0.65%)</title><rect x="1150.9" y="531.0" width="7.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1153.9" y="542.0"></text>
</g>
<g>
<title>__check_object_size (17 samples, 0.62%)</title><rect x="1151.4" y="515.0" width="7.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1154.4" y="526.0"></text>
</g>
<g>
<title>__virt_addr_valid (9 samples, 0.33%)</title><rect x="1153.9" y="499.0" width="3.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1156.9" y="510.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.07%)</title><rect x="1157.8" y="499.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1160.8" y="510.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.15%)</title><rect x="1158.7" y="563.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1161.7" y="574.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="1160.0" y="547.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1163.0" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.07%)</title><rect x="1160.4" y="563.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1163.4" y="574.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (2 samples, 0.07%)</title><rect x="1161.2" y="563.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1164.2" y="574.0"></text>
</g>
<g>
<title>sock_recvmsg (3 samples, 0.11%)</title><rect x="1162.1" y="595.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1165.1" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (22 samples, 0.80%)</title><rect x="1163.4" y="595.0" width="9.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1166.4" y="606.0"></text>
</g>
<g>
<title>__fget_light (21 samples, 0.76%)</title><rect x="1163.8" y="579.0" width="9.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1166.8" y="590.0"></text>
</g>
<g>
<title>__fget (18 samples, 0.65%)</title><rect x="1165.1" y="563.0" width="7.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1168.1" y="574.0"></text>
</g>
<g>
<title>restore_regs_and_return_to_kernel (1 samples, 0.04%)</title><rect x="1172.4" y="547.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1175.4" y="558.0"></text>
</g>
<g>
<title>preempt_schedule_irq (1 samples, 0.04%)</title><rect x="1172.4" y="531.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1175.4" y="542.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="1172.8" y="627.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1175.8" y="638.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="1172.8" y="611.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1175.8" y="622.0"></text>
</g>
<g>
<title>syscall_trace_enter (3 samples, 0.11%)</title><rect x="1173.3" y="627.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1176.3" y="638.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="1174.1" y="611.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1177.1" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (11 samples, 0.40%)</title><rect x="1174.5" y="691.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1177.5" y="702.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.04%)</title><rect x="1178.8" y="675.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1181.8" y="686.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.04%)</title><rect x="1178.8" y="659.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1181.8" y="670.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1178.8" y="643.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1181.8" y="654.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1178.8" y="627.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1181.8" y="638.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.04%)</title><rect x="1178.8" y="611.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1181.8" y="622.0"></text>
</g>
<g>
<title>rtl8169_poll	[r8169] (1 samples, 0.04%)</title><rect x="1178.8" y="595.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1181.8" y="606.0"></text>
</g>
<g>
<title>napi_complete_done (1 samples, 0.04%)</title><rect x="1178.8" y="579.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1181.8" y="590.0"></text>
</g>
<g>
<title>napi_gro_flush (1 samples, 0.04%)</title><rect x="1178.8" y="563.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1181.8" y="574.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.04%)</title><rect x="1178.8" y="547.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1181.8" y="558.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.04%)</title><rect x="1178.8" y="531.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1181.8" y="542.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.04%)</title><rect x="1178.8" y="515.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1181.8" y="526.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.04%)</title><rect x="1178.8" y="499.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1181.8" y="510.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.04%)</title><rect x="1178.8" y="483.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1181.8" y="494.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.04%)</title><rect x="1178.8" y="467.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1181.8" y="478.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.04%)</title><rect x="1178.8" y="451.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1181.8" y="462.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.04%)</title><rect x="1178.8" y="435.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1181.8" y="446.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.04%)</title><rect x="1178.8" y="419.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1181.8" y="430.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.04%)</title><rect x="1178.8" y="403.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1181.8" y="414.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.04%)</title><rect x="1178.8" y="387.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1181.8" y="398.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.04%)</title><rect x="1178.8" y="371.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1181.8" y="382.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.04%)</title><rect x="1178.8" y="355.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1181.8" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.04%)</title><rect x="1178.8" y="339.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1181.8" y="350.0"></text>
</g>
<g>
<title>sch_direct_xmit (1 samples, 0.04%)</title><rect x="1178.8" y="323.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1181.8" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb_list (1 samples, 0.04%)</title><rect x="1178.8" y="307.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1181.8" y="318.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.04%)</title><rect x="1178.8" y="291.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1181.8" y="302.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.04%)</title><rect x="1178.8" y="275.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1181.8" y="286.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.15%)</title><rect x="1179.3" y="739.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.3" y="750.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.07%)</title><rect x="1179.3" y="723.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1182.3" y="734.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.07%)</title><rect x="1180.1" y="723.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1183.1" y="734.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.07%)</title><rect x="1180.1" y="707.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1183.1" y="718.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (1 samples, 0.04%)</title><rect x="1181.0" y="755.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.0" y="766.0"></text>
</g>
<g>
<title>start_thread (20 samples, 0.73%)</title><rect x="1181.4" y="755.0" width="8.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1184.4" y="766.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (20 samples, 0.73%)</title><rect x="1181.4" y="739.0" width="8.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1184.4" y="750.0"></text>
</g>
<g>
<title>JavaThread::run() (20 samples, 0.73%)</title><rect x="1181.4" y="723.0" width="8.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.4" y="734.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (20 samples, 0.73%)</title><rect x="1181.4" y="707.0" width="8.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.4" y="718.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (20 samples, 0.73%)</title><rect x="1181.4" y="691.0" width="8.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.4" y="702.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (20 samples, 0.73%)</title><rect x="1181.4" y="675.0" width="8.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.4" y="686.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (20 samples, 0.73%)</title><rect x="1181.4" y="659.0" width="8.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.4" y="670.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (20 samples, 0.73%)</title><rect x="1181.4" y="643.0" width="8.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.4" y="654.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (16 samples, 0.58%)</title><rect x="1181.4" y="627.0" width="6.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.4" y="638.0"></text>
</g>
<g>
<title>Compile::Output() (3 samples, 0.11%)</title><rect x="1181.4" y="611.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.4" y="622.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (2 samples, 0.07%)</title><rect x="1181.4" y="595.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.4" y="606.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.04%)</title><rect x="1182.3" y="595.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.3" y="606.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.04%)</title><rect x="1182.3" y="579.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.3" y="590.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (1 samples, 0.04%)</title><rect x="1182.3" y="563.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.3" y="574.0"></text>
</g>
<g>
<title>loadNNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.04%)</title><rect x="1182.3" y="547.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.3" y="558.0"></text>
</g>
<g>
<title>indirectOper::base(PhaseRegAlloc*, Node const*, int) const (1 samples, 0.04%)</title><rect x="1182.3" y="531.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.3" y="542.0"></text>
</g>
<g>
<title>Matcher::match() (2 samples, 0.07%)</title><rect x="1182.7" y="611.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.7" y="622.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (2 samples, 0.07%)</title><rect x="1182.7" y="595.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.7" y="606.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.07%)</title><rect x="1182.7" y="579.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.7" y="590.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.04%)</title><rect x="1182.7" y="563.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.7" y="574.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.04%)</title><rect x="1182.7" y="547.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.7" y="558.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.04%)</title><rect x="1182.7" y="531.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.7" y="542.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.04%)</title><rect x="1182.7" y="515.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.7" y="526.0"></text>
</g>
<g>
<title>TypeInstPtr::hash() const (1 samples, 0.04%)</title><rect x="1182.7" y="499.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.7" y="510.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.04%)</title><rect x="1183.1" y="563.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.1" y="574.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.04%)</title><rect x="1183.1" y="547.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.1" y="558.0"></text>
</g>
<g>
<title>Matcher::ReduceOper(State*, int, Node*&amp;, MachNode*) (1 samples, 0.04%)</title><rect x="1183.1" y="531.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.1" y="542.0"></text>
</g>
<g>
<title>Matcher::ReduceOper(State*, int, Node*&amp;, MachNode*) (1 samples, 0.04%)</title><rect x="1183.1" y="515.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.1" y="526.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (3 samples, 0.11%)</title><rect x="1183.6" y="611.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.6" y="622.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (3 samples, 0.11%)</title><rect x="1183.6" y="595.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.6" y="606.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.04%)</title><rect x="1183.6" y="579.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.6" y="590.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.04%)</title><rect x="1184.0" y="579.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.0" y="590.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (1 samples, 0.04%)</title><rect x="1184.0" y="563.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.0" y="574.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.04%)</title><rect x="1184.4" y="579.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1187.4" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (8 samples, 0.29%)</title><rect x="1184.8" y="611.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.8" y="622.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.04%)</title><rect x="1184.8" y="595.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.8" y="606.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.04%)</title><rect x="1184.8" y="579.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.8" y="590.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.04%)</title><rect x="1184.8" y="563.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.8" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.04%)</title><rect x="1185.3" y="595.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.3" y="606.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 0.04%)</title><rect x="1185.7" y="595.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.7" y="606.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.04%)</title><rect x="1185.7" y="579.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.7" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.07%)</title><rect x="1186.1" y="595.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.1" y="606.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.04%)</title><rect x="1186.1" y="579.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.1" y="590.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.04%)</title><rect x="1186.6" y="579.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.6" y="590.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.04%)</title><rect x="1187.0" y="595.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.0" y="606.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (1 samples, 0.04%)</title><rect x="1187.0" y="579.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.0" y="590.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.04%)</title><rect x="1187.4" y="595.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.4" y="606.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.04%)</title><rect x="1187.9" y="595.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.9" y="606.0"></text>
</g>
<g>
<title>Compile::Optimize() (4 samples, 0.15%)</title><rect x="1188.3" y="627.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.3" y="638.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.254] (1 samples, 0.04%)</title><rect x="1188.3" y="611.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.3" y="622.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.04%)</title><rect x="1188.7" y="611.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.7" y="622.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.04%)</title><rect x="1188.7" y="595.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.7" y="606.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (1 samples, 0.04%)</title><rect x="1189.1" y="611.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.1" y="622.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.04%)</title><rect x="1189.1" y="595.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.1" y="606.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.04%)</title><rect x="1189.6" y="611.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.6" y="622.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.04%)</title><rect x="1189.6" y="595.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.6" y="606.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="1189.6" y="579.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.6" y="590.0"></text>
</g>
<g>
<title>IfNode::search_identical(int) (1 samples, 0.04%)</title><rect x="1189.6" y="563.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.6" y="574.0"></text>
</g>
</g>
</svg>
